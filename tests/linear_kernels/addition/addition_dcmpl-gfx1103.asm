// llvm-mc -triple=amdgcn--amdhsa -mcpu=gfx1103 -mattr=+wavefrontsize32,+wavefrontsize64

	.section	.note,#alloc
	.section	.dynsym,#alloc
	.long 0                                                    // 000000056D38: 00000000
	.long 0                                                    // 000000056D3C: 00000000
	.long 0                                                    // 000000056D40: 00000000
	.long 0                                                    // 000000056D44: 00000000
	.long 0                                                    // 000000056D48: 00000000
	.long 0                                                    // 000000056D4C: 00000000
	.long 0x1e7f                                               // 000000056D50: 00001E7F
	.long 0x60311                                              // 000000056D54: 00060311
	.ascii "@4"                                                // 000000056D58: 3440
	.short 0x6                                                 // 000000056D5A: 0006
	.long 0                                                    // 000000056D5C: 00000000
	.ascii "@"                                                 // 000000056D60: 40
	.byte 0                                                    // 000000056D61: 00
	.short 0                                                   // 000000056D62: 0000
	.long 0                                                    // 000000056D64: 00000000
	.long 0x2a8d                                               // 000000056D68: 00002A8D
	.long 0x70312                                              // 000000056D6C: 00070312
	.long 0x7a100                                              // 000000056D70: 0007A100
	.long 0                                                    // 000000056D74: 00000000
	.long 0x18c                                                // 000000056D78: 0000018C
	.long 0                                                    // 000000056D7C: 00000000
	.long 0x488a                                               // 000000056D80: 0000488A
	.long 0x60311                                              // 000000056D84: 00060311
	.long 0x65980                                              // 000000056D88: 00065980
	.long 0                                                    // 000000056D8C: 00000000
	.ascii "@"                                                 // 000000056D90: 40
	.byte 0                                                    // 000000056D91: 00
	.short 0                                                   // 000000056D92: 0000
	.long 0                                                    // 000000056D94: 00000000
	.long 0xf9e                                                // 000000056D98: 00000F9E
	.long 0x70312                                              // 000000056D9C: 00070312
	.long 0x6e700                                              // 000000056DA0: 0006E700
	.long 0                                                    // 000000056DA4: 00000000
	.ascii "|"                                                 // 000000056DA8: 7C
	.byte 0x1                                                  // 000000056DA9: 01
	.short 0                                                   // 000000056DAA: 0000
	.long 0                                                    // 000000056DAC: 00000000
	.ascii "I"                                                 // 000000056DB0: 49
	.byte 0x12                                                 // 000000056DB1: 12
	.short 0                                                   // 000000056DB2: 0000
	.long 0x60311                                              // 000000056DB4: 00060311
	.ascii "@'"                                                // 000000056DB8: 2740
	.short 0x6                                                 // 000000056DBA: 0006
	.long 0                                                    // 000000056DBC: 00000000
	.ascii "@"                                                 // 000000056DC0: 40
	.byte 0                                                    // 000000056DC1: 00
	.short 0                                                   // 000000056DC2: 0000
	.long 0                                                    // 000000056DC4: 00000000
	.ascii "N"                                                 // 000000056DC8: 4E
	.byte 0x1f                                                 // 000000056DC9: 1F
	.short 0                                                   // 000000056DCA: 0000
	.long 0x60311                                              // 000000056DCC: 00060311
	.long 0x63500                                              // 000000056DD0: 00063500
	.long 0                                                    // 000000056DD4: 00000000
	.ascii "@"                                                 // 000000056DD8: 40
	.byte 0                                                    // 000000056DD9: 00
	.short 0                                                   // 000000056DDA: 0000
	.long 0                                                    // 000000056DDC: 00000000
	.long 0x27a1                                               // 000000056DE0: 000027A1
	.long 0x60311                                              // 000000056DE4: 00060311
	.long 0x63c00                                              // 000000056DE8: 00063C00
	.long 0                                                    // 000000056DEC: 00000000
	.ascii "@"                                                 // 000000056DF0: 40
	.byte 0                                                    // 000000056DF1: 00
	.short 0                                                   // 000000056DF2: 0000
	.long 0                                                    // 000000056DF4: 00000000
	.long 0x3199                                               // 000000056DF8: 00003199
	.long 0x70312                                              // 000000056DFC: 00070312
	.long 0x7cb00                                              // 000000056E00: 0007CB00
	.long 0                                                    // 000000056E04: 00000000
	.long 0xa4                                                 // 000000056E08: 000000A4
	.long 0                                                    // 000000056E0C: 00000000
	.ascii "d2"                                                // 000000056E10: 3264
	.short 0                                                   // 000000056E12: 0000
	.long 0x60311                                              // 000000056E14: 00060311
	.ascii "@F"                                                // 000000056E18: 4640
	.short 0x6                                                 // 000000056E1A: 0006
	.long 0                                                    // 000000056E1C: 00000000
	.ascii "@"                                                 // 000000056E20: 40
	.byte 0                                                    // 000000056E21: 00
	.short 0                                                   // 000000056E22: 0000
	.long 0                                                    // 000000056E24: 00000000
	.long 0x12ed                                               // 000000056E28: 000012ED
	.long 0x70312                                              // 000000056E2C: 00070312
	.long 0x70100                                              // 000000056E30: 00070100
	.long 0                                                    // 000000056E34: 00000000
	.long 0x118                                                // 000000056E38: 00000118
	.long 0                                                    // 000000056E3C: 00000000
	.long 0x1906                                               // 000000056E40: 00001906
	.long 0x60311                                              // 000000056E44: 00060311
	.long 0x62fc0                                              // 000000056E48: 00062FC0
	.long 0                                                    // 000000056E4C: 00000000
	.ascii "@"                                                 // 000000056E50: 40
	.byte 0                                                    // 000000056E51: 00
	.short 0                                                   // 000000056E52: 0000
	.long 0                                                    // 000000056E54: 00000000
	.long 0x1b0d                                               // 000000056E58: 00001B0D
	.long 0x70312                                              // 000000056E5C: 00070312
	.long 0x73900                                              // 000000056E60: 00073900
	.long 0                                                    // 000000056E64: 00000000
	.long 0x190                                                // 000000056E68: 00000190
	.long 0                                                    // 000000056E6C: 00000000
	.long 0x3ca0                                               // 000000056E70: 00003CA0
	.long 0x70312                                              // 000000056E74: 00070312
	.long 0x7f500                                              // 000000056E78: 0007F500
	.long 0                                                    // 000000056E7C: 00000000
	.long 0xb4                                                 // 000000056E80: 000000B4
	.long 0                                                    // 000000056E84: 00000000
	.long 0xae0                                                // 000000056E88: 00000AE0
	.long 0x70312                                              // 000000056E8C: 00070312
	.long 0x6c400                                              // 000000056E90: 0006C400
	.long 0                                                    // 000000056E94: 00000000
	.long 0x108                                                // 000000056E98: 00000108
	.long 0                                                    // 000000056E9C: 00000000
	.ascii "\\"                                                // 000000056EA0: 5C
	.byte 0x1e                                                 // 000000056EA1: 1E
	.short 0                                                   // 000000056EA2: 0000
	.long 0x70312                                              // 000000056EA4: 00070312
	.long 0x74f00                                              // 000000056EA8: 00074F00
	.long 0                                                    // 000000056EAC: 00000000
	.ascii "<"                                                 // 000000056EB0: 3C
	.byte 0x1                                                  // 000000056EB1: 01
	.short 0                                                   // 000000056EB2: 0000
	.long 0                                                    // 000000056EB4: 00000000
	.long 0x1ebd                                               // 000000056EB8: 00001EBD
	.long 0x60311                                              // 000000056EBC: 00060311
	.long 0x63480                                              // 000000056EC0: 00063480
	.long 0                                                    // 000000056EC4: 00000000
	.ascii "@"                                                 // 000000056EC8: 40
	.byte 0                                                    // 000000056EC9: 00
	.short 0                                                   // 000000056ECA: 0000
	.long 0                                                    // 000000056ECC: 00000000
	.long 0x49bc                                               // 000000056ED0: 000049BC
	.long 0x60311                                              // 000000056ED4: 00060311
	.long 0x65a80                                              // 000000056ED8: 00065A80
	.long 0                                                    // 000000056EDC: 00000000
	.ascii "@"                                                 // 000000056EE0: 40
	.byte 0                                                    // 000000056EE1: 00
	.short 0                                                   // 000000056EE2: 0000
	.long 0                                                    // 000000056EE4: 00000000
	.ascii "a"                                                 // 000000056EE8: 61
	.byte 0x1a                                                 // 000000056EE9: 1A
	.short 0                                                   // 000000056EEA: 0000
	.long 0x70312                                              // 000000056EEC: 00070312
	.long 0x73500                                              // 000000056EF0: 00073500
	.long 0                                                    // 000000056EF4: 00000000
	.ascii "$"                                                 // 000000056EF8: 24
	.byte 0x1                                                  // 000000056EF9: 01
	.short 0                                                   // 000000056EFA: 0000
	.long 0                                                    // 000000056EFC: 00000000
	.long 0x4b8e                                               // 000000056F00: 00004B8E
	.long 0x70312                                              // 000000056F04: 00070312
	.long 0x83100                                              // 000000056F08: 00083100
	.long 0                                                    // 000000056F0C: 00000000
	.ascii "T"                                                 // 000000056F10: 54
	.byte 0                                                    // 000000056F11: 00
	.short 0                                                   // 000000056F12: 0000
	.long 0                                                    // 000000056F14: 00000000
	.ascii "G"                                                 // 000000056F18: 47
	.byte 0                                                    // 000000056F19: 00
	.short 0                                                   // 000000056F1A: 0000
	.long 0x70312                                              // 000000056F1C: 00070312
	.long 0x67300                                              // 000000056F20: 00067300
	.long 0                                                    // 000000056F24: 00000000
	.long 0x10c                                                // 000000056F28: 0000010C
	.long 0                                                    // 000000056F2C: 00000000
	.long 0xca7                                                // 000000056F30: 00000CA7
	.long 0x70312                                              // 000000056F34: 00070312
	.long 0x6d100                                              // 000000056F38: 0006D100
	.long 0                                                    // 000000056F3C: 00000000
	.ascii "D"                                                 // 000000056F40: 44
	.byte 0x1                                                  // 000000056F41: 01
	.short 0                                                   // 000000056F42: 0000
	.long 0                                                    // 000000056F44: 00000000
	.ascii "&&"                                                // 000000056F48: 2626
	.short 0                                                   // 000000056F4A: 0000
	.long 0x60311                                              // 000000056F4C: 00060311
	.long 0x63ac0                                              // 000000056F50: 00063AC0
	.long 0                                                    // 000000056F54: 00000000
	.ascii "@"                                                 // 000000056F58: 40
	.byte 0                                                    // 000000056F59: 00
	.short 0                                                   // 000000056F5A: 0000
	.long 0                                                    // 000000056F5C: 00000000
	.long 0x3b11                                               // 000000056F60: 00003B11
	.long 0x60311                                              // 000000056F64: 00060311
	.ascii "@N"                                                // 000000056F68: 4E40
	.short 0x6                                                 // 000000056F6A: 0006
	.long 0                                                    // 000000056F6C: 00000000
	.ascii "@"                                                 // 000000056F70: 40
	.byte 0                                                    // 000000056F71: 00
	.short 0                                                   // 000000056F72: 0000
	.long 0                                                    // 000000056F74: 00000000
	.long 0x692                                                // 000000056F78: 00000692
	.long 0x60311                                              // 000000056F7C: 00060311
	.long 0x61c00                                              // 000000056F80: 00061C00
	.long 0                                                    // 000000056F84: 00000000
	.ascii "@"                                                 // 000000056F88: 40
	.byte 0                                                    // 000000056F89: 00
	.short 0                                                   // 000000056F8A: 0000
	.long 0                                                    // 000000056F8C: 00000000
	.long 0x7db                                                // 000000056F90: 000007DB
	.long 0x60311                                              // 000000056F94: 00060311
	.ascii "@"                                                 // 000000056F98: 40
	.byte 0x1d                                                 // 000000056F99: 1D
	.short 0x6                                                 // 000000056F9A: 0006
	.long 0                                                    // 000000056F9C: 00000000
	.ascii "@"                                                 // 000000056FA0: 40
	.byte 0                                                    // 000000056FA1: 00
	.short 0                                                   // 000000056FA2: 0000
	.long 0                                                    // 000000056FA4: 00000000
	.ascii "&0"                                                // 000000056FA8: 3026
	.short 0                                                   // 000000056FAA: 0000
	.long 0x70312                                              // 000000056FAC: 00070312
	.long 0x7c400                                              // 000000056FB0: 0007C400
	.long 0                                                    // 000000056FB4: 00000000
	.long 0xa0                                                 // 000000056FB8: 000000A0
	.long 0                                                    // 000000056FBC: 00000000
	.ascii "u"                                                 // 000000056FC0: 75
	.byte 0x3                                                  // 000000056FC1: 03
	.short 0                                                   // 000000056FC2: 0000
	.long 0x70312                                              // 000000056FC4: 00070312
	.long 0x68d00                                              // 000000056FC8: 00068D00
	.long 0                                                    // 000000056FCC: 00000000
	.ascii "h"                                                 // 000000056FD0: 68
	.byte 0x1                                                  // 000000056FD1: 01
	.short 0                                                   // 000000056FD2: 0000
	.long 0                                                    // 000000056FD4: 00000000
	.long 0x57f                                                // 000000056FD8: 0000057F
	.long 0x70312                                              // 000000056FDC: 00070312
	.long 0x69c00                                              // 000000056FE0: 00069C00
	.long 0                                                    // 000000056FE4: 00000000
	.ascii "X"                                                 // 000000056FE8: 58
	.byte 0x1                                                  // 000000056FE9: 01
	.short 0                                                   // 000000056FEA: 0000
	.long 0                                                    // 000000056FEC: 00000000
	.long 0x9c8                                                // 000000056FF0: 000009C8
	.long 0x70312                                              // 000000056FF4: 00070312
	.long 0x6bd00                                              // 000000056FF8: 0006BD00
	.long 0                                                    // 000000056FFC: 00000000
	.long 0x100                                                // 000000057000: 00000100
	.long 0                                                    // 000000057004: 00000000
	.long 0x1bbd                                               // 000000057008: 00001BBD
	.long 0x70312                                              // 00000005700C: 00070312
	.long 0x73d00                                              // 000000057010: 00073D00
	.long 0                                                    // 000000057014: 00000000
	.ascii "8"                                                 // 000000057018: 38
	.byte 0x1                                                  // 000000057019: 01
	.short 0                                                   // 00000005701A: 0000
	.long 0                                                    // 00000005701C: 00000000
	.long 0x1cb9                                               // 000000057020: 00001CB9
	.long 0x60311                                              // 000000057024: 00060311
	.long 0x632c0                                              // 000000057028: 000632C0
	.long 0                                                    // 00000005702C: 00000000
	.ascii "@"                                                 // 000000057030: 40
	.byte 0                                                    // 000000057031: 00
	.short 0                                                   // 000000057032: 0000
	.long 0                                                    // 000000057034: 00000000
	.long 0x2e1d                                               // 000000057038: 00002E1D
	.long 0x70312                                              // 00000005703C: 00070312
	.long 0x7b900                                              // 000000057040: 0007B900
	.long 0                                                    // 000000057044: 00000000
	.long 0x19c                                                // 000000057048: 0000019C
	.long 0                                                    // 00000005704C: 00000000
	.long 0x3cca                                               // 000000057050: 00003CCA
	.long 0x60311                                              // 000000057054: 00060311
	.long 0x64fc0                                              // 000000057058: 00064FC0
	.long 0                                                    // 00000005705C: 00000000
	.ascii "@"                                                 // 000000057060: 40
	.byte 0                                                    // 000000057061: 00
	.short 0                                                   // 000000057062: 0000
	.long 0                                                    // 000000057064: 00000000
	.long 0x3c2                                                // 000000057068: 000003C2
	.long 0x70312                                              // 00000005706C: 00070312
	.long 0x68f00                                              // 000000057070: 00068F00
	.long 0                                                    // 000000057074: 00000000
	.ascii " "                                                 // 000000057078: 20
	.byte 0x1                                                  // 000000057079: 01
	.short 0                                                   // 00000005707A: 0000
	.long 0                                                    // 00000005707C: 00000000
	.long 0xd82                                                // 000000057080: 00000D82
	.long 0x60311                                              // 000000057084: 00060311
	.long 0x622c0                                              // 000000057088: 000622C0
	.long 0                                                    // 00000005708C: 00000000
	.ascii "@"                                                 // 000000057090: 40
	.byte 0                                                    // 000000057091: 00
	.short 0                                                   // 000000057092: 0000
	.long 0                                                    // 000000057094: 00000000
	.ascii "C<"                                                // 000000057098: 3C43
	.short 0                                                   // 00000005709A: 0000
	.long 0x60311                                              // 00000005709C: 00060311
	.ascii "@O"                                                // 0000000570A0: 4F40
	.short 0x6                                                 // 0000000570A2: 0006
	.long 0                                                    // 0000000570A4: 00000000
	.ascii "@"                                                 // 0000000570A8: 40
	.byte 0                                                    // 0000000570A9: 00
	.short 0                                                   // 0000000570AA: 0000
	.long 0                                                    // 0000000570AC: 00000000
	.long 0x4ca9                                               // 0000000570B0: 00004CA9
	.long 0x60311                                              // 0000000570B4: 00060311
	.long 0x65e00                                              // 0000000570B8: 00065E00
	.long 0                                                    // 0000000570BC: 00000000
	.ascii "@"                                                 // 0000000570C0: 40
	.byte 0                                                    // 0000000570C1: 00
	.short 0                                                   // 0000000570C2: 0000
	.long 0                                                    // 0000000570C4: 00000000
	.long 0x3e5                                                // 0000000570C8: 000003E5
	.long 0x60311                                              // 0000000570CC: 00060311
	.ascii "@"                                                 // 0000000570D0: 40
	.byte 0x19                                                 // 0000000570D1: 19
	.short 0x6                                                 // 0000000570D2: 0006
	.long 0                                                    // 0000000570D4: 00000000
	.ascii "@"                                                 // 0000000570D8: 40
	.byte 0                                                    // 0000000570D9: 00
	.short 0                                                   // 0000000570DA: 0000
	.long 0                                                    // 0000000570DC: 00000000
	.long 0x1ae1                                               // 0000000570E0: 00001AE1
	.long 0x60311                                              // 0000000570E4: 00060311
	.ascii "@1"                                                // 0000000570E8: 3140
	.short 0x6                                                 // 0000000570EA: 0006
	.long 0                                                    // 0000000570EC: 00000000
	.ascii "@"                                                 // 0000000570F0: 40
	.byte 0                                                    // 0000000570F1: 00
	.short 0                                                   // 0000000570F2: 0000
	.long 0                                                    // 0000000570F4: 00000000
	.ascii "_/"                                                // 0000000570F8: 2F5F
	.short 0                                                   // 0000000570FA: 0000
	.long 0x60311                                              // 0000000570FC: 00060311
	.long 0x642c0                                              // 000000057100: 000642C0
	.long 0                                                    // 000000057104: 00000000
	.ascii "@"                                                 // 000000057108: 40
	.byte 0                                                    // 000000057109: 00
	.short 0                                                   // 00000005710A: 0000
	.long 0                                                    // 00000005710C: 00000000
	.long 0x43c6                                               // 000000057110: 000043C6
	.long 0x60311                                              // 000000057114: 00060311
	.long 0x65580                                              // 000000057118: 00065580
	.long 0                                                    // 00000005711C: 00000000
	.ascii "@"                                                 // 000000057120: 40
	.byte 0                                                    // 000000057121: 00
	.short 0                                                   // 000000057122: 0000
	.long 0                                                    // 000000057124: 00000000
	.long 0x1fbd                                               // 000000057128: 00001FBD
	.long 0x70312                                              // 00000005712C: 00070312
	.long 0x75900                                              // 000000057130: 00075900
	.long 0                                                    // 000000057134: 00000000
	.ascii "("                                                 // 000000057138: 28
	.byte 0x1                                                  // 000000057139: 01
	.short 0                                                   // 00000005713A: 0000
	.long 0                                                    // 00000005713C: 00000000
	.ascii "A1"                                                // 000000057140: 3141
	.short 0                                                   // 000000057142: 0000
	.long 0x60311                                              // 000000057144: 00060311
	.long 0x64500                                              // 000000057148: 00064500
	.long 0                                                    // 00000005714C: 00000000
	.ascii "@"                                                 // 000000057150: 40
	.byte 0                                                    // 000000057151: 00
	.short 0                                                   // 000000057152: 0000
	.long 0                                                    // 000000057154: 00000000
	.long 0x47f6                                               // 000000057158: 000047F6
	.long 0x60311                                              // 00000005715C: 00060311
	.long 0x65900                                              // 000000057160: 00065900
	.long 0                                                    // 000000057164: 00000000
	.ascii "@"                                                 // 000000057168: 40
	.byte 0                                                    // 000000057169: 00
	.short 0                                                   // 00000005716A: 0000
	.long 0                                                    // 00000005716C: 00000000
	.ascii "*"                                                 // 000000057170: 2A
	.byte 0x11                                                 // 000000057171: 11
	.short 0                                                   // 000000057172: 0000
	.long 0x70312                                              // 000000057174: 00070312
	.long 0x6f300                                              // 000000057178: 0006F300
	.long 0                                                    // 00000005717C: 00000000
	.ascii "p"                                                 // 000000057180: 70
	.byte 0x1                                                  // 000000057181: 01
	.short 0                                                   // 000000057182: 0000
	.long 0                                                    // 000000057184: 00000000
	.long 0x2ca4                                               // 000000057188: 00002CA4
	.long 0x70312                                              // 00000005718C: 00070312
	.long 0x7af00                                              // 000000057190: 0007AF00
	.long 0                                                    // 000000057194: 00000000
	.ascii "<"                                                 // 000000057198: 3C
	.byte 0x1                                                  // 000000057199: 01
	.short 0                                                   // 00000005719A: 0000
	.long 0                                                    // 00000005719C: 00000000
	.long 0x32f3                                               // 0000000571A0: 000032F3
	.long 0x60311                                              // 0000000571A4: 00060311
	.long 0x64700                                              // 0000000571A8: 00064700
	.long 0                                                    // 0000000571AC: 00000000
	.ascii "@"                                                 // 0000000571B0: 40
	.byte 0                                                    // 0000000571B1: 00
	.short 0                                                   // 0000000571B2: 0000
	.long 0                                                    // 0000000571B4: 00000000
	.ascii "!C"                                                // 0000000571B8: 4321
	.short 0                                                   // 0000000571BA: 0000
	.long 0x60311                                              // 0000000571BC: 00060311
	.long 0x65500                                              // 0000000571C0: 00065500
	.long 0                                                    // 0000000571C4: 00000000
	.ascii "@"                                                 // 0000000571C8: 40
	.byte 0                                                    // 0000000571C9: 00
	.short 0                                                   // 0000000571CA: 0000
	.long 0                                                    // 0000000571CC: 00000000
	.long 0x5a0                                                // 0000000571D0: 000005A0
	.long 0x60311                                              // 0000000571D4: 00060311
	.long 0x61b00                                              // 0000000571D8: 00061B00
	.long 0                                                    // 0000000571DC: 00000000
	.ascii "@"                                                 // 0000000571E0: 40
	.byte 0                                                    // 0000000571E1: 00
	.short 0                                                   // 0000000571E2: 0000
	.long 0                                                    // 0000000571E4: 00000000
	.long 0xdcc                                                // 0000000571E8: 00000DCC
	.long 0x60311                                              // 0000000571EC: 00060311
	.long 0x62300                                              // 0000000571F0: 00062300
	.long 0                                                    // 0000000571F4: 00000000
	.ascii "@"                                                 // 0000000571F8: 40
	.byte 0                                                    // 0000000571F9: 00
	.short 0                                                   // 0000000571FA: 0000
	.long 0                                                    // 0000000571FC: 00000000
	.long 0x2600                                               // 000000057200: 00002600
	.long 0x70312                                              // 000000057204: 00070312
	.long 0x78300                                              // 000000057208: 00078300
	.long 0                                                    // 00000005720C: 00000000
	.long 0x188                                                // 000000057210: 00000188
	.long 0                                                    // 000000057214: 00000000
	.long 0x2fb4                                               // 000000057218: 00002FB4
	.long 0x70312                                              // 00000005721C: 00070312
	.long 0x7c200                                              // 000000057220: 0007C200
	.long 0                                                    // 000000057224: 00000000
	.ascii "p"                                                 // 000000057228: 70
	.byte 0                                                    // 000000057229: 00
	.short 0                                                   // 00000005722A: 0000
	.long 0                                                    // 00000005722C: 00000000
	.long 0x3695                                               // 000000057230: 00003695
	.long 0x70312                                              // 000000057234: 00070312
	.long 0x7e000                                              // 000000057238: 0007E000
	.long 0                                                    // 00000005723C: 00000000
	.long 0xfc                                                 // 000000057240: 000000FC
	.long 0                                                    // 000000057244: 00000000
	.long 0x6b8                                                // 000000057248: 000006B8
	.long 0x70312                                              // 00000005724C: 00070312
	.long 0x6a600                                              // 000000057250: 0006A600
	.long 0                                                    // 000000057254: 00000000
	.long 0x10c                                                // 000000057258: 0000010C
	.long 0                                                    // 00000005725C: 00000000
	.long 0x13f9                                               // 000000057260: 000013F9
	.long 0x70312                                              // 000000057264: 00070312
	.long 0x70900                                              // 000000057268: 00070900
	.long 0                                                    // 00000005726C: 00000000
	.long 0x110                                                // 000000057270: 00000110
	.long 0                                                    // 000000057274: 00000000
	.long 0x4c1f                                               // 000000057278: 00004C1F
	.long 0x70312                                              // 00000005727C: 00070312
	.long 0x83400                                              // 000000057280: 00083400
	.long 0                                                    // 000000057284: 00000000
	.ascii "X"                                                 // 000000057288: 58
	.byte 0                                                    // 000000057289: 00
	.short 0                                                   // 00000005728A: 0000
	.long 0                                                    // 00000005728C: 00000000
	.ascii "t"                                                 // 000000057290: 74
	.byte 0x1f                                                 // 000000057291: 1F
	.short 0                                                   // 000000057292: 0000
	.long 0x70312                                              // 000000057294: 00070312
	.long 0x75700                                              // 000000057298: 00075700
	.long 0                                                    // 00000005729C: 00000000
	.ascii ","                                                 // 0000000572A0: 2C
	.byte 0x1                                                  // 0000000572A1: 01
	.short 0                                                   // 0000000572A2: 0000
	.long 0                                                    // 0000000572A4: 00000000
	.long 0x22b3                                               // 0000000572A8: 000022B3
	.long 0x70312                                              // 0000000572AC: 00070312
	.long 0x76d00                                              // 0000000572B0: 00076D00
	.long 0                                                    // 0000000572B4: 00000000
	.ascii "("                                                 // 0000000572B8: 28
	.byte 0x1                                                  // 0000000572B9: 01
	.short 0                                                   // 0000000572BA: 0000
	.long 0                                                    // 0000000572BC: 00000000
	.long 0x35e7                                               // 0000000572C0: 000035E7
	.long 0x70312                                              // 0000000572C4: 00070312
	.long 0x7de00                                              // 0000000572C8: 0007DE00
	.long 0                                                    // 0000000572CC: 00000000
	.long 0xd4                                                 // 0000000572D0: 000000D4
	.long 0                                                    // 0000000572D4: 00000000
	.ascii "?7"                                                // 0000000572D8: 373F
	.short 0                                                   // 0000000572DA: 0000
	.long 0x70312                                              // 0000000572DC: 00070312
	.long 0x7e200                                              // 0000000572E0: 0007E200
	.long 0                                                    // 0000000572E4: 00000000
	.long 0xb0                                                 // 0000000572E8: 000000B0
	.long 0                                                    // 0000000572EC: 00000000
	.long 0x1a9                                                // 0000000572F0: 000001A9
	.long 0x70312                                              // 0000000572F4: 00070312
	.long 0x68200                                              // 0000000572F8: 00068200
	.long 0                                                    // 0000000572FC: 00000000
	.long 0x110                                                // 000000057300: 00000110
	.long 0                                                    // 000000057304: 00000000
	.long 0x1de6                                               // 000000057308: 00001DE6
	.long 0x60311                                              // 00000005730C: 00060311
	.long 0x633c0                                              // 000000057310: 000633C0
	.long 0                                                    // 000000057314: 00000000
	.ascii "@"                                                 // 000000057318: 40
	.byte 0                                                    // 000000057319: 00
	.short 0                                                   // 00000005731A: 0000
	.long 0                                                    // 00000005731C: 00000000
	.ascii "U+"                                                // 000000057320: 2B55
	.short 0                                                   // 000000057322: 0000
	.long 0x60311                                              // 000000057324: 00060311
	.long 0x63f00                                              // 000000057328: 00063F00
	.long 0                                                    // 00000005732C: 00000000
	.ascii "@"                                                 // 000000057330: 40
	.byte 0                                                    // 000000057331: 00
	.short 0                                                   // 000000057332: 0000
	.long 0                                                    // 000000057334: 00000000
	.long 0x32bb                                               // 000000057338: 000032BB
	.long 0x60311                                              // 00000005733C: 00060311
	.long 0x646c0                                              // 000000057340: 000646C0
	.long 0                                                    // 000000057344: 00000000
	.ascii "@"                                                 // 000000057348: 40
	.byte 0                                                    // 000000057349: 00
	.short 0                                                   // 00000005734A: 0000
	.long 0                                                    // 00000005734C: 00000000
	.ascii "}:"                                                // 000000057350: 3A7D
	.short 0                                                   // 000000057352: 0000
	.long 0x60311                                              // 000000057354: 00060311
	.long 0x64dc0                                              // 000000057358: 00064DC0
	.long 0                                                    // 00000005735C: 00000000
	.ascii "@"                                                 // 000000057360: 40
	.byte 0                                                    // 000000057361: 00
	.short 0                                                   // 000000057362: 0000
	.long 0                                                    // 000000057364: 00000000
	.ascii "f"                                                 // 000000057368: 66
	.byte 0x14                                                 // 000000057369: 14
	.short 0                                                   // 00000005736A: 0000
	.long 0x60311                                              // 00000005736C: 00060311
	.long 0x62980                                              // 000000057370: 00062980
	.long 0                                                    // 000000057374: 00000000
	.ascii "@"                                                 // 000000057378: 40
	.byte 0                                                    // 000000057379: 00
	.short 0                                                   // 00000005737A: 0000
	.long 0                                                    // 00000005737C: 00000000
	.long 0x27ca                                               // 000000057380: 000027CA
	.long 0x70312                                              // 000000057384: 00070312
	.long 0x78f00                                              // 000000057388: 00078F00
	.long 0                                                    // 00000005738C: 00000000
	.long 0x188                                                // 000000057390: 00000188
	.long 0                                                    // 000000057394: 00000000
	.long 0x4bc                                                // 000000057398: 000004BC
	.long 0x70312                                              // 00000005739C: 00070312
	.long 0x69700                                              // 0000000573A0: 00069700
	.long 0                                                    // 0000000573A4: 00000000
	.long 0x108                                                // 0000000573A8: 00000108
	.long 0                                                    // 0000000573AC: 00000000
	.long 0x2ab4                                               // 0000000573B0: 00002AB4
	.long 0x60311                                              // 0000000573B4: 00060311
	.long 0x63e80                                              // 0000000573B8: 00063E80
	.long 0                                                    // 0000000573BC: 00000000
	.ascii "@"                                                 // 0000000573C0: 40
	.byte 0                                                    // 0000000573C1: 00
	.short 0                                                   // 0000000573C2: 0000
	.long 0                                                    // 0000000573C4: 00000000
	.ascii "h@"                                                // 0000000573C8: 4068
	.short 0                                                   // 0000000573CA: 0000
	.long 0x60311                                              // 0000000573CC: 00060311
	.long 0x652c0                                              // 0000000573D0: 000652C0
	.long 0                                                    // 0000000573D4: 00000000
	.ascii "@"                                                 // 0000000573D8: 40
	.byte 0                                                    // 0000000573D9: 00
	.short 0                                                   // 0000000573DA: 0000
	.long 0                                                    // 0000000573DC: 00000000
	.ascii "C"                                                 // 0000000573E0: 43
	.byte 0x1c                                                 // 0000000573E1: 1C
	.short 0                                                   // 0000000573E2: 0000
	.long 0x70312                                              // 0000000573E4: 00070312
	.long 0x74100                                              // 0000000573E8: 00074100
	.long 0                                                    // 0000000573EC: 00000000
	.ascii "0"                                                 // 0000000573F0: 30
	.byte 0x1                                                  // 0000000573F1: 01
	.short 0                                                   // 0000000573F2: 0000
	.long 0                                                    // 0000000573F4: 00000000
	.ascii "4"                                                 // 0000000573F8: 34
	.byte 0x4                                                  // 0000000573F9: 04
	.short 0                                                   // 0000000573FA: 0000
	.long 0x70312                                              // 0000000573FC: 00070312
	.long 0x69300                                              // 000000057400: 00069300
	.long 0                                                    // 000000057404: 00000000
	.long 0x104                                                // 000000057408: 00000104
	.long 0                                                    // 00000005740C: 00000000
	.long 0xd0b                                                // 000000057410: 00000D0B
	.long 0x60311                                              // 000000057414: 00060311
	.ascii "@\""                                               // 000000057418: 2240
	.short 0x6                                                 // 00000005741A: 0006
	.long 0                                                    // 00000005741C: 00000000
	.ascii "@"                                                 // 000000057420: 40
	.byte 0                                                    // 000000057421: 00
	.short 0                                                   // 000000057422: 0000
	.long 0                                                    // 000000057424: 00000000
	.long 0x26fe                                               // 000000057428: 000026FE
	.long 0x60311                                              // 00000005742C: 00060311
	.long 0x63b80                                              // 000000057430: 00063B80
	.long 0                                                    // 000000057434: 00000000
	.ascii "@"                                                 // 000000057438: 40
	.byte 0                                                    // 000000057439: 00
	.short 0                                                   // 00000005743A: 0000
	.long 0                                                    // 00000005743C: 00000000
	.ascii "A0"                                                // 000000057440: 3041
	.short 0                                                   // 000000057442: 0000
	.long 0x60311                                              // 000000057444: 00060311
	.long 0x643c0                                              // 000000057448: 000643C0
	.long 0                                                    // 00000005744C: 00000000
	.ascii "@"                                                 // 000000057450: 40
	.byte 0                                                    // 000000057451: 00
	.short 0                                                   // 000000057452: 0000
	.long 0                                                    // 000000057454: 00000000
	.long 0x31d2                                               // 000000057458: 000031D2
	.long 0x70312                                              // 00000005745C: 00070312
	.long 0x7cc00                                              // 000000057460: 0007CC00
	.long 0                                                    // 000000057464: 00000000
	.long 0xa4                                                 // 000000057468: 000000A4
	.long 0                                                    // 00000005746C: 00000000
	.long 0x83                                                 // 000000057470: 00000083
	.long 0x60311                                              // 000000057474: 00060311
	.long 0x615c0                                              // 000000057478: 000615C0
	.long 0                                                    // 00000005747C: 00000000
	.ascii "@"                                                 // 000000057480: 40
	.byte 0                                                    // 000000057481: 00
	.short 0                                                   // 000000057482: 0000
	.long 0                                                    // 000000057484: 00000000
	.ascii "L"                                                 // 000000057488: 4C
	.byte 0x3                                                  // 000000057489: 03
	.short 0                                                   // 00000005748A: 0000
	.long 0x60311                                              // 00000005748C: 00060311
	.long 0x618c0                                              // 000000057490: 000618C0
	.long 0                                                    // 000000057494: 00000000
	.ascii "@"                                                 // 000000057498: 40
	.byte 0                                                    // 000000057499: 00
	.short 0                                                   // 00000005749A: 0000
	.long 0                                                    // 00000005749C: 00000000
	.long 0x1195                                               // 0000000574A0: 00001195
	.long 0x60311                                              // 0000000574A4: 00060311
	.long 0x62680                                              // 0000000574A8: 00062680
	.long 0                                                    // 0000000574AC: 00000000
	.ascii "@"                                                 // 0000000574B0: 40
	.byte 0                                                    // 0000000574B1: 00
	.short 0                                                   // 0000000574B2: 0000
	.long 0                                                    // 0000000574B4: 00000000
	.long 0x1a0e                                               // 0000000574B8: 00001A0E
	.long 0x70312                                              // 0000000574BC: 00070312
	.long 0x73300                                              // 0000000574C0: 00073300
	.long 0                                                    // 0000000574C4: 00000000
	.ascii ","                                                 // 0000000574C8: 2C
	.byte 0x1                                                  // 0000000574C9: 01
	.short 0                                                   // 0000000574CA: 0000
	.long 0                                                    // 0000000574CC: 00000000
	.long 0x2bf6                                               // 0000000574D0: 00002BF6
	.long 0x60311                                              // 0000000574D4: 00060311
	.long 0x63f80                                              // 0000000574D8: 00063F80
	.long 0                                                    // 0000000574DC: 00000000
	.ascii "@"                                                 // 0000000574E0: 40
	.byte 0                                                    // 0000000574E1: 00
	.short 0                                                   // 0000000574E2: 0000
	.long 0                                                    // 0000000574E4: 00000000
	.ascii "<6"                                                // 0000000574E8: 363C
	.short 0                                                   // 0000000574EA: 0000
	.long 0x70312                                              // 0000000574EC: 00070312
	.long 0x7df00                                              // 0000000574F0: 0007DF00
	.long 0                                                    // 0000000574F4: 00000000
	.long 0xf4                                                 // 0000000574F8: 000000F4
	.long 0                                                    // 0000000574FC: 00000000
	.ascii "["                                                 // 000000057500: 5B
	.byte 0x10                                                 // 000000057501: 10
	.short 0                                                   // 000000057502: 0000
	.long 0x70312                                              // 000000057504: 00070312
	.long 0x6ed00                                              // 000000057508: 0006ED00
	.long 0                                                    // 00000005750C: 00000000
	.ascii "h"                                                 // 000000057510: 68
	.byte 0x1                                                  // 000000057511: 01
	.short 0                                                   // 000000057512: 0000
	.long 0                                                    // 000000057514: 00000000
	.long 0x11da                                               // 000000057518: 000011DA
	.long 0x60311                                              // 00000005751C: 00060311
	.long 0x626c0                                              // 000000057520: 000626C0
	.long 0                                                    // 000000057524: 00000000
	.ascii "@"                                                 // 000000057528: 40
	.byte 0                                                    // 000000057529: 00
	.short 0                                                   // 00000005752A: 0000
	.long 0                                                    // 00000005752C: 00000000
	.long 0x17c4                                               // 000000057530: 000017C4
	.long 0x60311                                              // 000000057534: 00060311
	.ascii "@."                                                // 000000057538: 2E40
	.short 0x6                                                 // 00000005753A: 0006
	.long 0                                                    // 00000005753C: 00000000
	.ascii "@"                                                 // 000000057540: 40
	.byte 0                                                    // 000000057541: 00
	.short 0                                                   // 000000057542: 0000
	.long 0                                                    // 000000057544: 00000000
	.long 0x2d83                                               // 000000057548: 00002D83
	.long 0x70312                                              // 00000005754C: 00070312
	.long 0x7b500                                              // 000000057550: 0007B500
	.long 0                                                    // 000000057554: 00000000
	.ascii "8"                                                 // 000000057558: 38
	.byte 0x1                                                  // 000000057559: 01
	.short 0                                                   // 00000005755A: 0000
	.long 0                                                    // 00000005755C: 00000000
	.long 0x4bde                                               // 000000057560: 00004BDE
	.long 0x70312                                              // 000000057564: 00070312
	.long 0x83300                                              // 000000057568: 00083300
	.long 0                                                    // 00000005756C: 00000000
	.ascii "H"                                                 // 000000057570: 48
	.byte 0                                                    // 000000057571: 00
	.short 0                                                   // 000000057572: 0000
	.long 0                                                    // 000000057574: 00000000
	.ascii "0\n"                                               // 000000057578: 0A30
	.short 0                                                   // 00000005757A: 0000
	.long 0x60311                                              // 00000005757C: 00060311
	.long 0x61f80                                              // 000000057580: 00061F80
	.long 0                                                    // 000000057584: 00000000
	.ascii "@"                                                 // 000000057588: 40
	.byte 0                                                    // 000000057589: 00
	.short 0                                                   // 00000005758A: 0000
	.long 0                                                    // 00000005758C: 00000000
	.ascii "/"                                                 // 000000057590: 2F
	.byte 0xb                                                  // 000000057591: 0B
	.short 0                                                   // 000000057592: 0000
	.long 0x60311                                              // 000000057594: 00060311
	.long 0x62080                                              // 000000057598: 00062080
	.long 0                                                    // 00000005759C: 00000000
	.ascii "@"                                                 // 0000000575A0: 40
	.byte 0                                                    // 0000000575A1: 00
	.short 0                                                   // 0000000575A2: 0000
	.long 0                                                    // 0000000575A4: 00000000
	.long 0x2feb                                               // 0000000575A8: 00002FEB
	.long 0x70312                                              // 0000000575AC: 00070312
	.long 0x7c300                                              // 0000000575B0: 0007C300
	.long 0                                                    // 0000000575B4: 00000000
	.long 0x98                                                 // 0000000575B8: 00000098
	.long 0                                                    // 0000000575BC: 00000000
	.ascii "z1"                                                // 0000000575C0: 317A
	.short 0                                                   // 0000000575C2: 0000
	.long 0x60311                                              // 0000000575C4: 00060311
	.ascii "@E"                                                // 0000000575C8: 4540
	.short 0x6                                                 // 0000000575CA: 0006
	.long 0                                                    // 0000000575CC: 00000000
	.ascii "@"                                                 // 0000000575D0: 40
	.byte 0                                                    // 0000000575D1: 00
	.short 0                                                   // 0000000575D2: 0000
	.long 0                                                    // 0000000575D4: 00000000
	.long 0x3bd3                                               // 0000000575D8: 00003BD3
	.long 0x70312                                              // 0000000575DC: 00070312
	.long 0x7f200                                              // 0000000575E0: 0007F200
	.long 0                                                    // 0000000575E4: 00000000
	.long 0xfc                                                 // 0000000575E8: 000000FC
	.long 0                                                    // 0000000575EC: 00000000
	.ascii "p"                                                 // 0000000575F0: 70
	.byte 0                                                    // 0000000575F1: 00
	.short 0                                                   // 0000000575F2: 0000
	.long 0x70312                                              // 0000000575F4: 00070312
	.long 0x67500                                              // 0000000575F8: 00067500
	.long 0                                                    // 0000000575FC: 00000000
	.long 0x118                                                // 000000057600: 00000118
	.long 0                                                    // 000000057604: 00000000
	.long 0x28eb                                               // 000000057608: 000028EB
	.long 0x60311                                              // 00000005760C: 00060311
	.long 0x63d00                                              // 000000057610: 00063D00
	.long 0                                                    // 000000057614: 00000000
	.ascii "@"                                                 // 000000057618: 40
	.byte 0                                                    // 000000057619: 00
	.short 0                                                   // 00000005761A: 0000
	.long 0                                                    // 00000005761C: 00000000
	.long 0x33c8                                               // 000000057620: 000033C8
	.long 0x60311                                              // 000000057624: 00060311
	.long 0x64800                                              // 000000057628: 00064800
	.long 0                                                    // 00000005762C: 00000000
	.ascii "@"                                                 // 000000057630: 40
	.byte 0                                                    // 000000057631: 00
	.short 0                                                   // 000000057632: 0000
	.long 0                                                    // 000000057634: 00000000
	.long 0x3400                                               // 000000057638: 00003400
	.long 0x60311                                              // 00000005763C: 00060311
	.ascii "@H"                                                // 000000057640: 4840
	.short 0x6                                                 // 000000057642: 0006
	.long 0                                                    // 000000057644: 00000000
	.ascii "@"                                                 // 000000057648: 40
	.byte 0                                                    // 000000057649: 00
	.short 0                                                   // 00000005764A: 0000
	.long 0                                                    // 00000005764C: 00000000
	.long 0x21f                                                // 000000057650: 0000021F
	.long 0x60311                                              // 000000057654: 00060311
	.long 0x617c0                                              // 000000057658: 000617C0
	.long 0                                                    // 00000005765C: 00000000
	.ascii "@"                                                 // 000000057660: 40
	.byte 0                                                    // 000000057661: 00
	.short 0                                                   // 000000057662: 0000
	.long 0                                                    // 000000057664: 00000000
	.long 0x46d6                                               // 000000057668: 000046D6
	.long 0x60311                                              // 00000005766C: 00060311
	.long 0x65800                                              // 000000057670: 00065800
	.long 0                                                    // 000000057674: 00000000
	.ascii "@"                                                 // 000000057678: 40
	.byte 0                                                    // 000000057679: 00
	.short 0                                                   // 00000005767A: 0000
	.long 0                                                    // 00000005767C: 00000000
	.long 0x1ea5                                               // 000000057680: 00001EA5
	.long 0x70312                                              // 000000057684: 00070312
	.long 0x75100                                              // 000000057688: 00075100
	.long 0                                                    // 00000005768C: 00000000
	.ascii "4"                                                 // 000000057690: 34
	.byte 0x1                                                  // 000000057691: 01
	.short 0                                                   // 000000057692: 0000
	.long 0                                                    // 000000057694: 00000000
	.ascii "W8"                                                // 000000057698: 3857
	.short 0                                                   // 00000005769A: 0000
	.long 0x70312                                              // 00000005769C: 00070312
	.long 0x7e600                                              // 0000000576A0: 0007E600
	.long 0                                                    // 0000000576A4: 00000000
	.long 0xa4                                                 // 0000000576A8: 000000A4
	.long 0                                                    // 0000000576AC: 00000000
	.long 0x3cf7                                               // 0000000576B0: 00003CF7
	.long 0x70312                                              // 0000000576B4: 00070312
	.long 0x7f600                                              // 0000000576B8: 0007F600
	.long 0                                                    // 0000000576BC: 00000000
	.long 0xa4                                                 // 0000000576C0: 000000A4
	.long 0                                                    // 0000000576C4: 00000000
	.ascii "/A"                                                // 0000000576C8: 412F
	.short 0                                                   // 0000000576CA: 0000
	.long 0x70312                                              // 0000000576CC: 00070312
	.long 0x80500                                              // 0000000576D0: 00080500
	.long 0                                                    // 0000000576D4: 00000000
	.ascii "$"                                                 // 0000000576D8: 24
	.byte 0x1                                                  // 0000000576D9: 01
	.short 0                                                   // 0000000576DA: 0000
	.long 0                                                    // 0000000576DC: 00000000
	.long 0x981                                                // 0000000576E0: 00000981
	.long 0x70312                                              // 0000000576E4: 00070312
	.long 0x6bb00                                              // 0000000576E8: 0006BB00
	.long 0                                                    // 0000000576EC: 00000000
	.long 0x104                                                // 0000000576F0: 00000104
	.long 0                                                    // 0000000576F4: 00000000
	.long 0x1b90                                               // 0000000576F8: 00001B90
	.long 0x60311                                              // 0000000576FC: 00060311
	.long 0x631c0                                              // 000000057700: 000631C0
	.long 0                                                    // 000000057704: 00000000
	.ascii "@"                                                 // 000000057708: 40
	.byte 0                                                    // 000000057709: 00
	.short 0                                                   // 00000005770A: 0000
	.long 0                                                    // 00000005770C: 00000000
	.ascii "3F"                                                // 000000057710: 4633
	.short 0                                                   // 000000057712: 0000
	.long 0x60311                                              // 000000057714: 00060311
	.long 0x65780                                              // 000000057718: 00065780
	.long 0                                                    // 00000005771C: 00000000
	.ascii "@"                                                 // 000000057720: 40
	.byte 0                                                    // 000000057721: 00
	.short 0                                                   // 000000057722: 0000
	.long 0                                                    // 000000057724: 00000000
	.long 0xff0                                                // 000000057728: 00000FF0
	.long 0x60311                                              // 00000005772C: 00060311
	.long 0x62500                                              // 000000057730: 00062500
	.long 0                                                    // 000000057734: 00000000
	.ascii "@"                                                 // 000000057738: 40
	.byte 0                                                    // 000000057739: 00
	.short 0                                                   // 00000005773A: 0000
	.long 0                                                    // 00000005773C: 00000000
	.long 0x38ef                                               // 000000057740: 000038EF
	.long 0x70312                                              // 000000057744: 00070312
	.long 0x7e800                                              // 000000057748: 0007E800
	.long 0                                                    // 00000005774C: 00000000
	.long 0x100                                                // 000000057750: 00000100
	.long 0                                                    // 000000057754: 00000000
	.long 0x3de2                                               // 000000057758: 00003DE2
	.long 0x70312                                              // 00000005775C: 00070312
	.long 0x7f900                                              // 000000057760: 0007F900
	.long 0                                                    // 000000057764: 00000000
	.long 0xe0                                                 // 000000057768: 000000E0
	.long 0                                                    // 00000005776C: 00000000
	.long 0x4ce3                                               // 000000057770: 00004CE3
	.long 0x60311                                              // 000000057774: 00060311
	.ascii "@^"                                                // 000000057778: 5E40
	.short 0x6                                                 // 00000005777A: 0006
	.long 0                                                    // 00000005777C: 00000000
	.ascii "@"                                                 // 000000057780: 40
	.byte 0                                                    // 000000057781: 00
	.short 0                                                   // 000000057782: 0000
	.long 0                                                    // 000000057784: 00000000
	.long 0x7ba                                                // 000000057788: 000007BA
	.long 0x70312                                              // 00000005778C: 00070312
	.long 0x6ad00                                              // 000000057790: 0006AD00
	.long 0                                                    // 000000057794: 00000000
	.ascii "\\"                                                // 000000057798: 5C
	.byte 0x1                                                  // 000000057799: 01
	.short 0                                                   // 00000005779A: 0000
	.long 0                                                    // 00000005779C: 00000000
	.long 0x3c83                                               // 0000000577A0: 00003C83
	.long 0x60311                                              // 0000000577A4: 00060311
	.long 0x64f80                                              // 0000000577A8: 00064F80
	.long 0                                                    // 0000000577AC: 00000000
	.ascii "@"                                                 // 0000000577B0: 40
	.byte 0                                                    // 0000000577B1: 00
	.short 0                                                   // 0000000577B2: 0000
	.long 0                                                    // 0000000577B4: 00000000
	.long 0x4ba4                                               // 0000000577B8: 00004BA4
	.long 0x60311                                              // 0000000577BC: 00060311
	.long 0x65cc0                                              // 0000000577C0: 00065CC0
	.long 0                                                    // 0000000577C4: 00000000
	.ascii "@"                                                 // 0000000577C8: 40
	.byte 0                                                    // 0000000577C9: 00
	.short 0                                                   // 0000000577CA: 0000
	.long 0                                                    // 0000000577CC: 00000000
	.ascii "]"                                                 // 0000000577D0: 5D
	.byte 0x5                                                  // 0000000577D1: 05
	.short 0                                                   // 0000000577D2: 0000
	.long 0x60311                                              // 0000000577D4: 00060311
	.long 0x61ac0                                              // 0000000577D8: 00061AC0
	.long 0                                                    // 0000000577DC: 00000000
	.ascii "@"                                                 // 0000000577E0: 40
	.byte 0                                                    // 0000000577E1: 00
	.short 0                                                   // 0000000577E2: 0000
	.long 0                                                    // 0000000577E4: 00000000
	.ascii "[-"                                                // 0000000577E8: 2D5B
	.short 0                                                   // 0000000577EA: 0000
	.long 0x60311                                              // 0000000577EC: 00060311
	.long 0x640c0                                              // 0000000577F0: 000640C0
	.long 0                                                    // 0000000577F4: 00000000
	.ascii "@"                                                 // 0000000577F8: 40
	.byte 0                                                    // 0000000577F9: 00
	.short 0                                                   // 0000000577FA: 0000
	.long 0                                                    // 0000000577FC: 00000000
	.long 0x2f11                                               // 000000057800: 00002F11
	.long 0x70312                                              // 000000057804: 00070312
	.long 0x7bf00                                              // 000000057808: 0007BF00
	.long 0                                                    // 00000005780C: 00000000
	.ascii "p"                                                 // 000000057810: 70
	.byte 0                                                    // 000000057811: 00
	.short 0                                                   // 000000057812: 0000
	.long 0                                                    // 000000057814: 00000000
	.long 0x4494                                               // 000000057818: 00004494
	.long 0x70312                                              // 00000005781C: 00070312
	.long 0x81200                                              // 000000057820: 00081200
	.long 0                                                    // 000000057824: 00000000
	.long 0x10c                                                // 000000057828: 0000010C
	.long 0                                                    // 00000005782C: 00000000
	.ascii "9L"                                                // 000000057830: 4C39
	.short 0                                                   // 000000057832: 0000
	.long 0x60311                                              // 000000057834: 00060311
	.long 0x65d80                                              // 000000057838: 00065D80
	.long 0                                                    // 00000005783C: 00000000
	.ascii "@"                                                 // 000000057840: 40
	.byte 0                                                    // 000000057841: 00
	.short 0                                                   // 000000057842: 0000
	.long 0                                                    // 000000057844: 00000000
	.long 0x130d                                               // 000000057848: 0000130D
	.long 0x60311                                              // 00000005784C: 00060311
	.long 0x62800                                              // 000000057850: 00062800
	.long 0                                                    // 000000057854: 00000000
	.ascii "@"                                                 // 000000057858: 40
	.byte 0                                                    // 000000057859: 00
	.short 0                                                   // 00000005785A: 0000
	.long 0                                                    // 00000005785C: 00000000
	.ascii "8"                                                 // 000000057860: 38
	.byte 0x1b                                                 // 000000057861: 1B
	.short 0                                                   // 000000057862: 0000
	.long 0x60311                                              // 000000057864: 00060311
	.long 0x63180                                              // 000000057868: 00063180
	.long 0                                                    // 00000005786C: 00000000
	.ascii "@"                                                 // 000000057870: 40
	.byte 0                                                    // 000000057871: 00
	.short 0                                                   // 000000057872: 0000
	.long 0                                                    // 000000057874: 00000000
	.long 0x3d1c                                               // 000000057878: 00003D1C
	.long 0x60311                                              // 00000005787C: 00060311
	.long 0x65000                                              // 000000057880: 00065000
	.long 0                                                    // 000000057884: 00000000
	.ascii "@"                                                 // 000000057888: 40
	.byte 0                                                    // 000000057889: 00
	.short 0                                                   // 00000005788A: 0000
	.long 0                                                    // 00000005788C: 00000000
	.long 0x3ed5                                               // 000000057890: 00003ED5
	.long 0x70312                                              // 000000057894: 00070312
	.long 0x7fc00                                              // 000000057898: 0007FC00
	.long 0                                                    // 00000005789C: 00000000
	.long 0xb4                                                 // 0000000578A0: 000000B4
	.long 0                                                    // 0000000578A4: 00000000
	.long 0x5e4                                                // 0000000578A8: 000005E4
	.long 0x60311                                              // 0000000578AC: 00060311
	.ascii "@"                                                 // 0000000578B0: 40
	.byte 0x1b                                                 // 0000000578B1: 1B
	.short 0x6                                                 // 0000000578B2: 0006
	.long 0                                                    // 0000000578B4: 00000000
	.ascii "@"                                                 // 0000000578B8: 40
	.byte 0                                                    // 0000000578B9: 00
	.short 0                                                   // 0000000578BA: 0000
	.long 0                                                    // 0000000578BC: 00000000
	.long 0x21c8                                               // 0000000578C0: 000021C8
	.long 0x70312                                              // 0000000578C4: 00070312
	.long 0x76700                                              // 0000000578C8: 00076700
	.long 0                                                    // 0000000578CC: 00000000
	.long 0x108                                                // 0000000578D0: 00000108
	.long 0                                                    // 0000000578D4: 00000000
	.long 0x4091                                               // 0000000578D8: 00004091
	.long 0x70312                                              // 0000000578DC: 00070312
	.long 0x80200                                              // 0000000578E0: 00080200
	.long 0                                                    // 0000000578E4: 00000000
	.long 0xe0                                                 // 0000000578E8: 000000E0
	.long 0                                                    // 0000000578EC: 00000000
	.long 0x48d6                                               // 0000000578F0: 000048D6
	.long 0x60311                                              // 0000000578F4: 00060311
	.long 0x659c0                                              // 0000000578F8: 000659C0
	.long 0                                                    // 0000000578FC: 00000000
	.ascii "@"                                                 // 000000057900: 40
	.byte 0                                                    // 000000057901: 00
	.short 0                                                   // 000000057902: 0000
	.long 0                                                    // 000000057904: 00000000
	.long 0x4b1a                                               // 000000057908: 00004B1A
	.long 0x70312                                              // 00000005790C: 00070312
	.long 0x82f00                                              // 000000057910: 00082F00
	.long 0                                                    // 000000057914: 00000000
	.ascii "h"                                                 // 000000057918: 68
	.byte 0                                                    // 000000057919: 00
	.short 0                                                   // 00000005791A: 0000
	.long 0                                                    // 00000005791C: 00000000
	.long 0xf1                                                 // 000000057920: 000000F1
	.long 0x70312                                              // 000000057924: 00070312
	.long 0x67b00                                              // 000000057928: 00067B00
	.long 0                                                    // 00000005792C: 00000000
	.ascii "d"                                                 // 000000057930: 64
	.byte 0x1                                                  // 000000057931: 01
	.short 0                                                   // 000000057932: 0000
	.long 0                                                    // 000000057934: 00000000
	.long 0x1507                                               // 000000057938: 00001507
	.long 0x70312                                              // 00000005793C: 00070312
	.long 0x71000                                              // 000000057940: 00071000
	.long 0                                                    // 000000057944: 00000000
	.ascii "l"                                                 // 000000057948: 6C
	.byte 0                                                    // 000000057949: 00
	.short 0                                                   // 00000005794A: 0000
	.long 0                                                    // 00000005794C: 00000000
	.ascii "%"                                                 // 000000057950: 25
	.byte 0x17                                                 // 000000057951: 17
	.short 0                                                   // 000000057952: 0000
	.long 0x70312                                              // 000000057954: 00070312
	.long 0x71c00                                              // 000000057958: 00071C00
	.long 0                                                    // 00000005795C: 00000000
	.long 0x98                                                 // 000000057960: 00000098
	.long 0                                                    // 000000057964: 00000000
	.ascii ">"                                                 // 000000057968: 3E
	.byte 0x19                                                 // 000000057969: 19
	.short 0                                                   // 00000005796A: 0000
	.long 0x60311                                              // 00000005796C: 00060311
	.long 0x63000                                              // 000000057970: 00063000
	.long 0                                                    // 000000057974: 00000000
	.ascii "@"                                                 // 000000057978: 40
	.byte 0                                                    // 000000057979: 00
	.short 0                                                   // 00000005797A: 0000
	.long 0                                                    // 00000005797C: 00000000
	.ascii "e*"                                                // 000000057980: 2A65
	.short 0                                                   // 000000057982: 0000
	.long 0x60311                                              // 000000057984: 00060311
	.ascii "@>"                                                // 000000057988: 3E40
	.short 0x6                                                 // 00000005798A: 0006
	.long 0                                                    // 00000005798C: 00000000
	.ascii "@"                                                 // 000000057990: 40
	.byte 0                                                    // 000000057991: 00
	.short 0                                                   // 000000057992: 0000
	.long 0                                                    // 000000057994: 00000000
	.ascii "6-"                                                // 000000057998: 2D36
	.short 0                                                   // 00000005799A: 0000
	.long 0x70312                                              // 00000005799C: 00070312
	.long 0x7b300                                              // 0000000579A0: 0007B300
	.long 0                                                    // 0000000579A4: 00000000
	.ascii "$"                                                 // 0000000579A8: 24
	.byte 0x1                                                  // 0000000579A9: 01
	.short 0                                                   // 0000000579AA: 0000
	.long 0                                                    // 0000000579AC: 00000000
	.long 0x2f96                                               // 0000000579B0: 00002F96
	.long 0x60311                                              // 0000000579B4: 00060311
	.long 0x64300                                              // 0000000579B8: 00064300
	.long 0                                                    // 0000000579BC: 00000000
	.ascii "@"                                                 // 0000000579C0: 40
	.byte 0                                                    // 0000000579C1: 00
	.short 0                                                   // 0000000579C2: 0000
	.long 0                                                    // 0000000579C4: 00000000
	.long 0x401b                                               // 0000000579C8: 0000401B
	.long 0x60311                                              // 0000000579CC: 00060311
	.long 0x65280                                              // 0000000579D0: 00065280
	.long 0                                                    // 0000000579D4: 00000000
	.ascii "@"                                                 // 0000000579D8: 40
	.byte 0                                                    // 0000000579D9: 00
	.short 0                                                   // 0000000579DA: 0000
	.long 0                                                    // 0000000579DC: 00000000
	.long 0x4684                                               // 0000000579E0: 00004684
	.long 0x60311                                              // 0000000579E4: 00060311
	.long 0x657c0                                              // 0000000579E8: 000657C0
	.long 0                                                    // 0000000579EC: 00000000
	.ascii "@"                                                 // 0000000579F0: 40
	.byte 0                                                    // 0000000579F1: 00
	.short 0                                                   // 0000000579F2: 0000
	.long 0                                                    // 0000000579F4: 00000000
	.ascii "=5"                                                // 0000000579F8: 353D
	.short 0                                                   // 0000000579FA: 0000
	.long 0x70312                                              // 0000000579FC: 00070312
	.long 0x7dc00                                              // 000000057A00: 0007DC00
	.long 0                                                    // 000000057A04: 00000000
	.long 0xb8                                                 // 000000057A08: 000000B8
	.long 0                                                    // 000000057A0C: 00000000
	.long 0x5c4                                                // 000000057A10: 000005C4
	.long 0x70312                                              // 000000057A14: 00070312
	.long 0x69e00                                              // 000000057A18: 00069E00
	.long 0                                                    // 000000057A1C: 00000000
	.ascii "@"                                                 // 000000057A20: 40
	.byte 0x1                                                  // 000000057A21: 01
	.short 0                                                   // 000000057A22: 0000
	.long 0                                                    // 000000057A24: 00000000
	.ascii "s"                                                 // 000000057A28: 73
	.byte 0x11                                                 // 000000057A29: 11
	.short 0                                                   // 000000057A2A: 0000
	.long 0x70312                                              // 000000057A2C: 00070312
	.long 0x6f500                                              // 000000057A30: 0006F500
	.long 0                                                    // 000000057A34: 00000000
	.ascii "t"                                                 // 000000057A38: 74
	.byte 0x1                                                  // 000000057A39: 01
	.short 0                                                   // 000000057A3A: 0000
	.long 0                                                    // 000000057A3C: 00000000
	.long 0x1fe2                                               // 000000057A40: 00001FE2
	.long 0x60311                                              // 000000057A44: 00060311
	.long 0x63580                                              // 000000057A48: 00063580
	.long 0                                                    // 000000057A4C: 00000000
	.ascii "@"                                                 // 000000057A50: 40
	.byte 0                                                    // 000000057A51: 00
	.short 0                                                   // 000000057A52: 0000
	.long 0                                                    // 000000057A54: 00000000
	.long 0x341d                                               // 000000057A58: 0000341D
	.long 0x70312                                              // 000000057A5C: 00070312
	.long 0x7d800                                              // 000000057A60: 0007D800
	.long 0                                                    // 000000057A64: 00000000
	.ascii "\\"                                                // 000000057A68: 5C
	.byte 0                                                    // 000000057A69: 00
	.short 0                                                   // 000000057A6A: 0000
	.long 0                                                    // 000000057A6C: 00000000
	.ascii "{"                                                 // 000000057A70: 7B
	.byte 0x15                                                 // 000000057A71: 15
	.short 0                                                   // 000000057A72: 0000
	.long 0x60311                                              // 000000057A74: 00060311
	.long 0x62b00                                              // 000000057A78: 00062B00
	.long 0                                                    // 000000057A7C: 00000000
	.ascii "@"                                                 // 000000057A80: 40
	.byte 0                                                    // 000000057A81: 00
	.short 0                                                   // 000000057A82: 0000
	.long 0                                                    // 000000057A84: 00000000
	.long 0x17ac                                               // 000000057A88: 000017AC
	.long 0x70312                                              // 000000057A8C: 00070312
	.long 0x72000                                              // 000000057A90: 00072000
	.long 0                                                    // 000000057A94: 00000000
	.ascii "8"                                                 // 000000057A98: 38
	.byte 0x1                                                  // 000000057A99: 01
	.short 0                                                   // 000000057A9A: 0000
	.long 0                                                    // 000000057A9C: 00000000
	.ascii "U "                                                // 000000057AA0: 2055
	.short 0                                                   // 000000057AA2: 0000
	.long 0x70312                                              // 000000057AA4: 00070312
	.long 0x75d00                                              // 000000057AA8: 00075D00
	.long 0                                                    // 000000057AAC: 00000000
	.long 0x190                                                // 000000057AB0: 00000190
	.long 0                                                    // 000000057AB4: 00000000
	.long 0x30ce                                               // 000000057AB8: 000030CE
	.long 0x60311                                              // 000000057ABC: 00060311
	.long 0x64480                                              // 000000057AC0: 00064480
	.long 0                                                    // 000000057AC4: 00000000
	.ascii "@"                                                 // 000000057AC8: 40
	.byte 0                                                    // 000000057AC9: 00
	.short 0                                                   // 000000057ACA: 0000
	.long 0                                                    // 000000057ACC: 00000000
	.ascii "x3"                                                // 000000057AD0: 3378
	.short 0                                                   // 000000057AD2: 0000
	.long 0x70312                                              // 000000057AD4: 00070312
	.long 0x7d400                                              // 000000057AD8: 0007D400
	.long 0                                                    // 000000057ADC: 00000000
	.long 0xdc                                                 // 000000057AE0: 000000DC
	.long 0                                                    // 000000057AE4: 00000000
	.long 0x39d4                                               // 000000057AE8: 000039D4
	.long 0x70312                                              // 000000057AEC: 00070312
	.long 0x7eb00                                              // 000000057AF0: 0007EB00
	.long 0                                                    // 000000057AF4: 00000000
	.long 0xc0                                                 // 000000057AF8: 000000C0
	.long 0                                                    // 000000057AFC: 00000000
	.ascii ">"                                                 // 000000057B00: 3E
	.byte 0x5                                                  // 000000057B01: 05
	.short 0                                                   // 000000057B02: 0000
	.long 0x70312                                              // 000000057B04: 00070312
	.long 0x69b00                                              // 000000057B08: 00069B00
	.long 0                                                    // 000000057B0C: 00000000
	.long 0xfc                                                 // 000000057B10: 000000FC
	.long 0                                                    // 000000057B14: 00000000
	.ascii "%"                                                 // 000000057B18: 25
	.byte 0x6                                                  // 000000057B19: 06
	.short 0                                                   // 000000057B1A: 0000
	.long 0x60311                                              // 000000057B1C: 00060311
	.long 0x61b80                                              // 000000057B20: 00061B80
	.long 0                                                    // 000000057B24: 00000000
	.ascii "@"                                                 // 000000057B28: 40
	.byte 0                                                    // 000000057B29: 00
	.short 0                                                   // 000000057B2A: 0000
	.long 0                                                    // 000000057B2C: 00000000
	.long 0x170b                                               // 000000057B30: 0000170B
	.long 0x60311                                              // 000000057B34: 00060311
	.ascii "@-"                                                // 000000057B38: 2D40
	.short 0x6                                                 // 000000057B3A: 0006
	.long 0                                                    // 000000057B3C: 00000000
	.ascii "@"                                                 // 000000057B40: 40
	.byte 0                                                    // 000000057B41: 00
	.short 0                                                   // 000000057B42: 0000
	.long 0                                                    // 000000057B44: 00000000
	.long 0x2ced                                               // 000000057B48: 00002CED
	.long 0x70312                                              // 000000057B4C: 00070312
	.long 0x7b100                                              // 000000057B50: 0007B100
	.long 0                                                    // 000000057B54: 00000000
	.ascii "8"                                                 // 000000057B58: 38
	.byte 0x1                                                  // 000000057B59: 01
	.short 0                                                   // 000000057B5A: 0000
	.long 0                                                    // 000000057B5C: 00000000
	.ascii "X"                                                 // 000000057B60: 58
	.byte 0xe                                                  // 000000057B61: 0E
	.short 0                                                   // 000000057B62: 0000
	.long 0x60311                                              // 000000057B64: 00060311
	.long 0x62380                                              // 000000057B68: 00062380
	.long 0                                                    // 000000057B6C: 00000000
	.ascii "@"                                                 // 000000057B70: 40
	.byte 0                                                    // 000000057B71: 00
	.short 0                                                   // 000000057B72: 0000
	.long 0                                                    // 000000057B74: 00000000
	.ascii "b%"                                                // 000000057B78: 2562
	.short 0                                                   // 000000057B7A: 0000
	.long 0x70312                                              // 000000057B7C: 00070312
	.long 0x77f00                                              // 000000057B80: 00077F00
	.long 0                                                    // 000000057B84: 00000000
	.long 0x110                                                // 000000057B88: 00000110
	.long 0                                                    // 000000057B8C: 00000000
	.long 0x29f3                                               // 000000057B90: 000029F3
	.long 0x70312                                              // 000000057B94: 00070312
	.long 0x79d00                                              // 000000057B98: 00079D00
	.long 0                                                    // 000000057B9C: 00000000
	.long 0x18c                                                // 000000057BA0: 0000018C
	.long 0                                                    // 000000057BA4: 00000000
	.ascii "Z:"                                                // 000000057BA8: 3A5A
	.short 0                                                   // 000000057BAA: 0000
	.long 0x70312                                              // 000000057BAC: 00070312
	.long 0x7ed00                                              // 000000057BB0: 0007ED00
	.long 0                                                    // 000000057BB4: 00000000
	.long 0xb0                                                 // 000000057BB8: 000000B0
	.long 0                                                    // 000000057BBC: 00000000
	.long 0x6f7                                                // 000000057BC0: 000006F7
	.long 0x70312                                              // 000000057BC4: 00070312
	.long 0x6a800                                              // 000000057BC8: 0006A800
	.long 0                                                    // 000000057BCC: 00000000
	.long 0x10c                                                // 000000057BD0: 0000010C
	.long 0                                                    // 000000057BD4: 00000000
	.long 0x9a3                                                // 000000057BD8: 000009A3
	.long 0x60311                                              // 000000057BDC: 00060311
	.long 0x61f00                                              // 000000057BE0: 00061F00
	.long 0                                                    // 000000057BE4: 00000000
	.ascii "@"                                                 // 000000057BE8: 40
	.byte 0                                                    // 000000057BE9: 00
	.short 0                                                   // 000000057BEA: 0000
	.long 0                                                    // 000000057BEC: 00000000
	.ascii "q!"                                                // 000000057BF0: 2171
	.short 0                                                   // 000000057BF2: 0000
	.long 0x70312                                              // 000000057BF4: 00070312
	.long 0x76500                                              // 000000057BF8: 00076500
	.long 0                                                    // 000000057BFC: 00000000
	.ascii "$"                                                 // 000000057C00: 24
	.byte 0x1                                                  // 000000057C01: 01
	.short 0                                                   // 000000057C02: 0000
	.long 0                                                    // 000000057C04: 00000000
	.ascii "D="                                                // 000000057C08: 3D44
	.short 0                                                   // 000000057C0A: 0000
	.long 0x70312                                              // 000000057C0C: 00070312
	.long 0x7f700                                              // 000000057C10: 0007F700
	.long 0                                                    // 000000057C14: 00000000
	.long 0xb4                                                 // 000000057C18: 000000B4
	.long 0                                                    // 000000057C1C: 00000000
	.long 0x4a01                                               // 000000057C20: 00004A01
	.long 0x70312                                              // 000000057C24: 00070312
	.long 0x82a00                                              // 000000057C28: 00082A00
	.long 0                                                    // 000000057C2C: 00000000
	.ascii "H"                                                 // 000000057C30: 48
	.byte 0                                                    // 000000057C31: 00
	.short 0                                                   // 000000057C32: 0000
	.long 0                                                    // 000000057C34: 00000000
	.ascii "-"                                                 // 000000057C38: 2D
	.byte 0xd                                                  // 000000057C39: 0D
	.short 0                                                   // 000000057C3A: 0000
	.long 0x70312                                              // 000000057C3C: 00070312
	.long 0x6d500                                              // 000000057C40: 0006D500
	.long 0                                                    // 000000057C44: 00000000
	.ascii "d"                                                 // 000000057C48: 64
	.byte 0x1                                                  // 000000057C49: 01
	.short 0                                                   // 000000057C4A: 0000
	.long 0                                                    // 000000057C4C: 00000000
	.long 0x26b5                                               // 000000057C50: 000026B5
	.long 0x60311                                              // 000000057C54: 00060311
	.ascii "@;"                                                // 000000057C58: 3B40
	.short 0x6                                                 // 000000057C5A: 0006
	.long 0                                                    // 000000057C5C: 00000000
	.ascii "@"                                                 // 000000057C60: 40
	.byte 0                                                    // 000000057C61: 00
	.short 0                                                   // 000000057C62: 0000
	.long 0                                                    // 000000057C64: 00000000
	.long 0x441a                                               // 000000057C68: 0000441A
	.long 0x60311                                              // 000000057C6C: 00060311
	.long 0x655c0                                              // 000000057C70: 000655C0
	.long 0                                                    // 000000057C74: 00000000
	.ascii "@"                                                 // 000000057C78: 40
	.byte 0                                                    // 000000057C79: 00
	.short 0                                                   // 000000057C7A: 0000
	.long 0                                                    // 000000057C7C: 00000000
	.ascii "5"                                                 // 000000057C80: 35
	.byte 0x1                                                  // 000000057C81: 01
	.short 0                                                   // 000000057C82: 0000
	.long 0x60311                                              // 000000057C84: 00060311
	.long 0x616c0                                              // 000000057C88: 000616C0
	.long 0                                                    // 000000057C8C: 00000000
	.ascii "@"                                                 // 000000057C90: 40
	.byte 0                                                    // 000000057C91: 00
	.short 0                                                   // 000000057C92: 0000
	.long 0                                                    // 000000057C94: 00000000
	.long 0xea0                                                // 000000057C98: 00000EA0
	.long 0x60311                                              // 000000057C9C: 00060311
	.long 0x623c0                                              // 000000057CA0: 000623C0
	.long 0                                                    // 000000057CA4: 00000000
	.ascii "@"                                                 // 000000057CA8: 40
	.byte 0                                                    // 000000057CA9: 00
	.short 0                                                   // 000000057CAA: 0000
	.long 0                                                    // 000000057CAC: 00000000
	.long 0x38a4                                               // 000000057CB0: 000038A4
	.long 0x70312                                              // 000000057CB4: 00070312
	.long 0x7e700                                              // 000000057CB8: 0007E700
	.long 0                                                    // 000000057CBC: 00000000
	.long 0xd0                                                 // 000000057CC0: 000000D0
	.long 0                                                    // 000000057CC4: 00000000
	.long 0x3e84                                               // 000000057CC8: 00003E84
	.long 0x70312                                              // 000000057CCC: 00070312
	.long 0x7fb00                                              // 000000057CD0: 0007FB00
	.long 0                                                    // 000000057CD4: 00000000
	.long 0xfc                                                 // 000000057CD8: 000000FC
	.long 0                                                    // 000000057CDC: 00000000
	.long 0x2bd1                                               // 000000057CE0: 00002BD1
	.long 0x70312                                              // 000000057CE4: 00070312
	.long 0x7a900                                              // 000000057CE8: 0007A900
	.long 0                                                    // 000000057CEC: 00000000
	.long 0x194                                                // 000000057CF0: 00000194
	.long 0                                                    // 000000057CF4: 00000000
	.ascii "e5"                                                // 000000057CF8: 3565
	.short 0                                                   // 000000057CFA: 0000
	.long 0x60311                                              // 000000057CFC: 00060311
	.long 0x64980                                              // 000000057D00: 00064980
	.long 0                                                    // 000000057D04: 00000000
	.ascii "@"                                                 // 000000057D08: 40
	.byte 0                                                    // 000000057D09: 00
	.short 0                                                   // 000000057D0A: 0000
	.long 0                                                    // 000000057D0C: 00000000
	.ascii "W7"                                                // 000000057D10: 3757
	.short 0                                                   // 000000057D12: 0000
	.long 0x60311                                              // 000000057D14: 00060311
	.long 0x64b00                                              // 000000057D18: 00064B00
	.long 0                                                    // 000000057D1C: 00000000
	.ascii "@"                                                 // 000000057D20: 40
	.byte 0                                                    // 000000057D21: 00
	.short 0                                                   // 000000057D22: 0000
	.long 0                                                    // 000000057D24: 00000000
	.long 0xae                                                 // 000000057D28: 000000AE
	.long 0x60311                                              // 000000057D2C: 00060311
	.long 0x61600                                              // 000000057D30: 00061600
	.long 0                                                    // 000000057D34: 00000000
	.ascii "@"                                                 // 000000057D38: 40
	.byte 0                                                    // 000000057D39: 00
	.short 0                                                   // 000000057D3A: 0000
	.long 0                                                    // 000000057D3C: 00000000
	.long 0x49b                                                // 000000057D40: 0000049B
	.long 0x60311                                              // 000000057D44: 00060311
	.long 0x61a00                                              // 000000057D48: 00061A00
	.long 0                                                    // 000000057D4C: 00000000
	.ascii "@"                                                 // 000000057D50: 40
	.byte 0                                                    // 000000057D51: 00
	.short 0                                                   // 000000057D52: 0000
	.long 0                                                    // 000000057D54: 00000000
	.long 0xaf4                                                // 000000057D58: 00000AF4
	.long 0x60311                                              // 000000057D5C: 00060311
	.ascii "@ "                                                // 000000057D60: 2040
	.short 0x6                                                 // 000000057D62: 0006
	.long 0                                                    // 000000057D64: 00000000
	.ascii "@"                                                 // 000000057D68: 40
	.byte 0                                                    // 000000057D69: 00
	.short 0                                                   // 000000057D6A: 0000
	.long 0                                                    // 000000057D6C: 00000000
	.long 0x25af                                               // 000000057D70: 000025AF
	.long 0x70312                                              // 000000057D74: 00070312
	.long 0x78100                                              // 000000057D78: 00078100
	.long 0                                                    // 000000057D7C: 00000000
	.ascii "|"                                                 // 000000057D80: 7C
	.byte 0x1                                                  // 000000057D81: 01
	.short 0                                                   // 000000057D82: 0000
	.long 0                                                    // 000000057D84: 00000000
	.long 0x14ad                                               // 000000057D88: 000014AD
	.long 0x70312                                              // 000000057D8C: 00070312
	.long 0x70e00                                              // 000000057D90: 00070E00
	.long 0                                                    // 000000057D94: 00000000
	.ascii "l"                                                 // 000000057D98: 6C
	.byte 0                                                    // 000000057D99: 00
	.short 0                                                   // 000000057D9A: 0000
	.long 0                                                    // 000000057D9C: 00000000
	.long 0x2fce                                               // 000000057DA0: 00002FCE
	.long 0x60311                                              // 000000057DA4: 00060311
	.ascii "@C"                                                // 000000057DA8: 4340
	.short 0x6                                                 // 000000057DAA: 0006
	.long 0                                                    // 000000057DAC: 00000000
	.ascii "@"                                                 // 000000057DB0: 40
	.byte 0                                                    // 000000057DB1: 00
	.short 0                                                   // 000000057DB2: 0000
	.long 0                                                    // 000000057DB4: 00000000
	.long 0x3db8                                               // 000000057DB8: 00003DB8
	.long 0x60311                                              // 000000057DBC: 00060311
	.long 0x65080                                              // 000000057DC0: 00065080
	.long 0                                                    // 000000057DC4: 00000000
	.ascii "@"                                                 // 000000057DC8: 40
	.byte 0                                                    // 000000057DC9: 00
	.short 0                                                   // 000000057DCA: 0000
	.long 0                                                    // 000000057DCC: 00000000
	.ascii "LI"                                                // 000000057DD0: 494C
	.short 0                                                   // 000000057DD2: 0000
	.long 0x70312                                              // 000000057DD4: 00070312
	.long 0x82600                                              // 000000057DD8: 00082600
	.long 0                                                    // 000000057DDC: 00000000
	.long 0x10c                                                // 000000057DE0: 0000010C
	.long 0                                                    // 000000057DE4: 00000000
	.long 0x4a1f                                               // 000000057DE8: 00004A1F
	.long 0x60311                                              // 000000057DEC: 00060311
	.long 0x65b00                                              // 000000057DF0: 00065B00
	.long 0                                                    // 000000057DF4: 00000000
	.ascii "@"                                                 // 000000057DF8: 40
	.byte 0                                                    // 000000057DF9: 00
	.short 0                                                   // 000000057DFA: 0000
	.long 0                                                    // 000000057DFC: 00000000
	.long 0xcc8                                                // 000000057E00: 00000CC8
	.long 0x60311                                              // 000000057E04: 00060311
	.long 0x62200                                              // 000000057E08: 00062200
	.long 0                                                    // 000000057E0C: 00000000
	.ascii "@"                                                 // 000000057E10: 40
	.byte 0                                                    // 000000057E11: 00
	.short 0                                                   // 000000057E12: 0000
	.long 0                                                    // 000000057E14: 00000000
	.ascii "R"                                                 // 000000057E18: 52
	.byte 0x17                                                 // 000000057E19: 17
	.short 0                                                   // 000000057E1A: 0000
	.long 0x70312                                              // 000000057E1C: 00070312
	.long 0x71d00                                              // 000000057E20: 00071D00
	.long 0                                                    // 000000057E24: 00000000
	.long 0x80                                                 // 000000057E28: 00000080
	.long 0                                                    // 000000057E2C: 00000000
	.long 0x2215                                               // 000000057E30: 00002215
	.long 0x70312                                              // 000000057E34: 00070312
	.long 0x76900                                              // 000000057E38: 00076900
	.long 0                                                    // 000000057E3C: 00000000
	.ascii "("                                                 // 000000057E40: 28
	.byte 0x1                                                  // 000000057E41: 01
	.short 0                                                   // 000000057E42: 0000
	.long 0                                                    // 000000057E44: 00000000
	.long 0x2da7                                               // 000000057E48: 00002DA7
	.long 0x60311                                              // 000000057E4C: 00060311
	.long 0x64100                                              // 000000057E50: 00064100
	.long 0                                                    // 000000057E54: 00000000
	.ascii "@"                                                 // 000000057E58: 40
	.byte 0                                                    // 000000057E59: 00
	.short 0                                                   // 000000057E5A: 0000
	.long 0                                                    // 000000057E5C: 00000000
	.ascii "&"                                                 // 000000057E60: 26
	.byte 0x3                                                  // 000000057E61: 03
	.short 0                                                   // 000000057E62: 0000
	.long 0x70312                                              // 000000057E64: 00070312
	.long 0x68b00                                              // 000000057E68: 00068B00
	.long 0                                                    // 000000057E6C: 00000000
	.ascii "h"                                                 // 000000057E70: 68
	.byte 0x1                                                  // 000000057E71: 01
	.short 0                                                   // 000000057E72: 0000
	.long 0                                                    // 000000057E74: 00000000
	.long 0xfcb                                                // 000000057E78: 00000FCB
	.long 0x70312                                              // 000000057E7C: 00070312
	.long 0x6e900                                              // 000000057E80: 0006E900
	.long 0                                                    // 000000057E84: 00000000
	.ascii "h"                                                 // 000000057E88: 68
	.byte 0x1                                                  // 000000057E89: 01
	.short 0                                                   // 000000057E8A: 0000
	.long 0                                                    // 000000057E8C: 00000000
	.long 0x24ec                                               // 000000057E90: 000024EC
	.long 0x60311                                              // 000000057E94: 00060311
	.long 0x639c0                                              // 000000057E98: 000639C0
	.long 0                                                    // 000000057E9C: 00000000
	.ascii "@"                                                 // 000000057EA0: 40
	.byte 0                                                    // 000000057EA1: 00
	.short 0                                                   // 000000057EA2: 0000
	.long 0                                                    // 000000057EA4: 00000000
	.ascii "sC"                                                // 000000057EA8: 4373
	.short 0                                                   // 000000057EAA: 0000
	.long 0x60311                                              // 000000057EAC: 00060311
	.ascii "@U"                                                // 000000057EB0: 5540
	.short 0x6                                                 // 000000057EB2: 0006
	.long 0                                                    // 000000057EB4: 00000000
	.ascii "@"                                                 // 000000057EB8: 40
	.byte 0                                                    // 000000057EB9: 00
	.short 0                                                   // 000000057EBA: 0000
	.long 0                                                    // 000000057EBC: 00000000
	.long 0x4594                                               // 000000057EC0: 00004594
	.long 0x60311                                              // 000000057EC4: 00060311
	.long 0x65700                                              // 000000057EC8: 00065700
	.long 0                                                    // 000000057ECC: 00000000
	.ascii "@"                                                 // 000000057ED0: 40
	.byte 0                                                    // 000000057ED1: 00
	.short 0                                                   // 000000057ED2: 0000
	.long 0                                                    // 000000057ED4: 00000000
	.long 0x896                                                // 000000057ED8: 00000896
	.long 0x60311                                              // 000000057EDC: 00060311
	.long 0x61e00                                              // 000000057EE0: 00061E00
	.long 0                                                    // 000000057EE4: 00000000
	.ascii "@"                                                 // 000000057EE8: 40
	.byte 0                                                    // 000000057EE9: 00
	.short 0                                                   // 000000057EEA: 0000
	.long 0                                                    // 000000057EEC: 00000000
	.long 0x3aec                                               // 000000057EF0: 00003AEC
	.long 0x70312                                              // 000000057EF4: 00070312
	.long 0x7ef00                                              // 000000057EF8: 0007EF00
	.long 0                                                    // 000000057EFC: 00000000
	.long 0xb4                                                 // 000000057F00: 000000B4
	.long 0                                                    // 000000057F04: 00000000
	.long 0x439d                                               // 000000057F08: 0000439D
	.long 0x70312                                              // 000000057F0C: 00070312
	.long 0x80f00                                              // 000000057F10: 00080F00
	.long 0                                                    // 000000057F14: 00000000
	.long 0xf4                                                 // 000000057F18: 000000F4
	.long 0                                                    // 000000057F1C: 00000000
	.long 0x161c                                               // 000000057F20: 0000161C
	.long 0x60311                                              // 000000057F24: 00060311
	.long 0x62c00                                              // 000000057F28: 00062C00
	.long 0                                                    // 000000057F2C: 00000000
	.ascii "@"                                                 // 000000057F30: 40
	.byte 0                                                    // 000000057F31: 00
	.short 0                                                   // 000000057F32: 0000
	.long 0                                                    // 000000057F34: 00000000
	.long 0x16d9                                               // 000000057F38: 000016D9
	.long 0x60311                                              // 000000057F3C: 00060311
	.long 0x62d00                                              // 000000057F40: 00062D00
	.long 0                                                    // 000000057F44: 00000000
	.ascii "@"                                                 // 000000057F48: 40
	.byte 0                                                    // 000000057F49: 00
	.short 0                                                   // 000000057F4A: 0000
	.long 0                                                    // 000000057F4C: 00000000
	.long 0x2c1e                                               // 000000057F50: 00002C1E
	.long 0x70312                                              // 000000057F54: 00070312
	.long 0x7ab00                                              // 000000057F58: 0007AB00
	.long 0                                                    // 000000057F5C: 00000000
	.ascii "$"                                                 // 000000057F60: 24
	.byte 0x1                                                  // 000000057F61: 01
	.short 0                                                   // 000000057F62: 0000
	.long 0                                                    // 000000057F64: 00000000
	.long 0x40b6                                               // 000000057F68: 000040B6
	.long 0x60311                                              // 000000057F6C: 00060311
	.long 0x65300                                              // 000000057F70: 00065300
	.long 0                                                    // 000000057F74: 00000000
	.ascii "@"                                                 // 000000057F78: 40
	.byte 0                                                    // 000000057F79: 00
	.short 0                                                   // 000000057F7A: 0000
	.long 0                                                    // 000000057F7C: 00000000
	.ascii "-B"                                                // 000000057F80: 422D
	.short 0                                                   // 000000057F82: 0000
	.long 0x60311                                              // 000000057F84: 00060311
	.ascii "@T"                                                // 000000057F88: 5440
	.short 0x6                                                 // 000000057F8A: 0006
	.long 0                                                    // 000000057F8C: 00000000
	.ascii "@"                                                 // 000000057F90: 40
	.byte 0                                                    // 000000057F91: 00
	.short 0                                                   // 000000057F92: 0000
	.long 0                                                    // 000000057F94: 00000000
	.long 0x2ff                                                // 000000057F98: 000002FF
	.long 0x60311                                              // 000000057F9C: 00060311
	.long 0x61880                                              // 000000057FA0: 00061880
	.long 0                                                    // 000000057FA4: 00000000
	.ascii "@"                                                 // 000000057FA8: 40
	.byte 0                                                    // 000000057FA9: 00
	.short 0                                                   // 000000057FAA: 0000
	.long 0                                                    // 000000057FAC: 00000000
	.long 0x14ee                                               // 000000057FB0: 000014EE
	.long 0x60311                                              // 000000057FB4: 00060311
	.ascii "@*"                                                // 000000057FB8: 2A40
	.short 0x6                                                 // 000000057FBA: 0006
	.long 0                                                    // 000000057FBC: 00000000
	.ascii "@"                                                 // 000000057FC0: 40
	.byte 0                                                    // 000000057FC1: 00
	.short 0                                                   // 000000057FC2: 0000
	.long 0                                                    // 000000057FC4: 00000000
	.ascii "^"                                                 // 000000057FC8: 5E
	.byte 0x19                                                 // 000000057FC9: 19
	.short 0                                                   // 000000057FCA: 0000
	.long 0x70312                                              // 000000057FCC: 00070312
	.long 0x72f00                                              // 000000057FD0: 00072F00
	.long 0                                                    // 000000057FD4: 00000000
	.long 0x11c                                                // 000000057FD8: 0000011C
	.long 0                                                    // 000000057FDC: 00000000
	.ascii "f"                                                 // 000000057FE0: 66
	.byte 0x1b                                                 // 000000057FE1: 1B
	.short 0                                                   // 000000057FE2: 0000
	.long 0x70312                                              // 000000057FE4: 00070312
	.long 0x73b00                                              // 000000057FE8: 00073B00
	.long 0                                                    // 000000057FEC: 00000000
	.long 0x18c                                                // 000000057FF0: 0000018C
	.long 0                                                    // 000000057FF4: 00000000
	.long 0x3b84                                               // 000000057FF8: 00003B84
	.long 0x70312                                              // 000000057FFC: 00070312
	.long 0x7f100                                              // 000000058000: 0007F100
	.long 0                                                    // 000000058004: 00000000
	.long 0xf4                                                 // 000000058008: 000000F4
	.long 0                                                    // 00000005800C: 00000000
	.ascii "qI"                                                // 000000058010: 4971
	.short 0                                                   // 000000058012: 0000
	.long 0x60311                                              // 000000058014: 00060311
	.ascii "@Z"                                                // 000000058018: 5A40
	.short 0x6                                                 // 00000005801A: 0006
	.long 0                                                    // 00000005801C: 00000000
	.ascii "@"                                                 // 000000058020: 40
	.byte 0                                                    // 000000058021: 00
	.short 0                                                   // 000000058022: 0000
	.long 0                                                    // 000000058024: 00000000
	.long 0x1482                                               // 000000058028: 00001482
	.long 0x70312                                              // 00000005802C: 00070312
	.long 0x70d00                                              // 000000058030: 00070D00
	.long 0                                                    // 000000058034: 00000000
	.ascii "l"                                                 // 000000058038: 6C
	.byte 0                                                    // 000000058039: 00
	.short 0                                                   // 00000005803A: 0000
	.long 0                                                    // 00000005803C: 00000000
	.ascii "q"                                                 // 000000058040: 71
	.byte 0x13                                                 // 000000058041: 13
	.short 0                                                   // 000000058042: 0000
	.long 0x70312                                              // 000000058044: 00070312
	.long 0x70500                                              // 000000058048: 00070500
	.long 0                                                    // 00000005804C: 00000000
	.ascii "l"                                                 // 000000058050: 6C
	.byte 0x1                                                  // 000000058051: 01
	.short 0                                                   // 000000058052: 0000
	.long 0                                                    // 000000058054: 00000000
	.ascii "@*"                                                // 000000058058: 2A40
	.short 0                                                   // 00000005805A: 0000
	.long 0x70312                                              // 00000005805C: 00070312
	.long 0x79f00                                              // 000000058060: 00079F00
	.long 0                                                    // 000000058064: 00000000
	.long 0x18c                                                // 000000058068: 0000018C
	.long 0                                                    // 00000005806C: 00000000
	.ascii "\"?"                                               // 000000058070: 3F22
	.short 0                                                   // 000000058072: 0000
	.long 0x70312                                              // 000000058074: 00070312
	.long 0x7fd00                                              // 000000058078: 0007FD00
	.long 0                                                    // 00000005807C: 00000000
	.long 0xf8                                                 // 000000058080: 000000F8
	.long 0                                                    // 000000058084: 00000000
	.long 0x44cb                                               // 000000058088: 000044CB
	.long 0x70312                                              // 00000005808C: 00070312
	.long 0x81400                                              // 000000058090: 00081400
	.long 0                                                    // 000000058094: 00000000
	.long 0xfc                                                 // 000000058098: 000000FC
	.long 0                                                    // 00000005809C: 00000000
	.ascii "("                                                 // 0000000580A0: 28
	.byte 0x1c                                                 // 0000000580A1: 1C
	.short 0                                                   // 0000000580A2: 0000
	.long 0x60311                                              // 0000000580A4: 00060311
	.ascii "@2"                                                // 0000000580A8: 3240
	.short 0x6                                                 // 0000000580AA: 0006
	.long 0                                                    // 0000000580AC: 00000000
	.ascii "@"                                                 // 0000000580B0: 40
	.byte 0                                                    // 0000000580B1: 00
	.short 0                                                   // 0000000580B2: 0000
	.long 0                                                    // 0000000580B4: 00000000
	.long 0x36bf                                               // 0000000580B8: 000036BF
	.long 0x60311                                              // 0000000580BC: 00060311
	.long 0x64a80                                              // 0000000580C0: 00064A80
	.long 0                                                    // 0000000580C4: 00000000
	.ascii "@"                                                 // 0000000580C8: 40
	.byte 0                                                    // 0000000580C9: 00
	.short 0                                                   // 0000000580CA: 0000
	.long 0                                                    // 0000000580CC: 00000000
	.long 0x398b                                               // 0000000580D0: 0000398B
	.long 0x70312                                              // 0000000580D4: 00070312
	.long 0x7ea00                                              // 0000000580D8: 0007EA00
	.long 0                                                    // 0000000580DC: 00000000
	.long 0xbc                                                 // 0000000580E0: 000000BC
	.long 0                                                    // 0000000580E4: 00000000
	.ascii ";?"                                                // 0000000580E8: 3F3B
	.short 0                                                   // 0000000580EA: 0000
	.long 0x60311                                              // 0000000580EC: 00060311
	.long 0x651c0                                              // 0000000580F0: 000651C0
	.long 0                                                    // 0000000580F4: 00000000
	.ascii "@"                                                 // 0000000580F8: 40
	.byte 0                                                    // 0000000580F9: 00
	.short 0                                                   // 0000000580FA: 0000
	.long 0                                                    // 0000000580FC: 00000000
	.long 0x2b3                                                // 000000058100: 000002B3
	.long 0x60311                                              // 000000058104: 00060311
	.ascii "@"                                                 // 000000058108: 40
	.byte 0x18                                                 // 000000058109: 18
	.short 0x6                                                 // 00000005810A: 0006
	.long 0                                                    // 00000005810C: 00000000
	.ascii "@"                                                 // 000000058110: 40
	.byte 0                                                    // 000000058111: 00
	.short 0                                                   // 000000058112: 0000
	.long 0                                                    // 000000058114: 00000000
	.long 0x3a07                                               // 000000058118: 00003A07
	.long 0x70312                                              // 00000005811C: 00070312
	.long 0x7ec00                                              // 000000058120: 0007EC00
	.long 0                                                    // 000000058124: 00000000
	.long 0xb8                                                 // 000000058128: 000000B8
	.long 0                                                    // 00000005812C: 00000000
	.long 0x1210                                               // 000000058130: 00001210
	.long 0x60311                                              // 000000058134: 00060311
	.long 0x62700                                              // 000000058138: 00062700
	.long 0                                                    // 00000005813C: 00000000
	.ascii "@"                                                 // 000000058140: 40
	.byte 0                                                    // 000000058141: 00
	.short 0                                                   // 000000058142: 0000
	.long 0                                                    // 000000058144: 00000000
	.ascii "|8"                                                // 000000058148: 387C
	.short 0                                                   // 00000005814A: 0000
	.long 0x60311                                              // 00000005814C: 00060311
	.long 0x64c00                                              // 000000058150: 00064C00
	.long 0                                                    // 000000058154: 00000000
	.ascii "@"                                                 // 000000058158: 40
	.byte 0                                                    // 000000058159: 00
	.short 0                                                   // 00000005815A: 0000
	.long 0                                                    // 00000005815C: 00000000
	.ascii "W"                                                 // 000000058160: 57
	.byte 0x4                                                  // 000000058161: 04
	.short 0                                                   // 000000058162: 0000
	.long 0x60311                                              // 000000058164: 00060311
	.long 0x619c0                                              // 000000058168: 000619C0
	.long 0                                                    // 00000005816C: 00000000
	.ascii "@"                                                 // 000000058170: 40
	.byte 0                                                    // 000000058171: 00
	.short 0                                                   // 000000058172: 0000
	.long 0                                                    // 000000058174: 00000000
	.ascii "J2"                                                // 000000058178: 324A
	.short 0                                                   // 00000005817A: 0000
	.long 0x70312                                              // 00000005817C: 00070312
	.long 0x7ce00                                              // 000000058180: 0007CE00
	.long 0                                                    // 000000058184: 00000000
	.long 0xb4                                                 // 000000058188: 000000B4
	.long 0                                                    // 00000005818C: 00000000
	.long 0x3efa                                               // 000000058190: 00003EFA
	.long 0x60311                                              // 000000058194: 00060311
	.long 0x65180                                              // 000000058198: 00065180
	.long 0                                                    // 00000005819C: 00000000
	.ascii "@"                                                 // 0000000581A0: 40
	.byte 0                                                    // 0000000581A1: 00
	.short 0                                                   // 0000000581A2: 0000
	.long 0                                                    // 0000000581A4: 00000000
	.long 0x4bcc                                               // 0000000581A8: 00004BCC
	.long 0x60311                                              // 0000000581AC: 00060311
	.long 0x65d00                                              // 0000000581B0: 00065D00
	.long 0                                                    // 0000000581B4: 00000000
	.ascii "@"                                                 // 0000000581B8: 40
	.byte 0                                                    // 0000000581B9: 00
	.short 0                                                   // 0000000581BA: 0000
	.long 0                                                    // 0000000581BC: 00000000
	.long 0x2db                                                // 0000000581C0: 000002DB
	.long 0x70312                                              // 0000000581C4: 00070312
	.long 0x68a00                                              // 0000000581C8: 00068A00
	.long 0                                                    // 0000000581CC: 00000000
	.long 0x100                                                // 0000000581D0: 00000100
	.long 0                                                    // 0000000581D4: 00000000
	.long 0x7ff                                                // 0000000581D8: 000007FF
	.long 0x70312                                              // 0000000581DC: 00070312
	.long 0x6af00                                              // 0000000581E0: 0006AF00
	.long 0                                                    // 0000000581E4: 00000000
	.ascii "h"                                                 // 0000000581E8: 68
	.byte 0x1                                                  // 0000000581E9: 01
	.short 0                                                   // 0000000581EA: 0000
	.long 0                                                    // 0000000581EC: 00000000
	.long 0x10e5                                               // 0000000581F0: 000010E5
	.long 0x70312                                              // 0000000581F4: 00070312
	.long 0x6f100                                              // 0000000581F8: 0006F100
	.long 0                                                    // 0000000581FC: 00000000
	.ascii "<"                                                 // 000000058200: 3C
	.byte 0x1                                                  // 000000058201: 01
	.short 0                                                   // 000000058202: 0000
	.long 0                                                    // 000000058204: 00000000
	.ascii "C"                                                 // 000000058208: 43
	.byte 0xd                                                  // 000000058209: 0D
	.short 0                                                   // 00000005820A: 0000
	.long 0x60311                                              // 00000005820C: 00060311
	.long 0x62280                                              // 000000058210: 00062280
	.long 0                                                    // 000000058214: 00000000
	.ascii "@"                                                 // 000000058218: 40
	.byte 0                                                    // 000000058219: 00
	.short 0                                                   // 00000005821A: 0000
	.long 0                                                    // 00000005821C: 00000000
	.ascii "a"                                                 // 000000058220: 61
	.byte 0x16                                                 // 000000058221: 16
	.short 0                                                   // 000000058222: 0000
	.long 0x70312                                              // 000000058224: 00070312
	.long 0x71800                                              // 000000058228: 00071800
	.long 0                                                    // 00000005822C: 00000000
	.ascii "l"                                                 // 000000058230: 6C
	.byte 0                                                    // 000000058231: 00
	.short 0                                                   // 000000058232: 0000
	.long 0                                                    // 000000058234: 00000000
	.long 0x1692                                               // 000000058238: 00001692
	.long 0x70312                                              // 00000005823C: 00070312
	.long 0x71900                                              // 000000058240: 00071900
	.long 0                                                    // 000000058244: 00000000
	.long 0x88                                                 // 000000058248: 00000088
	.long 0                                                    // 00000005824C: 00000000
	.long 0x2d10                                               // 000000058250: 00002D10
	.long 0x60311                                              // 000000058254: 00060311
	.long 0x64080                                              // 000000058258: 00064080
	.long 0                                                    // 00000005825C: 00000000
	.ascii "@"                                                 // 000000058260: 40
	.byte 0                                                    // 000000058261: 00
	.short 0                                                   // 000000058262: 0000
	.long 0                                                    // 000000058264: 00000000
	.long 0x39ae                                               // 000000058268: 000039AE
	.long 0x60311                                              // 00000005826C: 00060311
	.long 0x64d00                                              // 000000058270: 00064D00
	.long 0                                                    // 000000058274: 00000000
	.ascii "@"                                                 // 000000058278: 40
	.byte 0                                                    // 000000058279: 00
	.short 0                                                   // 00000005827A: 0000
	.long 0                                                    // 00000005827C: 00000000
	.long 0x1                                                  // 000000058280: 00000001
	.long 0x70312                                              // 000000058284: 00070312
	.long 0x67000                                              // 000000058288: 00067000
	.long 0                                                    // 00000005828C: 00000000
	.ascii "x"                                                 // 000000058290: 78
	.byte 0                                                    // 000000058291: 00
	.short 0                                                   // 000000058292: 0000
	.long 0                                                    // 000000058294: 00000000
	.ascii "`"                                                 // 000000058298: 60
	.byte 0x1                                                  // 000000058299: 01
	.short 0                                                   // 00000005829A: 0000
	.long 0x60311                                              // 00000005829C: 00060311
	.long 0x61700                                              // 0000000582A0: 00061700
	.long 0                                                    // 0000000582A4: 00000000
	.ascii "@"                                                 // 0000000582A8: 40
	.byte 0                                                    // 0000000582A9: 00
	.short 0                                                   // 0000000582AA: 0000
	.long 0                                                    // 0000000582AC: 00000000
	.ascii ","                                                 // 0000000582B0: 2C
	.byte 0x18                                                 // 0000000582B1: 18
	.short 0                                                   // 0000000582B2: 0000
	.long 0x60311                                              // 0000000582B4: 00060311
	.long 0x62ec0                                              // 0000000582B8: 00062EC0
	.long 0                                                    // 0000000582BC: 00000000
	.ascii "@"                                                 // 0000000582C0: 40
	.byte 0                                                    // 0000000582C1: 00
	.short 0                                                   // 0000000582C2: 0000
	.long 0                                                    // 0000000582C4: 00000000
	.long 0x2dce                                               // 0000000582C8: 00002DCE
	.long 0x70312                                              // 0000000582CC: 00070312
	.long 0x7b700                                              // 0000000582D0: 0007B700
	.long 0                                                    // 0000000582D4: 00000000
	.long 0x1a0                                                // 0000000582D8: 000001A0
	.long 0                                                    // 0000000582DC: 00000000
	.ascii "VL"                                                // 0000000582E0: 4C56
	.short 0                                                   // 0000000582E2: 0000
	.long 0x70312                                              // 0000000582E4: 00070312
	.long 0x83500                                              // 0000000582E8: 00083500
	.long 0                                                    // 0000000582EC: 00000000
	.ascii "H"                                                 // 0000000582F0: 48
	.byte 0                                                    // 0000000582F1: 00
	.short 0                                                   // 0000000582F2: 0000
	.long 0                                                    // 0000000582F4: 00000000
	.ascii "Y"                                                 // 0000000582F8: 59
	.byte 0x6                                                  // 0000000582F9: 06
	.short 0                                                   // 0000000582FA: 0000
	.long 0x60311                                              // 0000000582FC: 00060311
	.long 0x61bc0                                              // 000000058300: 00061BC0
	.long 0                                                    // 000000058304: 00000000
	.ascii "@"                                                 // 000000058308: 40
	.byte 0                                                    // 000000058309: 00
	.short 0                                                   // 00000005830A: 0000
	.long 0                                                    // 00000005830C: 00000000
	.long 0xbf9                                                // 000000058310: 00000BF9
	.long 0x60311                                              // 000000058314: 00060311
	.ascii "@!"                                                // 000000058318: 2140
	.short 0x6                                                 // 00000005831A: 0006
	.long 0                                                    // 00000005831C: 00000000
	.ascii "@"                                                 // 000000058320: 40
	.byte 0                                                    // 000000058321: 00
	.short 0                                                   // 000000058322: 0000
	.long 0                                                    // 000000058324: 00000000
	.ascii "M"                                                 // 000000058328: 4D
	.byte 0x11                                                 // 000000058329: 11
	.short 0                                                   // 00000005832A: 0000
	.long 0x60311                                              // 00000005832C: 00060311
	.ascii "@&"                                                // 000000058330: 2640
	.short 0x6                                                 // 000000058332: 0006
	.long 0                                                    // 000000058334: 00000000
	.ascii "@"                                                 // 000000058338: 40
	.byte 0                                                    // 000000058339: 00
	.short 0                                                   // 00000005833A: 0000
	.long 0                                                    // 00000005833C: 00000000
	.long 0x1ab8                                               // 000000058340: 00001AB8
	.long 0x70312                                              // 000000058344: 00070312
	.long 0x73700                                              // 000000058348: 00073700
	.long 0                                                    // 00000005834C: 00000000
	.ascii "$"                                                 // 000000058350: 24
	.byte 0x1                                                  // 000000058351: 01
	.short 0                                                   // 000000058352: 0000
	.long 0                                                    // 000000058354: 00000000
	.ascii "y,"                                                // 000000058358: 2C79
	.short 0                                                   // 00000005835A: 0000
	.long 0x60311                                              // 00000005835C: 00060311
	.long 0x64000                                              // 000000058360: 00064000
	.long 0                                                    // 000000058364: 00000000
	.ascii "@"                                                 // 000000058368: 40
	.byte 0                                                    // 000000058369: 00
	.short 0                                                   // 00000005836A: 0000
	.long 0                                                    // 00000005836C: 00000000
	.long 0x4fb                                                // 000000058370: 000004FB
	.long 0x70312                                              // 000000058374: 00070312
	.long 0x69900                                              // 000000058378: 00069900
	.long 0                                                    // 00000005837C: 00000000
	.long 0x104                                                // 000000058380: 00000104
	.long 0                                                    // 000000058384: 00000000
	.ascii "5"                                                 // 000000058388: 35
	.byte 0xe                                                  // 000000058389: 0E
	.short 0                                                   // 00000005838A: 0000
	.long 0x70312                                              // 00000005838C: 00070312
	.long 0x6dd00                                              // 000000058390: 0006DD00
	.long 0                                                    // 000000058394: 00000000
	.ascii "\\"                                                // 000000058398: 5C
	.byte 0x1                                                  // 000000058399: 01
	.short 0                                                   // 00000005839A: 0000
	.long 0                                                    // 00000005839C: 00000000
	.long 0x21ed                                               // 0000000583A0: 000021ED
	.long 0x60311                                              // 0000000583A4: 00060311
	.ascii "@7"                                                // 0000000583A8: 3740
	.short 0x6                                                 // 0000000583AA: 0006
	.long 0                                                    // 0000000583AC: 00000000
	.ascii "@"                                                 // 0000000583B0: 40
	.byte 0                                                    // 0000000583B1: 00
	.short 0                                                   // 0000000583B2: 0000
	.long 0                                                    // 0000000583B4: 00000000
	.ascii "g6"                                                // 0000000583B8: 3667
	.short 0                                                   // 0000000583BA: 0000
	.long 0x60311                                              // 0000000583BC: 00060311
	.ascii "@J"                                                // 0000000583C0: 4A40
	.short 0x6                                                 // 0000000583C2: 0006
	.long 0                                                    // 0000000583C4: 00000000
	.ascii "@"                                                 // 0000000583C8: 40
	.byte 0                                                    // 0000000583C9: 00
	.short 0                                                   // 0000000583CA: 0000
	.long 0                                                    // 0000000583CC: 00000000
	.long 0x47d3                                               // 0000000583D0: 000047D3
	.long 0x70312                                              // 0000000583D4: 00070312
	.long 0x82000                                              // 0000000583D8: 00082000
	.long 0                                                    // 0000000583DC: 00000000
	.long 0xbc                                                 // 0000000583E0: 000000BC
	.long 0                                                    // 0000000583E4: 00000000
	.long 0x91b                                                // 0000000583E8: 0000091B
	.long 0x60311                                              // 0000000583EC: 00060311
	.long 0x61e80                                              // 0000000583F0: 00061E80
	.long 0                                                    // 0000000583F4: 00000000
	.ascii "@"                                                 // 0000000583F8: 40
	.byte 0                                                    // 0000000583F9: 00
	.short 0                                                   // 0000000583FA: 0000
	.long 0                                                    // 0000000583FC: 00000000
	.ascii "LC"                                                // 000000058400: 434C
	.short 0                                                   // 000000058402: 0000
	.long 0x70312                                              // 000000058404: 00070312
	.long 0x80d00                                              // 000000058408: 00080D00
	.long 0                                                    // 00000005840C: 00000000
	.long 0x114                                                // 000000058410: 00000114
	.long 0                                                    // 000000058414: 00000000
	.ascii "#I"                                                // 000000058418: 4923
	.short 0                                                   // 00000005841A: 0000
	.long 0x60311                                              // 00000005841C: 00060311
	.long 0x65a00                                              // 000000058420: 00065A00
	.long 0                                                    // 000000058424: 00000000
	.ascii "@"                                                 // 000000058428: 40
	.byte 0                                                    // 000000058429: 00
	.short 0                                                   // 00000005842A: 0000
	.long 0                                                    // 00000005842C: 00000000
	.long 0x4aaa                                               // 000000058430: 00004AAA
	.long 0x70312                                              // 000000058434: 00070312
	.long 0x82d00                                              // 000000058438: 00082D00
	.long 0                                                    // 00000005843C: 00000000
	.ascii "H"                                                 // 000000058440: 48
	.byte 0                                                    // 000000058441: 00
	.short 0                                                   // 000000058442: 0000
	.long 0                                                    // 000000058444: 00000000
	.long 0x4ae3                                               // 000000058448: 00004AE3
	.long 0x70312                                              // 00000005844C: 00070312
	.long 0x82e00                                              // 000000058450: 00082E00
	.long 0                                                    // 000000058454: 00000000
	.ascii "d"                                                 // 000000058458: 64
	.byte 0                                                    // 000000058459: 00
	.short 0                                                   // 00000005845A: 0000
	.long 0                                                    // 00000005845C: 00000000
	.long 0xb97                                                // 000000058460: 00000B97
	.long 0x70312                                              // 000000058464: 00070312
	.long 0x6ca00                                              // 000000058468: 0006CA00
	.long 0                                                    // 00000005846C: 00000000
	.long 0x108                                                // 000000058470: 00000108
	.long 0                                                    // 000000058474: 00000000
	.ascii "e"                                                 // 000000058478: 65
	.byte 0x15                                                 // 000000058479: 15
	.short 0                                                   // 00000005847A: 0000
	.long 0x70312                                              // 00000005847C: 00070312
	.long 0x71200                                              // 000000058480: 00071200
	.long 0                                                    // 000000058484: 00000000
	.long 0x98                                                 // 000000058488: 00000098
	.long 0                                                    // 00000005848C: 00000000
	.ascii "9%"                                                // 000000058490: 2539
	.short 0                                                   // 000000058492: 0000
	.long 0x60311                                              // 000000058494: 00060311
	.long 0x63a00                                              // 000000058498: 00063A00
	.long 0                                                    // 00000005849C: 00000000
	.ascii "@"                                                 // 0000000584A0: 40
	.byte 0                                                    // 0000000584A1: 00
	.short 0                                                   // 0000000584A2: 0000
	.long 0                                                    // 0000000584A4: 00000000
	.long 0x29c6                                               // 0000000584A8: 000029C6
	.long 0x60311                                              // 0000000584AC: 00060311
	.long 0x63dc0                                              // 0000000584B0: 00063DC0
	.long 0                                                    // 0000000584B4: 00000000
	.ascii "@"                                                 // 0000000584B8: 40
	.byte 0                                                    // 0000000584B9: 00
	.short 0                                                   // 0000000584BA: 0000
	.long 0                                                    // 0000000584BC: 00000000
	.long 0x2ba7                                               // 0000000584C0: 00002BA7
	.long 0x60311                                              // 0000000584C4: 00060311
	.ascii "@?"                                                // 0000000584C8: 3F40
	.short 0x6                                                 // 0000000584CA: 0006
	.long 0                                                    // 0000000584CC: 00000000
	.ascii "@"                                                 // 0000000584D0: 40
	.byte 0                                                    // 0000000584D1: 00
	.short 0                                                   // 0000000584D2: 0000
	.long 0                                                    // 0000000584D4: 00000000
	.ascii "u0"                                                // 0000000584D8: 3075
	.short 0                                                   // 0000000584DA: 0000
	.long 0x60311                                              // 0000000584DC: 00060311
	.long 0x64400                                              // 0000000584E0: 00064400
	.long 0                                                    // 0000000584E4: 00000000
	.ascii "@"                                                 // 0000000584E8: 40
	.byte 0                                                    // 0000000584E9: 00
	.short 0                                                   // 0000000584EA: 0000
	.long 0                                                    // 0000000584EC: 00000000
	.ascii "~A"                                                // 0000000584F0: 417E
	.short 0                                                   // 0000000584F2: 0000
	.long 0x70312                                              // 0000000584F4: 00070312
	.long 0x80700                                              // 0000000584F8: 00080700
	.long 0                                                    // 0000000584FC: 00000000
	.long 0xf8                                                 // 000000058500: 000000F8
	.long 0                                                    // 000000058504: 00000000
	.long 0x2302                                               // 000000058508: 00002302
	.long 0x70312                                              // 00000005850C: 00070312
	.long 0x76f00                                              // 000000058510: 00076F00
	.long 0                                                    // 000000058514: 00000000
	.long 0x190                                                // 000000058518: 00000190
	.long 0                                                    // 00000005851C: 00000000
	.long 0x2ade                                               // 000000058520: 00002ADE
	.long 0x70312                                              // 000000058524: 00070312
	.long 0x7a300                                              // 000000058528: 0007A300
	.long 0                                                    // 00000005852C: 00000000
	.ascii "x"                                                 // 000000058530: 78
	.byte 0x1                                                  // 000000058531: 01
	.short 0                                                   // 000000058532: 0000
	.long 0                                                    // 000000058534: 00000000
	.long 0x3281                                               // 000000058538: 00003281
	.long 0x70312                                              // 00000005853C: 00070312
	.long 0x7cf00                                              // 000000058540: 0007CF00
	.long 0                                                    // 000000058544: 00000000
	.ascii "T"                                                 // 000000058548: 54
	.byte 0                                                    // 000000058549: 00
	.short 0                                                   // 00000005854A: 0000
	.long 0                                                    // 00000005854C: 00000000
	.long 0x3aa3                                               // 000000058550: 00003AA3
	.long 0x70312                                              // 000000058554: 00070312
	.long 0x7ee00                                              // 000000058558: 0007EE00
	.long 0                                                    // 00000005855C: 00000000
	.long 0xac                                                 // 000000058560: 000000AC
	.long 0                                                    // 000000058564: 00000000
	.ascii "9;"                                                // 000000058568: 3B39
	.short 0                                                   // 00000005856A: 0000
	.long 0x70312                                              // 00000005856C: 00070312
	.long 0x7f000                                              // 000000058570: 0007F000
	.long 0                                                    // 000000058574: 00000000
	.long 0xd4                                                 // 000000058578: 000000D4
	.long 0                                                    // 00000005857C: 00000000
	.ascii "E"                                                 // 000000058580: 45
	.byte 0x2                                                  // 000000058581: 02
	.short 0                                                   // 000000058582: 0000
	.long 0x70312                                              // 000000058584: 00070312
	.long 0x68600                                              // 000000058588: 00068600
	.long 0                                                    // 00000005858C: 00000000
	.long 0x110                                                // 000000058590: 00000110
	.long 0                                                    // 000000058594: 00000000
	.long 0x37e8                                               // 000000058598: 000037E8
	.long 0x60311                                              // 00000005859C: 00060311
	.long 0x64b80                                              // 0000000585A0: 00064B80
	.long 0                                                    // 0000000585A4: 00000000
	.ascii "@"                                                 // 0000000585A8: 40
	.byte 0                                                    // 0000000585A9: 00
	.short 0                                                   // 0000000585AA: 0000
	.long 0                                                    // 0000000585AC: 00000000
	.long 0xa9d                                                // 0000000585B0: 00000A9D
	.long 0x70312                                              // 0000000585B4: 00070312
	.long 0x6c200                                              // 0000000585B8: 0006C200
	.long 0                                                    // 0000000585BC: 00000000
	.long 0x118                                                // 0000000585C0: 00000118
	.long 0                                                    // 0000000585C4: 00000000
	.long 0x329e                                               // 0000000585C8: 0000329E
	.long 0x70312                                              // 0000000585CC: 00070312
	.long 0x7d000                                              // 0000000585D0: 0007D000
	.long 0                                                    // 0000000585D4: 00000000
	.long 0xbc                                                 // 0000000585D8: 000000BC
	.long 0                                                    // 0000000585DC: 00000000
	.long 0x2897                                               // 0000000585E0: 00002897
	.long 0x60311                                              // 0000000585E4: 00060311
	.long 0x63cc0                                              // 0000000585E8: 00063CC0
	.long 0                                                    // 0000000585EC: 00000000
	.ascii "@"                                                 // 0000000585F0: 40
	.byte 0                                                    // 0000000585F1: 00
	.short 0                                                   // 0000000585F2: 0000
	.long 0                                                    // 0000000585F4: 00000000
	.long 0x3baa                                               // 0000000585F8: 00003BAA
	.long 0x60311                                              // 0000000585FC: 00060311
	.long 0x64ec0                                              // 000000058600: 00064EC0
	.long 0                                                    // 000000058604: 00000000
	.ascii "@"                                                 // 000000058608: 40
	.byte 0                                                    // 000000058609: 00
	.short 0                                                   // 00000005860A: 0000
	.long 0                                                    // 00000005860C: 00000000
	.long 0x3ff7                                               // 000000058610: 00003FF7
	.long 0x70312                                              // 000000058614: 00070312
	.long 0x80000                                              // 000000058618: 00080000
	.long 0                                                    // 00000005861C: 00000000
	.long 0xf0                                                 // 000000058620: 000000F0
	.long 0                                                    // 000000058624: 00000000
	.long 0x20f1                                               // 000000058628: 000020F1
	.long 0x70312                                              // 00000005862C: 00070312
	.long 0x76100                                              // 000000058630: 00076100
	.long 0                                                    // 000000058634: 00000000
	.ascii "8"                                                 // 000000058638: 38
	.byte 0x1                                                  // 000000058639: 01
	.short 0                                                   // 00000005863A: 0000
	.long 0                                                    // 00000005863C: 00000000
	.long 0x107                                                // 000000058640: 00000107
	.long 0x60311                                              // 000000058644: 00060311
	.long 0x61680                                              // 000000058648: 00061680
	.long 0                                                    // 00000005864C: 00000000
	.ascii "@"                                                 // 000000058650: 40
	.byte 0                                                    // 000000058651: 00
	.short 0                                                   // 000000058652: 0000
	.long 0                                                    // 000000058654: 00000000
	.ascii "h"                                                 // 000000058658: 68
	.byte 0x2                                                  // 000000058659: 02
	.short 0                                                   // 00000005865A: 0000
	.long 0x60311                                              // 00000005865C: 00060311
	.long 0x61800                                              // 000000058660: 00061800
	.long 0                                                    // 000000058664: 00000000
	.ascii "@"                                                 // 000000058668: 40
	.byte 0                                                    // 000000058669: 00
	.short 0                                                   // 00000005866A: 0000
	.long 0                                                    // 00000005866C: 00000000
	.long 0x1106                                               // 000000058670: 00001106
	.long 0x60311                                              // 000000058674: 00060311
	.long 0x62600                                              // 000000058678: 00062600
	.long 0                                                    // 00000005867C: 00000000
	.ascii "@"                                                 // 000000058680: 40
	.byte 0                                                    // 000000058681: 00
	.short 0                                                   // 000000058682: 0000
	.long 0                                                    // 000000058684: 00000000
	.ascii "I"                                                 // 000000058688: 49
	.byte 0x18                                                 // 000000058689: 18
	.short 0                                                   // 00000005868A: 0000
	.long 0x70312                                              // 00000005868C: 00070312
	.long 0x72600                                              // 000000058690: 00072600
	.long 0                                                    // 000000058694: 00000000
	.ascii "4"                                                 // 000000058698: 34
	.byte 0x1                                                  // 000000058699: 01
	.short 0                                                   // 00000005869A: 0000
	.long 0                                                    // 00000005869C: 00000000
	.long 0x1c96                                               // 0000000586A0: 00001C96
	.long 0x70312                                              // 0000000586A4: 00070312
	.long 0x74300                                              // 0000000586A8: 00074300
	.long 0                                                    // 0000000586AC: 00000000
	.long 0x108                                                // 0000000586B0: 00000108
	.long 0                                                    // 0000000586B4: 00000000
	.ascii "x"                                                 // 0000000586B8: 78
	.byte 0x16                                                 // 0000000586B9: 16
	.short 0                                                   // 0000000586BA: 0000
	.long 0x60311                                              // 0000000586BC: 00060311
	.long 0x62c80                                              // 0000000586C0: 00062C80
	.long 0                                                    // 0000000586C4: 00000000
	.ascii "@"                                                 // 0000000586C8: 40
	.byte 0                                                    // 0000000586C9: 00
	.short 0                                                   // 0000000586CA: 0000
	.long 0                                                    // 0000000586CC: 00000000
	.long 0x3f80                                               // 0000000586D0: 00003F80
	.long 0x60311                                              // 0000000586D4: 00060311
	.long 0x65200                                              // 0000000586D8: 00065200
	.long 0                                                    // 0000000586DC: 00000000
	.ascii "@"                                                 // 0000000586E0: 40
	.byte 0                                                    // 0000000586E1: 00
	.short 0                                                   // 0000000586E2: 0000
	.long 0                                                    // 0000000586E4: 00000000
	.ascii "eH"                                                // 0000000586E8: 4865
	.short 0                                                   // 0000000586EA: 0000
	.long 0x70312                                              // 0000000586EC: 00070312
	.long 0x82200                                              // 0000000586F0: 00082200
	.long 0                                                    // 0000000586F4: 00000000
	.long 0xb4                                                 // 0000000586F8: 000000B4
	.long 0                                                    // 0000000586FC: 00000000
	.long 0x4d93                                               // 000000058700: 00004D93
	.long 0x60311                                              // 000000058704: 00060311
	.long 0x65f00                                              // 000000058708: 00065F00
	.long 0                                                    // 00000005870C: 00000000
	.ascii "@"                                                 // 000000058710: 40
	.byte 0                                                    // 000000058711: 00
	.short 0                                                   // 000000058712: 0000
	.long 0                                                    // 000000058714: 00000000
	.long 0x607                                                // 000000058718: 00000607
	.long 0x70312                                              // 00000005871C: 00070312
	.long 0x6a000                                              // 000000058720: 0006A000
	.long 0                                                    // 000000058724: 00000000
	.long 0x114                                                // 000000058728: 00000114
	.long 0                                                    // 00000005872C: 00000000
	.ascii "{/"                                                // 000000058730: 2F7B
	.short 0                                                   // 000000058732: 0000
	.long 0x70312                                              // 000000058734: 00070312
	.long 0x7c100                                              // 000000058738: 0007C100
	.long 0                                                    // 00000005873C: 00000000
	.ascii "t"                                                 // 000000058740: 74
	.byte 0                                                    // 000000058741: 00
	.short 0                                                   // 000000058742: 0000
	.long 0                                                    // 000000058744: 00000000
	.long 0x2b04                                               // 000000058748: 00002B04
	.long 0x60311                                              // 00000005874C: 00060311
	.long 0x63ec0                                              // 000000058750: 00063EC0
	.long 0                                                    // 000000058754: 00000000
	.ascii "@"                                                 // 000000058758: 40
	.byte 0                                                    // 000000058759: 00
	.short 0                                                   // 00000005875A: 0000
	.long 0                                                    // 00000005875C: 00000000
	.long 0x4281                                               // 000000058760: 00004281
	.long 0x60311                                              // 000000058764: 00060311
	.long 0x65480                                              // 000000058768: 00065480
	.long 0                                                    // 00000005876C: 00000000
	.ascii "@"                                                 // 000000058770: 40
	.byte 0                                                    // 000000058771: 00
	.short 0                                                   // 000000058772: 0000
	.long 0                                                    // 000000058774: 00000000
	.long 0x48fd                                               // 000000058778: 000048FD
	.long 0x70312                                              // 00000005877C: 00070312
	.long 0x82400                                              // 000000058780: 00082400
	.long 0                                                    // 000000058784: 00000000
	.long 0x108                                                // 000000058788: 00000108
	.long 0                                                    // 00000005878C: 00000000
	.ascii "_"                                                 // 000000058790: 5F
	.byte 0x17                                                 // 000000058791: 17
	.short 0                                                   // 000000058792: 0000
	.long 0x60311                                              // 000000058794: 00060311
	.long 0x62dc0                                              // 000000058798: 00062DC0
	.long 0                                                    // 00000005879C: 00000000
	.ascii "@"                                                 // 0000000587A0: 40
	.byte 0                                                    // 0000000587A1: 00
	.short 0                                                   // 0000000587A2: 0000
	.long 0                                                    // 0000000587A4: 00000000
	.long 0x198b                                               // 0000000587A8: 0000198B
	.long 0x60311                                              // 0000000587AC: 00060311
	.ascii "@0"                                                // 0000000587B0: 3040
	.short 0x6                                                 // 0000000587B2: 0006
	.long 0                                                    // 0000000587B4: 00000000
	.ascii "@"                                                 // 0000000587B8: 40
	.byte 0                                                    // 0000000587B9: 00
	.short 0                                                   // 0000000587BA: 0000
	.long 0                                                    // 0000000587BC: 00000000
	.long 0xda                                                 // 0000000587C0: 000000DA
	.long 0x60311                                              // 0000000587C4: 00060311
	.ascii "@"                                                 // 0000000587C8: 40
	.byte 0x16                                                 // 0000000587C9: 16
	.short 0x6                                                 // 0000000587CA: 0006
	.long 0                                                    // 0000000587CC: 00000000
	.ascii "@"                                                 // 0000000587D0: 40
	.byte 0                                                    // 0000000587D1: 00
	.short 0                                                   // 0000000587D2: 0000
	.long 0                                                    // 0000000587D4: 00000000
	.long 0x18b7                                               // 0000000587D8: 000018B7
	.long 0x70312                                              // 0000000587DC: 00070312
	.long 0x72a00                                              // 0000000587E0: 00072A00
	.long 0                                                    // 0000000587E4: 00000000
	.long 0x198                                                // 0000000587E8: 00000198
	.long 0                                                    // 0000000587EC: 00000000
	.long 0x281d                                               // 0000000587F0: 0000281D
	.long 0x70312                                              // 0000000587F4: 00070312
	.long 0x79100                                              // 0000000587F8: 00079100
	.long 0                                                    // 0000000587FC: 00000000
	.ascii "t"                                                 // 000000058800: 74
	.byte 0x1                                                  // 000000058801: 01
	.short 0                                                   // 000000058802: 0000
	.long 0                                                    // 000000058804: 00000000
	.long 0x348d                                               // 000000058808: 0000348D
	.long 0x70312                                              // 00000005880C: 00070312
	.long 0x7da00                                              // 000000058810: 0007DA00
	.long 0                                                    // 000000058814: 00000000
	.long 0xb4                                                 // 000000058818: 000000B4
	.long 0                                                    // 00000005881C: 00000000
	.ascii "\"E"                                               // 000000058820: 4522
	.short 0                                                   // 000000058822: 0000
	.long 0x70312                                              // 000000058824: 00070312
	.long 0x81500                                              // 000000058828: 00081500
	.long 0                                                    // 00000005882C: 00000000
	.long 0x100                                                // 000000058830: 00000100
	.long 0                                                    // 000000058834: 00000000
	.long 0x40b                                                // 000000058838: 0000040B
	.long 0x70312                                              // 00000005883C: 00070312
	.long 0x69100                                              // 000000058840: 00069100
	.long 0                                                    // 000000058844: 00000000
	.long 0x10c                                                // 000000058848: 0000010C
	.long 0                                                    // 00000005884C: 00000000
	.ascii "`"                                                 // 000000058850: 60
	.byte 0xc                                                  // 000000058851: 0C
	.short 0                                                   // 000000058852: 0000
	.long 0x70312                                              // 000000058854: 00070312
	.long 0x6cf00                                              // 000000058858: 0006CF00
	.long 0                                                    // 00000005885C: 00000000
	.ascii "`"                                                 // 000000058860: 60
	.byte 0x1                                                  // 000000058861: 01
	.short 0                                                   // 000000058862: 0000
	.long 0                                                    // 000000058864: 00000000
	.long 0x109e                                               // 000000058868: 0000109E
	.long 0x70312                                              // 00000005886C: 00070312
	.long 0x6ef00                                              // 000000058870: 0006EF00
	.long 0                                                    // 000000058874: 00000000
	.ascii "h"                                                 // 000000058878: 68
	.byte 0x1                                                  // 000000058879: 01
	.short 0                                                   // 00000005887A: 0000
	.long 0                                                    // 00000005887C: 00000000
	.long 0x4780                                               // 000000058880: 00004780
	.long 0x70312                                              // 000000058884: 00070312
	.long 0x81f00                                              // 000000058888: 00081F00
	.long 0                                                    // 00000005888C: 00000000
	.long 0xbc                                                 // 000000058890: 000000BC
	.long 0                                                    // 000000058894: 00000000
	.ascii "Z"                                                 // 000000058898: 5A
	.byte 0                                                    // 000000058899: 00
	.short 0                                                   // 00000005889A: 0000
	.long 0x60311                                              // 00000005889C: 00060311
	.long 0x61580                                              // 0000000588A0: 00061580
	.long 0                                                    // 0000000588A4: 00000000
	.ascii "@"                                                 // 0000000588A8: 40
	.byte 0                                                    // 0000000588A9: 00
	.short 0                                                   // 0000000588AA: 0000
	.long 0                                                    // 0000000588AC: 00000000
	.ascii "{"                                                 // 0000000588B0: 7B
	.byte 0x10                                                 // 0000000588B1: 10
	.short 0                                                   // 0000000588B2: 0000
	.long 0x60311                                              // 0000000588B4: 00060311
	.long 0x62580                                              // 0000000588B8: 00062580
	.long 0                                                    // 0000000588BC: 00000000
	.ascii "@"                                                 // 0000000588C0: 40
	.byte 0                                                    // 0000000588C1: 00
	.short 0                                                   // 0000000588C2: 0000
	.long 0                                                    // 0000000588C4: 00000000
	.ascii ":!"                                                // 0000000588C8: 213A
	.short 0                                                   // 0000000588CA: 0000
	.long 0x70312                                              // 0000000588CC: 00070312
	.long 0x76300                                              // 0000000588D0: 00076300
	.long 0                                                    // 0000000588D4: 00000000
	.ascii "("                                                 // 0000000588D8: 28
	.byte 0x1                                                  // 0000000588D9: 01
	.short 0                                                   // 0000000588DA: 0000
	.long 0                                                    // 0000000588DC: 00000000
	.ascii "1>"                                                // 0000000588E0: 3E31
	.short 0                                                   // 0000000588E2: 0000
	.long 0x70312                                              // 0000000588E4: 00070312
	.long 0x7fa00                                              // 0000000588E8: 0007FA00
	.long 0                                                    // 0000000588EC: 00000000
	.long 0xf4                                                 // 0000000588F0: 000000F4
	.long 0                                                    // 0000000588F4: 00000000
	.ascii "W?"                                                // 0000000588F8: 3F57
	.short 0                                                   // 0000000588FA: 0000
	.long 0x70312                                              // 0000000588FC: 00070312
	.long 0x7fe00                                              // 000000058900: 0007FE00
	.long 0                                                    // 000000058904: 00000000
	.long 0xf0                                                 // 000000058908: 000000F0
	.long 0                                                    // 00000005890C: 00000000
	.long 0x460d                                               // 000000058910: 0000460D
	.long 0x70312                                              // 000000058914: 00070312
	.long 0x81800                                              // 000000058918: 00081800
	.long 0                                                    // 00000005891C: 00000000
	.long 0x11c                                                // 000000058920: 0000011C
	.long 0                                                    // 000000058924: 00000000
	.long 0x47a8                                               // 000000058928: 000047A8
	.long 0x60311                                              // 00000005892C: 00060311
	.long 0x658c0                                              // 000000058930: 000658C0
	.long 0                                                    // 000000058934: 00000000
	.ascii "@"                                                 // 000000058938: 40
	.byte 0                                                    // 000000058939: 00
	.short 0                                                   // 00000005893A: 0000
	.long 0                                                    // 00000005893C: 00000000
	.long 0x2587                                               // 000000058940: 00002587
	.long 0x60311                                              // 000000058944: 00060311
	.ascii "@:"                                                // 000000058948: 3A40
	.short 0x6                                                 // 00000005894A: 0006
	.long 0                                                    // 00000005894C: 00000000
	.ascii "@"                                                 // 000000058950: 40
	.byte 0                                                    // 000000058951: 00
	.short 0                                                   // 000000058952: 0000
	.long 0                                                    // 000000058954: 00000000
	.long 0x4bbd                                               // 000000058958: 00004BBD
	.long 0x70312                                              // 00000005895C: 00070312
	.long 0x83200                                              // 000000058960: 00083200
	.long 0                                                    // 000000058964: 00000000
	.ascii "t"                                                 // 000000058968: 74
	.byte 0                                                    // 000000058969: 00
	.short 0                                                   // 00000005896A: 0000
	.long 0                                                    // 00000005896C: 00000000
	.ascii "V"                                                 // 000000058970: 56
	.byte 0x7                                                  // 000000058971: 07
	.short 0                                                   // 000000058972: 0000
	.long 0x60311                                              // 000000058974: 00060311
	.long 0x61cc0                                              // 000000058978: 00061CC0
	.long 0                                                    // 00000005897C: 00000000
	.ascii "@"                                                 // 000000058980: 40
	.byte 0                                                    // 000000058981: 00
	.short 0                                                   // 000000058982: 0000
	.long 0                                                    // 000000058984: 00000000
	.ascii "="                                                 // 000000058988: 3D
	.byte 0xc                                                  // 000000058989: 0C
	.short 0                                                   // 00000005898A: 0000
	.long 0x60311                                              // 00000005898C: 00060311
	.long 0x62180                                              // 000000058990: 00062180
	.long 0                                                    // 000000058994: 00000000
	.ascii "@"                                                 // 000000058998: 40
	.byte 0                                                    // 000000058999: 00
	.short 0                                                   // 00000005899A: 0000
	.long 0                                                    // 00000005899C: 00000000
	.ascii "o"                                                 // 0000000589A0: 6F
	.byte 0x12                                                 // 0000000589A1: 12
	.short 0                                                   // 0000000589A2: 0000
	.long 0x70312                                              // 0000000589A4: 00070312
	.long 0x6fd00                                              // 0000000589A8: 0006FD00
	.long 0                                                    // 0000000589AC: 00000000
	.long 0x114                                                // 0000000589B0: 00000114
	.long 0                                                    // 0000000589B4: 00000000
	.ascii "u"                                                 // 0000000589B8: 75
	.byte 0x1d                                                 // 0000000589B9: 1D
	.short 0                                                   // 0000000589BA: 0000
	.long 0x70312                                              // 0000000589BC: 00070312
	.long 0x74900                                              // 0000000589C0: 00074900
	.long 0                                                    // 0000000589C4: 00000000
	.ascii ","                                                 // 0000000589C8: 2C
	.byte 0x1                                                  // 0000000589C9: 01
	.short 0                                                   // 0000000589CA: 0000
	.long 0                                                    // 0000000589CC: 00000000
	.ascii "B."                                                // 0000000589D0: 2E42
	.short 0                                                   // 0000000589D2: 0000
	.long 0x60311                                              // 0000000589D4: 00060311
	.long 0x64180                                              // 0000000589D8: 00064180
	.long 0                                                    // 0000000589DC: 00000000
	.ascii "@"                                                 // 0000000589E0: 40
	.byte 0                                                    // 0000000589E1: 00
	.short 0                                                   // 0000000589E2: 0000
	.long 0                                                    // 0000000589E4: 00000000
	.long 0x43f2                                               // 0000000589E8: 000043F2
	.long 0x70312                                              // 0000000589EC: 00070312
	.long 0x81000                                              // 0000000589F0: 00081000
	.long 0                                                    // 0000000589F4: 00000000
	.long 0xf4                                                 // 0000000589F8: 000000F4
	.long 0                                                    // 0000000589FC: 00000000
	.ascii "pL"                                                // 000000058A00: 4C70
	.short 0                                                   // 000000058A02: 0000
	.long 0x60311                                              // 000000058A04: 00060311
	.long 0x65dc0                                              // 000000058A08: 00065DC0
	.long 0                                                    // 000000058A0C: 00000000
	.ascii "@"                                                 // 000000058A10: 40
	.byte 0                                                    // 000000058A11: 00
	.short 0                                                   // 000000058A12: 0000
	.long 0                                                    // 000000058A14: 00000000
	.long 0xdf0                                                // 000000058A18: 00000DF0
	.long 0x70312                                              // 000000058A1C: 00070312
	.long 0x6db00                                              // 000000058A20: 0006DB00
	.long 0                                                    // 000000058A24: 00000000
	.ascii "T"                                                 // 000000058A28: 54
	.byte 0x1                                                  // 000000058A29: 01
	.short 0                                                   // 000000058A2A: 0000
	.long 0                                                    // 000000058A2C: 00000000
	.ascii "*#"                                                // 000000058A30: 232A
	.short 0                                                   // 000000058A32: 0000
	.long 0x60311                                              // 000000058A34: 00060311
	.ascii "@8"                                                // 000000058A38: 3840
	.short 0x6                                                 // 000000058A3A: 0006
	.long 0                                                    // 000000058A3C: 00000000
	.ascii "@"                                                 // 000000058A40: 40
	.byte 0                                                    // 000000058A41: 00
	.short 0                                                   // 000000058A42: 0000
	.long 0                                                    // 000000058A44: 00000000
	.ascii "];"                                                // 000000058A48: 3B5D
	.short 0                                                   // 000000058A4A: 0000
	.long 0x60311                                              // 000000058A4C: 00060311
	.long 0x64e80                                              // 000000058A50: 00064E80
	.long 0                                                    // 000000058A54: 00000000
	.ascii "@"                                                 // 000000058A58: 40
	.byte 0                                                    // 000000058A59: 00
	.short 0                                                   // 000000058A5A: 0000
	.long 0                                                    // 000000058A5C: 00000000
	.long 0x4700                                               // 000000058A60: 00004700
	.long 0x70312                                              // 000000058A64: 00070312
	.long 0x81c00                                              // 000000058A68: 00081C00
	.long 0                                                    // 000000058A6C: 00000000
	.long 0x10c                                                // 000000058A70: 0000010C
	.long 0                                                    // 000000058A74: 00000000
	.ascii "6K"                                                // 000000058A78: 4B36
	.short 0                                                   // 000000058A7A: 0000
	.long 0x60311                                              // 000000058A7C: 00060311
	.ascii "@\\"                                               // 000000058A80: 5C40
	.short 0x6                                                 // 000000058A82: 0006
	.long 0                                                    // 000000058A84: 00000000
	.ascii "@"                                                 // 000000058A88: 40
	.byte 0                                                    // 000000058A89: 00
	.short 0                                                   // 000000058A8A: 0000
	.long 0                                                    // 000000058A8C: 00000000
	.ascii ","                                                 // 000000058A90: 2C
	.byte 0                                                    // 000000058A91: 00
	.short 0                                                   // 000000058A92: 0000
	.long 0x60311                                              // 000000058A94: 00060311
	.ascii "@"                                                 // 000000058A98: 40
	.byte 0x15                                                 // 000000058A99: 15
	.short 0x6                                                 // 000000058A9A: 0006
	.long 0                                                    // 000000058A9C: 00000000
	.ascii "@"                                                 // 000000058AA0: 40
	.byte 0                                                    // 000000058AA1: 00
	.short 0                                                   // 000000058AA2: 0000
	.long 0                                                    // 000000058AA4: 00000000
	.long 0x19e3                                               // 000000058AA8: 000019E3
	.long 0x60311                                              // 000000058AAC: 00060311
	.long 0x63080                                              // 000000058AB0: 00063080
	.long 0                                                    // 000000058AB4: 00000000
	.ascii "@"                                                 // 000000058AB8: 40
	.byte 0                                                    // 000000058AB9: 00
	.short 0                                                   // 000000058ABA: 0000
	.long 0                                                    // 000000058ABC: 00000000
	.long 0x2289                                               // 000000058AC0: 00002289
	.long 0x60311                                              // 000000058AC4: 00060311
	.long 0x637c0                                              // 000000058AC8: 000637C0
	.long 0                                                    // 000000058ACC: 00000000
	.ascii "@"                                                 // 000000058AD0: 40
	.byte 0                                                    // 000000058AD1: 00
	.short 0                                                   // 000000058AD2: 0000
	.long 0                                                    // 000000058AD4: 00000000
	.long 0x1496                                               // 000000058AD8: 00001496
	.long 0x60311                                              // 000000058ADC: 00060311
	.long 0x629c0                                              // 000000058AE0: 000629C0
	.long 0                                                    // 000000058AE4: 00000000
	.ascii "@"                                                 // 000000058AE8: 40
	.byte 0                                                    // 000000058AE9: 00
	.short 0                                                   // 000000058AEA: 0000
	.long 0                                                    // 000000058AEC: 00000000
	.long 0x15a5                                               // 000000058AF0: 000015A5
	.long 0x60311                                              // 000000058AF4: 00060311
	.ascii "@+"                                                // 000000058AF8: 2B40
	.short 0x6                                                 // 000000058AFA: 0006
	.long 0                                                    // 000000058AFC: 00000000
	.ascii "@"                                                 // 000000058B00: 40
	.byte 0                                                    // 000000058B01: 00
	.short 0                                                   // 000000058B02: 0000
	.long 0                                                    // 000000058B04: 00000000
	.long 0x15d0                                               // 000000058B08: 000015D0
	.long 0x70312                                              // 000000058B0C: 00070312
	.long 0x71500                                              // 000000058B10: 00071500
	.long 0                                                    // 000000058B14: 00000000
	.ascii "p"                                                 // 000000058B18: 70
	.byte 0                                                    // 000000058B19: 00
	.short 0                                                   // 000000058B1A: 0000
	.long 0                                                    // 000000058B1C: 00000000
	.long 0x1ed8                                               // 000000058B20: 00001ED8
	.long 0x70312                                              // 000000058B24: 00070312
	.long 0x75300                                              // 000000058B28: 00075300
	.long 0                                                    // 000000058B2C: 00000000
	.ascii ","                                                 // 000000058B30: 2C
	.byte 0x1                                                  // 000000058B31: 01
	.short 0                                                   // 000000058B32: 0000
	.long 0                                                    // 000000058B34: 00000000
	.long 0x3d91                                               // 000000058B38: 00003D91
	.long 0x70312                                              // 000000058B3C: 00070312
	.long 0x7f800                                              // 000000058B40: 0007F800
	.long 0                                                    // 000000058B44: 00000000
	.long 0xa0                                                 // 000000058B48: 000000A0
	.long 0                                                    // 000000058B4C: 00000000
	.ascii "\\F"                                               // 000000058B50: 465C
	.short 0                                                   // 000000058B52: 0000
	.long 0x70312                                              // 000000058B54: 00070312
	.long 0x81a00                                              // 000000058B58: 00081A00
	.long 0                                                    // 000000058B5C: 00000000
	.long 0xfc                                                 // 000000058B60: 000000FC
	.long 0                                                    // 000000058B64: 00000000
	.ascii "o"                                                 // 000000058B68: 6F
	.byte 0x6                                                  // 000000058B69: 06
	.short 0                                                   // 000000058B6A: 0000
	.long 0x70312                                              // 000000058B6C: 00070312
	.long 0x6a400                                              // 000000058B70: 0006A400
	.long 0                                                    // 000000058B74: 00000000
	.long 0x110                                                // 000000058B78: 00000110
	.long 0                                                    // 000000058B7C: 00000000
	.ascii "M"                                                 // 000000058B80: 4D
	.byte 0x1d                                                 // 000000058B81: 1D
	.short 0                                                   // 000000058B82: 0000
	.long 0x60311                                              // 000000058B84: 00060311
	.ascii "@3"                                                // 000000058B88: 3340
	.short 0x6                                                 // 000000058B8A: 0006
	.long 0                                                    // 000000058B8C: 00000000
	.ascii "@"                                                 // 000000058B90: 40
	.byte 0                                                    // 000000058B91: 00
	.short 0                                                   // 000000058B92: 0000
	.long 0                                                    // 000000058B94: 00000000
	.ascii "D("                                                // 000000058B98: 2844
	.short 0                                                   // 000000058B9A: 0000
	.long 0x60311                                              // 000000058B9C: 00060311
	.long 0x63c80                                              // 000000058BA0: 00063C80
	.long 0                                                    // 000000058BA4: 00000000
	.ascii "@"                                                 // 000000058BA8: 40
	.byte 0                                                    // 000000058BA9: 00
	.short 0                                                   // 000000058BAA: 0000
	.long 0                                                    // 000000058BAC: 00000000
	.long 0x51b                                                // 000000058BB0: 0000051B
	.long 0x60311                                              // 000000058BB4: 00060311
	.long 0x61a80                                              // 000000058BB8: 00061A80
	.long 0                                                    // 000000058BBC: 00000000
	.ascii "@"                                                 // 000000058BC0: 40
	.byte 0                                                    // 000000058BC1: 00
	.short 0                                                   // 000000058BC2: 0000
	.long 0                                                    // 000000058BC4: 00000000
	.ascii "x\n"                                               // 000000058BC8: 0A78
	.short 0                                                   // 000000058BCA: 0000
	.long 0x60311                                              // 000000058BCC: 00060311
	.long 0x61fc0                                              // 000000058BD0: 00061FC0
	.long 0                                                    // 000000058BD4: 00000000
	.ascii "@"                                                 // 000000058BD8: 40
	.byte 0                                                    // 000000058BD9: 00
	.short 0                                                   // 000000058BDA: 0000
	.long 0                                                    // 000000058BDC: 00000000
	.long 0x1812                                               // 000000058BE0: 00001812
	.long 0x70312                                              // 000000058BE4: 00070312
	.long 0x72400                                              // 000000058BE8: 00072400
	.long 0                                                    // 000000058BEC: 00000000
	.ascii " "                                                 // 000000058BF0: 20
	.byte 0x1                                                  // 000000058BF1: 01
	.short 0                                                   // 000000058BF2: 0000
	.long 0                                                    // 000000058BF4: 00000000
	.long 0x23cb                                               // 000000058BF8: 000023CB
	.long 0x60311                                              // 000000058BFC: 00060311
	.long 0x638c0                                              // 000000058C00: 000638C0
	.long 0                                                    // 000000058C04: 00000000
	.ascii "@"                                                 // 000000058C08: 40
	.byte 0                                                    // 000000058C09: 00
	.short 0                                                   // 000000058C0A: 0000
	.long 0                                                    // 000000058C0C: 00000000
	.long 0x23f3                                               // 000000058C10: 000023F3
	.long 0x70312                                              // 000000058C14: 00070312
	.long 0x77500                                              // 000000058C18: 00077500
	.long 0                                                    // 000000058C1C: 00000000
	.ascii "0"                                                 // 000000058C20: 30
	.byte 0x1                                                  // 000000058C21: 01
	.short 0                                                   // 000000058C22: 0000
	.long 0                                                    // 000000058C24: 00000000
	.long 0xabd                                                // 000000058C28: 00000ABD
	.long 0x60311                                              // 000000058C2C: 00060311
	.long 0x62000                                              // 000000058C30: 00062000
	.long 0                                                    // 000000058C34: 00000000
	.ascii "@"                                                 // 000000058C38: 40
	.byte 0                                                    // 000000058C39: 00
	.short 0                                                   // 000000058C3A: 0000
	.long 0                                                    // 000000058C3C: 00000000
	.long 0x240c                                               // 000000058C40: 0000240C
	.long 0x60311                                              // 000000058C44: 00060311
	.long 0x63900                                              // 000000058C48: 00063900
	.long 0                                                    // 000000058C4C: 00000000
	.ascii "@"                                                 // 000000058C50: 40
	.byte 0                                                    // 000000058C51: 00
	.short 0                                                   // 000000058C52: 0000
	.long 0                                                    // 000000058C54: 00000000
	.long 0x38c8                                               // 000000058C58: 000038C8
	.long 0x60311                                              // 000000058C5C: 00060311
	.ascii "@L"                                                // 000000058C60: 4C40
	.short 0x6                                                 // 000000058C62: 0006
	.long 0                                                    // 000000058C64: 00000000
	.ascii "@"                                                 // 000000058C68: 40
	.byte 0                                                    // 000000058C69: 00
	.short 0                                                   // 000000058C6A: 0000
	.long 0                                                    // 000000058C6C: 00000000
	.long 0x481c                                               // 000000058C70: 0000481C
	.long 0x70312                                              // 000000058C74: 00070312
	.long 0x82100                                              // 000000058C78: 00082100
	.long 0                                                    // 000000058C7C: 00000000
	.long 0xc8                                                 // 000000058C80: 000000C8
	.long 0                                                    // 000000058C84: 00000000
	.long 0x48b2                                               // 000000058C88: 000048B2
	.long 0x70312                                              // 000000058C8C: 00070312
	.long 0x82300                                              // 000000058C90: 00082300
	.long 0                                                    // 000000058C94: 00000000
	.long 0xdc                                                 // 000000058C98: 000000DC
	.long 0                                                    // 000000058C9C: 00000000
	.ascii "{'"                                                // 000000058CA0: 277B
	.short 0                                                   // 000000058CA2: 0000
	.long 0x70312                                              // 000000058CA4: 00070312
	.long 0x78d00                                              // 000000058CA8: 00078D00
	.long 0                                                    // 000000058CAC: 00000000
	.long 0x188                                                // 000000058CB0: 00000188
	.long 0                                                    // 000000058CB4: 00000000
	.long 0x1a8b                                               // 000000058CB8: 00001A8B
	.long 0x60311                                              // 000000058CBC: 00060311
	.long 0x63100                                              // 000000058CC0: 00063100
	.long 0                                                    // 000000058CC4: 00000000
	.ascii "@"                                                 // 000000058CC8: 40
	.byte 0                                                    // 000000058CC9: 00
	.short 0                                                   // 000000058CCA: 0000
	.long 0                                                    // 000000058CCC: 00000000
	.long 0x44f5                                               // 000000058CD0: 000044F5
	.long 0x60311                                              // 000000058CD4: 00060311
	.long 0x65680                                              // 000000058CD8: 00065680
	.long 0                                                    // 000000058CDC: 00000000
	.ascii "@"                                                 // 000000058CE0: 40
	.byte 0                                                    // 000000058CE1: 00
	.short 0                                                   // 000000058CE2: 0000
	.long 0                                                    // 000000058CE4: 00000000
	.long 0x4d01                                               // 000000058CE8: 00004D01
	.long 0x70312                                              // 000000058CEC: 00070312
	.long 0x83800                                              // 000000058CF0: 00083800
	.long 0                                                    // 000000058CF4: 00000000
	.ascii "l"                                                 // 000000058CF8: 6C
	.byte 0                                                    // 000000058CF9: 00
	.short 0                                                   // 000000058CFA: 0000
	.long 0                                                    // 000000058CFC: 00000000
	.long 0xc82                                                // 000000058D00: 00000C82
	.long 0x60311                                              // 000000058D04: 00060311
	.long 0x621c0                                              // 000000058D08: 000621C0
	.long 0                                                    // 000000058D0C: 00000000
	.ascii "@"                                                 // 000000058D10: 40
	.byte 0                                                    // 000000058D11: 00
	.short 0                                                   // 000000058D12: 0000
	.long 0                                                    // 000000058D14: 00000000
	.ascii ":"                                                 // 000000058D18: 3A
	.byte 0x17                                                 // 000000058D19: 17
	.short 0                                                   // 000000058D1A: 0000
	.long 0x60311                                              // 000000058D1C: 00060311
	.long 0x62d80                                              // 000000058D20: 00062D80
	.long 0                                                    // 000000058D24: 00000000
	.ascii "@"                                                 // 000000058D28: 40
	.byte 0                                                    // 000000058D29: 00
	.short 0                                                   // 000000058D2A: 0000
	.long 0                                                    // 000000058D2C: 00000000
	.long 0x26d3                                               // 000000058D30: 000026D3
	.long 0x70312                                              // 000000058D34: 00070312
	.long 0x78900                                              // 000000058D38: 00078900
	.long 0                                                    // 000000058D3C: 00000000
	.long 0x184                                                // 000000058D40: 00000184
	.long 0                                                    // 000000058D44: 00000000
	.long 0x299c                                               // 000000058D48: 0000299C
	.long 0x70312                                              // 000000058D4C: 00070312
	.long 0x79b00                                              // 000000058D50: 00079B00
	.long 0                                                    // 000000058D54: 00000000
	.long 0x18c                                                // 000000058D58: 0000018C
	.long 0                                                    // 000000058D5C: 00000000
	.long 0x32db                                               // 000000058D60: 000032DB
	.long 0x70312                                              // 000000058D64: 00070312
	.long 0x7d100                                              // 000000058D68: 0007D100
	.long 0                                                    // 000000058D6C: 00000000
	.long 0xb0                                                 // 000000058D70: 000000B0
	.long 0                                                    // 000000058D74: 00000000
	.ascii "oE"                                                // 000000058D78: 456F
	.short 0                                                   // 000000058D7A: 0000
	.long 0x70312                                              // 000000058D7C: 00070312
	.long 0x81600                                              // 000000058D80: 00081600
	.long 0                                                    // 000000058D84: 00000000
	.long 0xfc                                                 // 000000058D88: 000000FC
	.long 0                                                    // 000000058D8C: 00000000
	.long 0xbd8                                                // 000000058D90: 00000BD8
	.long 0x70312                                              // 000000058D94: 00070312
	.long 0x6cc00                                              // 000000058D98: 0006CC00
	.long 0                                                    // 000000058D9C: 00000000
	.long 0x108                                                // 000000058DA0: 00000108
	.long 0                                                    // 000000058DA4: 00000000
	.long 0x1594                                               // 000000058DA8: 00001594
	.long 0x70312                                              // 000000058DAC: 00070312
	.long 0x71300                                              // 000000058DB0: 00071300
	.long 0                                                    // 000000058DB4: 00000000
	.long 0x80                                                 // 000000058DB8: 00000080
	.long 0                                                    // 000000058DBC: 00000000
	.long 0x15c3                                               // 000000058DC0: 000015C3
	.long 0x60311                                              // 000000058DC4: 00060311
	.long 0x62b80                                              // 000000058DC8: 00062B80
	.long 0                                                    // 000000058DCC: 00000000
	.ascii "@"                                                 // 000000058DD0: 40
	.byte 0                                                    // 000000058DD1: 00
	.short 0                                                   // 000000058DD2: 0000
	.long 0                                                    // 000000058DD4: 00000000
	.long 0x3eab                                               // 000000058DD8: 00003EAB
	.long 0x60311                                              // 000000058DDC: 00060311
	.ascii "@Q"                                                // 000000058DE0: 5140
	.short 0x6                                                 // 000000058DE2: 0006
	.long 0                                                    // 000000058DE4: 00000000
	.ascii "@"                                                 // 000000058DE8: 40
	.byte 0                                                    // 000000058DE9: 00
	.short 0                                                   // 000000058DEA: 0000
	.long 0                                                    // 000000058DEC: 00000000
	.ascii "j."                                                // 000000058DF0: 2E6A
	.short 0                                                   // 000000058DF2: 0000
	.long 0x70312                                              // 000000058DF4: 00070312
	.long 0x7bb00                                              // 000000058DF8: 0007BB00
	.long 0                                                    // 000000058DFC: 00000000
	.long 0x118                                                // 000000058E00: 00000118
	.long 0                                                    // 000000058E04: 00000000
	.long 0x31ef                                               // 000000058E08: 000031EF
	.long 0x60311                                              // 000000058E0C: 00060311
	.long 0x645c0                                              // 000000058E10: 000645C0
	.long 0                                                    // 000000058E14: 00000000
	.ascii "@"                                                 // 000000058E18: 40
	.byte 0                                                    // 000000058E19: 00
	.short 0                                                   // 000000058E1A: 0000
	.long 0                                                    // 000000058E1C: 00000000
	.ascii "+2"                                                // 000000058E20: 322B
	.short 0                                                   // 000000058E22: 0000
	.long 0x60311                                              // 000000058E24: 00060311
	.long 0x64600                                              // 000000058E28: 00064600
	.long 0                                                    // 000000058E2C: 00000000
	.ascii "@"                                                 // 000000058E30: 40
	.byte 0                                                    // 000000058E31: 00
	.short 0                                                   // 000000058E32: 0000
	.long 0                                                    // 000000058E34: 00000000
	.long 0x46af                                               // 000000058E38: 000046AF
	.long 0x70312                                              // 000000058E3C: 00070312
	.long 0x81b00                                              // 000000058E40: 00081B00
	.long 0                                                    // 000000058E44: 00000000
	.long 0x100                                                // 000000058E48: 00000100
	.long 0                                                    // 000000058E4C: 00000000
	.ascii "V"                                                 // 000000058E50: 56
	.byte 0xb                                                  // 000000058E51: 0B
	.short 0                                                   // 000000058E52: 0000
	.long 0x70312                                              // 000000058E54: 00070312
	.long 0x6c800                                              // 000000058E58: 0006C800
	.long 0                                                    // 000000058E5C: 00000000
	.long 0x108                                                // 000000058E60: 00000108
	.long 0                                                    // 000000058E64: 00000000
	.long 0x3e08                                               // 000000058E68: 00003E08
	.long 0x60311                                              // 000000058E6C: 00060311
	.long 0x650c0                                              // 000000058E70: 000650C0
	.long 0                                                    // 000000058E74: 00000000
	.ascii "@"                                                 // 000000058E78: 40
	.byte 0                                                    // 000000058E79: 00
	.short 0                                                   // 000000058E7A: 0000
	.long 0                                                    // 000000058E7C: 00000000
	.ascii "pK"                                                // 000000058E80: 4B70
	.short 0                                                   // 000000058E82: 0000
	.long 0x60311                                              // 000000058E84: 00060311
	.long 0x65c80                                              // 000000058E88: 00065C80
	.long 0                                                    // 000000058E8C: 00000000
	.ascii "@"                                                 // 000000058E90: 40
	.byte 0                                                    // 000000058E91: 00
	.short 0                                                   // 000000058E92: 0000
	.long 0                                                    // 000000058E94: 00000000
	.ascii "B"                                                 // 000000058E98: 42
	.byte 0x8                                                  // 000000058E99: 08
	.short 0                                                   // 000000058E9A: 0000
	.long 0x70312                                              // 000000058E9C: 00070312
	.long 0x6b100                                              // 000000058EA0: 0006B100
	.long 0                                                    // 000000058EA4: 00000000
	.ascii " "                                                 // 000000058EA8: 20
	.byte 0x1                                                  // 000000058EA9: 01
	.short 0                                                   // 000000058EAA: 0000
	.long 0                                                    // 000000058EAC: 00000000
	.long 0x8d3                                                // 000000058EB0: 000008D3
	.long 0x60311                                              // 000000058EB4: 00060311
	.ascii "@"                                                 // 000000058EB8: 40
	.byte 0x1e                                                 // 000000058EB9: 1E
	.short 0x6                                                 // 000000058EBA: 0006
	.long 0                                                    // 000000058EBC: 00000000
	.ascii "@"                                                 // 000000058EC0: 40
	.byte 0                                                    // 000000058EC1: 00
	.short 0                                                   // 000000058EC2: 0000
	.long 0                                                    // 000000058EC4: 00000000
	.ascii "n("                                                // 000000058EC8: 286E
	.short 0                                                   // 000000058ECA: 0000
	.long 0x70312                                              // 000000058ECC: 00070312
	.long 0x79300                                              // 000000058ED0: 00079300
	.long 0                                                    // 000000058ED4: 00000000
	.ascii "l"                                                 // 000000058ED8: 6C
	.byte 0x1                                                  // 000000058ED9: 01
	.short 0                                                   // 000000058EDA: 0000
	.long 0                                                    // 000000058EDC: 00000000
	.ascii "uJ"                                                // 000000058EE0: 4A75
	.short 0                                                   // 000000058EE2: 0000
	.long 0x70312                                              // 000000058EE4: 00070312
	.long 0x82c00                                              // 000000058EE8: 00082C00
	.long 0                                                    // 000000058EEC: 00000000
	.ascii "H"                                                 // 000000058EF0: 48
	.byte 0                                                    // 000000058EF1: 00
	.short 0                                                   // 000000058EF2: 0000
	.long 0                                                    // 000000058EF4: 00000000
	.long 0x12cc                                               // 000000058EF8: 000012CC
	.long 0x60311                                              // 000000058EFC: 00060311
	.long 0x627c0                                              // 000000058F00: 000627C0
	.long 0                                                    // 000000058F04: 00000000
	.ascii "@"                                                 // 000000058F08: 40
	.byte 0                                                    // 000000058F09: 00
	.short 0                                                   // 000000058F0A: 0000
	.long 0                                                    // 000000058F0C: 00000000
	.ascii ". "                                                // 000000058F10: 202E
	.short 0                                                   // 000000058F12: 0000
	.long 0x60311                                              // 000000058F14: 00060311
	.long 0x635c0                                              // 000000058F18: 000635C0
	.long 0                                                    // 000000058F1C: 00000000
	.ascii "@"                                                 // 000000058F20: 40
	.byte 0                                                    // 000000058F21: 00
	.short 0                                                   // 000000058F22: 0000
	.long 0                                                    // 000000058F24: 00000000
	.long 0x3007                                               // 000000058F28: 00003007
	.long 0x60311                                              // 000000058F2C: 00060311
	.long 0x64380                                              // 000000058F30: 00064380
	.long 0                                                    // 000000058F34: 00000000
	.ascii "@"                                                 // 000000058F38: 40
	.byte 0                                                    // 000000058F39: 00
	.short 0                                                   // 000000058F3A: 0000
	.long 0                                                    // 000000058F3C: 00000000
	.long 0x4105                                               // 000000058F40: 00004105
	.long 0x60311                                              // 000000058F44: 00060311
	.ascii "@S"                                                // 000000058F48: 5340
	.short 0x6                                                 // 000000058F4A: 0006
	.long 0                                                    // 000000058F4C: 00000000
	.ascii "@"                                                 // 000000058F50: 40
	.byte 0                                                    // 000000058F51: 00
	.short 0                                                   // 000000058F52: 0000
	.long 0                                                    // 000000058F54: 00000000
	.long 0x1cdf                                               // 000000058F58: 00001CDF
	.long 0x70312                                              // 000000058F5C: 00070312
	.long 0x74500                                              // 000000058F60: 00074500
	.long 0                                                    // 000000058F64: 00000000
	.ascii "("                                                 // 000000058F68: 28
	.byte 0x1                                                  // 000000058F69: 01
	.short 0                                                   // 000000058F6A: 0000
	.long 0                                                    // 000000058F6C: 00000000
	.ascii " "                                                 // 000000058F70: 20
	.byte 0x1                                                  // 000000058F71: 01
	.short 0                                                   // 000000058F72: 0000
	.long 0x70312                                              // 000000058F74: 00070312
	.long 0x67d00                                              // 000000058F78: 00067D00
	.long 0                                                    // 000000058F7C: 00000000
	.ascii "t"                                                 // 000000058F80: 74
	.byte 0x1                                                  // 000000058F81: 01
	.short 0                                                   // 000000058F82: 0000
	.long 0                                                    // 000000058F84: 00000000
	.long 0x1899                                               // 000000058F88: 00001899
	.long 0x60311                                              // 000000058F8C: 00060311
	.ascii "@/"                                                // 000000058F90: 2F40
	.short 0x6                                                 // 000000058F92: 0006
	.long 0                                                    // 000000058F94: 00000000
	.ascii "@"                                                 // 000000058F98: 40
	.byte 0                                                    // 000000058F99: 00
	.short 0                                                   // 000000058F9A: 0000
	.long 0                                                    // 000000058F9C: 00000000
	.ascii "M"                                                 // 000000058FA0: 4D
	.byte 0x1                                                  // 000000058FA1: 01
	.short 0                                                   // 000000058FA2: 0000
	.long 0x70312                                              // 000000058FA4: 00070312
	.long 0x67f00                                              // 000000058FA8: 00067F00
	.long 0                                                    // 000000058FAC: 00000000
	.long 0x88                                                 // 000000058FB0: 00000088
	.long 0                                                    // 000000058FB4: 00000000
	.long 0x17df                                               // 000000058FB8: 000017DF
	.long 0x70312                                              // 000000058FBC: 00070312
	.long 0x72200                                              // 000000058FC0: 00072200
	.long 0                                                    // 000000058FC4: 00000000
	.ascii "4"                                                 // 000000058FC8: 34
	.byte 0x1                                                  // 000000058FC9: 01
	.short 0                                                   // 000000058FCA: 0000
	.long 0                                                    // 000000058FCC: 00000000
	.long 0x2513                                               // 000000058FD0: 00002513
	.long 0x70312                                              // 000000058FD4: 00070312
	.long 0x77d00                                              // 000000058FD8: 00077D00
	.long 0                                                    // 000000058FDC: 00000000
	.ascii " "                                                 // 000000058FE0: 20
	.byte 0x1                                                  // 000000058FE1: 01
	.short 0                                                   // 000000058FE2: 0000
	.long 0                                                    // 000000058FE4: 00000000
	.long 0x309d                                               // 000000058FE8: 0000309D
	.long 0x60311                                              // 000000058FEC: 00060311
	.ascii "@D"                                                // 000000058FF0: 4440
	.short 0x6                                                 // 000000058FF2: 0006
	.long 0                                                    // 000000058FF4: 00000000
	.ascii "@"                                                 // 000000058FF8: 40
	.byte 0                                                    // 000000058FF9: 00
	.short 0                                                   // 000000058FFA: 0000
	.long 0                                                    // 000000058FFC: 00000000
	.ascii "P4"                                                // 000000059000: 3450
	.short 0                                                   // 000000059002: 0000
	.long 0x70312                                              // 000000059004: 00070312
	.long 0x7d900                                              // 000000059008: 0007D900
	.long 0                                                    // 00000005900C: 00000000
	.long 0xbc                                                 // 000000059010: 000000BC
	.long 0                                                    // 000000059014: 00000000
	.long 0x3fac                                               // 000000059018: 00003FAC
	.long 0x70312                                              // 00000005901C: 00070312
	.long 0x7ff00                                              // 000000059020: 0007FF00
	.long 0                                                    // 000000059024: 00000000
	.long 0xf0                                                 // 000000059028: 000000F0
	.long 0                                                    // 00000005902C: 00000000
	.ascii "kD"                                                // 000000059030: 446B
	.short 0                                                   // 000000059032: 0000
	.long 0x60311                                              // 000000059034: 00060311
	.long 0x65600                                              // 000000059038: 00065600
	.long 0                                                    // 00000005903C: 00000000
	.ascii "@"                                                 // 000000059040: 40
	.byte 0                                                    // 000000059041: 00
	.short 0                                                   // 000000059042: 0000
	.long 0                                                    // 000000059044: 00000000
	.ascii "F"                                                 // 000000059048: 46
	.byte 0x6                                                  // 000000059049: 06
	.short 0                                                   // 00000005904A: 0000
	.long 0x70312                                              // 00000005904C: 00070312
	.long 0x6a200                                              // 000000059050: 0006A200
	.long 0                                                    // 000000059054: 00000000
	.long 0x118                                                // 000000059058: 00000118
	.long 0                                                    // 00000005905C: 00000000
	.long 0x881                                                // 000000059060: 00000881
	.long 0x70312                                              // 000000059064: 00070312
	.long 0x6b300                                              // 000000059068: 0006B300
	.long 0                                                    // 00000005906C: 00000000
	.long 0x114                                                // 000000059070: 00000114
	.long 0                                                    // 000000059074: 00000000
	.ascii "I"                                                 // 000000059078: 49
	.byte 0x16                                                 // 000000059079: 16
	.short 0                                                   // 00000005907A: 0000
	.long 0x60311                                              // 00000005907C: 00060311
	.ascii "@,"                                                // 000000059080: 2C40
	.short 0x6                                                 // 000000059082: 0006
	.long 0                                                    // 000000059084: 00000000
	.ascii "@"                                                 // 000000059088: 40
	.byte 0                                                    // 000000059089: 00
	.short 0                                                   // 00000005908A: 0000
	.long 0                                                    // 00000005908C: 00000000
	.long 0x3610                                               // 000000059090: 00003610
	.long 0x60311                                              // 000000059094: 00060311
	.long 0x64a00                                              // 000000059098: 00064A00
	.long 0                                                    // 00000005909C: 00000000
	.ascii "@"                                                 // 0000000590A0: 40
	.byte 0                                                    // 0000000590A1: 00
	.short 0                                                   // 0000000590A2: 0000
	.long 0                                                    // 0000000590A4: 00000000
	.long 0x3bf8                                               // 0000000590A8: 00003BF8
	.long 0x60311                                              // 0000000590AC: 00060311
	.long 0x64f00                                              // 0000000590B0: 00064F00
	.long 0                                                    // 0000000590B4: 00000000
	.ascii "@"                                                 // 0000000590B8: 40
	.byte 0                                                    // 0000000590B9: 00
	.short 0                                                   // 0000000590BA: 0000
	.long 0                                                    // 0000000590BC: 00000000
	.ascii "Y>"                                                // 0000000590C0: 3E59
	.short 0                                                   // 0000000590C2: 0000
	.long 0x60311                                              // 0000000590C4: 00060311
	.long 0x65100                                              // 0000000590C8: 00065100
	.long 0                                                    // 0000000590CC: 00000000
	.ascii "@"                                                 // 0000000590D0: 40
	.byte 0                                                    // 0000000590D1: 00
	.short 0                                                   // 0000000590D2: 0000
	.long 0                                                    // 0000000590D4: 00000000
	.long 0x3fd0                                               // 0000000590D8: 00003FD0
	.long 0x60311                                              // 0000000590DC: 00060311
	.ascii "@R"                                                // 0000000590E0: 5240
	.short 0x6                                                 // 0000000590E2: 0006
	.long 0                                                    // 0000000590E4: 00000000
	.ascii "@"                                                 // 0000000590E8: 40
	.byte 0                                                    // 0000000590E9: 00
	.short 0                                                   // 0000000590EA: 0000
	.long 0                                                    // 0000000590EC: 00000000
	.long 0x715                                                // 0000000590F0: 00000715
	.long 0x60311                                              // 0000000590F4: 00060311
	.long 0x61c80                                              // 0000000590F8: 00061C80
	.long 0                                                    // 0000000590FC: 00000000
	.ascii "@"                                                 // 000000059100: 40
	.byte 0                                                    // 000000059101: 00
	.short 0                                                   // 000000059102: 0000
	.long 0                                                    // 000000059104: 00000000
	.ascii "U#"                                                // 000000059108: 2355
	.short 0                                                   // 00000005910A: 0000
	.long 0x70312                                              // 00000005910C: 00070312
	.long 0x77100                                              // 000000059110: 00077100
	.long 0                                                    // 000000059114: 00000000
	.long 0x18c                                                // 000000059118: 0000018C
	.long 0                                                    // 00000005911C: 00000000
	.long 0x34ea                                               // 000000059120: 000034EA
	.long 0x70312                                              // 000000059124: 00070312
	.long 0x7db00                                              // 000000059128: 0007DB00
	.long 0                                                    // 00000005912C: 00000000
	.long 0xa8                                                 // 000000059130: 000000A8
	.long 0                                                    // 000000059134: 00000000
	.long 0x18d1                                               // 000000059138: 000018D1
	.long 0x60311                                              // 00000005913C: 00060311
	.long 0x62f80                                              // 000000059140: 00062F80
	.long 0                                                    // 000000059144: 00000000
	.ascii "@"                                                 // 000000059148: 40
	.byte 0                                                    // 000000059149: 00
	.short 0                                                   // 00000005914A: 0000
	.long 0                                                    // 00000005914C: 00000000
	.long 0x1d99                                               // 000000059150: 00001D99
	.long 0x60311                                              // 000000059154: 00060311
	.long 0x63380                                              // 000000059158: 00063380
	.long 0                                                    // 00000005915C: 00000000
	.ascii "@"                                                 // 000000059160: 40
	.byte 0                                                    // 000000059161: 00
	.short 0                                                   // 000000059162: 0000
	.long 0                                                    // 000000059164: 00000000
	.ascii "^1"                                                // 000000059168: 315E
	.short 0                                                   // 00000005916A: 0000
	.long 0x70312                                              // 00000005916C: 00070312
	.long 0x7ca00                                              // 000000059170: 0007CA00
	.long 0                                                    // 000000059174: 00000000
	.ascii "p"                                                 // 000000059178: 70
	.byte 0                                                    // 000000059179: 00
	.short 0                                                   // 00000005917A: 0000
	.long 0                                                    // 00000005917C: 00000000
	.ascii "&3"                                                // 000000059180: 3326
	.short 0                                                   // 000000059182: 0000
	.long 0x60311                                              // 000000059184: 00060311
	.ascii "@G"                                                // 000000059188: 4740
	.short 0x6                                                 // 00000005918A: 0006
	.long 0                                                    // 00000005918C: 00000000
	.ascii "@"                                                 // 000000059190: 40
	.byte 0                                                    // 000000059191: 00
	.short 0                                                   // 000000059192: 0000
	.long 0                                                    // 000000059194: 00000000
	.long 0x3512                                               // 000000059198: 00003512
	.long 0x60311                                              // 00000005919C: 00060311
	.ascii "@I"                                                // 0000000591A0: 4940
	.short 0x6                                                 // 0000000591A2: 0006
	.long 0                                                    // 0000000591A4: 00000000
	.ascii "@"                                                 // 0000000591A8: 40
	.byte 0                                                    // 0000000591A9: 00
	.short 0                                                   // 0000000591AA: 0000
	.long 0                                                    // 0000000591AC: 00000000
	.long 0xcec                                                // 0000000591B0: 00000CEC
	.long 0x70312                                              // 0000000591B4: 00070312
	.long 0x6d300                                              // 0000000591B8: 0006D300
	.long 0                                                    // 0000000591BC: 00000000
	.long 0x110                                                // 0000000591C0: 00000110
	.long 0                                                    // 0000000591C4: 00000000
	.long 0x31b4                                               // 0000000591C8: 000031B4
	.long 0x60311                                              // 0000000591CC: 00060311
	.long 0x64580                                              // 0000000591D0: 00064580
	.long 0                                                    // 0000000591D4: 00000000
	.ascii "@"                                                 // 0000000591D8: 40
	.byte 0                                                    // 0000000591D9: 00
	.short 0                                                   // 0000000591DA: 0000
	.long 0                                                    // 0000000591DC: 00000000
	.long 0x42aa                                               // 0000000591E0: 000042AA
	.long 0x70312                                              // 0000000591E4: 00070312
	.long 0x80b00                                              // 0000000591E8: 00080B00
	.long 0                                                    // 0000000591EC: 00000000
	.long 0xec                                                 // 0000000591F0: 000000EC
	.long 0                                                    // 0000000591F4: 00000000
	.ascii "y"                                                 // 0000000591F8: 79
	.byte 0x7                                                  // 0000000591F9: 07
	.short 0                                                   // 0000000591FA: 0000
	.long 0x70312                                              // 0000000591FC: 00070312
	.long 0x6ac00                                              // 000000059200: 0006AC00
	.long 0                                                    // 000000059204: 00000000
	.long 0x100                                                // 000000059208: 00000100
	.long 0                                                    // 00000005920C: 00000000
	.long 0x42d0                                               // 000000059210: 000042D0
	.long 0x60311                                              // 000000059214: 00060311
	.long 0x654c0                                              // 000000059218: 000654C0
	.long 0                                                    // 00000005921C: 00000000
	.ascii "@"                                                 // 000000059220: 40
	.byte 0                                                    // 000000059221: 00
	.short 0                                                   // 000000059222: 0000
	.long 0                                                    // 000000059224: 00000000
	.ascii "MG"                                                // 000000059228: 474D
	.short 0                                                   // 00000005922A: 0000
	.long 0x70312                                              // 00000005922C: 00070312
	.long 0x81e00                                              // 000000059230: 00081E00
	.long 0                                                    // 000000059234: 00000000
	.long 0xb4                                                 // 000000059238: 000000B4
	.long 0                                                    // 00000005923C: 00000000
	.ascii ">9"                                                // 000000059240: 393E
	.short 0                                                   // 000000059242: 0000
	.long 0x70312                                              // 000000059244: 00070312
	.long 0x7e900                                              // 000000059248: 0007E900
	.long 0                                                    // 00000005924C: 00000000
	.long 0x100                                                // 000000059250: 00000100
	.long 0                                                    // 000000059254: 00000000
	.long 0x8fb                                                // 000000059258: 000008FB
	.long 0x70312                                              // 00000005925C: 00070312
	.long 0x6b700                                              // 000000059260: 0006B700
	.long 0                                                    // 000000059264: 00000000
	.long 0x104                                                // 000000059268: 00000104
	.long 0                                                    // 00000005926C: 00000000
	.long 0x1392                                               // 000000059270: 00001392
	.long 0x60311                                              // 000000059274: 00060311
	.long 0x62880                                              // 000000059278: 00062880
	.long 0                                                    // 00000005927C: 00000000
	.ascii "@"                                                 // 000000059280: 40
	.byte 0                                                    // 000000059281: 00
	.short 0                                                   // 000000059282: 0000
	.long 0                                                    // 000000059284: 00000000
	.ascii "c9"                                                // 000000059288: 3963
	.short 0                                                   // 00000005928A: 0000
	.long 0x60311                                              // 00000005928C: 00060311
	.long 0x64cc0                                              // 000000059290: 00064CC0
	.long 0                                                    // 000000059294: 00000000
	.ascii "@"                                                 // 000000059298: 40
	.byte 0                                                    // 000000059299: 00
	.short 0                                                   // 00000005929A: 0000
	.long 0                                                    // 00000005929C: 00000000
	.long 0x4da                                                // 0000000592A0: 000004DA
	.long 0x60311                                              // 0000000592A4: 00060311
	.ascii "@"                                                 // 0000000592A8: 40
	.byte 0x1a                                                 // 0000000592A9: 1A
	.short 0x6                                                 // 0000000592AA: 0006
	.long 0                                                    // 0000000592AC: 00000000
	.ascii "@"                                                 // 0000000592B0: 40
	.byte 0                                                    // 0000000592B1: 00
	.short 0                                                   // 0000000592B2: 0000
	.long 0                                                    // 0000000592B4: 00000000
	.long 0x12ae                                               // 0000000592B8: 000012AE
	.long 0x70312                                              // 0000000592BC: 00070312
	.long 0x6ff00                                              // 0000000592C0: 0006FF00
	.long 0                                                    // 0000000592C4: 00000000
	.ascii " "                                                 // 0000000592C8: 20
	.byte 0x1                                                  // 0000000592C9: 01
	.short 0                                                   // 0000000592CA: 0000
	.long 0                                                    // 0000000592CC: 00000000
	.long 0x24c8                                               // 0000000592D0: 000024C8
	.long 0x70312                                              // 0000000592D4: 00070312
	.long 0x77b00                                              // 0000000592D8: 00077B00
	.long 0                                                    // 0000000592DC: 00000000
	.ascii " "                                                 // 0000000592E0: 20
	.byte 0x1                                                  // 0000000592E1: 01
	.short 0                                                   // 0000000592E2: 0000
	.long 0                                                    // 0000000592E4: 00000000
	.long 0x2b80                                               // 0000000592E8: 00002B80
	.long 0x70312                                              // 0000000592EC: 00070312
	.long 0x7a700                                              // 0000000592F0: 0007A700
	.long 0                                                    // 0000000592F4: 00000000
	.long 0x188                                                // 0000000592F8: 00000188
	.long 0                                                    // 0000000592FC: 00000000
	.ascii "yM"                                                // 000000059300: 4D79
	.short 0                                                   // 000000059302: 0000
	.long 0x70312                                              // 000000059304: 00070312
	.long 0x83a00                                              // 000000059308: 00083A00
	.long 0                                                    // 00000005930C: 00000000
	.ascii "t"                                                 // 000000059310: 74
	.byte 0                                                    // 000000059311: 00
	.short 0                                                   // 000000059312: 0000
	.long 0                                                    // 000000059314: 00000000
	.long 0x99                                                 // 000000059318: 00000099
	.long 0x70312                                              // 00000005931C: 00070312
	.long 0x67700                                              // 000000059320: 00067700
	.long 0                                                    // 000000059324: 00000000
	.long 0x114                                                // 000000059328: 00000114
	.long 0                                                    // 00000005932C: 00000000
	.long 0x1f97                                               // 000000059330: 00001F97
	.long 0x60311                                              // 000000059334: 00060311
	.ascii "@5"                                                // 000000059338: 3540
	.short 0x6                                                 // 00000005933A: 0006
	.long 0                                                    // 00000005933C: 00000000
	.ascii "@"                                                 // 000000059340: 40
	.byte 0                                                    // 000000059341: 00
	.short 0                                                   // 000000059342: 0000
	.long 0                                                    // 000000059344: 00000000
	.ascii "T!"                                                // 000000059348: 2154
	.short 0                                                   // 00000005934A: 0000
	.long 0x60311                                              // 00000005934C: 00060311
	.long 0x636c0                                              // 000000059350: 000636C0
	.long 0                                                    // 000000059354: 00000000
	.ascii "@"                                                 // 000000059358: 40
	.byte 0                                                    // 000000059359: 00
	.short 0                                                   // 00000005935A: 0000
	.long 0                                                    // 00000005935C: 00000000
	.ascii "Q,"                                                // 000000059360: 2C51
	.short 0                                                   // 000000059362: 0000
	.long 0x70312                                              // 000000059364: 00070312
	.long 0x7ad00                                              // 000000059368: 0007AD00
	.long 0                                                    // 00000005936C: 00000000
	.ascii "8"                                                 // 000000059370: 38
	.byte 0x1                                                  // 000000059371: 01
	.short 0                                                   // 000000059372: 0000
	.long 0                                                    // 000000059374: 00000000
	.ascii "UA"                                                // 000000059378: 4155
	.short 0                                                   // 00000005937A: 0000
	.long 0x60311                                              // 00000005937C: 00060311
	.long 0x65380                                              // 000000059380: 00065380
	.long 0                                                    // 000000059384: 00000000
	.ascii "@"                                                 // 000000059388: 40
	.byte 0                                                    // 000000059389: 00
	.short 0                                                   // 00000005938A: 0000
	.long 0                                                    // 00000005938C: 00000000
	.long 0x4ac5                                               // 000000059390: 00004AC5
	.long 0x60311                                              // 000000059394: 00060311
	.long 0x65bc0                                              // 000000059398: 00065BC0
	.long 0                                                    // 00000005939C: 00000000
	.ascii "@"                                                 // 0000000593A0: 40
	.byte 0                                                    // 0000000593A1: 00
	.short 0                                                   // 0000000593A2: 0000
	.long 0                                                    // 0000000593A4: 00000000
	.long 0xee9                                                // 0000000593A8: 00000EE9
	.long 0x60311                                              // 0000000593AC: 00060311
	.long 0x62400                                              // 0000000593B0: 00062400
	.long 0                                                    // 0000000593B4: 00000000
	.ascii "@"                                                 // 0000000593B8: 40
	.byte 0                                                    // 0000000593B9: 00
	.short 0                                                   // 0000000593BA: 0000
	.long 0                                                    // 0000000593BC: 00000000
	.ascii "&"                                                 // 0000000593C0: 26
	.byte 0x12                                                 // 0000000593C1: 12
	.short 0                                                   // 0000000593C2: 0000
	.long 0x70312                                              // 0000000593C4: 00070312
	.long 0x6fb00                                              // 0000000593C8: 0006FB00
	.long 0                                                    // 0000000593CC: 00000000
	.ascii " "                                                 // 0000000593D0: 20
	.byte 0x1                                                  // 0000000593D1: 01
	.short 0                                                   // 0000000593D2: 0000
	.long 0                                                    // 0000000593D4: 00000000
	.long 0x16c1                                               // 0000000593D8: 000016C1
	.long 0x70312                                              // 0000000593DC: 00070312
	.long 0x71a00                                              // 0000000593E0: 00071A00
	.long 0                                                    // 0000000593E4: 00000000
	.long 0x94                                                 // 0000000593E8: 00000094
	.long 0                                                    // 0000000593EC: 00000000
	.long 0x1c10                                               // 0000000593F0: 00001C10
	.long 0x70312                                              // 0000000593F4: 00070312
	.long 0x73f00                                              // 0000000593F8: 00073F00
	.long 0                                                    // 0000000593FC: 00000000
	.ascii "8"                                                 // 000000059400: 38
	.byte 0x1                                                  // 000000059401: 01
	.short 0                                                   // 000000059402: 0000
	.long 0                                                    // 000000059404: 00000000
	.long 0x2df4                                               // 000000059408: 00002DF4
	.long 0x60311                                              // 00000005940C: 00060311
	.ascii "@A"                                                // 000000059410: 4140
	.short 0x6                                                 // 000000059412: 0006
	.long 0                                                    // 000000059414: 00000000
	.ascii "@"                                                 // 000000059418: 40
	.byte 0                                                    // 000000059419: 00
	.short 0                                                   // 00000005941A: 0000
	.long 0                                                    // 00000005941C: 00000000
	.ascii "\n"                                                // 000000059420: 0A
	.ascii "1"                                                 // 000000059421: 31
	.short 0                                                   // 000000059422: 0000
	.long 0x60311                                              // 000000059424: 00060311
	.long 0x644c0                                              // 000000059428: 000644C0
	.long 0                                                    // 00000005942C: 00000000
	.ascii "@"                                                 // 000000059430: 40
	.byte 0                                                    // 000000059431: 00
	.short 0                                                   // 000000059432: 0000
	.long 0                                                    // 000000059434: 00000000
	.long 0x330e                                               // 000000059438: 0000330E
	.long 0x70312                                              // 00000005943C: 00070312
	.long 0x7d200                                              // 000000059440: 0007D200
	.long 0                                                    // 000000059444: 00000000
	.long 0xc0                                                 // 000000059448: 000000C0
	.long 0                                                    // 00000005944C: 00000000
	.long 0x4202                                               // 000000059450: 00004202
	.long 0x70312                                              // 000000059454: 00070312
	.long 0x80900                                              // 000000059458: 00080900
	.long 0                                                    // 00000005945C: 00000000
	.long 0xec                                                 // 000000059460: 000000EC
	.long 0                                                    // 000000059464: 00000000
	.long 0x28e                                                // 000000059468: 0000028E
	.long 0x70312                                              // 00000005946C: 00070312
	.long 0x68800                                              // 000000059470: 00068800
	.long 0                                                    // 000000059474: 00000000
	.long 0x110                                                // 000000059478: 00000110
	.long 0                                                    // 00000005947C: 00000000
	.long 0xa0d                                                // 000000059480: 00000A0D
	.long 0x70312                                              // 000000059484: 00070312
	.long 0x6be00                                              // 000000059488: 0006BE00
	.long 0                                                    // 00000005948C: 00000000
	.ascii "h"                                                 // 000000059490: 68
	.byte 0x1                                                  // 000000059491: 01
	.short 0                                                   // 000000059492: 0000
	.long 0                                                    // 000000059494: 00000000
	.ascii "~"                                                 // 000000059498: 7E
	.byte 0xe                                                  // 000000059499: 0E
	.short 0                                                   // 00000005949A: 0000
	.long 0x70312                                              // 00000005949C: 00070312
	.long 0x6df00                                              // 0000000594A0: 0006DF00
	.long 0                                                    // 0000000594A4: 00000000
	.ascii "H"                                                 // 0000000594A8: 48
	.byte 0x1                                                  // 0000000594A9: 01
	.short 0                                                   // 0000000594AA: 0000
	.long 0                                                    // 0000000594AC: 00000000
	.long 0x1f00                                               // 0000000594B0: 00001F00
	.long 0x60311                                              // 0000000594B4: 00060311
	.long 0x634c0                                              // 0000000594B8: 000634C0
	.long 0                                                    // 0000000594BC: 00000000
	.ascii "@"                                                 // 0000000594C0: 40
	.byte 0                                                    // 0000000594C1: 00
	.short 0                                                   // 0000000594C2: 0000
	.long 0                                                    // 0000000594C4: 00000000
	.long 0x308e                                               // 0000000594C8: 0000308E
	.long 0x70312                                              // 0000000594CC: 00070312
	.long 0x7c600                                              // 0000000594D0: 0007C600
	.long 0                                                    // 0000000594D4: 00000000
	.long 0xb0                                                 // 0000000594D8: 000000B0
	.long 0                                                    // 0000000594DC: 00000000
	.long 0x41e                                                // 0000000594E0: 0000041E
	.long 0x60311                                              // 0000000594E4: 00060311
	.long 0x61980                                              // 0000000594E8: 00061980
	.long 0                                                    // 0000000594EC: 00000000
	.ascii "@"                                                 // 0000000594F0: 40
	.byte 0                                                    // 0000000594F1: 00
	.short 0                                                   // 0000000594F2: 0000
	.long 0                                                    // 0000000594F4: 00000000
	.ascii "A"                                                 // 0000000594F8: 41
	.byte 0x14                                                 // 0000000594F9: 14
	.short 0                                                   // 0000000594FA: 0000
	.long 0x60311                                              // 0000000594FC: 00060311
	.ascii "@)"                                                // 000000059500: 2940
	.short 0x6                                                 // 000000059502: 0006
	.long 0                                                    // 000000059504: 00000000
	.ascii "@"                                                 // 000000059508: 40
	.byte 0                                                    // 000000059509: 00
	.short 0                                                   // 00000005950A: 0000
	.long 0                                                    // 00000005950C: 00000000
	.long 0x1e0f                                               // 000000059510: 00001E0F
	.long 0x70312                                              // 000000059514: 00070312
	.long 0x74d00                                              // 000000059518: 00074D00
	.long 0                                                    // 00000005951C: 00000000
	.long 0x18c                                                // 000000059520: 0000018C
	.long 0                                                    // 000000059524: 00000000
	.long 0x28c3                                               // 000000059528: 000028C3
	.long 0x70312                                              // 00000005952C: 00070312
	.long 0x79500                                              // 000000059530: 00079500
	.long 0                                                    // 000000059534: 00000000
	.long 0x1ac                                                // 000000059538: 000001AC
	.long 0                                                    // 00000005953C: 00000000
	.long 0xc1d                                                // 000000059540: 00000C1D
	.long 0x70312                                              // 000000059544: 00070312
	.long 0x6ce00                                              // 000000059548: 0006CE00
	.long 0                                                    // 00000005954C: 00000000
	.long 0x100                                                // 000000059550: 00000100
	.long 0                                                    // 000000059554: 00000000
	.long 0xf10                                                // 000000059558: 00000F10
	.long 0x70312                                              // 00000005955C: 00070312
	.long 0x6e300                                              // 000000059560: 0006E300
	.long 0                                                    // 000000059564: 00000000
	.ascii "T"                                                 // 000000059568: 54
	.byte 0x1                                                  // 000000059569: 01
	.short 0                                                   // 00000005956A: 0000
	.long 0                                                    // 00000005956C: 00000000
	.long 0x1018                                               // 000000059570: 00001018
	.long 0x70312                                              // 000000059574: 00070312
	.long 0x6eb00                                              // 000000059578: 0006EB00
	.long 0                                                    // 00000005957C: 00000000
	.ascii "@"                                                 // 000000059580: 40
	.byte 0x1                                                  // 000000059581: 01
	.short 0                                                   // 000000059582: 0000
	.long 0                                                    // 000000059584: 00000000
	.long 0x17f7                                               // 000000059588: 000017F7
	.long 0x60311                                              // 00000005958C: 00060311
	.long 0x62e80                                              // 000000059590: 00062E80
	.long 0                                                    // 000000059594: 00000000
	.ascii "@"                                                 // 000000059598: 40
	.byte 0                                                    // 000000059599: 00
	.short 0                                                   // 00000005959A: 0000
	.long 0                                                    // 00000005959C: 00000000
	.long 0x30f0                                               // 0000000595A0: 000030F0
	.long 0x70312                                              // 0000000595A4: 00070312
	.long 0x7c800                                              // 0000000595A8: 0007C800
	.long 0                                                    // 0000000595AC: 00000000
	.ascii "|"                                                 // 0000000595B0: 7C
	.byte 0                                                    // 0000000595B1: 00
	.short 0                                                   // 0000000595B2: 0000
	.long 0                                                    // 0000000595B4: 00000000
	.long 0x44ae                                               // 0000000595B8: 000044AE
	.long 0x60311                                              // 0000000595BC: 00060311
	.ascii "@V"                                                // 0000000595C0: 5640
	.short 0x6                                                 // 0000000595C2: 0006
	.long 0                                                    // 0000000595C4: 00000000
	.ascii "@"                                                 // 0000000595C8: 40
	.byte 0                                                    // 0000000595C9: 00
	.short 0                                                   // 0000000595CA: 0000
	.long 0                                                    // 0000000595CC: 00000000
	.long 0x4c8d                                               // 0000000595D0: 00004C8D
	.long 0x70312                                              // 0000000595D4: 00070312
	.long 0x83600                                              // 0000000595D8: 00083600
	.long 0                                                    // 0000000595DC: 00000000
	.ascii "D"                                                 // 0000000595E0: 44
	.byte 0                                                    // 0000000595E1: 00
	.short 0                                                   // 0000000595E2: 0000
	.long 0                                                    // 0000000595E4: 00000000
	.ascii "	"                                                 // 0000000595E8: 09
	.byte 0                                                    // 0000000595E9: 00
	.short 0                                                   // 0000000595EA: 0000
	.long 0x60311                                              // 0000000595EC: 00060311
	.long 0x61500                                              // 0000000595F0: 00061500
	.long 0                                                    // 0000000595F4: 00000000
	.ascii "@"                                                 // 0000000595F8: 40
	.byte 0                                                    // 0000000595F9: 00
	.short 0                                                   // 0000000595FA: 0000
	.long 0                                                    // 0000000595FC: 00000000
	.ascii "3"                                                 // 000000059600: 33
	.byte 0xf                                                  // 000000059601: 0F
	.short 0                                                   // 000000059602: 0000
	.long 0x60311                                              // 000000059604: 00060311
	.ascii "@$"                                                // 000000059608: 2440
	.short 0x6                                                 // 00000005960A: 0006
	.long 0                                                    // 00000005960C: 00000000
	.ascii "@"                                                 // 000000059610: 40
	.byte 0                                                    // 000000059611: 00
	.short 0                                                   // 000000059612: 0000
	.long 0                                                    // 000000059614: 00000000
	.long 0x1be5                                               // 000000059618: 00001BE5
	.long 0x60311                                              // 00000005961C: 00060311
	.long 0x63200                                              // 000000059620: 00063200
	.long 0                                                    // 000000059624: 00000000
	.ascii "@"                                                 // 000000059628: 40
	.byte 0                                                    // 000000059629: 00
	.short 0                                                   // 00000005962A: 0000
	.long 0                                                    // 00000005962C: 00000000
	.ascii "B@"                                                // 000000059630: 4042
	.short 0                                                   // 000000059632: 0000
	.long 0x70312                                              // 000000059634: 00070312
	.long 0x80100                                              // 000000059638: 00080100
	.long 0                                                    // 00000005963C: 00000000
	.long 0xfc                                                 // 000000059640: 000000FC
	.long 0                                                    // 000000059644: 00000000
	.long 0x1d02                                               // 000000059648: 00001D02
	.long 0x60311                                              // 00000005964C: 00060311
	.long 0x63300                                              // 000000059650: 00063300
	.long 0                                                    // 000000059654: 00000000
	.ascii "@"                                                 // 000000059658: 40
	.byte 0                                                    // 000000059659: 00
	.short 0                                                   // 00000005965A: 0000
	.long 0                                                    // 00000005965C: 00000000
	.ascii "{ "                                                // 000000059660: 207B
	.short 0                                                   // 000000059662: 0000
	.long 0x60311                                              // 000000059664: 00060311
	.long 0x63600                                              // 000000059668: 00063600
	.long 0                                                    // 00000005966C: 00000000
	.ascii "@"                                                 // 000000059670: 40
	.byte 0                                                    // 000000059671: 00
	.short 0                                                   // 000000059672: 0000
	.long 0                                                    // 000000059674: 00000000
	.long 0x24a1                                               // 000000059678: 000024A1
	.long 0x60311                                              // 00000005967C: 00060311
	.long 0x63980                                              // 000000059680: 00063980
	.long 0                                                    // 000000059684: 00000000
	.ascii "@"                                                 // 000000059688: 40
	.byte 0                                                    // 000000059689: 00
	.short 0                                                   // 00000005968A: 0000
	.long 0                                                    // 00000005968C: 00000000
	.ascii "'1"                                                // 000000059690: 3127
	.short 0                                                   // 000000059692: 0000
	.long 0x70312                                              // 000000059694: 00070312
	.long 0x7c900                                              // 000000059698: 0007C900
	.long 0                                                    // 00000005969C: 00000000
	.ascii "x"                                                 // 0000000596A0: 78
	.byte 0                                                    // 0000000596A1: 00
	.short 0                                                   // 0000000596A2: 0000
	.long 0                                                    // 0000000596A4: 00000000
	.ascii "i="                                                // 0000000596A8: 3D69
	.short 0                                                   // 0000000596AA: 0000
	.long 0x60311                                              // 0000000596AC: 00060311
	.ascii "@P"                                                // 0000000596B0: 5040
	.short 0x6                                                 // 0000000596B2: 0006
	.long 0                                                    // 0000000596B4: 00000000
	.ascii "@"                                                 // 0000000596B8: 40
	.byte 0                                                    // 0000000596B9: 00
	.short 0                                                   // 0000000596BA: 0000
	.long 0                                                    // 0000000596BC: 00000000
	.ascii "GE"                                                // 0000000596C0: 4547
	.short 0                                                   // 0000000596C2: 0000
	.long 0x60311                                              // 0000000596C4: 00060311
	.long 0x656c0                                              // 0000000596C8: 000656C0
	.long 0                                                    // 0000000596CC: 00000000
	.ascii "@"                                                 // 0000000596D0: 40
	.byte 0                                                    // 0000000596D1: 00
	.short 0                                                   // 0000000596D2: 0000
	.long 0                                                    // 0000000596D4: 00000000
	.long 0x14c1                                               // 0000000596D8: 000014C1
	.long 0x60311                                              // 0000000596DC: 00060311
	.long 0x62a00                                              // 0000000596E0: 00062A00
	.long 0                                                    // 0000000596E4: 00000000
	.ascii "@"                                                 // 0000000596E8: 40
	.byte 0                                                    // 0000000596E9: 00
	.short 0                                                   // 0000000596EA: 0000
	.long 0                                                    // 0000000596EC: 00000000
	.ascii "-+"                                                // 0000000596F0: 2B2D
	.short 0                                                   // 0000000596F2: 0000
	.long 0x70312                                              // 0000000596F4: 00070312
	.long 0x7a500                                              // 0000000596F8: 0007A500
	.long 0                                                    // 0000000596FC: 00000000
	.long 0x1b8                                                // 000000059700: 000001B8
	.long 0                                                    // 000000059704: 00000000
	.long 0x2ed2                                               // 000000059708: 00002ED2
	.long 0x70312                                              // 00000005970C: 00070312
	.long 0x7be00                                              // 000000059710: 0007BE00
	.long 0                                                    // 000000059714: 00000000
	.ascii "t"                                                 // 000000059718: 74
	.byte 0                                                    // 000000059719: 00
	.short 0                                                   // 00000005971A: 0000
	.long 0                                                    // 00000005971C: 00000000
	.long 0x33ad                                               // 000000059720: 000033AD
	.long 0x70312                                              // 000000059724: 00070312
	.long 0x7d500                                              // 000000059728: 0007D500
	.long 0                                                    // 00000005972C: 00000000
	.long 0xfc                                                 // 000000059730: 000000FC
	.long 0                                                    // 000000059734: 00000000
	.long 0x3590                                               // 000000059738: 00003590
	.long 0x70312                                              // 00000005973C: 00070312
	.long 0x7dd00                                              // 000000059740: 0007DD00
	.long 0                                                    // 000000059744: 00000000
	.long 0xb4                                                 // 000000059748: 000000B4
	.long 0                                                    // 00000005974C: 00000000
	.ascii "k"                                                 // 000000059750: 6B
	.byte 0x1c                                                 // 000000059751: 1C
	.short 0                                                   // 000000059752: 0000
	.long 0x60311                                              // 000000059754: 00060311
	.long 0x63280                                              // 000000059758: 00063280
	.long 0                                                    // 00000005975C: 00000000
	.ascii "@"                                                 // 000000059760: 40
	.byte 0                                                    // 000000059761: 00
	.short 0                                                   // 000000059762: 0000
	.long 0                                                    // 000000059764: 00000000
	.long 0x320f                                               // 000000059768: 0000320F
	.long 0x70312                                              // 00000005976C: 00070312
	.long 0x7cd00                                              // 000000059770: 0007CD00
	.long 0                                                    // 000000059774: 00000000
	.long 0xa8                                                 // 000000059778: 000000A8
	.long 0                                                    // 00000005977C: 00000000
	.ascii "m4"                                                // 000000059780: 346D
	.short 0                                                   // 000000059782: 0000
	.long 0x60311                                              // 000000059784: 00060311
	.long 0x648c0                                              // 000000059788: 000648C0
	.long 0                                                    // 00000005978C: 00000000
	.ascii "@"                                                 // 000000059790: 40
	.byte 0                                                    // 000000059791: 00
	.short 0                                                   // 000000059792: 0000
	.long 0                                                    // 000000059794: 00000000
	.long 0x35ba                                               // 000000059798: 000035BA
	.long 0x60311                                              // 00000005979C: 00060311
	.long 0x649c0                                              // 0000000597A0: 000649C0
	.long 0                                                    // 0000000597A4: 00000000
	.ascii "@"                                                 // 0000000597A8: 40
	.byte 0                                                    // 0000000597A9: 00
	.short 0                                                   // 0000000597AA: 0000
	.long 0                                                    // 0000000597AC: 00000000
	.long 0x41e4                                               // 0000000597B0: 000041E4
	.long 0x60311                                              // 0000000597B4: 00060311
	.long 0x65400                                              // 0000000597B8: 00065400
	.long 0                                                    // 0000000597BC: 00000000
	.ascii "@"                                                 // 0000000597C0: 40
	.byte 0                                                    // 0000000597C1: 00
	.short 0                                                   // 0000000597C2: 0000
	.long 0                                                    // 0000000597C4: 00000000
	.long 0x4afd                                               // 0000000597C8: 00004AFD
	.long 0x60311                                              // 0000000597CC: 00060311
	.long 0x65c00                                              // 0000000597D0: 00065C00
	.long 0                                                    // 0000000597D4: 00000000
	.ascii "@"                                                 // 0000000597D8: 40
	.byte 0                                                    // 0000000597D9: 00
	.short 0                                                   // 0000000597DA: 0000
	.long 0                                                    // 0000000597DC: 00000000
	.ascii "Y"                                                 // 0000000597E0: 59
	.byte 0xf                                                  // 0000000597E1: 0F
	.short 0                                                   // 0000000597E2: 0000
	.long 0x70312                                              // 0000000597E4: 00070312
	.long 0x6e500                                              // 0000000597E8: 0006E500
	.long 0                                                    // 0000000597EC: 00000000
	.ascii "h"                                                 // 0000000597F0: 68
	.byte 0x1                                                  // 0000000597F1: 01
	.short 0                                                   // 0000000597F2: 0000
	.long 0                                                    // 0000000597F4: 00000000
	.long 0x11ba                                               // 0000000597F8: 000011BA
	.long 0x70312                                              // 0000000597FC: 00070312
	.long 0x6f700                                              // 000000059800: 0006F700
	.long 0                                                    // 000000059804: 00000000
	.ascii "x"                                                 // 000000059808: 78
	.byte 0x1                                                  // 000000059809: 01
	.short 0                                                   // 00000005980A: 0000
	.long 0                                                    // 00000005980C: 00000000
	.long 0x16f4                                               // 000000059810: 000016F4
	.long 0x70312                                              // 000000059814: 00070312
	.long 0x71b00                                              // 000000059818: 00071B00
	.long 0                                                    // 00000005981C: 00000000
	.long 0x9c                                                 // 000000059820: 0000009C
	.long 0                                                    // 000000059824: 00000000
	.long 0x2eb3                                               // 000000059828: 00002EB3
	.long 0x70312                                              // 00000005982C: 00070312
	.long 0x7bd00                                              // 000000059830: 0007BD00
	.long 0                                                    // 000000059834: 00000000
	.long 0x80                                                 // 000000059838: 00000080
	.long 0                                                    // 00000005983C: 00000000
	.ascii "?H"                                                // 000000059840: 483F
	.short 0                                                   // 000000059842: 0000
	.long 0x60311                                              // 000000059844: 00060311
	.ascii "@Y"                                                // 000000059848: 5940
	.short 0x6                                                 // 00000005984A: 0006
	.long 0                                                    // 00000005984C: 00000000
	.ascii "@"                                                 // 000000059850: 40
	.byte 0                                                    // 000000059851: 00
	.short 0                                                   // 000000059852: 0000
	.long 0                                                    // 000000059854: 00000000
	.ascii "v"                                                 // 000000059858: 76
	.byte 0x1                                                  // 000000059859: 01
	.short 0                                                   // 00000005985A: 0000
	.long 0x70312                                              // 00000005985C: 00070312
	.long 0x68000                                              // 000000059860: 00068000
	.long 0                                                    // 000000059864: 00000000
	.long 0x118                                                // 000000059868: 00000118
	.long 0                                                    // 00000005986C: 00000000
	.long 0x3915                                               // 000000059870: 00003915
	.long 0x60311                                              // 000000059874: 00060311
	.long 0x64c80                                              // 000000059878: 00064C80
	.long 0                                                    // 00000005987C: 00000000
	.ascii "@"                                                 // 000000059880: 40
	.byte 0                                                    // 000000059881: 00
	.short 0                                                   // 000000059882: 0000
	.long 0                                                    // 000000059884: 00000000
	.long 0x1dc0                                               // 000000059888: 00001DC0
	.long 0x70312                                              // 00000005988C: 00070312
	.long 0x74b00                                              // 000000059890: 00074B00
	.long 0                                                    // 000000059894: 00000000
	.long 0x188                                                // 000000059898: 00000188
	.long 0                                                    // 00000005989C: 00000000
	.ascii ">	"                                                // 0000000598A0: 093E
	.short 0                                                   // 0000000598A2: 0000
	.long 0x70312                                              // 0000000598A4: 00070312
	.long 0x6b900                                              // 0000000598A8: 0006B900
	.long 0                                                    // 0000000598AC: 00000000
	.long 0x118                                                // 0000000598B0: 00000118
	.long 0                                                    // 0000000598B4: 00000000
	.long 0x16a8                                               // 0000000598B8: 000016A8
	.long 0x60311                                              // 0000000598BC: 00060311
	.long 0x62cc0                                              // 0000000598C0: 00062CC0
	.long 0                                                    // 0000000598C4: 00000000
	.ascii "@"                                                 // 0000000598C8: 40
	.byte 0                                                    // 0000000598C9: 00
	.short 0                                                   // 0000000598CA: 0000
	.long 0                                                    // 0000000598CC: 00000000
	.ascii "b"                                                 // 0000000598D0: 62
	.byte 0x18                                                 // 0000000598D1: 18
	.short 0                                                   // 0000000598D2: 0000
	.long 0x60311                                              // 0000000598D4: 00060311
	.long 0x62f00                                              // 0000000598D8: 00062F00
	.long 0                                                    // 0000000598DC: 00000000
	.ascii "@"                                                 // 0000000598E0: 40
	.byte 0                                                    // 0000000598E1: 00
	.short 0                                                   // 0000000598E2: 0000
	.long 0                                                    // 0000000598E4: 00000000
	.ascii "R'"                                                // 0000000598E8: 2752
	.short 0                                                   // 0000000598EA: 0000
	.long 0x60311                                              // 0000000598EC: 00060311
	.long 0x63bc0                                              // 0000000598F0: 00063BC0
	.long 0                                                    // 0000000598F4: 00000000
	.ascii "@"                                                 // 0000000598F8: 40
	.byte 0                                                    // 0000000598F9: 00
	.short 0                                                   // 0000000598FA: 0000
	.long 0                                                    // 0000000598FC: 00000000
	.long 0x2ef0                                               // 000000059900: 00002EF0
	.long 0x60311                                              // 000000059904: 00060311
	.ascii "@B"                                                // 000000059908: 4240
	.short 0x6                                                 // 00000005990A: 0006
	.long 0                                                    // 00000005990C: 00000000
	.ascii "@"                                                 // 000000059910: 40
	.byte 0                                                    // 000000059911: 00
	.short 0                                                   // 000000059912: 0000
	.long 0                                                    // 000000059914: 00000000
	.ascii " <"                                                // 000000059918: 3C20
	.short 0                                                   // 00000005991A: 0000
	.long 0x70312                                              // 00000005991C: 00070312
	.long 0x7f300                                              // 000000059920: 0007F300
	.long 0                                                    // 000000059924: 00000000
	.long 0xc8                                                 // 000000059928: 000000C8
	.long 0                                                    // 00000005992C: 00000000
	.long 0x37c5                                               // 000000059930: 000037C5
	.long 0x70312                                              // 000000059934: 00070312
	.long 0x7e400                                              // 000000059938: 0007E400
	.long 0                                                    // 00000005993C: 00000000
	.long 0xb0                                                 // 000000059940: 000000B0
	.long 0                                                    // 000000059944: 00000000
	.long 0x41a2                                               // 000000059948: 000041A2
	.long 0x60311                                              // 00000005994C: 00060311
	.long 0x653c0                                              // 000000059950: 000653C0
	.long 0                                                    // 000000059954: 00000000
	.ascii "@"                                                 // 000000059958: 40
	.byte 0                                                    // 000000059959: 00
	.short 0                                                   // 00000005995A: 0000
	.long 0                                                    // 00000005995C: 00000000
	.long 0xb0b                                                // 000000059960: 00000B0B
	.long 0x70312                                              // 000000059964: 00070312
	.long 0x6c600                                              // 000000059968: 0006C600
	.long 0                                                    // 00000005996C: 00000000
	.long 0x108                                                // 000000059970: 00000108
	.long 0                                                    // 000000059974: 00000000
	.ascii "8"                                                 // 000000059978: 38
	.byte 0x14                                                 // 000000059979: 14
	.short 0                                                   // 00000005997A: 0000
	.long 0x70312                                              // 00000005997C: 00070312
	.long 0x70b00                                              // 000000059980: 00070B00
	.long 0                                                    // 000000059984: 00000000
	.ascii "x"                                                 // 000000059988: 78
	.byte 0                                                    // 000000059989: 00
	.short 0                                                   // 00000005998A: 0000
	.long 0                                                    // 00000005998C: 00000000
	.long 0x328e                                               // 000000059990: 0000328E
	.long 0x60311                                              // 000000059994: 00060311
	.long 0x64680                                              // 000000059998: 00064680
	.long 0                                                    // 00000005999C: 00000000
	.ascii "@"                                                 // 0000000599A0: 40
	.byte 0                                                    // 0000000599A1: 00
	.short 0                                                   // 0000000599A2: 0000
	.long 0                                                    // 0000000599A4: 00000000
	.long 0x34ba                                               // 0000000599A8: 000034BA
	.long 0x60311                                              // 0000000599AC: 00060311
	.long 0x64900                                              // 0000000599B0: 00064900
	.long 0                                                    // 0000000599B4: 00000000
	.ascii "@"                                                 // 0000000599B8: 40
	.byte 0                                                    // 0000000599B9: 00
	.short 0                                                   // 0000000599BA: 0000
	.long 0                                                    // 0000000599BC: 00000000
	.long 0x3ac6                                               // 0000000599C0: 00003AC6
	.long 0x60311                                              // 0000000599C4: 00060311
	.long 0x64e00                                              // 0000000599C8: 00064E00
	.long 0                                                    // 0000000599CC: 00000000
	.ascii "@"                                                 // 0000000599D0: 40
	.byte 0                                                    // 0000000599D1: 00
	.short 0                                                   // 0000000599D2: 0000
	.long 0                                                    // 0000000599D4: 00000000
	.long 0x10c0                                               // 0000000599D8: 000010C0
	.long 0x60311                                              // 0000000599DC: 00060311
	.long 0x625c0                                              // 0000000599E0: 000625C0
	.long 0                                                    // 0000000599E4: 00000000
	.ascii "@"                                                 // 0000000599E8: 40
	.byte 0                                                    // 0000000599E9: 00
	.short 0                                                   // 0000000599EA: 0000
	.long 0                                                    // 0000000599EC: 00000000
	.long 0x11fd                                               // 0000000599F0: 000011FD
	.long 0x70312                                              // 0000000599F4: 00070312
	.long 0x6f900                                              // 0000000599F8: 0006F900
	.long 0                                                    // 0000000599FC: 00000000
	.long 0x118                                                // 000000059A00: 00000118
	.long 0                                                    // 000000059A04: 00000000
	.long 0x41c9                                               // 000000059A08: 000041C9
	.long 0x70312                                              // 000000059A0C: 00070312
	.long 0x80800                                              // 000000059A10: 00080800
	.long 0                                                    // 000000059A14: 00000000
	.long 0xfc                                                 // 000000059A18: 000000FC
	.long 0                                                    // 000000059A1C: 00000000
	.ascii "ZM"                                                // 000000059A20: 4D5A
	.short 0                                                   // 000000059A22: 0000
	.long 0x60311                                              // 000000059A24: 00060311
	.long 0x65ec0                                              // 000000059A28: 00065EC0
	.long 0                                                    // 000000059A2C: 00000000
	.ascii "@"                                                 // 000000059A30: 40
	.byte 0                                                    // 000000059A31: 00
	.short 0                                                   // 000000059A32: 0000
	.long 0                                                    // 000000059A34: 00000000
	.long 0xdab                                                // 000000059A38: 00000DAB
	.long 0x70312                                              // 000000059A3C: 00070312
	.long 0x6d900                                              // 000000059A40: 0006D900
	.long 0                                                    // 000000059A44: 00000000
	.ascii "P"                                                 // 000000059A48: 50
	.byte 0x1                                                  // 000000059A49: 01
	.short 0                                                   // 000000059A4A: 0000
	.long 0                                                    // 000000059A4C: 00000000
	.ascii "O"                                                 // 000000059A50: 4F
	.byte 0x13                                                 // 000000059A51: 13
	.short 0                                                   // 000000059A52: 0000
	.long 0x60311                                              // 000000059A54: 00060311
	.ascii "@("                                                // 000000059A58: 2840
	.short 0x6                                                 // 000000059A5A: 0006
	.long 0                                                    // 000000059A5C: 00000000
	.ascii "@"                                                 // 000000059A60: 40
	.byte 0                                                    // 000000059A61: 00
	.short 0                                                   // 000000059A62: 0000
	.long 0                                                    // 000000059A64: 00000000
	.long 0x2916                                               // 000000059A68: 00002916
	.long 0x70312                                              // 000000059A6C: 00070312
	.long 0x79700                                              // 000000059A70: 00079700
	.long 0                                                    // 000000059A74: 00000000
	.long 0x198                                                // 000000059A78: 00000198
	.long 0                                                    // 000000059A7C: 00000000
	.long 0x49f0                                               // 000000059A80: 000049F0
	.long 0x60311                                              // 000000059A84: 00060311
	.long 0x65ac0                                              // 000000059A88: 00065AC0
	.long 0                                                    // 000000059A8C: 00000000
	.ascii "@"                                                 // 000000059A90: 40
	.byte 0                                                    // 000000059A91: 00
	.short 0                                                   // 000000059A92: 0000
	.long 0                                                    // 000000059A94: 00000000
	.long 0x4a8e                                               // 000000059A98: 00004A8E
	.long 0x60311                                              // 000000059A9C: 00060311
	.long 0x65b80                                              // 000000059AA0: 00065B80
	.long 0                                                    // 000000059AA4: 00000000
	.ascii "@"                                                 // 000000059AA8: 40
	.byte 0                                                    // 000000059AA9: 00
	.short 0                                                   // 000000059AAA: 0000
	.long 0                                                    // 000000059AAC: 00000000
	.long 0xbb6                                                // 000000059AB0: 00000BB6
	.long 0x60311                                              // 000000059AB4: 00060311
	.long 0x62100                                              // 000000059AB8: 00062100
	.long 0                                                    // 000000059ABC: 00000000
	.ascii "@"                                                 // 000000059AC0: 40
	.byte 0                                                    // 000000059AC1: 00
	.short 0                                                   // 000000059AC2: 0000
	.long 0                                                    // 000000059AC4: 00000000
	.long 0x13b6                                               // 000000059AC8: 000013B6
	.long 0x70312                                              // 000000059ACC: 00070312
	.long 0x70700                                              // 000000059AD0: 00070700
	.long 0                                                    // 000000059AD4: 00000000
	.ascii "x"                                                 // 000000059AD8: 78
	.byte 0x1                                                  // 000000059AD9: 01
	.short 0                                                   // 000000059ADA: 0000
	.long 0                                                    // 000000059ADC: 00000000
	.ascii "~"                                                 // 000000059AE0: 7E
	.byte 0x18                                                 // 000000059AE1: 18
	.short 0                                                   // 000000059AE2: 0000
	.long 0x70312                                              // 000000059AE4: 00070312
	.long 0x72800                                              // 000000059AE8: 00072800
	.long 0                                                    // 000000059AEC: 00000000
	.long 0x198                                                // 000000059AF0: 00000198
	.long 0                                                    // 000000059AF4: 00000000
	.ascii "($"                                                // 000000059AF8: 2428
	.short 0                                                   // 000000059AFA: 0000
	.long 0x70312                                              // 000000059AFC: 00070312
	.long 0x77700                                              // 000000059B00: 00077700
	.long 0                                                    // 000000059B04: 00000000
	.ascii " "                                                 // 000000059B08: 20
	.byte 0x1                                                  // 000000059B09: 01
	.short 0                                                   // 000000059B0A: 0000
	.long 0                                                    // 000000059B0C: 00000000
	.long 0x13d6                                               // 000000059B10: 000013D6
	.long 0x60311                                              // 000000059B14: 00060311
	.long 0x628c0                                              // 000000059B18: 000628C0
	.long 0                                                    // 000000059B1C: 00000000
	.ascii "@"                                                 // 000000059B20: 40
	.byte 0                                                    // 000000059B21: 00
	.short 0                                                   // 000000059B22: 0000
	.long 0                                                    // 000000059B24: 00000000
	.long 0x178c                                               // 000000059B28: 0000178C
	.long 0x60311                                              // 000000059B2C: 00060311
	.long 0x62e00                                              // 000000059B30: 00062E00
	.long 0                                                    // 000000059B34: 00000000
	.ascii "@"                                                 // 000000059B38: 40
	.byte 0                                                    // 000000059B39: 00
	.short 0                                                   // 000000059B3A: 0000
	.long 0                                                    // 000000059B3C: 00000000
	.long 0x36ec                                               // 000000059B40: 000036EC
	.long 0x70312                                              // 000000059B44: 00070312
	.long 0x7e100                                              // 000000059B48: 0007E100
	.long 0                                                    // 000000059B4C: 00000000
	.long 0xbc                                                 // 000000059B50: 000000BC
	.long 0                                                    // 000000059B54: 00000000
	.ascii ">M"                                                // 000000059B58: 4D3E
	.short 0                                                   // 000000059B5A: 0000
	.long 0x70312                                              // 000000059B5C: 00070312
	.long 0x83900                                              // 000000059B60: 00083900
	.long 0                                                    // 000000059B64: 00000000
	.ascii "|"                                                 // 000000059B68: 7C
	.byte 0                                                    // 000000059B69: 00
	.short 0                                                   // 000000059B6A: 0000
	.long 0                                                    // 000000059B6C: 00000000
	.ascii "0"                                                 // 000000059B70: 30
	.byte 0x13                                                 // 000000059B71: 13
	.short 0                                                   // 000000059B72: 0000
	.long 0x70312                                              // 000000059B74: 00070312
	.long 0x70300                                              // 000000059B78: 00070300
	.long 0                                                    // 000000059B7C: 00000000
	.long 0x110                                                // 000000059B80: 00000110
	.long 0                                                    // 000000059B84: 00000000
	.long 0x33e6                                               // 000000059B88: 000033E6
	.long 0x70312                                              // 000000059B8C: 00070312
	.long 0x7d600                                              // 000000059B90: 0007D600
	.long 0                                                    // 000000059B94: 00000000
	.long 0x104                                                // 000000059B98: 00000104
	.long 0                                                    // 000000059B9C: 00000000
	.long 0x49e2                                               // 000000059BA0: 000049E2
	.long 0x70312                                              // 000000059BA4: 00070312
	.long 0x82900                                              // 000000059BA8: 00082900
	.long 0                                                    // 000000059BAC: 00000000
	.ascii "T"                                                 // 000000059BB0: 54
	.byte 0                                                    // 000000059BB1: 00
	.short 0                                                   // 000000059BB2: 0000
	.long 0                                                    // 000000059BB4: 00000000
	.ascii "6"                                                 // 000000059BB8: 36
	.byte 0x7                                                  // 000000059BB9: 07
	.short 0                                                   // 000000059BBA: 0000
	.long 0x70312                                              // 000000059BBC: 00070312
	.long 0x6aa00                                              // 000000059BC0: 0006AA00
	.long 0                                                    // 000000059BC4: 00000000
	.long 0x118                                                // 000000059BC8: 00000118
	.long 0                                                    // 000000059BCC: 00000000
	.ascii "4"                                                 // 000000059BD0: 34
	.byte 0x15                                                 // 000000059BD1: 15
	.short 0                                                   // 000000059BD2: 0000
	.long 0x70312                                              // 000000059BD4: 00070312
	.long 0x71100                                              // 000000059BD8: 00071100
	.long 0                                                    // 000000059BDC: 00000000
	.long 0x90                                                 // 000000059BE0: 00000090
	.long 0                                                    // 000000059BE4: 00000000
	.ascii "*/"                                                // 000000059BE8: 2F2A
	.short 0                                                   // 000000059BEA: 0000
	.long 0x60311                                              // 000000059BEC: 00060311
	.long 0x64280                                              // 000000059BF0: 00064280
	.long 0                                                    // 000000059BF4: 00000000
	.ascii "@"                                                 // 000000059BF8: 40
	.byte 0                                                    // 000000059BF9: 00
	.short 0                                                   // 000000059BFA: 0000
	.long 0                                                    // 000000059BFC: 00000000
	.ascii "18"                                                // 000000059C00: 3831
	.short 0                                                   // 000000059C02: 0000
	.long 0x60311                                              // 000000059C04: 00060311
	.long 0x64bc0                                              // 000000059C08: 00064BC0
	.long 0                                                    // 000000059C0C: 00000000
	.ascii "@"                                                 // 000000059C10: 40
	.byte 0                                                    // 000000059C11: 00
	.short 0                                                   // 000000059C12: 0000
	.long 0                                                    // 000000059C14: 00000000
	.ascii "/:"                                                // 000000059C18: 3A2F
	.short 0                                                   // 000000059C1A: 0000
	.long 0x60311                                              // 000000059C1C: 00060311
	.long 0x64d80                                              // 000000059C20: 00064D80
	.long 0                                                    // 000000059C24: 00000000
	.ascii "@"                                                 // 000000059C28: 40
	.byte 0                                                    // 000000059C29: 00
	.short 0                                                   // 000000059C2A: 0000
	.long 0                                                    // 000000059C2C: 00000000
	.long 0x45e3                                               // 000000059C30: 000045E3
	.long 0x60311                                              // 000000059C34: 00060311
	.ascii "@W"                                                // 000000059C38: 5740
	.short 0x6                                                 // 000000059C3A: 0006
	.long 0                                                    // 000000059C3C: 00000000
	.ascii "@"                                                 // 000000059C40: 40
	.byte 0                                                    // 000000059C41: 00
	.short 0                                                   // 000000059C42: 0000
	.long 0                                                    // 000000059C44: 00000000
	.long 0x798                                                // 000000059C48: 00000798
	.long 0x60311                                              // 000000059C4C: 00060311
	.long 0x61d00                                              // 000000059C50: 00061D00
	.long 0                                                    // 000000059C54: 00000000
	.ascii "@"                                                 // 000000059C58: 40
	.byte 0                                                    // 000000059C59: 00
	.short 0                                                   // 000000059C5A: 0000
	.long 0                                                    // 000000059C5C: 00000000
	.ascii "e)"                                                // 000000059C60: 2965
	.short 0                                                   // 000000059C62: 0000
	.long 0x70312                                              // 000000059C64: 00070312
	.long 0x79900                                              // 000000059C68: 00079900
	.long 0                                                    // 000000059C6C: 00000000
	.long 0x1a0                                                // 000000059C70: 000001A0
	.long 0                                                    // 000000059C74: 00000000
	.ascii "F/"                                                // 000000059C78: 2F46
	.short 0                                                   // 000000059C7A: 0000
	.long 0x70312                                              // 000000059C7C: 00070312
	.long 0x7c000                                              // 000000059C80: 0007C000
	.long 0                                                    // 000000059C84: 00000000
	.ascii "x"                                                 // 000000059C88: 78
	.byte 0                                                    // 000000059C89: 00
	.short 0                                                   // 000000059C8A: 0000
	.long 0                                                    // 000000059C8C: 00000000
	.ascii "i<"                                                // 000000059C90: 3C69
	.short 0                                                   // 000000059C92: 0000
	.long 0x70312                                              // 000000059C94: 00070312
	.long 0x7f400                                              // 000000059C98: 0007F400
	.long 0                                                    // 000000059C9C: 00000000
	.long 0xb0                                                 // 000000059CA0: 000000B0
	.long 0                                                    // 000000059CA4: 00000000
	.long 0x14                                                 // 000000059CA8: 00000014
	.long 0x70312                                              // 000000059CAC: 00070312
	.long 0x67100                                              // 000000059CB0: 00067100
	.long 0                                                    // 000000059CB4: 00000000
	.long 0x118                                                // 000000059CB8: 00000118
	.long 0                                                    // 000000059CBC: 00000000
	.long 0x14d8                                               // 000000059CC0: 000014D8
	.long 0x70312                                              // 000000059CC4: 00070312
	.long 0x70f00                                              // 000000059CC8: 00070F00
	.long 0                                                    // 000000059CCC: 00000000
	.ascii "p"                                                 // 000000059CD0: 70
	.byte 0                                                    // 000000059CD1: 00
	.short 0                                                   // 000000059CD2: 0000
	.long 0                                                    // 000000059CD4: 00000000
	.long 0x18ee                                               // 000000059CD8: 000018EE
	.long 0x70312                                              // 000000059CDC: 00070312
	.long 0x72c00                                              // 000000059CE0: 00072C00
	.long 0                                                    // 000000059CE4: 00000000
	.long 0x94                                                 // 000000059CE8: 00000094
	.long 0                                                    // 000000059CEC: 00000000
	.ascii "6"                                                 // 000000059CF0: 36
	.byte 0x1a                                                 // 000000059CF1: 1A
	.short 0                                                   // 000000059CF2: 0000
	.long 0x60311                                              // 000000059CF4: 00060311
	.long 0x630c0                                              // 000000059CF8: 000630C0
	.long 0                                                    // 000000059CFC: 00000000
	.ascii "@"                                                 // 000000059D00: 40
	.byte 0                                                    // 000000059D01: 00
	.short 0                                                   // 000000059D02: 0000
	.long 0                                                    // 000000059D04: 00000000
	.long 0x20c9                                               // 000000059D08: 000020C9
	.long 0x60311                                              // 000000059D0C: 00060311
	.ascii "@6"                                                // 000000059D10: 3640
	.short 0x6                                                 // 000000059D12: 0006
	.long 0                                                    // 000000059D14: 00000000
	.ascii "@"                                                 // 000000059D18: 40
	.byte 0                                                    // 000000059D19: 00
	.short 0                                                   // 000000059D1A: 0000
	.long 0                                                    // 000000059D1C: 00000000
	.long 0x219b                                               // 000000059D20: 0000219B
	.long 0x60311                                              // 000000059D24: 00060311
	.long 0x63700                                              // 000000059D28: 00063700
	.long 0                                                    // 000000059D2C: 00000000
	.ascii "@"                                                 // 000000059D30: 40
	.byte 0                                                    // 000000059D31: 00
	.short 0                                                   // 000000059D32: 0000
	.long 0                                                    // 000000059D34: 00000000
	.ascii "|#"                                                // 000000059D38: 237C
	.short 0                                                   // 000000059D3A: 0000
	.long 0x60311                                              // 000000059D3C: 00060311
	.long 0x63880                                              // 000000059D40: 00063880
	.long 0                                                    // 000000059D44: 00000000
	.ascii "@"                                                 // 000000059D48: 40
	.byte 0                                                    // 000000059D49: 00
	.short 0                                                   // 000000059D4A: 0000
	.long 0                                                    // 000000059D4C: 00000000
	.ascii "Q$"                                                // 000000059D50: 2451
	.short 0                                                   // 000000059D52: 0000
	.long 0x60311                                              // 000000059D54: 00060311
	.ascii "@9"                                                // 000000059D58: 3940
	.short 0x6                                                 // 000000059D5A: 0006
	.long 0                                                    // 000000059D5C: 00000000
	.ascii "@"                                                 // 000000059D60: 40
	.byte 0                                                    // 000000059D61: 00
	.short 0                                                   // 000000059D62: 0000
	.long 0                                                    // 000000059D64: 00000000
	.ascii "[3"                                                // 000000059D68: 335B
	.short 0                                                   // 000000059D6A: 0000
	.long 0x60311                                              // 000000059D6C: 00060311
	.long 0x64780                                              // 000000059D70: 00064780
	.long 0                                                    // 000000059D74: 00000000
	.ascii "@"                                                 // 000000059D78: 40
	.byte 0                                                    // 000000059D79: 00
	.short 0                                                   // 000000059D7A: 0000
	.long 0                                                    // 000000059D7C: 00000000
	.long 0x3391                                               // 000000059D80: 00003391
	.long 0x60311                                              // 000000059D84: 00060311
	.long 0x647c0                                              // 000000059D88: 000647C0
	.long 0                                                    // 000000059D8C: 00000000
	.ascii "@"                                                 // 000000059D90: 40
	.byte 0                                                    // 000000059D91: 00
	.short 0                                                   // 000000059D92: 0000
	.long 0                                                    // 000000059D94: 00000000
	.long 0x81f                                                // 000000059D98: 0000081F
	.long 0x60311                                              // 000000059D9C: 00060311
	.long 0x61d80                                              // 000000059DA0: 00061D80
	.long 0                                                    // 000000059DA4: 00000000
	.ascii "@"                                                 // 000000059DA8: 40
	.byte 0                                                    // 000000059DA9: 00
	.short 0                                                   // 000000059DAA: 0000
	.long 0                                                    // 000000059DAC: 00000000
	.long 0xfb3                                                // 000000059DB0: 00000FB3
	.long 0x60311                                              // 000000059DB4: 00060311
	.long 0x624c0                                              // 000000059DB8: 000624C0
	.long 0                                                    // 000000059DBC: 00000000
	.ascii "@"                                                 // 000000059DC0: 40
	.byte 0                                                    // 000000059DC1: 00
	.short 0                                                   // 000000059DC2: 0000
	.long 0                                                    // 000000059DC4: 00000000
	.long 0x1417                                               // 000000059DC8: 00001417
	.long 0x60311                                              // 000000059DCC: 00060311
	.long 0x62900                                              // 000000059DD0: 00062900
	.long 0                                                    // 000000059DD4: 00000000
	.ascii "@"                                                 // 000000059DD8: 40
	.byte 0                                                    // 000000059DD9: 00
	.short 0                                                   // 000000059DDA: 0000
	.long 0                                                    // 000000059DDC: 00000000
	.long 0x15b9                                               // 000000059DE0: 000015B9
	.long 0x70312                                              // 000000059DE4: 00070312
	.long 0x71400                                              // 000000059DE8: 00071400
	.long 0                                                    // 000000059DEC: 00000000
	.long 0x94                                                 // 000000059DF0: 00000094
	.long 0                                                    // 000000059DF4: 00000000
	.long 0x19bb                                               // 000000059DF8: 000019BB
	.long 0x70312                                              // 000000059DFC: 00070312
	.long 0x73100                                              // 000000059E00: 00073100
	.long 0                                                    // 000000059E04: 00000000
	.ascii "0"                                                 // 000000059E08: 30
	.byte 0x1                                                  // 000000059E09: 01
	.short 0                                                   // 000000059E0A: 0000
	.long 0                                                    // 000000059E0C: 00000000
	.ascii ",'"                                                // 000000059E10: 272C
	.short 0                                                   // 000000059E12: 0000
	.long 0x70312                                              // 000000059E14: 00070312
	.long 0x78b00                                              // 000000059E18: 00078B00
	.long 0                                                    // 000000059E1C: 00000000
	.long 0x180                                                // 000000059E20: 00000180
	.long 0                                                    // 000000059E24: 00000000
	.ascii "_0"                                                // 000000059E28: 305F
	.short 0                                                   // 000000059E2A: 0000
	.long 0x70312                                              // 000000059E2C: 00070312
	.long 0x7c500                                              // 000000059E30: 0007C500
	.long 0                                                    // 000000059E34: 00000000
	.long 0x84                                                 // 000000059E38: 00000084
	.long 0                                                    // 000000059E3C: 00000000
	.long 0x3714                                               // 000000059E40: 00003714
	.long 0x60311                                              // 000000059E44: 00060311
	.long 0x64ac0                                              // 000000059E48: 00064AC0
	.long 0                                                    // 000000059E4C: 00000000
	.ascii "@"                                                 // 000000059E50: 40
	.byte 0                                                    // 000000059E51: 00
	.short 0                                                   // 000000059E52: 0000
	.long 0                                                    // 000000059E54: 00000000
	.long 0x4d1e                                               // 000000059E58: 00004D1E
	.long 0x60311                                              // 000000059E5C: 00060311
	.long 0x65e80                                              // 000000059E60: 00065E80
	.long 0                                                    // 000000059E64: 00000000
	.ascii "@"                                                 // 000000059E68: 40
	.byte 0                                                    // 000000059E69: 00
	.short 0                                                   // 000000059E6A: 0000
	.long 0                                                    // 000000059E6C: 00000000
	.long 0x1fc                                                // 000000059E70: 000001FC
	.long 0x70312                                              // 000000059E74: 00070312
	.long 0x68400                                              // 000000059E78: 00068400
	.long 0                                                    // 000000059E7C: 00000000
	.long 0x104                                                // 000000059E80: 00000104
	.long 0                                                    // 000000059E84: 00000000
	.ascii "M"                                                 // 000000059E88: 4D
	.byte 0x14                                                 // 000000059E89: 14
	.short 0                                                   // 000000059E8A: 0000
	.long 0x70312                                              // 000000059E8C: 00070312
	.long 0x70c00                                              // 000000059E90: 00070C00
	.long 0                                                    // 000000059E94: 00000000
	.ascii "p"                                                 // 000000059E98: 70
	.byte 0                                                    // 000000059E99: 00
	.short 0                                                   // 000000059E9A: 0000
	.long 0                                                    // 000000059E9C: 00000000
	.long 0x1d1                                                // 000000059EA0: 000001D1
	.long 0x60311                                              // 000000059EA4: 00060311
	.long 0x61780                                              // 000000059EA8: 00061780
	.long 0                                                    // 000000059EAC: 00000000
	.ascii "@"                                                 // 000000059EB0: 40
	.byte 0                                                    // 000000059EB1: 00
	.short 0                                                   // 000000059EB2: 0000
	.long 0                                                    // 000000059EB4: 00000000
	.long 0x1607                                               // 000000059EB8: 00001607
	.long 0x70312                                              // 000000059EBC: 00070312
	.long 0x71600                                              // 000000059EC0: 00071600
	.long 0                                                    // 000000059EC4: 00000000
	.ascii "x"                                                 // 000000059EC8: 78
	.byte 0                                                    // 000000059EC9: 00
	.short 0                                                   // 000000059ECA: 0000
	.long 0                                                    // 000000059ECC: 00000000
	.ascii "!"                                                 // 000000059ED0: 21
	.byte 0x19                                                 // 000000059ED1: 19
	.short 0                                                   // 000000059ED2: 0000
	.long 0x70312                                              // 000000059ED4: 00070312
	.long 0x72d00                                              // 000000059ED8: 00072D00
	.long 0                                                    // 000000059EDC: 00000000
	.ascii "4"                                                 // 000000059EE0: 34
	.byte 0x1                                                  // 000000059EE1: 01
	.short 0                                                   // 000000059EE2: 0000
	.long 0                                                    // 000000059EE4: 00000000
	.long 0x20a4                                               // 000000059EE8: 000020A4
	.long 0x70312                                              // 000000059EEC: 00070312
	.long 0x75f00                                              // 000000059EF0: 00075F00
	.long 0                                                    // 000000059EF4: 00000000
	.long 0x18c                                                // 000000059EF8: 0000018C
	.long 0                                                    // 000000059EFC: 00000000
	.long 0x269a                                               // 000000059F00: 0000269A
	.long 0x70312                                              // 000000059F04: 00070312
	.long 0x78700                                              // 000000059F08: 00078700
	.long 0                                                    // 000000059F0C: 00000000
	.long 0x198                                                // 000000059F10: 00000198
	.long 0                                                    // 000000059F14: 00000000
	.ascii "V\n"                                               // 000000059F18: 0A56
	.short 0                                                   // 000000059F1A: 0000
	.long 0x70312                                              // 000000059F1C: 00070312
	.long 0x6c000                                              // 000000059F20: 0006C000
	.long 0                                                    // 000000059F24: 00000000
	.ascii "h"                                                 // 000000059F28: 68
	.byte 0x1                                                  // 000000059F29: 01
	.short 0                                                   // 000000059F2A: 0000
	.long 0                                                    // 000000059F2C: 00000000
	.long 0x25d6                                               // 000000059F30: 000025D6
	.long 0x60311                                              // 000000059F34: 00060311
	.long 0x63a80                                              // 000000059F38: 00063A80
	.long 0                                                    // 000000059F3C: 00000000
	.ascii "@"                                                 // 000000059F40: 40
	.byte 0                                                    // 000000059F41: 00
	.short 0                                                   // 000000059F42: 0000
	.long 0                                                    // 000000059F44: 00000000
	.long 0x379a                                               // 000000059F48: 0000379A
	.long 0x60311                                              // 000000059F4C: 00060311
	.ascii "@K"                                                // 000000059F50: 4B40
	.short 0x6                                                 // 000000059F52: 0006
	.long 0                                                    // 000000059F54: 00000000
	.ascii "@"                                                 // 000000059F58: 40
	.byte 0                                                    // 000000059F59: 00
	.short 0                                                   // 000000059F5A: 0000
	.long 0                                                    // 000000059F5C: 00000000
	.long 0x151c                                               // 000000059F60: 0000151C
	.long 0x60311                                              // 000000059F64: 00060311
	.long 0x62a80                                              // 000000059F68: 00062A80
	.long 0                                                    // 000000059F6C: 00000000
	.ascii "@"                                                 // 000000059F70: 40
	.byte 0                                                    // 000000059F71: 00
	.short 0                                                   // 000000059F72: 0000
	.long 0                                                    // 000000059F74: 00000000
	.ascii "4"                                                 // 000000059F78: 34
	.byte 0x16                                                 // 000000059F79: 16
	.short 0                                                   // 000000059F7A: 0000
	.long 0x70312                                              // 000000059F7C: 00070312
	.long 0x71700                                              // 000000059F80: 00071700
	.long 0                                                    // 000000059F84: 00000000
	.ascii "l"                                                 // 000000059F88: 6C
	.byte 0                                                    // 000000059F89: 00
	.short 0                                                   // 000000059F8A: 0000
	.long 0                                                    // 000000059F8C: 00000000
	.ascii "s&"                                                // 000000059F90: 2673
	.short 0                                                   // 000000059F92: 0000
	.long 0x60311                                              // 000000059F94: 00060311
	.long 0x63b00                                              // 000000059F98: 00063B00
	.long 0                                                    // 000000059F9C: 00000000
	.ascii "@"                                                 // 000000059FA0: 40
	.byte 0                                                    // 000000059FA1: 00
	.short 0                                                   // 000000059FA2: 0000
	.long 0                                                    // 000000059FA4: 00000000
	.long 0x40de                                               // 000000059FA8: 000040DE
	.long 0x70312                                              // 000000059FAC: 00070312
	.long 0x80300                                              // 000000059FB0: 00080300
	.long 0                                                    // 000000059FB4: 00000000
	.ascii "8"                                                 // 000000059FB8: 38
	.byte 0x1                                                  // 000000059FB9: 01
	.short 0                                                   // 000000059FBA: 0000
	.long 0                                                    // 000000059FBC: 00000000
	.long 0x42f9                                               // 000000059FC0: 000042F9
	.long 0x70312                                              // 000000059FC4: 00070312
	.long 0x80c00                                              // 000000059FC8: 00080C00
	.long 0                                                    // 000000059FCC: 00000000
	.long 0xec                                                 // 000000059FD0: 000000EC
	.long 0                                                    // 000000059FD4: 00000000
	.long 0x45bc                                               // 000000059FD8: 000045BC
	.long 0x70312                                              // 000000059FDC: 00070312
	.long 0x81700                                              // 000000059FE0: 00081700
	.long 0                                                    // 000000059FE4: 00000000
	.long 0xfc                                                 // 000000059FE8: 000000FC
	.long 0                                                    // 000000059FEC: 00000000
	.long 0xc6                                                 // 000000059FF0: 000000C6
	.long 0x70312                                              // 000000059FF4: 00070312
	.long 0x67900                                              // 000000059FF8: 00067900
	.long 0                                                    // 000000059FFC: 00000000
	.long 0x108                                                // 00000005A000: 00000108
	.long 0                                                    // 00000005A004: 00000000
	.ascii "`"                                                 // 00000005A008: 60
	.byte 0x8                                                  // 00000005A009: 08
	.short 0                                                   // 00000005A00A: 0000
	.long 0x60311                                              // 00000005A00C: 00060311
	.long 0x61dc0                                              // 00000005A010: 00061DC0
	.long 0                                                    // 00000005A014: 00000000
	.ascii "@"                                                 // 00000005A018: 40
	.byte 0                                                    // 00000005A019: 00
	.short 0                                                   // 00000005A01A: 0000
	.long 0                                                    // 00000005A01C: 00000000
	.ascii "\\"                                                // 00000005A020: 5C
	.byte 0xd                                                  // 00000005A021: 0D
	.short 0                                                   // 00000005A022: 0000
	.long 0x70312                                              // 00000005A024: 00070312
	.long 0x6d700                                              // 00000005A028: 0006D700
	.long 0                                                    // 00000005A02C: 00000000
	.ascii "\\"                                                // 00000005A030: 5C
	.byte 0x1                                                  // 00000005A031: 01
	.short 0                                                   // 00000005A032: 0000
	.long 0                                                    // 00000005A034: 00000000
	.long 0xec5                                                // 00000005A038: 00000EC5
	.long 0x70312                                              // 00000005A03C: 00070312
	.long 0x6e100                                              // 00000005A040: 0006E100
	.long 0                                                    // 00000005A044: 00000000
	.ascii "l"                                                 // 00000005A048: 6C
	.byte 0x1                                                  // 00000005A049: 01
	.short 0                                                   // 00000005A04A: 0000
	.long 0                                                    // 00000005A04C: 00000000
	.ascii "4"                                                 // 00000005A050: 34
	.byte 0x1e                                                 // 00000005A051: 1E
	.short 0                                                   // 00000005A052: 0000
	.long 0x60311                                              // 00000005A054: 00060311
	.long 0x63400                                              // 00000005A058: 00063400
	.long 0                                                    // 00000005A05C: 00000000
	.ascii "@"                                                 // 00000005A060: 40
	.byte 0                                                    // 00000005A061: 00
	.short 0                                                   // 00000005A062: 0000
	.long 0                                                    // 00000005A064: 00000000
	.long 0x9e9                                                // 00000005A068: 000009E9
	.long 0x60311                                              // 00000005A06C: 00060311
	.ascii "@"                                                 // 00000005A070: 40
	.byte 0x1f                                                 // 00000005A071: 1F
	.short 0x6                                                 // 00000005A072: 0006
	.long 0                                                    // 00000005A074: 00000000
	.ascii "@"                                                 // 00000005A078: 40
	.byte 0                                                    // 00000005A079: 00
	.short 0                                                   // 00000005A07A: 0000
	.long 0                                                    // 00000005A07C: 00000000
	.ascii "("                                                 // 00000005A080: 28
	.byte 0x1d                                                 // 00000005A081: 1D
	.short 0                                                   // 00000005A082: 0000
	.long 0x70312                                              // 00000005A084: 00070312
	.long 0x74700                                              // 00000005A088: 00074700
	.long 0                                                    // 00000005A08C: 00000000
	.long 0x108                                                // 00000005A090: 00000108
	.long 0                                                    // 00000005A094: 00000000
	.ascii "+"                                                 // 00000005A098: 2B
	.byte 0x1f                                                 // 00000005A099: 1F
	.short 0                                                   // 00000005A09A: 0000
	.long 0x70312                                              // 00000005A09C: 00070312
	.long 0x75500                                              // 00000005A0A0: 00075500
	.long 0                                                    // 00000005A0A4: 00000000
	.ascii "("                                                 // 00000005A0A8: 28
	.byte 0x1                                                  // 00000005A0A9: 01
	.short 0                                                   // 00000005A0AA: 0000
	.long 0                                                    // 00000005A0AC: 00000000
	.ascii "}$"                                                // 00000005A0B0: 247D
	.short 0                                                   // 00000005A0B2: 0000
	.long 0x70312                                              // 00000005A0B4: 00070312
	.long 0x77900                                              // 00000005A0B8: 00077900
	.long 0                                                    // 00000005A0BC: 00000000
	.ascii " "                                                 // 00000005A0C0: 20
	.byte 0x1                                                  // 00000005A0C1: 01
	.short 0                                                   // 00000005A0C2: 0000
	.long 0                                                    // 00000005A0C4: 00000000
	.ascii "A3"                                                // 00000005A0C8: 3341
	.short 0                                                   // 00000005A0CA: 0000
	.long 0x70312                                              // 00000005A0CC: 00070312
	.long 0x7d300                                              // 00000005A0D0: 0007D300
	.long 0                                                    // 00000005A0D4: 00000000
	.long 0xb4                                                 // 00000005A0D8: 000000B4
	.long 0                                                    // 00000005A0DC: 00000000
	.ascii "r7"                                                // 00000005A0E0: 3772
	.short 0                                                   // 00000005A0E2: 0000
	.long 0x70312                                              // 00000005A0E4: 00070312
	.long 0x7e300                                              // 00000005A0E8: 0007E300
	.long 0                                                    // 00000005A0EC: 00000000
	.long 0xa8                                                 // 00000005A0F0: 000000A8
	.long 0                                                    // 00000005A0F4: 00000000
	.ascii "eG"                                                // 00000005A0F8: 4765
	.short 0                                                   // 00000005A0FA: 0000
	.long 0x60311                                              // 00000005A0FC: 00060311
	.long 0x65880                                              // 00000005A100: 00065880
	.long 0                                                    // 00000005A104: 00000000
	.ascii "@"                                                 // 00000005A108: 40
	.byte 0                                                    // 00000005A109: 00
	.short 0                                                   // 00000005A10A: 0000
	.long 0                                                    // 00000005A10C: 00000000
	.long 0x128d                                               // 00000005A110: 0000128D
	.long 0x60311                                              // 00000005A114: 00060311
	.long 0x62780                                              // 00000005A118: 00062780
	.long 0                                                    // 00000005A11C: 00000000
	.ascii "@"                                                 // 00000005A120: 40
	.byte 0                                                    // 00000005A121: 00
	.short 0                                                   // 00000005A122: 0000
	.long 0                                                    // 00000005A124: 00000000
	.long 0x15ea                                               // 00000005A128: 000015EA
	.long 0x60311                                              // 00000005A12C: 00060311
	.long 0x62bc0                                              // 00000005A130: 00062BC0
	.long 0                                                    // 00000005A134: 00000000
	.ascii "@"                                                 // 00000005A138: 40
	.byte 0                                                    // 00000005A139: 00
	.short 0                                                   // 00000005A13A: 0000
	.long 0                                                    // 00000005A13C: 00000000
	.long 0x2e8d                                               // 00000005A140: 00002E8D
	.long 0x60311                                              // 00000005A144: 00060311
	.long 0x641c0                                              // 00000005A148: 000641C0
	.long 0                                                    // 00000005A14C: 00000000
	.ascii "@"                                                 // 00000005A150: 40
	.byte 0                                                    // 00000005A151: 00
	.short 0                                                   // 00000005A152: 0000
	.long 0                                                    // 00000005A154: 00000000
	.long 0x2ec1                                               // 00000005A158: 00002EC1
	.long 0x60311                                              // 00000005A15C: 00060311
	.long 0x64200                                              // 00000005A160: 00064200
	.long 0                                                    // 00000005A164: 00000000
	.ascii "@"                                                 // 00000005A168: 40
	.byte 0                                                    // 00000005A169: 00
	.short 0                                                   // 00000005A16A: 0000
	.long 0                                                    // 00000005A16C: 00000000
	.ascii "ED"                                                // 00000005A170: 4445
	.short 0                                                   // 00000005A172: 0000
	.long 0x70312                                              // 00000005A174: 00070312
	.long 0x81100                                              // 00000005A178: 00081100
	.long 0                                                    // 00000005A17C: 00000000
	.long 0xfc                                                 // 00000005A180: 000000FC
	.long 0                                                    // 00000005A184: 00000000
	.ascii "YJ"                                                // 00000005A188: 4A59
	.short 0                                                   // 00000005A18A: 0000
	.long 0x60311                                              // 00000005A18C: 00060311
	.ascii "@["                                                // 00000005A190: 5B40
	.short 0x6                                                 // 00000005A192: 0006
	.long 0                                                    // 00000005A194: 00000000
	.ascii "@"                                                 // 00000005A198: 40
	.byte 0                                                    // 00000005A199: 00
	.short 0                                                   // 00000005A19A: 0000
	.long 0                                                    // 00000005A19C: 00000000
	.long 0x18e                                                // 00000005A1A0: 0000018E
	.long 0x60311                                              // 00000005A1A4: 00060311
	.ascii "@"                                                 // 00000005A1A8: 40
	.byte 0x17                                                 // 00000005A1A9: 17
	.short 0x6                                                 // 00000005A1AA: 0006
	.long 0                                                    // 00000005A1AC: 00000000
	.ascii "@"                                                 // 00000005A1B0: 40
	.byte 0                                                    // 00000005A1B1: 00
	.short 0                                                   // 00000005A1B2: 0000
	.long 0                                                    // 00000005A1B4: 00000000
	.ascii "%G"                                                // 00000005A1B8: 4725
	.short 0                                                   // 00000005A1BA: 0000
	.long 0x60311                                              // 00000005A1BC: 00060311
	.ascii "@X"                                                // 00000005A1C0: 5840
	.short 0x6                                                 // 00000005A1C2: 0006
	.long 0                                                    // 00000005A1C4: 00000000
	.ascii "@"                                                 // 00000005A1C8: 40
	.byte 0                                                    // 00000005A1C9: 00
	.short 0                                                   // 00000005A1CA: 0000
	.long 0                                                    // 00000005A1CC: 00000000
	.long 0x4bfd                                               // 00000005A1D0: 00004BFD
	.long 0x60311                                              // 00000005A1D4: 00060311
	.ascii "@]"                                                // 00000005A1D8: 5D40
	.short 0x6                                                 // 00000005A1DA: 0006
	.long 0                                                    // 00000005A1DC: 00000000
	.ascii "@"                                                 // 00000005A1E0: 40
	.byte 0                                                    // 00000005A1E1: 00
	.short 0                                                   // 00000005A1E2: 0000
	.long 0                                                    // 00000005A1E4: 00000000
	.ascii "}"                                                 // 00000005A1E8: 7D
	.byte 0x4                                                  // 00000005A1E9: 04
	.short 0                                                   // 00000005A1EA: 0000
	.long 0x70312                                              // 00000005A1EC: 00070312
	.long 0x69500                                              // 00000005A1F0: 00069500
	.long 0                                                    // 00000005A1F4: 00000000
	.long 0x104                                                // 00000005A1F8: 00000104
	.long 0                                                    // 00000005A1FC: 00000000
	.long 0x22d9                                               // 00000005A200: 000022D9
	.long 0x60311                                              // 00000005A204: 00060311
	.long 0x63800                                              // 00000005A208: 00063800
	.long 0                                                    // 00000005A20C: 00000000
	.ascii "@"                                                 // 00000005A210: 40
	.byte 0                                                    // 00000005A211: 00
	.short 0                                                   // 00000005A212: 0000
	.long 0                                                    // 00000005A214: 00000000
	.long 0x30af                                               // 00000005A218: 000030AF
	.long 0x70312                                              // 00000005A21C: 00070312
	.long 0x7c700                                              // 00000005A220: 0007C700
	.long 0                                                    // 00000005A224: 00000000
	.ascii "x"                                                 // 00000005A228: 78
	.byte 0                                                    // 00000005A229: 00
	.short 0                                                   // 00000005A22A: 0000
	.long 0                                                    // 00000005A22C: 00000000
	.long 0x4cc8                                               // 00000005A230: 00004CC8
	.long 0x70312                                              // 00000005A234: 00070312
	.long 0x83700                                              // 00000005A238: 00083700
	.long 0                                                    // 00000005A23C: 00000000
	.long 0x84                                                 // 00000005A240: 00000084
	.long 0                                                    // 00000005A244: 00000000
	.long 0x39a                                                // 00000005A248: 0000039A
	.long 0x60311                                              // 00000005A24C: 00060311
	.long 0x61900                                              // 00000005A250: 00061900
	.long 0                                                    // 00000005A254: 00000000
	.ascii "@"                                                 // 00000005A258: 40
	.byte 0                                                    // 00000005A259: 00
	.short 0                                                   // 00000005A25A: 0000
	.long 0                                                    // 00000005A25C: 00000000
	.ascii "54"                                                // 00000005A260: 3435
	.short 0                                                   // 00000005A262: 0000
	.long 0x60311                                              // 00000005A264: 00060311
	.long 0x64880                                              // 00000005A268: 00064880
	.long 0                                                    // 00000005A26C: 00000000
	.ascii "@"                                                 // 00000005A270: 40
	.byte 0                                                    // 00000005A271: 00
	.short 0                                                   // 00000005A272: 0000
	.long 0                                                    // 00000005A274: 00000000
	.ascii "z"                                                 // 00000005A278: 7A
	.byte 0xf                                                  // 00000005A279: 0F
	.short 0                                                   // 00000005A27A: 0000
	.long 0x60311                                              // 00000005A27C: 00060311
	.long 0x62480                                              // 00000005A280: 00062480
	.long 0                                                    // 00000005A284: 00000000
	.ascii "@"                                                 // 00000005A288: 40
	.byte 0                                                    // 00000005A289: 00
	.short 0                                                   // 00000005A28A: 0000
	.long 0                                                    // 00000005A28C: 00000000
	.long 0x23a6                                               // 00000005A290: 000023A6
	.long 0x70312                                              // 00000005A294: 00070312
	.long 0x77300                                              // 00000005A298: 00077300
	.long 0                                                    // 00000005A29C: 00000000
	.ascii "$"                                                 // 00000005A2A0: 24
	.byte 0x1                                                  // 00000005A2A1: 01
	.short 0                                                   // 00000005A2A2: 0000
	.long 0                                                    // 00000005A2A4: 00000000
	.long 0x27f2                                               // 00000005A2A8: 000027F2
	.long 0x60311                                              // 00000005A2AC: 00060311
	.ascii "@<"                                                // 00000005A2B0: 3C40
	.short 0x6                                                 // 00000005A2B2: 0006
	.long 0                                                    // 00000005A2B4: 00000000
	.ascii "@"                                                 // 00000005A2B8: 40
	.byte 0                                                    // 00000005A2B9: 00
	.short 0                                                   // 00000005A2BA: 0000
	.long 0                                                    // 00000005A2BC: 00000000
	.long 0x39ec                                               // 00000005A2C0: 000039EC
	.long 0x60311                                              // 00000005A2C4: 00060311
	.ascii "@M"                                                // 00000005A2C8: 4D40
	.short 0x6                                                 // 00000005A2CA: 0006
	.long 0                                                    // 00000005A2CC: 00000000
	.ascii "@"                                                 // 00000005A2D0: 40
	.byte 0                                                    // 00000005A2D1: 00
	.short 0                                                   // 00000005A2D2: 0000
	.long 0                                                    // 00000005A2D4: 00000000
	.long 0x6d6                                                // 00000005A2D8: 000006D6
	.long 0x60311                                              // 00000005A2DC: 00060311
	.ascii "@"                                                 // 00000005A2E0: 40
	.byte 0x1c                                                 // 00000005A2E1: 1C
	.short 0x6                                                 // 00000005A2E2: 0006
	.long 0                                                    // 00000005A2E4: 00000000
	.ascii "@"                                                 // 00000005A2E8: 40
	.byte 0                                                    // 00000005A2E9: 00
	.short 0                                                   // 00000005A2EA: 0000
	.long 0                                                    // 00000005A2EC: 00000000
	.long 0x2114                                               // 00000005A2F0: 00002114
	.long 0x60311                                              // 00000005A2F4: 00060311
	.long 0x63680                                              // 00000005A2F8: 00063680
	.long 0                                                    // 00000005A2FC: 00000000
	.ascii "@"                                                 // 00000005A300: 40
	.byte 0                                                    // 00000005A301: 00
	.short 0                                                   // 00000005A302: 0000
	.long 0                                                    // 00000005A304: 00000000
	.ascii "b\""                                               // 00000005A308: 2262
	.short 0                                                   // 00000005A30A: 0000
	.long 0x70312                                              // 00000005A30C: 00070312
	.long 0x76b00                                              // 00000005A310: 00076B00
	.long 0                                                    // 00000005A314: 00000000
	.long 0x10c                                                // 00000005A318: 0000010C
	.long 0                                                    // 00000005A31C: 00000000
	.long 0x4999                                               // 00000005A320: 00004999
	.long 0x70312                                              // 00000005A324: 00070312
	.long 0x82800                                              // 00000005A328: 00082800
	.long 0                                                    // 00000005A32C: 00000000
	.long 0xac                                                 // 00000005A330: 000000AC
	.long 0                                                    // 00000005A334: 00000000
	.ascii ":\""                                               // 00000005A338: 223A
	.short 0                                                   // 00000005A33A: 0000
	.long 0x60311                                              // 00000005A33C: 00060311
	.long 0x63780                                              // 00000005A340: 00063780
	.long 0                                                    // 00000005A344: 00000000
	.ascii "@"                                                 // 00000005A348: 40
	.byte 0                                                    // 00000005A349: 00
	.short 0                                                   // 00000005A34A: 0000
	.long 0                                                    // 00000005A34C: 00000000
	.long 0x2a18                                               // 00000005A350: 00002A18
	.long 0x60311                                              // 00000005A354: 00060311
	.long 0x63e00                                              // 00000005A358: 00063E00
	.long 0                                                    // 00000005A35C: 00000000
	.ascii "@"                                                 // 00000005A360: 40
	.byte 0                                                    // 00000005A361: 00
	.short 0                                                   // 00000005A362: 0000
	.long 0                                                    // 00000005A364: 00000000
	.ascii "^	"                                                // 00000005A368: 095E
	.short 0                                                   // 00000005A36A: 0000
	.long 0x60311                                              // 00000005A36C: 00060311
	.long 0x61ec0                                              // 00000005A370: 00061EC0
	.long 0                                                    // 00000005A374: 00000000
	.ascii "@"                                                 // 00000005A378: 40
	.byte 0                                                    // 00000005A379: 00
	.short 0                                                   // 00000005A37A: 0000
	.long 0                                                    // 00000005A37C: 00000000
	.ascii "8"                                                 // 00000005A380: 38
	.byte 0x10                                                 // 00000005A381: 10
	.short 0                                                   // 00000005A382: 0000
	.long 0x60311                                              // 00000005A384: 00060311
	.ascii "@%"                                                // 00000005A388: 2540
	.short 0x6                                                 // 00000005A38A: 0006
	.long 0                                                    // 00000005A38C: 00000000
	.ascii "@"                                                 // 00000005A390: 40
	.byte 0                                                    // 00000005A391: 00
	.short 0                                                   // 00000005A392: 0000
	.long 0                                                    // 00000005A394: 00000000
	.ascii "K"                                                 // 00000005A398: 4B
	.byte 0x15                                                 // 00000005A399: 15
	.short 0                                                   // 00000005A39A: 0000
	.long 0x60311                                              // 00000005A39C: 00060311
	.long 0x62ac0                                              // 00000005A3A0: 00062AC0
	.long 0                                                    // 00000005A3A4: 00000000
	.ascii "@"                                                 // 00000005A3A8: 40
	.byte 0                                                    // 00000005A3A9: 00
	.short 0                                                   // 00000005A3AA: 0000
	.long 0                                                    // 00000005A3AC: 00000000
	.ascii "o"                                                 // 00000005A3B0: 6F
	.byte 0x17                                                 // 00000005A3B1: 17
	.short 0                                                   // 00000005A3B2: 0000
	.long 0x70312                                              // 00000005A3B4: 00070312
	.long 0x71e00                                              // 00000005A3B8: 00071E00
	.long 0                                                    // 00000005A3BC: 00000000
	.ascii "4"                                                 // 00000005A3C0: 34
	.byte 0x1                                                  // 00000005A3C1: 01
	.short 0                                                   // 00000005A3C2: 0000
	.long 0                                                    // 00000005A3C4: 00000000
	.ascii "<)"                                                // 00000005A3C8: 293C
	.short 0                                                   // 00000005A3CA: 0000
	.long 0x60311                                              // 00000005A3CC: 00060311
	.ascii "@="                                                // 00000005A3D0: 3D40
	.short 0x6                                                 // 00000005A3D2: 0006
	.long 0                                                    // 00000005A3D4: 00000000
	.ascii "@"                                                 // 00000005A3D8: 40
	.byte 0                                                    // 00000005A3D9: 00
	.short 0                                                   // 00000005A3DA: 0000
	.long 0                                                    // 00000005A3DC: 00000000
	.long 0x2cc7                                               // 00000005A3E0: 00002CC7
	.long 0x60311                                              // 00000005A3E4: 00060311
	.ascii "@@"                                                // 00000005A3E8: 4040
	.short 0x6                                                 // 00000005A3EA: 0006
	.long 0                                                    // 00000005A3EC: 00000000
	.ascii "@"                                                 // 00000005A3F0: 40
	.byte 0                                                    // 00000005A3F1: 00
	.short 0                                                   // 00000005A3F2: 0000
	.long 0                                                    // 00000005A3F4: 00000000
	.ascii "[B"                                                // 00000005A3F8: 425B
	.short 0                                                   // 00000005A3FA: 0000
	.long 0x70312                                              // 00000005A3FC: 00070312
	.long 0x80a00                                              // 00000005A400: 00080A00
	.long 0                                                    // 00000005A404: 00000000
	.long 0xf8                                                 // 00000005A408: 000000F8
	.long 0                                                    // 00000005A40C: 00000000
	.ascii "@J"                                                // 00000005A410: 4A40
	.short 0                                                   // 00000005A412: 0000
	.long 0x70312                                              // 00000005A414: 00070312
	.long 0x82b00                                              // 00000005A418: 00082B00
	.long 0                                                    // 00000005A41C: 00000000
	.ascii "H"                                                 // 00000005A420: 48
	.byte 0                                                    // 00000005A421: 00
	.short 0                                                   // 00000005A422: 0000
	.long 0                                                    // 00000005A424: 00000000
	.ascii "UK"                                                // 00000005A428: 4B55
	.short 0                                                   // 00000005A42A: 0000
	.long 0x70312                                              // 00000005A42C: 00070312
	.long 0x83000                                              // 00000005A430: 00083000
	.long 0                                                    // 00000005A434: 00000000
	.ascii "t"                                                 // 00000005A438: 74
	.byte 0                                                    // 00000005A439: 00
	.short 0                                                   // 00000005A43A: 0000
	.long 0                                                    // 00000005A43C: 00000000
	.long 0x8ae                                                // 00000005A440: 000008AE
	.long 0x70312                                              // 00000005A444: 00070312
	.long 0x6b500                                              // 00000005A448: 0006B500
	.long 0                                                    // 00000005A44C: 00000000
	.long 0x110                                                // 00000005A450: 00000110
	.long 0                                                    // 00000005A454: 00000000
	.ascii "O&"                                                // 00000005A458: 264F
	.short 0                                                   // 00000005A45A: 0000
	.long 0x70312                                              // 00000005A45C: 00070312
	.long 0x78500                                              // 00000005A460: 00078500
	.long 0                                                    // 00000005A464: 00000000
	.ascii "4"                                                 // 00000005A468: 34
	.byte 0x1                                                  // 00000005A469: 01
	.short 0                                                   // 00000005A46A: 0000
	.long 0                                                    // 00000005A46C: 00000000
	.long 0x297f                                               // 00000005A470: 0000297F
	.long 0x60311                                              // 00000005A474: 00060311
	.long 0x63d80                                              // 00000005A478: 00063D80
	.long 0                                                    // 00000005A47C: 00000000
	.ascii "@"                                                 // 00000005A480: 40
	.byte 0                                                    // 00000005A481: 00
	.short 0                                                   // 00000005A482: 0000
	.long 0                                                    // 00000005A484: 00000000
	.ascii "u"                                                 // 00000005A488: 75
	.byte 0xb                                                  // 00000005A489: 0B
	.short 0                                                   // 00000005A48A: 0000
	.long 0x60311                                              // 00000005A48C: 00060311
	.long 0x620c0                                              // 00000005A490: 000620C0
	.long 0                                                    // 00000005A494: 00000000
	.ascii "@"                                                 // 00000005A498: 40
	.byte 0                                                    // 00000005A499: 00
	.short 0                                                   // 00000005A49A: 0000
	.long 0                                                    // 00000005A49C: 00000000
	.long 0xe11                                                // 00000005A4A0: 00000E11
	.long 0x60311                                              // 00000005A4A4: 00060311
	.ascii "@#"                                                // 00000005A4A8: 2340
	.short 0x6                                                 // 00000005A4AA: 0006
	.long 0                                                    // 00000005A4AC: 00000000
	.ascii "@"                                                 // 00000005A4B0: 40
	.byte 0                                                    // 00000005A4B1: 00
	.short 0                                                   // 00000005A4B2: 0000
	.long 0                                                    // 00000005A4B4: 00000000
	.ascii "\n"                                                // 00000005A4B8: 0A
	.ascii " "                                                 // 00000005A4B9: 20
	.short 0                                                   // 00000005A4BA: 0000
	.long 0x70312                                              // 00000005A4BC: 00070312
	.long 0x75b00                                              // 00000005A4C0: 00075B00
	.long 0                                                    // 00000005A4C4: 00000000
	.ascii "$"                                                 // 00000005A4C8: 24
	.byte 0x1                                                  // 00000005A4C9: 01
	.short 0                                                   // 00000005A4CA: 0000
	.long 0                                                    // 00000005A4CC: 00000000
	.ascii "6,"                                                // 00000005A4D0: 2C36
	.short 0                                                   // 00000005A4D2: 0000
	.long 0x60311                                              // 00000005A4D4: 00060311
	.long 0x63fc0                                              // 00000005A4D8: 00063FC0
	.long 0                                                    // 00000005A4DC: 00000000
	.ascii "@"                                                 // 00000005A4E0: 40
	.byte 0                                                    // 00000005A4E1: 00
	.short 0                                                   // 00000005A4E2: 0000
	.long 0                                                    // 00000005A4E4: 00000000
	.long 0x380e                                               // 00000005A4E8: 0000380E
	.long 0x70312                                              // 00000005A4EC: 00070312
	.long 0x7e500                                              // 00000005A4F0: 0007E500
	.long 0                                                    // 00000005A4F4: 00000000
	.long 0xb0                                                 // 00000005A4F8: 000000B0
	.long 0                                                    // 00000005A4FC: 00000000

	.section	.gnu.hash,#alloc
	.long 0x94                                                 // 00000005A500: 00000094
	.long 0x1                                                  // 00000005A504: 00000001
	.long 0x80                                                 // 00000005A508: 00000080
	.long 0x1a                                                 // 00000005A50C: 0000001A
	.long 0x4000                                               // 00000005A510: 00004000
	.ascii "("                                                 // 00000005A514: 28
	.byte 0                                                    // 00000005A515: 00
	.short 0x100                                               // 00000005A516: 0100
	.ascii "DD"                                                // 00000005A518: 4444
	.short 0x4000                                              // 00000005A51A: 4000
	.long 0xb00400                                             // 00000005A51C: 00B00400
	.long 0xa4008008                                           // 00000005A520: A4008008
	.long 0x4000004                                            // 00000005A524: 04000004
	.long 0x200a00c2                                           // 00000005A528: 200A00C2
	.long 0x1a2c401                                            // 00000005A52C: 01A2C401
	.long 0x810000                                             // 00000005A530: 00810000
	.long 0                                                    // 00000005A534: 00000000
	.long 0x1602401                                            // 00000005A538: 01602401
	.long 0x9000900                                            // 00000005A53C: 09000900
	.long 0xf000000                                            // 00000005A540: 0F000000
	.long 0x142008                                             // 00000005A544: 00142008
	.long 0x140004                                             // 00000005A548: 00140004
	.long 0x2200000                                            // 00000005A54C: 02200000
	.long 0x30200002                                           // 00000005A550: 30200002
	.long 0x480400                                             // 00000005A554: 00480400
	.ascii "B"                                                 // 00000005A558: 42
	.byte 0                                                    // 00000005A559: 00
	.short 0x2000                                              // 00000005A55A: 2000
	.ascii " "                                                 // 00000005A55C: 20
	.byte 0x4                                                  // 00000005A55D: 04
	.short 0                                                   // 00000005A55E: 0000
	.ascii "`"                                                 // 00000005A560: 60
	.byte 0x4                                                  // 00000005A561: 04
	.short 0x2200                                              // 00000005A562: 2200
	.long 0xc20000                                             // 00000005A564: 00C20000
	.ascii "h"                                                 // 00000005A568: 68
	.byte 0x3                                                  // 00000005A569: 03
	.short 0x2401                                              // 00000005A56A: 2401
	.long 0x28a91008                                           // 00000005A56C: 28A91008
	.ascii "@"                                                 // 00000005A570: 40
	.byte 0x8                                                  // 00000005A571: 08
	.short 0x8002                                              // 00000005A572: 8002
	.ascii "A"                                                 // 00000005A574: 41
	.byte 0x1                                                  // 00000005A575: 01
	.short 0x200                                               // 00000005A576: 0200
	.long 0x10                                                 // 00000005A578: 00000010
	.ascii "@e"                                                // 00000005A57C: 6540
	.short 0x90                                                // 00000005A57E: 0090
	.long 0x240000                                             // 00000005A580: 00240000
	.long 0x5002000                                            // 00000005A584: 05002000
	.long 0x641200                                             // 00000005A588: 00641200
	.long 0x20500800                                           // 00000005A58C: 20500800
	.long 0x69140202                                           // 00000005A590: 69140202
	.ascii "A"                                                 // 00000005A594: 41
	.byte 0x2                                                  // 00000005A595: 02
	.short 0x40c4                                              // 00000005A596: 40C4
	.long 0x8404090                                            // 00000005A598: 08404090
	.long 0x42280008                                           // 00000005A59C: 42280008
	.long 0                                                    // 00000005A5A0: 00000000
	.long 0                                                    // 00000005A5A4: 00000000
	.long 0x3d1180a0                                           // 00000005A5A8: 3D1180A0
	.long 0x201088                                             // 00000005A5AC: 00201088
	.ascii " A"                                                // 00000005A5B0: 4120
	.short 0x1008                                              // 00000005A5B2: 1008
	.long 0x879807                                             // 00000005A5B4: 00879807
	.ascii "B"                                                 // 00000005A5B8: 42
	.byte 0x8                                                  // 00000005A5B9: 08
	.ascii "&"                                                 // 00000005A5BA: 26
	.byte 0x1                                                  // 00000005A5BB: 01
	.ascii "@"                                                 // 00000005A5BC: 40
	.byte 0x18                                                 // 00000005A5BD: 18
	.short 0x5                                                 // 00000005A5BE: 0005
	.ascii "B"                                                 // 00000005A5C0: 42
	.byte 0x2                                                  // 00000005A5C1: 02
	.short 0xa4c1                                              // 00000005A5C2: A4C1
	.ascii " "                                                 // 00000005A5C4: 20
	.byte 0xc0                                                 // 00000005A5C5: C0
	.short 0x8400                                              // 00000005A5C6: 8400
	.long 0x1200401                                            // 00000005A5C8: 01200401
	.long 0xc0040000                                           // 00000005A5CC: C0040000
	.long 0x80000002                                           // 00000005A5D0: 80000002
	.long 0x20040000                                           // 00000005A5D4: 20040000
	.long 0x20180002                                           // 00000005A5D8: 20180002
	.ascii "I"                                                 // 00000005A5DC: 49
	.byte 0                                                    // 00000005A5DD: 00
	.short 0x100                                               // 00000005A5DE: 0100
	.ascii "!J"                                                // 00000005A5E0: 4A21
	.short 0xa802                                              // 00000005A5E2: A802
	.ascii "0"                                                 // 00000005A5E4: 30
	.byte 0                                                    // 00000005A5E5: 00
	.short 0x2000                                              // 00000005A5E6: 2000
	.long 0xc08000                                             // 00000005A5E8: 00C08000
	.long 0xa100000                                            // 00000005A5EC: 0A100000
	.ascii "A"                                                 // 00000005A5F0: 41
	.byte 0x2                                                  // 00000005A5F1: 02
	.ascii ")"                                                 // 00000005A5F2: 29
	.byte 0x10                                                 // 00000005A5F3: 10
	.long 0x20000000                                           // 00000005A5F4: 20000000
	.long 0x8380008                                            // 00000005A5F8: 08380008
	.long 0x5000                                               // 00000005A5FC: 00005000
	.long 0x4000102                                            // 00000005A600: 04000102
	.long 0x1000                                               // 00000005A604: 00001000
	.long 0x1180aa10                                           // 00000005A608: 1180AA10
	.long 0x2000a000                                           // 00000005A60C: 2000A000
	.long 0xc04100                                             // 00000005A610: 00C04100
	.ascii "H"                                                 // 00000005A614: 48
	.byte 0x2                                                  // 00000005A615: 02
	.short 0x4004                                              // 00000005A616: 4004
	.ascii "A"                                                 // 00000005A618: 41
	.byte 0x4                                                  // 00000005A619: 04
	.short 0xa002                                              // 00000005A61A: A002
	.long 0x9340010                                            // 00000005A61C: 09340010
	.long 0x4000804                                            // 00000005A620: 04000804
	.long 0x10002001                                           // 00000005A624: 10002001
	.long 0x1000800                                            // 00000005A628: 01000800
	.ascii "@"                                                 // 00000005A62C: 40
	.byte 0                                                    // 00000005A62D: 00
	.short 0x2000                                              // 00000005A62E: 2000
	.long 0x800000                                             // 00000005A630: 00800000
	.long 0x10040004                                           // 00000005A634: 10040004
	.long 0x81000000                                           // 00000005A638: 81000000
	.ascii "P@"                                                // 00000005A63C: 4050
	.short 0x40c                                               // 00000005A63E: 040C
	.long 0                                                    // 00000005A640: 00000000
	.long 0                                                    // 00000005A644: 00000000
	.long 0x17304                                              // 00000005A648: 00017304
	.ascii "  "                                                // 00000005A64C: 2020
	.short 0x81                                                // 00000005A64E: 0081
	.long 0x20100202                                           // 00000005A650: 20100202
	.long 0x44001000                                           // 00000005A654: 44001000
	.ascii "!"                                                 // 00000005A658: 21
	.byte 0                                                    // 00000005A659: 00
	.short 0x1a3                                               // 00000005A65A: 01A3
	.long 0x40000                                              // 00000005A65C: 00040000
	.ascii "  "                                                // 00000005A660: 2020
	.short 0x400                                               // 00000005A662: 0400
	.long 0x40000000                                           // 00000005A664: 40000000
	.ascii "DA"                                                // 00000005A668: 4144
	.short 0x2080                                              // 00000005A66A: 2080
	.ascii "\n"                                                // 00000005A66C: 0A
	.byte 0x10                                                 // 00000005A66D: 10
	.short 0x8000                                              // 00000005A66E: 8000
	.ascii "@"                                                 // 00000005A670: 40
	.byte 0x8                                                  // 00000005A671: 08
	.short 0x4c84                                              // 00000005A672: 4C84
	.long 0x8085ca05                                           // 00000005A674: 8085CA05
	.ascii "@"                                                 // 00000005A678: 40
	.byte 0                                                    // 00000005A679: 00
	.short 0xe0                                                // 00000005A67A: 00E0
	.ascii "P"                                                 // 00000005A67C: 50
	.byte 0                                                    // 00000005A67D: 00
	.short 0x1400                                              // 00000005A67E: 1400
	.ascii " "                                                 // 00000005A680: 20
	.byte 0x8                                                  // 00000005A681: 08
	.short 0x1480                                              // 00000005A682: 1480
	.long 0x1000000                                            // 00000005A684: 01000000
	.long 0x8000000                                            // 00000005A688: 08000000
	.long 0x10                                                 // 00000005A68C: 00000010
	.ascii "`@"                                                // 00000005A690: 4060
	.short 0x9014                                              // 00000005A692: 9014
	.ascii " "                                                 // 00000005A694: 20
	.byte 0x10                                                 // 00000005A695: 10
	.short 0x4400                                              // 00000005A696: 4400
	.long 0x10121300                                           // 00000005A698: 10121300
	.ascii "D"                                                 // 00000005A69C: 44
	.byte 0x84                                                 // 00000005A69D: 84
	.ascii " 	"                                                // 00000005A69E: 0920
	.long 0x2000002                                            // 00000005A6A0: 02000002
	.ascii "(@"                                                // 00000005A6A4: 4028
	.short 0x800                                               // 00000005A6A6: 0800
	.long 0x88c0000                                            // 00000005A6A8: 088C0000
	.ascii "A"                                                 // 00000005A6AC: 41
	.byte 0x2                                                  // 00000005A6AD: 02
	.short 0x592                                               // 00000005A6AE: 0592
	.ascii "@"                                                 // 00000005A6B0: 40
	.byte 0x90                                                 // 00000005A6B1: 90
	.short 0xf00                                               // 00000005A6B2: 0F00
	.long 0x1900                                               // 00000005A6B4: 00001900
	.ascii " "                                                 // 00000005A6B8: 20
	.byte 0x4                                                  // 00000005A6B9: 04
	.short 0x20e9                                              // 00000005A6BA: 20E9
	.long 0x2080                                               // 00000005A6BC: 00002080
	.ascii "("                                                 // 00000005A6C0: 28
	.byte 0x4                                                  // 00000005A6C1: 04
	.ascii " "                                                 // 00000005A6C2: 20
	.byte 0x8                                                  // 00000005A6C3: 08
	.long 0x4020200                                            // 00000005A6C4: 04020200
	.long 0x41000401                                           // 00000005A6C8: 41000401
	.long 0x6000000                                            // 00000005A6CC: 06000000
	.long 0x2800001                                            // 00000005A6D0: 02800001
	.long 0xc04000                                             // 00000005A6D4: 00C04000
	.ascii " "                                                 // 00000005A6D8: 20
	.byte 0xd1                                                 // 00000005A6D9: D1
	.short 0xa411                                              // 00000005A6DA: A411
	.long 0x4210a000                                           // 00000005A6DC: 4210A000
	.long 0x18042202                                           // 00000005A6E0: 18042202
	.long 0x1840082                                            // 00000005A6E4: 01840082
	.ascii " "                                                 // 00000005A6E8: 20
	.byte 0x18                                                 // 00000005A6E9: 18
	.short 0x1000                                              // 00000005A6EA: 1000
	.long 0x8002a0                                             // 00000005A6EC: 008002A0
	.long 0x4040000                                            // 00000005A6F0: 04040000
	.long 0x820000                                             // 00000005A6F4: 00820000
	.long 0x5c001000                                           // 00000005A6F8: 5C001000
	.long 0x80300400                                           // 00000005A6FC: 80300400
	.long 0x210                                                // 00000005A700: 00000210
	.long 0x2129000                                            // 00000005A704: 02129000
	.ascii "\n"                                                // 00000005A708: 0A
	.byte 0                                                    // 00000005A709: 00
	.short 0x880                                               // 00000005A70A: 0880
	.long 0x5080200                                            // 00000005A70C: 05080200
	.long 0x109808                                             // 00000005A710: 00109808
	.long 0x8000000                                            // 00000005A714: 08000000
	.long 0                                                    // 00000005A718: 00000000
	.ascii "@"                                                 // 00000005A71C: 40
	.byte 0x2                                                  // 00000005A71D: 02
	.short 0xc000                                              // 00000005A71E: C000
	.ascii " "                                                 // 00000005A720: 20
	.byte 0                                                    // 00000005A721: 00
	.short 0x100                                               // 00000005A722: 0100
	.long 0x114c3000                                           // 00000005A724: 114C3000
	.long 0x70a10702                                           // 00000005A728: 70A10702
	.ascii "`	"                                                // 00000005A72C: 0960
	.short 0x208                                               // 00000005A72E: 0208
	.long 0x40401                                              // 00000005A730: 00040401
	.long 0x200000                                             // 00000005A734: 00200000
	.long 0x80000606                                           // 00000005A738: 80000606
	.ascii "!"                                                 // 00000005A73C: 21
	.byte 0x1c                                                 // 00000005A73D: 1C
	.short 0x420c                                              // 00000005A73E: 420C
	.ascii "("                                                 // 00000005A740: 28
	.byte 0x3                                                  // 00000005A741: 03
	.short 0x1880                                              // 00000005A742: 1880
	.long 0x74012000                                           // 00000005A744: 74012000
	.long 0x100000                                             // 00000005A748: 00100000
	.long 0x40c0902                                            // 00000005A74C: 040C0902
	.long 0x104                                                // 00000005A750: 00000104
	.long 0x10014610                                           // 00000005A754: 10014610
	.long 0x8800000                                            // 00000005A758: 08800000
	.long 0x1040600                                            // 00000005A75C: 01040600
	.long 0x4c00                                               // 00000005A760: 00004C00
	.long 0                                                    // 00000005A764: 00000000
	.ascii "P"                                                 // 00000005A768: 50
	.byte 0x88                                                 // 00000005A769: 88
	.short 0x4410                                              // 00000005A76A: 4410
	.long 0x148201                                             // 00000005A76C: 00148201
	.long 0x480002                                             // 00000005A770: 00480002
	.long 0xc1024112                                           // 00000005A774: C1024112
	.long 0x800100                                             // 00000005A778: 00800100
	.long 0x4440000                                            // 00000005A77C: 04440000
	.long 0x201                                                // 00000005A780: 00000201
	.long 0x16800                                              // 00000005A784: 00016800
	.ascii "K\n"                                               // 00000005A788: 0A4B
	.short 0x8382                                              // 00000005A78A: 8382
	.long 0x30080004                                           // 00000005A78C: 30080004
	.long 0x880                                                // 00000005A790: 00000880
	.long 0x82000002                                           // 00000005A794: 82000002
	.ascii ","                                                 // 00000005A798: 2C
	.byte 0                                                    // 00000005A799: 00
	.ascii " "                                                 // 00000005A79A: 20
	.byte 0                                                    // 00000005A79B: 00
	.ascii "@\""                                               // 00000005A79C: 2240
	.short 0x80                                                // 00000005A79E: 0080
	.long 0x8428a0                                             // 00000005A7A0: 008428A0
	.long 0x10000100                                           // 00000005A7A4: 10000100
	.long 0x1028108                                            // 00000005A7A8: 01028108
	.long 0xe000                                               // 00000005A7AC: 0000E000
	.long 0x4050104                                            // 00000005A7B0: 04050104
	.long 0x22820c4                                            // 00000005A7B4: 022820C4
	.ascii " "                                                 // 00000005A7B8: 20
	.byte 0                                                    // 00000005A7B9: 00
	.short 0x3002                                              // 00000005A7BA: 3002
	.long 0x208000                                             // 00000005A7BC: 00208000
	.long 0xa00000                                             // 00000005A7C0: 00A00000
	.long 0x150001c0                                           // 00000005A7C4: 150001C0
	.long 0x40060100                                           // 00000005A7C8: 40060100
	.long 0x40100002                                           // 00000005A7CC: 40100002
	.long 0x1604                                               // 00000005A7D0: 00001604
	.long 0x4080012                                            // 00000005A7D4: 04080012
	.long 0x121904                                             // 00000005A7D8: 00121904
	.long 0x25884688                                           // 00000005A7DC: 25884688
	.ascii " "                                                 // 00000005A7E0: 20
	.byte 0x10                                                 // 00000005A7E1: 10
	.short 0x113                                               // 00000005A7E2: 0113
	.long 0x206                                                // 00000005A7E4: 00000206
	.long 0x804000c1                                           // 00000005A7E8: 804000C1
	.long 0x91804000                                           // 00000005A7EC: 91804000
	.long 0x4200400                                            // 00000005A7F0: 04200400
	.long 0x25000                                              // 00000005A7F4: 00025000
	.ascii "  "                                                // 00000005A7F8: 2020
	.short 0x2a0                                               // 00000005A7FA: 02A0
	.long 0x401884                                             // 00000005A7FC: 00401884
	.long 0x42094000                                           // 00000005A800: 42094000
	.ascii "@"                                                 // 00000005A804: 40
	.byte 0xa8                                                 // 00000005A805: A8
	.short 0x2                                                 // 00000005A806: 0002
	.ascii "\n"                                                // 00000005A808: 0A
	.ascii "("                                                 // 00000005A809: 28
	.short 0x1111                                              // 00000005A80A: 1111
	.long 0x30004800                                           // 00000005A80C: 30004800
	.long 0x800e1000                                           // 00000005A810: 800E1000
	.ascii " "                                                 // 00000005A814: 20
	.byte 0x88                                                 // 00000005A815: 88
	.ascii "@"                                                 // 00000005A816: 40
	.byte 0x1                                                  // 00000005A817: 01
	.ascii " "                                                 // 00000005A818: 20
	.byte 0x14                                                 // 00000005A819: 14
	.short 0x100c                                              // 00000005A81A: 100C
	.long 0xb001008                                            // 00000005A81C: 0B001008
	.long 0x20028081                                           // 00000005A820: 20028081
	.long 0x20002002                                           // 00000005A824: 20002002
	.long 0x108001                                             // 00000005A828: 00108001
	.long 0x20008008                                           // 00000005A82C: 20008008
	.ascii "A"                                                 // 00000005A830: 41
	.byte 0                                                    // 00000005A831: 00
	.short 0x1000                                              // 00000005A832: 1000
	.long 0x200280a0                                           // 00000005A834: 200280A0
	.long 0xa2080c0c                                           // 00000005A838: A2080C0C
	.long 0x60924010                                           // 00000005A83C: 60924010
	.long 0x1002a00                                            // 00000005A840: 01002A00
	.long 0x10d0                                               // 00000005A844: 000010D0
	.long 0x401018                                             // 00000005A848: 00401018
	.long 0x20002480                                           // 00000005A84C: 20002480
	.ascii "@"                                                 // 00000005A850: 40
	.byte 0xc0                                                 // 00000005A851: C0
	.short 0x10                                                // 00000005A852: 0010
	.long 0x20021800                                           // 00000005A854: 20021800
	.long 0x24000082                                           // 00000005A858: 24000082
	.long 0x8008                                               // 00000005A85C: 00008008
	.long 0x3000000                                            // 00000005A860: 03000000
	.long 0x80100                                              // 00000005A864: 00080100
	.ascii " "                                                 // 00000005A868: 20
	.byte 0x80                                                 // 00000005A869: 80
	.short 0x5400                                              // 00000005A86A: 5400
	.long 0x1000101                                            // 00000005A86C: 01000101
	.long 0x4043000                                            // 00000005A870: 04043000
	.long 0x402100                                             // 00000005A874: 00402100
	.long 0x40840402                                           // 00000005A878: 40840402
	.long 0xc409e910                                           // 00000005A87C: C409E910
	.long 0x22800000                                           // 00000005A880: 22800000
	.ascii "@"                                                 // 00000005A884: 40
	.byte 0x5                                                  // 00000005A885: 05
	.short 0                                                   // 00000005A886: 0000
	.long 0x80040004                                           // 00000005A888: 80040004
	.long 0x100c0000                                           // 00000005A88C: 100C0000
	.long 0x60000                                              // 00000005A890: 00060000
	.long 0x21000208                                           // 00000005A894: 21000208
	.long 0xa0800080                                           // 00000005A898: A0800080
	.long 0xa00c011                                            // 00000005A89C: 0A00C011
	.long 0xa110810                                            // 00000005A8A0: 0A110810
	.long 0x40001200                                           // 00000005A8A4: 40001200
	.ascii "4"                                                 // 00000005A8A8: 34
	.byte 0                                                    // 00000005A8A9: 00
	.short 0x8c00                                              // 00000005A8AA: 8C00
	.ascii "`("                                                // 00000005A8AC: 2860
	.short 0x200                                               // 00000005A8AE: 0200
	.ascii "J"                                                 // 00000005A8B0: 4A
	.byte 0                                                    // 00000005A8B1: 00
	.short 0x2c0                                               // 00000005A8B2: 02C0
	.long 0x4001000                                            // 00000005A8B4: 04001000
	.long 0xa0888a00                                           // 00000005A8B8: A0888A00
	.ascii "B"                                                 // 00000005A8BC: 42
	.byte 0x11                                                 // 00000005A8BD: 11
	.short 0x802                                               // 00000005A8BE: 0802
	.long 0x15080900                                           // 00000005A8C0: 15080900
	.ascii "@"                                                 // 00000005A8C4: 40
	.byte 0xa0                                                 // 00000005A8C5: A0
	.short 0                                                   // 00000005A8C6: 0000
	.long 0x64080800                                           // 00000005A8C8: 64080800
	.ascii "("                                                 // 00000005A8CC: 28
	.byte 0xc                                                  // 00000005A8CD: 0C
	.short 0x401                                               // 00000005A8CE: 0401
	.long 0x4082000                                            // 00000005A8D0: 04082000
	.long 0x10082                                              // 00000005A8D4: 00010082
	.long 0x801404                                             // 00000005A8D8: 00801404
	.long 0x80120800                                           // 00000005A8DC: 80120800
	.ascii " "                                                 // 00000005A8E0: 20
	.byte 0                                                    // 00000005A8E1: 00
	.ascii "B"                                                 // 00000005A8E2: 42
	.byte 0                                                    // 00000005A8E3: 00
	.long 0x802                                                // 00000005A8E4: 00000802
	.long 0xc00201                                             // 00000005A8E8: 00C00201
	.long 0x15442000                                           // 00000005A8EC: 15442000
	.long 0xc048204                                            // 00000005A8F0: 0C048204
	.ascii "Ip0"                                               // 00000005A8F4: 307049
	.byte 0x4                                                  // 00000005A8F7: 04
	.long 0x52000400                                           // 00000005A8F8: 52000400
	.long 0x1001100                                            // 00000005A8FC: 01001100
	.ascii "@"                                                 // 00000005A900: 40
	.byte 0x90                                                 // 00000005A901: 90
	.short 0x2000                                              // 00000005A902: 2000
	.long 0x8100212                                            // 00000005A904: 08100212
	.ascii "@"                                                 // 00000005A908: 40
	.byte 0x1                                                  // 00000005A909: 01
	.ascii "\n"                                                // 00000005A90A: 0A
	.ascii " "                                                 // 00000005A90B: 20
	.long 0x83204200                                           // 00000005A90C: 83204200
	.long 0                                                    // 00000005A910: 00000000
	.long 0x1                                                  // 00000005A914: 00000001
	.long 0x4                                                  // 00000005A918: 00000004
	.ascii "\n"                                                // 00000005A91C: 0A
	.byte 0                                                    // 00000005A91D: 00
	.short 0                                                   // 00000005A91E: 0000
	.long 0xe                                                  // 00000005A920: 0000000E
	.long 0x12                                                 // 00000005A924: 00000012
	.long 0x14                                                 // 00000005A928: 00000014
	.long 0x18                                                 // 00000005A92C: 00000018
	.long 0x1b                                                 // 00000005A930: 0000001B
	.ascii "\""                                                // 00000005A934: 22
	.byte 0                                                    // 00000005A935: 00
	.short 0                                                   // 00000005A936: 0000
	.ascii "&"                                                 // 00000005A938: 26
	.byte 0                                                    // 00000005A939: 00
	.short 0                                                   // 00000005A93A: 0000
	.ascii "*"                                                 // 00000005A93C: 2A
	.byte 0                                                    // 00000005A93D: 00
	.short 0                                                   // 00000005A93E: 0000
	.ascii "-"                                                 // 00000005A940: 2D
	.byte 0                                                    // 00000005A941: 00
	.short 0                                                   // 00000005A942: 0000
	.ascii "1"                                                 // 00000005A944: 31
	.byte 0                                                    // 00000005A945: 00
	.short 0                                                   // 00000005A946: 0000
	.ascii "6"                                                 // 00000005A948: 36
	.byte 0                                                    // 00000005A949: 00
	.short 0                                                   // 00000005A94A: 0000
	.ascii "9"                                                 // 00000005A94C: 39
	.byte 0                                                    // 00000005A94D: 00
	.short 0                                                   // 00000005A94E: 0000
	.ascii "="                                                 // 00000005A950: 3D
	.byte 0                                                    // 00000005A951: 00
	.short 0                                                   // 00000005A952: 0000
	.ascii "B"                                                 // 00000005A954: 42
	.byte 0                                                    // 00000005A955: 00
	.short 0                                                   // 00000005A956: 0000
	.ascii "D"                                                 // 00000005A958: 44
	.byte 0                                                    // 00000005A959: 00
	.short 0                                                   // 00000005A95A: 0000
	.ascii "G"                                                 // 00000005A95C: 47
	.byte 0                                                    // 00000005A95D: 00
	.short 0                                                   // 00000005A95E: 0000
	.ascii "H"                                                 // 00000005A960: 48
	.byte 0                                                    // 00000005A961: 00
	.short 0                                                   // 00000005A962: 0000
	.ascii "M"                                                 // 00000005A964: 4D
	.byte 0                                                    // 00000005A965: 00
	.short 0                                                   // 00000005A966: 0000
	.ascii "S"                                                 // 00000005A968: 53
	.byte 0                                                    // 00000005A969: 00
	.short 0                                                   // 00000005A96A: 0000
	.ascii "X"                                                 // 00000005A96C: 58
	.byte 0                                                    // 00000005A96D: 00
	.short 0                                                   // 00000005A96E: 0000
	.ascii "]"                                                 // 00000005A970: 5D
	.byte 0                                                    // 00000005A971: 00
	.short 0                                                   // 00000005A972: 0000
	.ascii "a"                                                 // 00000005A974: 61
	.byte 0                                                    // 00000005A975: 00
	.short 0                                                   // 00000005A976: 0000
	.ascii "b"                                                 // 00000005A978: 62
	.byte 0                                                    // 00000005A979: 00
	.short 0                                                   // 00000005A97A: 0000
	.ascii "c"                                                 // 00000005A97C: 63
	.byte 0                                                    // 00000005A97D: 00
	.short 0                                                   // 00000005A97E: 0000
	.ascii "g"                                                 // 00000005A980: 67
	.byte 0                                                    // 00000005A981: 00
	.short 0                                                   // 00000005A982: 0000
	.ascii "j"                                                 // 00000005A984: 6A
	.byte 0                                                    // 00000005A985: 00
	.short 0                                                   // 00000005A986: 0000
	.ascii "n"                                                 // 00000005A988: 6E
	.byte 0                                                    // 00000005A989: 00
	.short 0                                                   // 00000005A98A: 0000
	.ascii "q"                                                 // 00000005A98C: 71
	.byte 0                                                    // 00000005A98D: 00
	.short 0                                                   // 00000005A98E: 0000
	.ascii "v"                                                 // 00000005A990: 76
	.byte 0                                                    // 00000005A991: 00
	.short 0                                                   // 00000005A992: 0000
	.ascii "z"                                                 // 00000005A994: 7A
	.byte 0                                                    // 00000005A995: 00
	.short 0                                                   // 00000005A996: 0000
	.long 0x7f                                                 // 00000005A998: 0000007F
	.long 0x88                                                 // 00000005A99C: 00000088
	.long 0x89                                                 // 00000005A9A0: 00000089
	.long 0x8d                                                 // 00000005A9A4: 0000008D
	.long 0x93                                                 // 00000005A9A8: 00000093
	.long 0x97                                                 // 00000005A9AC: 00000097
	.long 0x9b                                                 // 00000005A9B0: 0000009B
	.long 0x9c                                                 // 00000005A9B4: 0000009C
	.long 0xa0                                                 // 00000005A9B8: 000000A0
	.long 0xa3                                                 // 00000005A9BC: 000000A3
	.long 0xa7                                                 // 00000005A9C0: 000000A7
	.long 0xaa                                                 // 00000005A9C4: 000000AA
	.long 0xae                                                 // 00000005A9C8: 000000AE
	.long 0xb3                                                 // 00000005A9CC: 000000B3
	.long 0xb7                                                 // 00000005A9D0: 000000B7
	.long 0xbc                                                 // 00000005A9D4: 000000BC
	.long 0xbf                                                 // 00000005A9D8: 000000BF
	.long 0xc4                                                 // 00000005A9DC: 000000C4
	.long 0xca                                                 // 00000005A9E0: 000000CA
	.long 0xcb                                                 // 00000005A9E4: 000000CB
	.long 0xcf                                                 // 00000005A9E8: 000000CF
	.long 0xd3                                                 // 00000005A9EC: 000000D3
	.long 0xd5                                                 // 00000005A9F0: 000000D5
	.long 0xd7                                                 // 00000005A9F4: 000000D7
	.long 0xdb                                                 // 00000005A9F8: 000000DB
	.long 0xde                                                 // 00000005A9FC: 000000DE
	.long 0xe3                                                 // 00000005AA00: 000000E3
	.long 0xe8                                                 // 00000005AA04: 000000E8
	.long 0xed                                                 // 00000005AA08: 000000ED
	.long 0xf2                                                 // 00000005AA0C: 000000F2
	.long 0xf7                                                 // 00000005AA10: 000000F7
	.long 0xfe                                                 // 00000005AA14: 000000FE
	.long 0x103                                                // 00000005AA18: 00000103
	.long 0x105                                                // 00000005AA1C: 00000105
	.long 0x107                                                // 00000005AA20: 00000107
	.ascii "	"                                                 // 00000005AA24: 09
	.byte 0x1                                                  // 00000005AA25: 01
	.short 0                                                   // 00000005AA26: 0000
	.ascii "\n"                                                // 00000005AA28: 0A
	.byte 0x1                                                  // 00000005AA29: 01
	.short 0                                                   // 00000005AA2A: 0000
	.long 0x10b                                                // 00000005AA2C: 0000010B
	.long 0x110                                                // 00000005AA30: 00000110
	.long 0x114                                                // 00000005AA34: 00000114
	.long 0x116                                                // 00000005AA38: 00000116
	.long 0                                                    // 00000005AA3C: 00000000
	.long 0x119                                                // 00000005AA40: 00000119
	.long 0x11b                                                // 00000005AA44: 0000011B
	.ascii " "                                                 // 00000005AA48: 20
	.byte 0x1                                                  // 00000005AA49: 01
	.short 0                                                   // 00000005AA4A: 0000
	.ascii "$"                                                 // 00000005AA4C: 24
	.byte 0x1                                                  // 00000005AA4D: 01
	.short 0                                                   // 00000005AA4E: 0000
	.ascii "+"                                                 // 00000005AA50: 2B
	.byte 0x1                                                  // 00000005AA51: 01
	.short 0                                                   // 00000005AA52: 0000
	.ascii "-"                                                 // 00000005AA54: 2D
	.byte 0x1                                                  // 00000005AA55: 01
	.short 0                                                   // 00000005AA56: 0000
	.ascii "4"                                                 // 00000005AA58: 34
	.byte 0x1                                                  // 00000005AA59: 01
	.short 0                                                   // 00000005AA5A: 0000
	.ascii "9"                                                 // 00000005AA5C: 39
	.byte 0x1                                                  // 00000005AA5D: 01
	.short 0                                                   // 00000005AA5E: 0000
	.ascii ":"                                                 // 00000005AA60: 3A
	.byte 0x1                                                  // 00000005AA61: 01
	.short 0                                                   // 00000005AA62: 0000
	.ascii "<"                                                 // 00000005AA64: 3C
	.byte 0x1                                                  // 00000005AA65: 01
	.short 0                                                   // 00000005AA66: 0000
	.ascii "B"                                                 // 00000005AA68: 42
	.byte 0x1                                                  // 00000005AA69: 01
	.short 0                                                   // 00000005AA6A: 0000
	.ascii "E"                                                 // 00000005AA6C: 45
	.byte 0x1                                                  // 00000005AA6D: 01
	.short 0                                                   // 00000005AA6E: 0000
	.ascii "J"                                                 // 00000005AA70: 4A
	.byte 0x1                                                  // 00000005AA71: 01
	.short 0                                                   // 00000005AA72: 0000
	.ascii "O"                                                 // 00000005AA74: 4F
	.byte 0x1                                                  // 00000005AA75: 01
	.short 0                                                   // 00000005AA76: 0000
	.ascii "P"                                                 // 00000005AA78: 50
	.byte 0x1                                                  // 00000005AA79: 01
	.short 0                                                   // 00000005AA7A: 0000
	.ascii "S"                                                 // 00000005AA7C: 53
	.byte 0x1                                                  // 00000005AA7D: 01
	.short 0                                                   // 00000005AA7E: 0000
	.ascii "Y"                                                 // 00000005AA80: 59
	.byte 0x1                                                  // 00000005AA81: 01
	.short 0                                                   // 00000005AA82: 0000
	.ascii "]"                                                 // 00000005AA84: 5D
	.byte 0x1                                                  // 00000005AA85: 01
	.short 0                                                   // 00000005AA86: 0000
	.ascii "a"                                                 // 00000005AA88: 61
	.byte 0x1                                                  // 00000005AA89: 01
	.short 0                                                   // 00000005AA8A: 0000
	.ascii "d"                                                 // 00000005AA8C: 64
	.byte 0x1                                                  // 00000005AA8D: 01
	.short 0                                                   // 00000005AA8E: 0000
	.ascii "h"                                                 // 00000005AA90: 68
	.byte 0x1                                                  // 00000005AA91: 01
	.short 0                                                   // 00000005AA92: 0000
	.ascii "l"                                                 // 00000005AA94: 6C
	.byte 0x1                                                  // 00000005AA95: 01
	.short 0                                                   // 00000005AA96: 0000
	.ascii "m"                                                 // 00000005AA98: 6D
	.byte 0x1                                                  // 00000005AA99: 01
	.short 0                                                   // 00000005AA9A: 0000
	.ascii "o"                                                 // 00000005AA9C: 6F
	.byte 0x1                                                  // 00000005AA9D: 01
	.short 0                                                   // 00000005AA9E: 0000
	.ascii "v"                                                 // 00000005AAA0: 76
	.byte 0x1                                                  // 00000005AAA1: 01
	.short 0                                                   // 00000005AAA2: 0000
	.ascii "}"                                                 // 00000005AAA4: 7D
	.byte 0x1                                                  // 00000005AAA5: 01
	.short 0                                                   // 00000005AAA6: 0000
	.long 0x180                                                // 00000005AAA8: 00000180
	.long 0x185                                                // 00000005AAAC: 00000185
	.long 0x188                                                // 00000005AAB0: 00000188
	.long 0x18b                                                // 00000005AAB4: 0000018B
	.long 0x18c                                                // 00000005AAB8: 0000018C
	.long 0x18f                                                // 00000005AABC: 0000018F
	.long 0x194                                                // 00000005AAC0: 00000194
	.long 0x19a                                                // 00000005AAC4: 0000019A
	.long 0x1a2                                                // 00000005AAC8: 000001A2
	.long 0x1a7                                                // 00000005AACC: 000001A7
	.long 0x1ab                                                // 00000005AAD0: 000001AB
	.long 0x1b2                                                // 00000005AAD4: 000001B2
	.long 0x1b6                                                // 00000005AAD8: 000001B6
	.long 0x1bc                                                // 00000005AADC: 000001BC
	.long 0x1c1                                                // 00000005AAE0: 000001C1
	.long 0x1c7                                                // 00000005AAE4: 000001C7
	.long 0x1cc                                                // 00000005AAE8: 000001CC
	.long 0x1ce                                                // 00000005AAEC: 000001CE
	.long 0x1cf                                                // 00000005AAF0: 000001CF
	.long 0x1d5                                                // 00000005AAF4: 000001D5
	.long 0x1d7                                                // 00000005AAF8: 000001D7
	.long 0x1dc                                                // 00000005AAFC: 000001DC
	.long 0x1e0                                                // 00000005AB00: 000001E0
	.long 0x1e5                                                // 00000005AB04: 000001E5
	.long 0x1e9                                                // 00000005AB08: 000001E9
	.long 0x1ed                                                // 00000005AB0C: 000001ED
	.long 0x1f0                                                // 00000005AB10: 000001F0
	.long 0x1f6                                                // 00000005AB14: 000001F6
	.long 0x1fa                                                // 00000005AB18: 000001FA
	.long 0x204                                                // 00000005AB1C: 00000204
	.long 0x20d                                                // 00000005AB20: 0000020D
	.long 0x20f                                                // 00000005AB24: 0000020F
	.long 0x214                                                // 00000005AB28: 00000214
	.long 0x217                                                // 00000005AB2C: 00000217
	.long 0x21d                                                // 00000005AB30: 0000021D
	.ascii "\""                                                // 00000005AB34: 22
	.byte 0x2                                                  // 00000005AB35: 02
	.short 0                                                   // 00000005AB36: 0000
	.ascii ")"                                                 // 00000005AB38: 29
	.byte 0x2                                                  // 00000005AB39: 02
	.short 0                                                   // 00000005AB3A: 0000
	.ascii "/"                                                 // 00000005AB3C: 2F
	.byte 0x2                                                  // 00000005AB3D: 02
	.short 0                                                   // 00000005AB3E: 0000
	.ascii "2"                                                 // 00000005AB40: 32
	.byte 0x2                                                  // 00000005AB41: 02
	.short 0                                                   // 00000005AB42: 0000
	.ascii "6"                                                 // 00000005AB44: 36
	.byte 0x2                                                  // 00000005AB45: 02
	.short 0                                                   // 00000005AB46: 0000
	.ascii "8"                                                 // 00000005AB48: 38
	.byte 0x2                                                  // 00000005AB49: 02
	.short 0                                                   // 00000005AB4A: 0000
	.ascii "<"                                                 // 00000005AB4C: 3C
	.byte 0x2                                                  // 00000005AB4D: 02
	.short 0                                                   // 00000005AB4E: 0000
	.ascii "@"                                                 // 00000005AB50: 40
	.byte 0x2                                                  // 00000005AB51: 02
	.short 0                                                   // 00000005AB52: 0000
	.ascii "B"                                                 // 00000005AB54: 42
	.byte 0x2                                                  // 00000005AB55: 02
	.short 0                                                   // 00000005AB56: 0000
	.ascii "K"                                                 // 00000005AB58: 4B
	.byte 0x2                                                  // 00000005AB59: 02
	.short 0                                                   // 00000005AB5A: 0000
	.ascii "N"                                                 // 00000005AB5C: 4E
	.byte 0x2                                                  // 00000005AB5D: 02
	.short 0                                                   // 00000005AB5E: 0000
	.long 0xe030da8                                            // 00000005AB60: 0E030DA8
	.long 0x501ed7cc                                           // 00000005AB64: 501ED7CC
	.long 0x7e8186a5                                           // 00000005AB68: 7E8186A5
	.long 0xd3c481b2                                           // 00000005AB6C: D3C481B2
	.long 0x9f1635ba                                           // 00000005AB70: 9F1635BA
	.long 0x97a43ce6                                           // 00000005AB74: 97A43CE6
	.long 0x8d2b219a                                           // 00000005AB78: 8D2B219A
	.long 0x76391ba6                                           // 00000005AB7C: 76391BA6
	.ascii "C1w"                                               // 00000005AB80: 773143
	.byte 0xaf                                                 // 00000005AB83: AF
	.long 0xbeb6d2ca                                           // 00000005AB84: BEB6D2CA
	.long 0x733f90ea                                           // 00000005AB88: 733F90EA
	.ascii "Z"                                                 // 00000005AB8C: 5A
	.byte 0xb2                                                 // 00000005AB8D: B2
	.ascii "P"                                                 // 00000005AB8E: 50
	.byte 0xca                                                 // 00000005AB8F: CA
	.long 0x47f194c3                                           // 00000005AB90: 47F194C3
	.long 0xa55612e0                                           // 00000005AB94: A55612E0
	.ascii "L"                                                 // 00000005AB98: 4C
	.byte 0xef                                                 // 00000005AB99: EF
	.ascii "\n"                                                // 00000005AB9A: 0A
	.ascii "o(STZ"                                             // 00000005AB9B: 5453286F 5A
	.long 0xcce073fd                                           // 00000005ABA0: CCE073FD
	.ascii "4"                                                 // 00000005ABA4: 34
	.byte 0xf1                                                 // 00000005ABA5: F1
	.short 0x4992                                              // 00000005ABA6: 4992
	.ascii "E"                                                 // 00000005ABA8: 45
	.byte 0x17                                                 // 00000005ABA9: 17
	.ascii "G\\"                                               // 00000005ABAA: 5C47
	.long 0xe2feab9a                                           // 00000005ABAC: E2FEAB9A
	.long 0x7619c2b6                                           // 00000005ABB0: 7619C2B6
	.ascii "\""                                                // 00000005ABB4: 22
	.byte 0x5                                                  // 00000005ABB5: 05
	.ascii ")"                                                 // 00000005ABB6: 29
	.byte 0x15                                                 // 00000005ABB7: 15
	.long 0x22e23203                                           // 00000005ABB8: 22E23203
	.long 0x4376e116                                           // 00000005ABBC: 4376E116
	.long 0xe9fad1ea                                           // 00000005ABC0: E9FAD1EA
	.long 0x74839dd3                                           // 00000005ABC4: 74839DD3
	.long 0xac6537d0                                           // 00000005ABC8: AC6537D0
	.long 0xf605b9cc                                           // 00000005ABCC: F605B9CC
	.ascii "L"                                                 // 00000005ABD0: 4C
	.byte 0xb8                                                 // 00000005ABD1: B8
	.ascii "++"                                                // 00000005ABD2: 2B2B
	.long 0xd97f23cc                                           // 00000005ABD4: D97F23CC
	.ascii "$3q"                                               // 00000005ABD8: 713324
	.byte 0x7                                                  // 00000005ABDB: 07
	.ascii "$"                                                 // 00000005ABDC: 24
	.byte 0xf6                                                 // 00000005ABDD: F6
	.short 0x33ec                                              // 00000005ABDE: 33EC
	.long 0x5fe4d3c1                                           // 00000005ABE0: 5FE4D3C1
	.ascii "\\"                                                // 00000005ABE4: 5C
	.byte 0xd                                                  // 00000005ABE5: 0D
	.ascii "x[h"                                               // 00000005ABE6: 685B78
	.byte 0xd6                                                 // 00000005ABE9: D6
	.short 0x5183                                              // 00000005ABEA: 5183
	.ascii "X"                                                 // 00000005ABEC: 58
	.byte 0x1f                                                 // 00000005ABED: 1F
	.ascii "Aq"                                                // 00000005ABEE: 7141
	.long 0x11e0df9                                            // 00000005ABF0: 011E0DF9
	.long 0x4fccbe1a                                           // 00000005ABF4: 4FCCBE1A
	.ascii "j"                                                 // 00000005ABF8: 6A
	.byte 0xa2                                                 // 00000005ABF9: A2
	.ascii "."                                                 // 00000005ABFA: 2E
	.byte 0x5                                                  // 00000005ABFB: 05
	.ascii "Zo"                                                // 00000005ABFC: 6F5A
	.short 0xfce1                                              // 00000005ABFE: FCE1
	.long 0x68497f1b                                           // 00000005AC00: 68497F1B
	.long 0x22a50816                                           // 00000005AC04: 22A50816
	.long 0xa0c8431e                                           // 00000005AC08: A0C8431E
	.ascii "w"                                                 // 00000005AC0C: 77
	.byte 0x99                                                 // 00000005AC0D: 99
	.ascii "N"                                                 // 00000005AC0E: 4E
	.byte 0xc6                                                 // 00000005AC0F: C6
	.ascii "D"                                                 // 00000005AC10: 44
	.byte 0xa4                                                 // 00000005AC11: A4
	.short 0xe7aa                                              // 00000005AC12: E7AA
	.ascii ","                                                 // 00000005AC14: 2C
	.byte 0xff                                                 // 00000005AC15: FF
	.short 0xb716                                              // 00000005AC16: B716
	.long 0x455795f4                                           // 00000005AC18: 455795F4
	.ascii "u"                                                 // 00000005AC1C: 75
	.byte 0x3                                                  // 00000005AC1D: 03
	.ascii "n"                                                 // 00000005AC1E: 6E
	.byte 0xa9                                                 // 00000005AC1F: A9
	.ascii "("                                                 // 00000005AC20: 28
	.byte 0xc8                                                 // 00000005AC21: C8
	.short 0x59c7                                              // 00000005AC22: 59C7
	.long 0xc5feef88                                           // 00000005AC24: C5FEEF88
	.ascii "dq:"                                               // 00000005AC28: 3A7164
	.byte 0xa9                                                 // 00000005AC2B: A9
	.ascii "@e"                                                // 00000005AC2C: 6540
	.short 0x60ac                                              // 00000005AC2E: 60AC
	.long 0xb894f4ed                                           // 00000005AC30: B894F4ED
	.long 0x17c28a9a                                           // 00000005AC34: 17C28A9A
	.long 0xfda5cac2                                           // 00000005AC38: FDA5CAC2
	.ascii "o"                                                 // 00000005AC3C: 6F
	.byte 0x19                                                 // 00000005AC3D: 19
	.short 0x66f2                                              // 00000005AC3E: 66F2
	.long 0xd23ac3ea                                           // 00000005AC40: D23AC3EA
	.long 0x5e4c66fa                                           // 00000005AC44: 5E4C66FA
	.long 0xae7ffcda                                           // 00000005AC48: AE7FFCDA
	.long 0xa0db1b97                                           // 00000005AC4C: A0DB1B97
	.ascii "x"                                                 // 00000005AC50: 78
	.byte 0x8                                                  // 00000005AC51: 08
	.short 0xd219                                              // 00000005AC52: D219
	.ascii "x"                                                 // 00000005AC54: 78
	.byte 0xac                                                 // 00000005AC55: AC
	.short 0x98b1                                              // 00000005AC56: 98B1
	.long 0xba7273b0                                           // 00000005AC58: BA7273B0
	.long 0x1992b2f4                                           // 00000005AC5C: 1992B2F4
	.long 0x6aaf44d5                                           // 00000005AC60: 6AAF44D5
	.long 0xf67627c8                                           // 00000005AC64: F67627C8
	.long 0x5ad10589                                           // 00000005AC68: 5AD10589
	.long 0xaf469dda                                           // 00000005AC6C: AF469DDA
	.long 0x39b4b28a                                           // 00000005AC70: 39B4B28A
	.long 0xb3bceac7                                           // 00000005AC74: B3BCEAC7
	.long 0x95d34ee7                                           // 00000005AC78: 95D34EE7
	.ascii "x8"                                                // 00000005AC7C: 3878
	.short 0x17cc                                              // 00000005AC7E: 17CC
	.long 0x256f8c0                                            // 00000005AC80: 0256F8C0
	.long 0xda83c418                                           // 00000005AC84: DA83C418
	.long 0x202f02d0                                           // 00000005AC88: 202F02D0
	.long 0xe68dc1d5                                           // 00000005AC8C: E68DC1D5
	.ascii "x"                                                 // 00000005AC90: 78
	.byte 0x91                                                 // 00000005AC91: 91
	.ascii "t"                                                 // 00000005AC92: 74
	.byte 0xb1                                                 // 00000005AC93: B1
	.long 0x411e3ca8                                           // 00000005AC94: 411E3CA8
	.ascii "$"                                                 // 00000005AC98: 24
	.byte 0xf9                                                 // 00000005AC99: F9
	.short 0x9c86                                              // 00000005AC9A: 9C86
	.long 0x217b3188                                           // 00000005AC9C: 217B3188
	.ascii " "                                                 // 00000005ACA0: 20
	.byte 0xe5                                                 // 00000005ACA1: E5
	.short 0xc9a0                                              // 00000005ACA2: C9A0
	.ascii "	"                                                 // 00000005ACA4: 09
	.byte 0xdf                                                 // 00000005ACA5: DF
	.short 0xbb83                                              // 00000005ACA6: BB83
	.long 0xf4b4c3d2                                           // 00000005ACA8: F4B4C3D2
	.long 0x4b99ceb2                                           // 00000005ACAC: 4B99CEB2
	.ascii "F"                                                 // 00000005ACB0: 46
	.byte 0x5                                                  // 00000005ACB1: 05
	.ascii "\\I"                                               // 00000005ACB2: 495C
	.long 0xd0d05f12                                           // 00000005ACB4: D0D05F12
	.ascii "o"                                                 // 00000005ACB8: 6F
	.byte 0x96                                                 // 00000005ACB9: 96
	.short 0xe1bd                                              // 00000005ACBA: E1BD
	.long 0xfda5c596                                           // 00000005ACBC: FDA5C596
	.ascii "z|"                                                // 00000005ACC0: 7C7A
	.short 0xe6e7                                              // 00000005ACC2: E6E7
	.long 0x4ccdfdae                                           // 00000005ACC4: 4CCDFDAE
	.ascii "J"                                                 // 00000005ACC8: 4A
	.byte 0xd6                                                 // 00000005ACC9: D6
	.short 0x458d                                              // 00000005ACCA: 458D
	.long 0x8d2fd8cf                                           // 00000005ACCC: 8D2FD8CF
	.long 0x4c36851c                                           // 00000005ACD0: 4C36851C
	.long 0x164a24d0                                           // 00000005ACD4: 164A24D0
	.long 0xc5d94508                                           // 00000005ACD8: C5D94508
	.ascii "m"                                                 // 00000005ACDC: 6D
	.byte 0xf8                                                 // 00000005ACDD: F8
	.ascii "("                                                 // 00000005ACDE: 28
	.byte 0x8d                                                 // 00000005ACDF: 8D
	.ascii "u"                                                 // 00000005ACE0: 75
	.byte 0x88                                                 // 00000005ACE1: 88
	.short 0xcbc4                                              // 00000005ACE2: CBC4
	.ascii "C"                                                 // 00000005ACE4: 43
	.byte 0xb6                                                 // 00000005ACE5: B6
	.short 0xa8b6                                              // 00000005ACE6: A8B6
	.ascii "*"                                                 // 00000005ACE8: 2A
	.byte 0xd                                                  // 00000005ACE9: 0D
	.short 0xb0fb                                              // 00000005ACEA: B0FB
	.ascii "B9H"                                               // 00000005ACEC: 483942
	.byte 0xf8                                                 // 00000005ACEF: F8
	.long 0x2d6e37c2                                           // 00000005ACF0: 2D6E37C2
	.ascii "SyE|"                                              // 00000005ACF4: 7C457953
	.long 0x5f9eacf4                                           // 00000005ACF8: 5F9EACF4
	.ascii "|+"                                                // 00000005ACFC: 2B7C
	.short 0x5bb2                                              // 00000005ACFE: 5BB2
	.ascii "1"                                                 // 00000005AD00: 31
	.byte 0xbe                                                 // 00000005AD01: BE
	.short 0x9ea1                                              // 00000005AD02: 9EA1
	.long 0xc23ac9cc                                           // 00000005AD04: C23AC9CC
	.ascii "hp1"                                               // 00000005AD08: 317068
	.byte 0xfc                                                 // 00000005AD0B: FC
	.long 0x31576ee8                                           // 00000005AD0C: 31576EE8
	.long 0x14340db1                                           // 00000005AD10: 14340DB1
	.long 0x5d154ace                                           // 00000005AD14: 5D154ACE
	.ascii "B"                                                 // 00000005AD18: 42
	.byte 0xfe                                                 // 00000005AD19: FE
	.short 0xd386                                              // 00000005AD1A: D386
	.long 0xd7aa5f03                                           // 00000005AD1C: D7AA5F03
	.long 0x8fe9ccba                                           // 00000005AD20: 8FE9CCBA
	.ascii "6"                                                 // 00000005AD24: 36
	.byte 0xcb                                                 // 00000005AD25: CB
	.short 0xbc94                                              // 00000005AD26: BC94
	.long 0xb6f53cda                                           // 00000005AD28: B6F53CDA
	.long 0x9d5fa4ce                                           // 00000005AD2C: 9D5FA4CE
	.long 0x67a49c8b                                           // 00000005AD30: 67A49C8B
	.long 0x3e8db4c8                                           // 00000005AD34: 3E8DB4C8
	.ascii "X*"                                                // 00000005AD38: 2A58
	.short 0xca1e                                              // 00000005AD3A: CA1E
	.long 0x7d4296c0                                           // 00000005AD3C: 7D4296C0
	.long 0x9a3c55a9                                           // 00000005AD40: 9A3C55A9
	.long 0xd98c50ac                                           // 00000005AD44: D98C50AC
	.long 0xf0bb7594                                           // 00000005AD48: F0BB7594
	.ascii "@"                                                 // 00000005AD4C: 40
	.byte 0xba                                                 // 00000005AD4D: BA
	.ascii "="                                                 // 00000005AD4E: 3D
	.byte 0x1f                                                 // 00000005AD4F: 1F
	.ascii "\\"                                                // 00000005AD50: 5C
	.byte 0xb5                                                 // 00000005AD51: B5
	.ascii "^G"                                                // 00000005AD52: 475E
	.long 0xc83ba41d                                           // 00000005AD54: C83BA41D
	.ascii "N"                                                 // 00000005AD58: 4E
	.byte 0xc4                                                 // 00000005AD59: C4
	.short 0x8cf2                                              // 00000005AD5A: 8CF2
	.long 0x68667512                                           // 00000005AD5C: 68667512
	.ascii "V!u"                                               // 00000005AD60: 752156
	.byte 0x3                                                  // 00000005AD63: 03
	.long 0x48db0c06                                           // 00000005AD64: 48DB0C06
	.long 0x119cf2de                                           // 00000005AD68: 119CF2DE
	.long 0x614e79a                                            // 00000005AD6C: 0614E79A
	.long 0x306b4d06                                           // 00000005AD70: 306B4D06
	.long 0xa19c4d1a                                           // 00000005AD74: A19C4D1A
	.ascii "_"                                                 // 00000005AD78: 5F
	.byte 0xa0                                                 // 00000005AD79: A0
	.short 0xaba5                                              // 00000005AD7A: ABA5
	.long 0xe367ecf7                                           // 00000005AD7C: E367ECF7
	.long 0xa20f70d0                                           // 00000005AD80: A20F70D0
	.ascii "H,"                                                // 00000005AD84: 2C48
	.short 0xbcfe                                              // 00000005AD86: BCFE
	.long 0x60f57694                                           // 00000005AD88: 60F57694
	.ascii "=	j"                                               // 00000005AD8C: 6A093D
	.byte 0x8a                                                 // 00000005AD8F: 8A
	.ascii " "                                                 // 00000005AD90: 20
	.byte 0x93                                                 // 00000005AD91: 93
	.short 0x931e                                              // 00000005AD92: 931E
	.long 0x4b5cc408                                           // 00000005AD94: 4B5CC408
	.ascii "|"                                                 // 00000005AD98: 7C
	.byte 0xf9                                                 // 00000005AD99: F9
	.ascii "5"                                                 // 00000005AD9A: 35
	.byte 0x90                                                 // 00000005AD9B: 90
	.long 0x4702b89c                                           // 00000005AD9C: 4702B89C
	.long 0x75e104dc                                           // 00000005ADA0: 75E104DC
	.long 0x7eaac99                                            // 00000005ADA4: 07EAAC99
	.long 0x4dd9b79e                                           // 00000005ADA8: 4DD9B79E
	.long 0xdae25efa                                           // 00000005ADAC: DAE25EFA
	.long 0xfea9dfc6                                           // 00000005ADB0: FEA9DFC6
	.ascii "o"                                                 // 00000005ADB4: 6F
	.byte 0xa3                                                 // 00000005ADB5: A3
	.short 0xb5aa                                              // 00000005ADB6: B5AA
	.long 0x1746a2b6                                           // 00000005ADB8: 1746A2B6
	.long 0xe28af812                                           // 00000005ADBC: E28AF812
	.long 0x4a051bde                                           // 00000005ADC0: 4A051BDE
	.ascii "W~"                                                // 00000005ADC4: 7E57
	.short 0xc6c7                                              // 00000005ADC6: C6C7
	.long 0x16562edd                                           // 00000005ADC8: 16562EDD
	.ascii "P"                                                 // 00000005ADCC: 50
	.byte 0xca                                                 // 00000005ADCD: CA
	.short 0x1b5                                               // 00000005ADCE: 01B5
	.long 0x57e845d4                                           // 00000005ADD0: 57E845D4
	.long 0x1f7bf484                                           // 00000005ADD4: 1F7BF484
	.ascii "	"                                                 // 00000005ADD8: 09
	.byte 0xa7                                                 // 00000005ADD9: A7
	.short 0x4ca8                                              // 00000005ADDA: 4CA8
	.long 0x532bec0e                                           // 00000005ADDC: 532BEC0E
	.long 0x15cd5ada                                           // 00000005ADE0: 15CD5ADA
	.long 0x77d517f                                            // 00000005ADE4: 077D517F
	.ascii "n"                                                 // 00000005ADE8: 6E
	.byte 0xce                                                 // 00000005ADE9: CE
	.ascii ",R"                                                // 00000005ADEA: 522C
	.long 0xae999a0e                                           // 00000005ADEC: AE999A0E
	.long 0xdd7d22fa                                           // 00000005ADF0: DD7D22FA
	.ascii ";"                                                 // 00000005ADF4: 3B
	.byte 0x10                                                 // 00000005ADF5: 10
	.ascii "W/"                                                // 00000005ADF6: 2F57
	.long 0xb6d339c4                                           // 00000005ADF8: B6D339C4
	.ascii "t"                                                 // 00000005ADFC: 74
	.byte 0xaf                                                 // 00000005ADFD: AF
	.short 0xfff8                                              // 00000005ADFE: FFF8
	.long 0xc61cda15                                           // 00000005AE00: C61CDA15
	.long 0xde4da9e4                                           // 00000005AE04: DE4DA9E4
	.ascii "t"                                                 // 00000005AE08: 74
	.byte 0x84                                                 // 00000005AE09: 84
	.ascii "P"                                                 // 00000005AE0A: 50
	.byte 0xd4                                                 // 00000005AE0B: D4
	.long 0xb7f078bc                                           // 00000005AE0C: B7F078BC
	.long 0xe00fafc1                                           // 00000005AE10: E00FAFC1
	.ascii "N "                                                // 00000005AE14: 204E
	.short 0xd307                                              // 00000005AE16: D307
	.ascii "~"                                                 // 00000005AE18: 7E
	.byte 0xbb                                                 // 00000005AE19: BB
	.short 0xe8b2                                              // 00000005AE1A: E8B2
	.ascii "n"                                                 // 00000005AE1C: 6E
	.byte 0x87                                                 // 00000005AE1D: 87
	.short 0xde5                                               // 00000005AE1E: 0DE5
	.ascii "R"                                                 // 00000005AE20: 52
	.byte 0xb8                                                 // 00000005AE21: B8
	.short 0x709f                                              // 00000005AE22: 709F
	.ascii "G"                                                 // 00000005AE24: 47
	.byte 0x8                                                  // 00000005AE25: 08
	.ascii "AG"                                                // 00000005AE26: 4741
	.long 0xd63f20d2                                           // 00000005AE28: D63F20D2
	.long 0xdfba2eca                                           // 00000005AE2C: DFBA2ECA
	.ascii "V2"                                                // 00000005AE30: 3256
	.short 0xe2c9                                              // 00000005AE32: E2C9
	.long 0x12f2afaf                                           // 00000005AE34: 12F2AFAF
	.ascii "L~\\)"                                             // 00000005AE38: 295C7E4C
	.long 0x950b7df0                                           // 00000005AE3C: 950B7DF0
	.ascii "lG0m,W"                                            // 00000005AE40: 6D30476C 572C
	.short 0xbac9                                              // 00000005AE46: BAC9
	.ascii "M"                                                 // 00000005AE48: 4D
	.byte 0xae                                                 // 00000005AE49: AE
	.short 0xd389                                              // 00000005AE4A: D389
	.ascii "D"                                                 // 00000005AE4C: 44
	.byte 0xd4                                                 // 00000005AE4D: D4
	.short 0x988a                                              // 00000005AE4E: 988A
	.ascii "D"                                                 // 00000005AE50: 44
	.byte 0xca                                                 // 00000005AE51: CA
	.ascii "W_]nD\""                                           // 00000005AE52: 6E5D5F57 2244
	.long 0x2ca8728e                                           // 00000005AE58: 2CA8728E
	.long 0xcecc1bc2                                           // 00000005AE5C: CECC1BC2
	.long 0x946aecae                                           // 00000005AE60: 946AECAE
	.ascii "~"                                                 // 00000005AE64: 7E
	.byte 0xf0                                                 // 00000005AE65: F0
	.ascii "?"                                                 // 00000005AE66: 3F
	.byte 0x98                                                 // 00000005AE67: 98
	.long 0x3b56da07                                           // 00000005AE68: 3B56DA07
	.ascii "z"                                                 // 00000005AE6C: 7A
	.byte 0xec                                                 // 00000005AE6D: EC
	.short 0x45b3                                              // 00000005AE6E: 45B3
	.ascii "V"                                                 // 00000005AE70: 56
	.byte 0xdd                                                 // 00000005AE71: DD
	.ascii "Z"                                                 // 00000005AE72: 5A
	.byte 0xa3                                                 // 00000005AE73: A3
	.ascii "F|"                                                // 00000005AE74: 7C46
	.short 0x80ea                                              // 00000005AE76: 80EA
	.long 0xc88ba5fe                                           // 00000005AE78: C88BA5FE
	.ascii "j"                                                 // 00000005AE7C: 6A
	.byte 0x1                                                  // 00000005AE7D: 01
	.ascii "Ac"                                                // 00000005AE7E: 6341
	.long 0x55280ef                                            // 00000005AE80: 055280EF
	.long 0x42d4168d                                           // 00000005AE84: 42D4168D
	.ascii "P*"                                                // 00000005AE88: 2A50
	.short 0x4085                                              // 00000005AE8A: 4085
	.long 0x3c12d8a0                                           // 00000005AE8C: 3C12D8A0
	.ascii "\\"                                                // 00000005AE90: 5C
	.byte 0xc6                                                 // 00000005AE91: C6
	.ascii "ZN"                                                // 00000005AE92: 4E5A
	.long 0xa13b3b0d                                           // 00000005AE94: A13B3B0D
	.ascii "fI!"                                               // 00000005AE98: 214966
	.byte 0xca                                                 // 00000005AE9B: CA
	.long 0x66633baa                                           // 00000005AE9C: 66633BAA
	.long 0x622b4dfa                                           // 00000005AEA0: 622B4DFA
	.long 0x54e0d71b                                           // 00000005AEA4: 54E0D71B
	.ascii "\""                                                // 00000005AEA8: 22
	.byte 0xbf                                                 // 00000005AEA9: BF
	.short 0x8dc5                                              // 00000005AEAA: 8DC5
	.ascii "W"                                                 // 00000005AEAC: 57
	.byte 0x9b                                                 // 00000005AEAD: 9B
	.short 0xbecf                                              // 00000005AEAE: BECF
	.long 0xb4efb1bc                                           // 00000005AEB0: B4EFB1BC
	.ascii "A("                                                // 00000005AEB4: 2841
	.short 0x92af                                              // 00000005AEB6: 92AF
	.ascii "T"                                                 // 00000005AEB8: 54
	.byte 0xd7                                                 // 00000005AEB9: D7
	.ascii "C"                                                 // 00000005AEBA: 43
	.byte 0xb3                                                 // 00000005AEBB: B3
	.long 0xfbbb1184                                           // 00000005AEBC: FBBB1184
	.long 0x6fb52684                                           // 00000005AEC0: 6FB52684
	.ascii "M"                                                 // 00000005AEC4: 4D
	.byte 0xc1                                                 // 00000005AEC5: C1
	.short 0xa21a                                              // 00000005AEC6: A21A
	.ascii "^"                                                 // 00000005AEC8: 5E
	.byte 0xef                                                 // 00000005AEC9: EF
	.short 0x7011                                              // 00000005AECA: 7011
	.long 0x91f01d2                                            // 00000005AECC: 091F01D2
	.long 0x84755e97                                           // 00000005AED0: 84755E97
	.ascii "*"                                                 // 00000005AED4: 2A
	.byte 0xeb                                                 // 00000005AED5: EB
	.short 0x88bc                                              // 00000005AED6: 88BC
	.ascii ">"                                                 // 00000005AED8: 3E
	.byte 0xf3                                                 // 00000005AED9: F3
	.short 0x4c8c                                              // 00000005AEDA: 4C8C
	.long 0x75352596                                           // 00000005AEDC: 75352596
	.long 0x2708e68a                                           // 00000005AEE0: 2708E68A
	.long 0xe10e1597                                           // 00000005AEE4: E10E1597
	.long 0x1f1c36fc                                           // 00000005AEE8: 1F1C36FC
	.long 0x723b9adc                                           // 00000005AEEC: 723B9ADC
	.long 0x30275fb4                                           // 00000005AEF0: 30275FB4
	.long 0x73a5d900                                           // 00000005AEF4: 73A5D900
	.ascii "q["                                                // 00000005AEF8: 5B71
	.short 0xfd86                                              // 00000005AEFA: FD86
	.long 0x59505d18                                           // 00000005AEFC: 59505D18
	.ascii "H"                                                 // 00000005AF00: 48
	.byte 0xdd                                                 // 00000005AF01: DD
	.ascii "Nu"                                                // 00000005AF02: 754E
	.long 0x197e3fa0                                           // 00000005AF04: 197E3FA0
	.long 0xaefbd3ac                                           // 00000005AF08: AEFBD3AC
	.long 0x400a69c9                                           // 00000005AF0C: 400A69C9
	.ascii "Fb7t"                                              // 00000005AF10: 74376246
	.long 0xdcc9ef1a                                           // 00000005AF14: DCC9EF1A
	.ascii "R"                                                 // 00000005AF18: 52
	.byte 0xdb                                                 // 00000005AF19: DB
	.ascii "U"                                                 // 00000005AF1A: 55
	.byte 0xbb                                                 // 00000005AF1B: BB
	.ascii "F@"                                                // 00000005AF1C: 4046
	.short 0x2af1                                              // 00000005AF1E: 2AF1
	.long 0xaa375ddb                                           // 00000005AF20: AA375DDB
	.long 0x3d4ec4e2                                           // 00000005AF24: 3D4EC4E2
	.long 0xe59aefae                                           // 00000005AF28: E59AEFAE
	.ascii "\n"                                                // 00000005AF2C: 0A
	.ascii "4"                                                 // 00000005AF2D: 34
	.short 0x8408                                              // 00000005AF2E: 8408
	.ascii "v"                                                 // 00000005AF30: 76
	.byte 0xb4                                                 // 00000005AF31: B4
	.short 0x54a6                                              // 00000005AF32: 54A6
	.ascii "/"                                                 // 00000005AF34: 2F
	.byte 0x98                                                 // 00000005AF35: 98
	.short 0x3201                                              // 00000005AF36: 3201
	.long 0x2a369100                                           // 00000005AF38: 2A369100
	.long 0x737fa7c4                                           // 00000005AF3C: 737FA7C4
	.long 0xb438c198                                           // 00000005AF40: B438C198
	.long 0x710c3d9c                                           // 00000005AF44: 710C3D9C
	.ascii "Tg"                                                // 00000005AF48: 6754
	.short 0xb8ad                                              // 00000005AF4A: B8AD
	.long 0xa2c6d1d4                                           // 00000005AF4C: A2C6D1D4
	.ascii "!E"                                                // 00000005AF50: 4521
	.short 0x39b1                                              // 00000005AF52: 39B1
	.ascii "h"                                                 // 00000005AF54: 68
	.byte 0x14                                                 // 00000005AF55: 14
	.ascii "h"                                                 // 00000005AF56: 68
	.byte 0xc                                                  // 00000005AF57: 0C
	.ascii "D"                                                 // 00000005AF58: 44
	.byte 0xd                                                  // 00000005AF59: 0D
	.short 0xb796                                              // 00000005AF5A: B796
	.long 0x590606f8                                           // 00000005AF5C: 590606F8
	.long 0xc55b2298                                           // 00000005AF60: C55B2298
	.long 0x448cb3fd                                           // 00000005AF64: 448CB3FD
	.long 0xa3741b1a                                           // 00000005AF68: A3741B1A
	.long 0xda7c3b13                                           // 00000005AF6C: DA7C3B13
	.long 0x162b7eaa                                           // 00000005AF70: 162B7EAA
	.ascii "w"                                                 // 00000005AF74: 77
	.byte 0xa0                                                 // 00000005AF75: A0
	.short 0xa14                                               // 00000005AF76: 0A14
	.long 0x50b0bcac                                           // 00000005AF78: 50B0BCAC
	.ascii "i"                                                 // 00000005AF7C: 69
	.byte 0xdf                                                 // 00000005AF7D: DF
	.ascii "h(]"                                               // 00000005AF7E: 5D2868
	.byte 0xfc                                                 // 00000005AF81: FC
	.short 0xb9d9                                              // 00000005AF82: B9D9
	.ascii "O"                                                 // 00000005AF84: 4F
	.byte 0x80                                                 // 00000005AF85: 80
	.short 0xd61a                                              // 00000005AF86: D61A
	.ascii "j"                                                 // 00000005AF88: 6A
	.byte 0xdb                                                 // 00000005AF89: DB
	.ascii "W+"                                                // 00000005AF8A: 2B57
	.long 0x6dd14eb6                                           // 00000005AF8C: 6DD14EB6
	.long 0x6033b0b2                                           // 00000005AF90: 6033B0B2
	.long 0x40fd77ae                                           // 00000005AF94: 40FD77AE
	.long 0x6c978ea7                                           // 00000005AF98: 6C978EA7
	.long 0x166f70bc                                           // 00000005AF9C: 166F70BC
	.long 0xbdfaf4d8                                           // 00000005AFA0: BDFAF4D8
	.long 0x42c7a9c8                                           // 00000005AFA4: 42C7A9C8
	.ascii "q"                                                 // 00000005AFA8: 71
	.byte 0xa5                                                 // 00000005AFA9: A5
	.short 0x9899                                              // 00000005AFAA: 9899
	.ascii "<Z&"                                               // 00000005AFAC: 265A3C
	.byte 0xb3                                                 // 00000005AFAF: B3
	.long 0x58ab23c9                                           // 00000005AFB0: 58AB23C9
	.long 0x9f1d9502                                           // 00000005AFB4: 9F1D9502
	.long 0x46cfd06                                            // 00000005AFB8: 046CFD06
	.long 0x46b0e0ef                                           // 00000005AFBC: 46B0E0EF
	.long 0x972390c8                                           // 00000005AFC0: 972390C8
	.long 0x14d0bcc5                                           // 00000005AFC4: 14D0BCC5
	.ascii "<'"                                                // 00000005AFC8: 273C
	.short 0x1bfc                                              // 00000005AFCA: 1BFC
	.long 0x7fa6e600                                           // 00000005AFCC: 7FA6E600
	.long 0xb12eea00                                           // 00000005AFD0: B12EEA00
	.ascii "t"                                                 // 00000005AFD4: 74
	.byte 0x8c                                                 // 00000005AFD5: 8C
	.short 0x8b9b                                              // 00000005AFD6: 8B9B
	.long 0x86b7de0d                                           // 00000005AFD8: 86B7DE0D
	.long 0xe18d63ba                                           // 00000005AFDC: E18D63BA
	.ascii "2+"                                                // 00000005AFE0: 2B32
	.short 0x48d9                                              // 00000005AFE2: 48D9
	.ascii ">S"                                                // 00000005AFE4: 533E
	.short 0xb8e8                                              // 00000005AFE6: B8E8
	.long 0xa23f7adb                                           // 00000005AFE8: A23F7ADB
	.ascii "6"                                                 // 00000005AFEC: 36
	.byte 0xf                                                  // 00000005AFED: 0F
	.ascii "XHn"                                               // 00000005AFEE: 6E4858
	.byte 0xdc                                                 // 00000005AFF1: DC
	.short 0x9395                                              // 00000005AFF2: 9395
	.long 0x72c0cb96                                           // 00000005AFF4: 72C0CB96
	.long 0xce54cfd6                                           // 00000005AFF8: CE54CFD6
	.long 0xe1dd8cda                                           // 00000005AFFC: E1DD8CDA
	.ascii "2"                                                 // 00000005B000: 32
	.byte 0x15                                                 // 00000005B001: 15
	.short 0x8aa1                                              // 00000005B002: 8AA1
	.ascii "w"                                                 // 00000005B004: 77
	.byte 0x96                                                 // 00000005B005: 96
	.ascii "=1"                                                // 00000005B006: 313D
	.long 0xd6533510                                           // 00000005B008: D6533510
	.ascii "q"                                                 // 00000005B00C: 71
	.byte 0xa5                                                 // 00000005B00D: A5
	.short 0xb2a2                                              // 00000005B00E: B2A2
	.ascii "$`"                                                // 00000005B010: 6024
	.short 0xe2ee                                              // 00000005B012: E2EE
	.long 0x584c1ea0                                           // 00000005B014: 584C1EA0
	.long 0xfb326a1c                                           // 00000005B018: FB326A1C
	.long 0x8650ee8c                                           // 00000005B01C: 8650EE8C
	.long 0x4365c580                                           // 00000005B020: 4365C580
	.ascii "@"                                                 // 00000005B024: 40
	.byte 0xbb                                                 // 00000005B025: BB
	.short 0xa38e                                              // 00000005B026: A38E
	.ascii "M"                                                 // 00000005B028: 4D
	.byte 0xb7                                                 // 00000005B029: B7
	.short 0x89ea                                              // 00000005B02A: 89EA
	.ascii ".r$"                                               // 00000005B02C: 24722E
	.byte 0x92                                                 // 00000005B02F: 92
	.long 0x9e99f9a6                                           // 00000005B030: 9E99F9A6
	.long 0xebbf60ba                                           // 00000005B034: EBBF60BA
	.long 0xf385fbf2                                           // 00000005B038: F385FBF2
	.long 0x7c59dcdb                                           // 00000005B03C: 7C59DCDB
	.long 0xd9106e17                                           // 00000005B040: D9106E17
	.long 0x6cb8bc84                                           // 00000005B044: 6CB8BC84
	.long 0x1ddc3881                                           // 00000005B048: 1DDC3881
	.long 0x4eb1ece8                                           // 00000005B04C: 4EB1ECE8
	.long 0x2ea5ab84                                           // 00000005B050: 2EA5AB84
	.ascii "0"                                                 // 00000005B054: 30
	.byte 0xf9                                                 // 00000005B055: F9
	.short 0xf70e                                              // 00000005B056: F70E
	.long 0xfce2dfe8                                           // 00000005B058: FCE2DFE8
	.ascii "07A+!v"                                            // 00000005B05C: 2B413730 7621
	.short 0x279e                                              // 00000005B062: 279E
	.ascii "z"                                                 // 00000005B064: 7A
	.byte 0xc9                                                 // 00000005B065: C9
	.short 0x7edb                                              // 00000005B066: 7EDB
	.long 0xd0c26cd2                                           // 00000005B068: D0C26CD2
	.ascii "?"                                                 // 00000005B06C: 3F
	.byte 0x8                                                  // 00000005B06D: 08
	.short 0xcac0                                              // 00000005B06E: CAC0
	.ascii "bV"                                                // 00000005B070: 5662
	.short 0x52bb                                              // 00000005B072: 52BB
	.long 0x80ae7f1a                                           // 00000005B074: 80AE7F1A
	.ascii "6"                                                 // 00000005B078: 36
	.byte 0x85                                                 // 00000005B079: 85
	.ascii "Z"                                                 // 00000005B07A: 5A
	.byte 0xad                                                 // 00000005B07B: AD
	.long 0xadc86b16                                           // 00000005B07C: ADC86B16
	.ascii "/9w"                                               // 00000005B080: 77392F
	.byte 0x19                                                 // 00000005B083: 19
	.long 0x2fc154a8                                           // 00000005B084: 2FC154A8
	.long 0xd97330ac                                           // 00000005B088: D97330AC
	.long 0x5b8c56f8                                           // 00000005B08C: 5B8C56F8
	.long 0xa8cb021c                                           // 00000005B090: A8CB021C
	.long 0x27fc9381                                           // 00000005B094: 27FC9381
	.long 0xc54520dd                                           // 00000005B098: C54520DD
	.long 0x3c9732f2                                           // 00000005B09C: 3C9732F2
	.long 0x7bbd4dca                                           // 00000005B0A0: 7BBD4DCA
	.long 0xcfb03603                                           // 00000005B0A4: CFB03603
	.long 0x5de987ce                                           // 00000005B0A8: 5DE987CE
	.ascii "r{"                                                // 00000005B0AC: 7B72
	.short 0x5d9d                                              // 00000005B0AE: 5D9D
	.long 0xde46a41a                                           // 00000005B0B0: DE46A41A
	.long 0xb131ec1e                                           // 00000005B0B4: B131EC1E
	.ascii "vcL"                                               // 00000005B0B8: 4C6376
	.byte 0xa2                                                 // 00000005B0BB: A2
	.long 0x78c59acf                                           // 00000005B0BC: 78C59ACF
	.long 0x8d3fe2ec                                           // 00000005B0C0: 8D3FE2EC
	.long 0x6272faa8                                           // 00000005B0C4: 6272FAA8
	.ascii "0k"                                                // 00000005B0C8: 6B30
	.short 0xa48e                                              // 00000005B0CA: A48E
	.ascii "9<"                                                // 00000005B0CC: 3C39
	.short 0x8cde                                              // 00000005B0CE: 8CDE
	.long 0xb98a5fd0                                           // 00000005B0D0: B98A5FD0
	.ascii "03"                                                // 00000005B0D4: 3330
	.short 0xe1b7                                              // 00000005B0D6: E1B7
	.ascii "TE"                                                // 00000005B0D8: 4554
	.short 0x2dc8                                              // 00000005B0DA: 2DC8
	.long 0x88a0b685                                           // 00000005B0DC: 88A0B685
	.ascii "~d.Y&D"                                            // 00000005B0E0: 592E647E 4426
	.short 0x82c9                                              // 00000005B0E6: 82C9
	.long 0x2d9ffcbf                                           // 00000005B0E8: 2D9FFCBF
	.ascii ">"                                                 // 00000005B0EC: 3E
	.byte 0xeb                                                 // 00000005B0ED: EB
	.ascii "5"                                                 // 00000005B0EE: 35
	.byte 0x1a                                                 // 00000005B0EF: 1A
	.long 0xa6624fc2                                           // 00000005B0F0: A6624FC2
	.ascii ".E"                                                // 00000005B0F4: 452E
	.short 0x22c0                                              // 00000005B0F6: 22C0
	.long 0x7c0bd3cb                                           // 00000005B0F8: 7C0BD3CB
	.long 0xf3e837dc                                           // 00000005B0FC: F3E837DC
	.long 0xb7535b0c                                           // 00000005B100: B7535B0C
	.ascii ","                                                 // 00000005B104: 2C
	.byte 0xa5                                                 // 00000005B105: A5
	.short 0xc0c9                                              // 00000005B106: C0C9
	.long 0x6a1944ed                                           // 00000005B108: 6A1944ED
	.long 0x6b2b32e9                                           // 00000005B10C: 6B2B32E9
	.long 0x8760f5d2                                           // 00000005B110: 8760F5D2
	.long 0xb8684b1b                                           // 00000005B114: B8684B1B
	.ascii "^Q"                                                // 00000005B118: 515E
	.short 0xcb1c                                              // 00000005B11A: CB1C
	.long 0xb4949d8a                                           // 00000005B11C: B4949D8A
	.long 0xc060919a                                           // 00000005B120: C060919A
	.ascii "^"                                                 // 00000005B124: 5E
	.byte 0x9c                                                 // 00000005B125: 9C
	.ascii "Z\\"                                               // 00000005B126: 5C5A
	.long 0xff3db6f6                                           // 00000005B128: FF3DB6F6
	.long 0xe8d1cfda                                           // 00000005B12C: E8D1CFDA
	.ascii "k"                                                 // 00000005B130: 6B
	.byte 0x85                                                 // 00000005B131: 85
	.ascii "1E"                                                // 00000005B132: 4531
	.long 0x489cf4bc                                           // 00000005B134: 489CF4BC
	.ascii "h"                                                 // 00000005B138: 68
	.byte 0xdb                                                 // 00000005B139: DB
	.ascii "zzP"                                               // 00000005B13A: 507A7A
	.byte 0x8d                                                 // 00000005B13D: 8D
	.short 0x4eee                                              // 00000005B13E: 4EEE
	.long 0x1cc764d8                                           // 00000005B140: 1CC764D8
	.ascii "L,"                                                // 00000005B144: 2C4C
	.short 0xa9b3                                              // 00000005B146: A9B3
	.ascii "T&"                                                // 00000005B148: 2654
	.short 0x8fcd                                              // 00000005B14A: 8FCD
	.long 0xf52c57d9                                           // 00000005B14C: F52C57D9
	.ascii "8"                                                 // 00000005B150: 38
	.byte 0xe3                                                 // 00000005B151: E3
	.ascii "H"                                                 // 00000005B152: 48
	.byte 0x98                                                 // 00000005B153: 98
	.long 0xfaeb0a8c                                           // 00000005B154: FAEB0A8C
	.ascii "uO"                                                // 00000005B158: 4F75
	.short 0xa8f9                                              // 00000005B15A: A8F9
	.ascii ">"                                                 // 00000005B15C: 3E
	.byte 0x84                                                 // 00000005B15D: 84
	.short 0xa406                                              // 00000005B15E: A406
	.ascii "JQ '."                                             // 00000005B160: 2720514A 2E
	.byte 0xab                                                 // 00000005B165: AB
	.short 0x6e0f                                              // 00000005B166: 6E0F
	.ascii "6"                                                 // 00000005B168: 36
	.byte 0x18                                                 // 00000005B169: 18
	.ascii "t"                                                 // 00000005B16A: 74
	.byte 0xae                                                 // 00000005B16B: AE
	.ascii "3"                                                 // 00000005B16C: 33
	.byte 0xe9                                                 // 00000005B16D: E9
	.short 0x5deb                                              // 00000005B16E: 5DEB
	.long 0xaa0dd9c2                                           // 00000005B170: AA0DD9C2
	.long 0x6c313c2                                            // 00000005B174: 06C313C2
	.long 0x985028cb                                           // 00000005B178: 985028CB
	.long 0xb4e948a0                                           // 00000005B17C: B4E948A0
	.long 0x8caf4ac8                                           // 00000005B180: 8CAF4AC8
	.long 0xeb5a8c1d                                           // 00000005B184: EB5A8C1D
	.long 0x262047cd                                           // 00000005B188: 262047CD
	.long 0xa95d60c6                                           // 00000005B18C: A95D60C6
	.long 0x459a268e                                           // 00000005B190: 459A268E
	.long 0x1980228b                                           // 00000005B194: 1980228B
	.ascii "v"                                                 // 00000005B198: 76
	.byte 0xd9                                                 // 00000005B199: D9
	.short 0x815                                               // 00000005B19A: 0815
	.ascii "^"                                                 // 00000005B19C: 5E
	.byte 0xe                                                  // 00000005B19D: 0E
	.short 0xf9c6                                              // 00000005B19E: F9C6
	.long 0x62adc7ee                                           // 00000005B1A0: 62ADC7EE
	.long 0x5434b0d6                                           // 00000005B1A4: 5434B0D6
	.ascii "sD"                                                // 00000005B1A8: 4473
	.short 0xcd10                                              // 00000005B1AA: CD10
	.long 0xb5149508                                           // 00000005B1AC: B5149508
	.long 0xcb6991e8                                           // 00000005B1B0: CB6991E8
	.long 0xea648a14                                           // 00000005B1B4: EA648A14
	.ascii "l"                                                 // 00000005B1B8: 6C
	.byte 0xbf                                                 // 00000005B1B9: BF
	.ascii "R"                                                 // 00000005B1BA: 52
	.byte 0xe0                                                 // 00000005B1BB: E0
	.ascii "P."                                                // 00000005B1BC: 2E50
	.short 0x14ad                                              // 00000005B1BE: 14AD
	.long 0x3ddc46f5                                           // 00000005B1C0: 3DDC46F5
	.long 0x913606bc                                           // 00000005B1C4: 913606BC
	.long 0x624ba8fc                                           // 00000005B1C8: 624BA8FC
	.long 0x94b40c04                                           // 00000005B1CC: 94B40C04
	.ascii "(|"                                                // 00000005B1D0: 7C28
	.short 0x49eb                                              // 00000005B1D2: 49EB
	.long 0x84840adc                                           // 00000005B1D4: 84840ADC
	.ascii "\\("                                               // 00000005B1D8: 285C
	.short 0x7e82                                              // 00000005B1DA: 7E82
	.long 0xb843cf8                                            // 00000005B1DC: 0B843CF8
	.long 0xcf79d0c9                                           // 00000005B1E0: CF79D0C9
	.long 0x2d6c8306                                           // 00000005B1E4: 2D6C8306
	.long 0x8e60fdfa                                           // 00000005B1E8: 8E60FDFA
	.ascii "re"                                                // 00000005B1EC: 6572
	.short 0x19f8                                              // 00000005B1EE: 19F8
	.ascii "&"                                                 // 00000005B1F0: 26
	.byte 0x15                                                 // 00000005B1F1: 15
	.ascii "k"                                                 // 00000005B1F2: 6B
	.byte 0xe4                                                 // 00000005B1F3: E4
	.long 0xb70009c3                                           // 00000005B1F4: B70009C3
	.ascii "VS"                                                // 00000005B1F8: 5356
	.short 0xc91d                                              // 00000005B1FA: C91D
	.ascii "JY"                                                // 00000005B1FC: 594A
	.short 0x2b8a                                              // 00000005B1FE: 2B8A
	.long 0xe96d859e                                           // 00000005B200: E96D859E
	.long 0xe1a1ffd3                                           // 00000005B204: E1A1FFD3
	.ascii "D"                                                 // 00000005B208: 44
	.byte 0xe3                                                 // 00000005B209: E3
	.ascii ","                                                 // 00000005B20A: 2C
	.byte 0x9b                                                 // 00000005B20B: 9B
	.ascii "d"                                                 // 00000005B20C: 64
	.byte 0xe9                                                 // 00000005B20D: E9
	.short 0x639a                                              // 00000005B20E: 639A
	.long 0x2a70710                                            // 00000005B210: 02A70710
	.long 0xb2788788                                           // 00000005B214: B2788788
	.long 0x959ce680                                           // 00000005B218: 959CE680
	.ascii "Lx_"                                               // 00000005B21C: 5F784C
	.byte 0xef                                                 // 00000005B21F: EF
	.long 0xe97d519d                                           // 00000005B220: E97D519D
	.ascii "Xw"                                                // 00000005B224: 7758
	.short 0x37c3                                              // 00000005B226: 37C3
	.long 0x7555f0c0                                           // 00000005B228: 7555F0C0
	.ascii "("                                                 // 00000005B22C: 28
	.byte 0xf2                                                 // 00000005B22D: F2
	.short 0xf0c0                                              // 00000005B22E: F0C0
	.long 0x936b9989                                           // 00000005B230: 936B9989
	.ascii "&"                                                 // 00000005B234: 26
	.byte 0x88                                                 // 00000005B235: 88
	.ascii "6;:"                                               // 00000005B236: 3A3B36
	.byte 0xb6                                                 // 00000005B239: B6
	.short 0x28e4                                              // 00000005B23A: 28E4
	.ascii "*R"                                                // 00000005B23C: 522A
	.short 0xc0c0                                              // 00000005B23E: C0C0
	.long 0x2c312882                                           // 00000005B240: 2C312882
	.ascii "B4"                                                // 00000005B244: 3442
	.short 0xb7b1                                              // 00000005B246: B7B1
	.long 0x991b10cb                                           // 00000005B248: 991B10CB
	.ascii "j"                                                 // 00000005B24C: 6A
	.byte 0xb7                                                 // 00000005B24D: B7
	.ascii "^"                                                 // 00000005B24E: 5E
	.byte 0xdb                                                 // 00000005B24F: DB
	.long 0x65b1bab2                                           // 00000005B250: 65B1BAB2
	.long 0x3f37ad1a                                           // 00000005B254: 3F37AD1A
	.ascii "\n"                                                // 00000005B258: 0A
	.ascii "K"                                                 // 00000005B259: 4B
	.short 0x89f2                                              // 00000005B25A: 89F2
	.ascii "#@"                                                // 00000005B25C: 4023
	.short 0x399c                                              // 00000005B25E: 399C
	.ascii "d"                                                 // 00000005B260: 64
	.byte 0xb                                                  // 00000005B261: 0B
	.ascii "8Txf"                                              // 00000005B262: 66785438
	.short 0x4f7                                               // 00000005B266: 04F7
	.ascii "t9rv CHG"                                          // 00000005B268: 76723974 47484320
	.long 0x233e54c8                                           // 00000005B270: 233E54C8
	.long 0xd1d52fad                                           // 00000005B274: D1D52FAD
	.long 0x64f0f7b0                                           // 00000005B278: 64F0F7B0
	.long 0x6f7524f4                                           // 00000005B27C: 6F7524F4
	.long 0xe374ae88                                           // 00000005B280: E374AE88
	.long 0xd6ffffdc                                           // 00000005B284: D6FFFFDC
	.ascii "y"                                                 // 00000005B288: 79
	.byte 0xee                                                 // 00000005B289: EE
	.short 0xfa13                                              // 00000005B28A: FA13
	.long 0xc4418cfa                                           // 00000005B28C: C4418CFA
	.long 0x9835d5a7                                           // 00000005B290: 9835D5A7
	.ascii "{h&)"                                              // 00000005B294: 2926687B
	.long 0x9b6b1d88                                           // 00000005B298: 9B6B1D88
	.long 0x79b2a414                                           // 00000005B29C: 79B2A414
	.ascii ","                                                 // 00000005B2A0: 2C
	.byte 0xdf                                                 // 00000005B2A1: DF
	.ascii "~="                                                // 00000005B2A2: 3D7E
	.long 0x4e8d3d8                                            // 00000005B2A4: 04E8D3D8
	.long 0x66c42d18                                           // 00000005B2A8: 66C42D18
	.long 0xc93adefd                                           // 00000005B2AC: C93ADEFD
	.ascii "T"                                                 // 00000005B2B0: 54
	.byte 0xed                                                 // 00000005B2B1: ED
	.short 0x5fb7                                              // 00000005B2B2: 5FB7
	.long 0xcdf982fd                                           // 00000005B2B4: CDF982FD
	.ascii "^"                                                 // 00000005B2B8: 5E
	.byte 0x7f                                                 // 00000005B2B9: 7F
	.ascii "o"                                                 // 00000005B2BA: 6F
	.byte 0xa3                                                 // 00000005B2BB: A3
	.ascii "."                                                 // 00000005B2BC: 2E
	.byte 0xe                                                  // 00000005B2BD: 0E
	.short 0x2a3                                               // 00000005B2BE: 02A3
	.ascii "6"                                                 // 00000005B2C0: 36
	.byte 0xa2                                                 // 00000005B2C1: A2
	.short 0x719                                               // 00000005B2C2: 0719
	.ascii "2"                                                 // 00000005B2C4: 32
	.byte 0x6                                                  // 00000005B2C5: 06
	.short 0xf6c1                                              // 00000005B2C6: F6C1
	.long 0x9e7499d7                                           // 00000005B2C8: 9E7499D7
	.ascii "ZD"                                                // 00000005B2CC: 445A
	.short 0x1d8e                                              // 00000005B2CE: 1D8E
	.ascii ">"                                                 // 00000005B2D0: 3E
	.byte 0xd4                                                 // 00000005B2D1: D4
	.short 0x2c0c                                              // 00000005B2D2: 2C0C
	.long 0x502b72ca                                           // 00000005B2D4: 502B72CA
	.long 0xe9587d03                                           // 00000005B2D8: E9587D03
	.ascii ","                                                 // 00000005B2DC: 2C
	.byte 0x1d                                                 // 00000005B2DD: 1D
	.ascii "_^ +"                                              // 00000005B2DE: 2B205E5F
	.short 0x7bbc                                              // 00000005B2E2: 7BBC
	.ascii "`"                                                 // 00000005B2E4: 60
	.byte 0xa6                                                 // 00000005B2E5: A6
	.short 0x9811                                              // 00000005B2E6: 9811
	.long 0xe5a5dfc8                                           // 00000005B2E8: E5A5DFC8
	.long 0x784f15c9                                           // 00000005B2EC: 784F15C9
	.long 0xd5f9c2dc                                           // 00000005B2F0: D5F9C2DC
	.ascii "T"                                                 // 00000005B2F4: 54
	.byte 0xe1                                                 // 00000005B2F5: E1
	.short 0xec8e                                              // 00000005B2F6: EC8E
	.ascii "\\"                                                // 00000005B2F8: 5C
	.byte 0xba                                                 // 00000005B2F9: BA
	.short 0x8df6                                              // 00000005B2FA: 8DF6
	.long 0xe25963ad                                           // 00000005B2FC: E25963AD
	.long 0xc55eaf12                                           // 00000005B300: C55EAF12
	.long 0xebfb8586                                           // 00000005B304: EBFB8586
	.ascii ":"                                                 // 00000005B308: 3A
	.byte 0xdf                                                 // 00000005B309: DF
	.ascii "k"                                                 // 00000005B30A: 6B
	.byte 0x9b                                                 // 00000005B30B: 9B
	.long 0x80650ce7                                           // 00000005B30C: 80650CE7
	.ascii "\"(Y"                                              // 00000005B310: 592822
	.byte 0x98                                                 // 00000005B313: 98
	.long 0x50fc18ee                                           // 00000005B314: 50FC18EE
	.long 0x79c6ddcb                                           // 00000005B318: 79C6DDCB
	.ascii "H"                                                 // 00000005B31C: 48
	.byte 0xf3                                                 // 00000005B31D: F3
	.ascii "F"                                                 // 00000005B31E: 46
	.byte 0xdb                                                 // 00000005B31F: DB
	.long 0x2b4b45c0                                           // 00000005B320: 2B4B45C0
	.long 0x7034a4d8                                           // 00000005B324: 7034A4D8
	.long 0xe419014                                            // 00000005B328: 0E419014
	.long 0xd59e41d4                                           // 00000005B32C: D59E41D4
	.ascii "y"                                                 // 00000005B330: 79
	.byte 0x1                                                  // 00000005B331: 01
	.short 0x29be                                              // 00000005B332: 29BE
	.ascii "|"                                                 // 00000005B334: 7C
	.byte 0xd6                                                 // 00000005B335: D6
	.short 0x201c                                              // 00000005B336: 201C
	.long 0xcc0a71e0                                           // 00000005B338: CC0A71E0
	.long 0x4728469c                                           // 00000005B33C: 4728469C
	.long 0x4415fe85                                           // 00000005B340: 4415FE85
	.ascii "zv"                                                // 00000005B344: 767A
	.short 0xcf18                                              // 00000005B346: CF18
	.long 0x57a72dba                                           // 00000005B348: 57A72DBA
	.long 0x337a69ce                                           // 00000005B34C: 337A69CE
	.long 0xec582c6                                            // 00000005B350: 0EC582C6
	.long 0xe7c670de                                           // 00000005B354: E7C670DE
	.long 0x5533c392                                           // 00000005B358: 5533C392
	.ascii "J"                                                 // 00000005B35C: 4A
	.byte 0xed                                                 // 00000005B35D: ED
	.short 0x9cd4                                              // 00000005B35E: 9CD4
	.ascii "j2b"                                               // 00000005B360: 62326A
	.byte 0xa6                                                 // 00000005B363: A6
	.long 0x1949d3e2                                           // 00000005B364: 1949D3E2
	.long 0xb8ec859b                                           // 00000005B368: B8EC859B
	.ascii "nZ"                                                // 00000005B36C: 5A6E
	.short 0x69bf                                              // 00000005B36E: 69BF
	.ascii "NNc"                                               // 00000005B370: 634E4E
	.byte 0xb4                                                 // 00000005B373: B4
	.ascii "^"                                                 // 00000005B374: 5E
	.byte 0xbd                                                 // 00000005B375: BD
	.short 0xc6b4                                              // 00000005B376: C6B4
	.ascii "2"                                                 // 00000005B378: 32
	.byte 0xe2                                                 // 00000005B379: E2
	.short 0x5704                                              // 00000005B37A: 5704
	.long 0xe70c9406                                           // 00000005B37C: E70C9406
	.long 0x917fcbda                                           // 00000005B380: 917FCBDA
	.ascii "V+B"                                               // 00000005B384: 422B56
	.byte 0x9a                                                 // 00000005B387: 9A
	.long 0xe1f41ed6                                           // 00000005B388: E1F41ED6
	.long 0xf4e609f                                            // 00000005B38C: 0F4E609F
	.long 0x69057d98                                           // 00000005B390: 69057D98
	.ascii "m='"                                               // 00000005B394: 273D6D
	.byte 0xb2                                                 // 00000005B397: B2
	.ascii "T"                                                 // 00000005B398: 54
	.byte 0xa7                                                 // 00000005B399: A7
	.short 0x4c1e                                              // 00000005B39A: 4C1E
	.ascii "P"                                                 // 00000005B39C: 50
	.byte 0xf6                                                 // 00000005B39D: F6
	.ascii "V"                                                 // 00000005B39E: 56
	.byte 0x9d                                                 // 00000005B39F: 9D
	.long 0x161b42c8                                           // 00000005B3A0: 161B42C8
	.long 0x507d16a0                                           // 00000005B3A4: 507D16A0
	.long 0x542fe21d                                           // 00000005B3A8: 542FE21D
	.long 0x63b485fe                                           // 00000005B3AC: 63B485FE
	.long 0x7a0ff5fe                                           // 00000005B3B0: 7A0FF5FE
	.long 0x456b3813                                           // 00000005B3B4: 456B3813
	.long 0x96d905ae                                           // 00000005B3B8: 96D905AE
	.ascii "R8"                                                // 00000005B3BC: 3852
	.short 0x33eb                                              // 00000005B3BE: 33EB
	.ascii "N}"                                                // 00000005B3C0: 7D4E
	.short 0x998d                                              // 00000005B3C2: 998D
	.ascii "n"                                                 // 00000005B3C4: 6E
	.byte 0xb5                                                 // 00000005B3C5: B5
	.ascii "{"                                                 // 00000005B3C6: 7B
	.byte 0x14                                                 // 00000005B3C7: 14
	.long 0x1cbdc0f6                                           // 00000005B3C8: 1CBDC0F6
	.ascii "{"                                                 // 00000005B3CC: 7B
	.byte 0xdd                                                 // 00000005B3CD: DD
	.short 0x848a                                              // 00000005B3CE: 848A
	.ascii "`Q"                                                // 00000005B3D0: 5160
	.short 0xccdc                                              // 00000005B3D2: CCDC
	.long 0x6b1568bc                                           // 00000005B3D4: 6B1568BC
	.long 0x3d52700c                                           // 00000005B3D8: 3D52700C
	.long 0xe3d660e0                                           // 00000005B3DC: E3D660E0
	.long 0x5793671d                                           // 00000005B3E0: 5793671D
	.long 0x445b36a8                                           // 00000005B3E4: 445B36A8
	.long 0xbb957714                                           // 00000005B3E8: BB957714
	.long 0xd3a71fa8                                           // 00000005B3EC: D3A71FA8
	.ascii "l"                                                 // 00000005B3F0: 6C
	.byte 0x9b                                                 // 00000005B3F1: 9B
	.short 0x91a5                                              // 00000005B3F2: 91A5
	.ascii "$"                                                 // 00000005B3F4: 24
	.byte 0xb8                                                 // 00000005B3F5: B8
	.short 0x7eaf                                              // 00000005B3F6: 7EAF
	.ascii "T\n"                                               // 00000005B3F8: 0A54
	.short 0x57c0                                              // 00000005B3FA: 57C0
	.ascii "y8"                                                // 00000005B3FC: 3879
	.short 0xb1ef                                              // 00000005B3FE: B1EF
	.long 0xc022e2da                                           // 00000005B400: C022E2DA
	.ascii "n	"                                                // 00000005B404: 096E
	.short 0xccf4                                              // 00000005B406: CCF4
	.long 0xf9d56c0e                                           // 00000005B408: F9D56C0E
	.long 0x76eda09a                                           // 00000005B40C: 76EDA09A
	.ascii "N"                                                 // 00000005B410: 4E
	.byte 0xae                                                 // 00000005B411: AE
	.short 0x6b1c                                              // 00000005B412: 6B1C
	.ascii "GK"                                                // 00000005B414: 4B47
	.short 0xeba2                                              // 00000005B416: EBA2
	.long 0x35eff496                                           // 00000005B418: 35EFF496
	.long 0x8b8da08e                                           // 00000005B41C: 8B8DA08E
	.long 0x371af98b                                           // 00000005B420: 371AF98B
	.long 0xb0b2f998                                           // 00000005B424: B0B2F998
	.long 0x83451af8                                           // 00000005B428: 83451AF8
	.long 0x262d5ec0                                           // 00000005B42C: 262D5EC0
	.ascii "U"                                                 // 00000005B430: 55
	.byte 0xac                                                 // 00000005B431: AC
	.ascii "4r"                                                // 00000005B432: 7234
	.long 0xace0b7ac                                           // 00000005B434: ACE0B7AC
	.long 0x6f3b2199                                           // 00000005B438: 6F3B2199
	.long 0x6c377ee                                            // 00000005B43C: 06C377EE
	.ascii "z"                                                 // 00000005B440: 7A
	.byte 0x93                                                 // 00000005B441: 93
	.short 0x5d89                                              // 00000005B442: 5D89
	.long 0xb83ad6c6                                           // 00000005B444: B83AD6C6
	.long 0x564fe3d7                                           // 00000005B448: 564FE3D7
	.ascii "6"                                                 // 00000005B44C: 36
	.byte 0x8e                                                 // 00000005B44D: 8E
	.short 0x6483                                              // 00000005B44E: 6483
	.ascii "j"                                                 // 00000005B450: 6A
	.byte 0x17                                                 // 00000005B451: 17
	.ascii "6"                                                 // 00000005B452: 36
	.byte 0x9e                                                 // 00000005B453: 9E
	.long 0xf6d53182                                           // 00000005B454: F6D53182
	.long 0xacaabe7f                                           // 00000005B458: ACAABE7F
	.long 0xf5c478d4                                           // 00000005B45C: F5C478D4
	.ascii "]U."                                               // 00000005B460: 2E555D
	.byte 0xd7                                                 // 00000005B463: D7
	.ascii "db"                                                // 00000005B464: 6264
	.short 0x77bd                                              // 00000005B466: 77BD
	.long 0x59273eec                                           // 00000005B468: 59273EEC
	.long 0x91ab3f9c                                           // 00000005B46C: 91AB3F9C
	.ascii "H,"                                                // 00000005B470: 2C48
	.short 0x20f2                                              // 00000005B472: 20F2
	.ascii "<\\"                                               // 00000005B474: 5C3C
	.short 0x45ad                                              // 00000005B476: 45AD
	.long 0xf3439188                                           // 00000005B478: F3439188
	.long 0x648ad3c8                                           // 00000005B47C: 648AD3C8
	.long 0xebd8ca08                                           // 00000005B480: EBD8CA08
	.long 0x707f2e81                                           // 00000005B484: 707F2E81
	.long 0x3bc1d7a6                                           // 00000005B488: 3BC1D7A6
	.long 0xe28510b2                                           // 00000005B48C: E28510B2
	.long 0x63d041f                                            // 00000005B490: 063D041F
	.long 0x2989cd9a                                           // 00000005B494: 2989CD9A
	.ascii "J=AN"                                              // 00000005B498: 4E413D4A
	.long 0xed607f8e                                           // 00000005B49C: ED607F8E
	.long 0xb5f3a7ca                                           // 00000005B4A0: B5F3A7CA
	.long 0x5e4b9197                                           // 00000005B4A4: 5E4B9197

	.section	.hash,#alloc
	.ascii "S"                                                 // 00000005B4A8: 53
	.byte 0x2                                                  // 00000005B4A9: 02
	.short 0                                                   // 00000005B4AA: 0000
	.ascii "S"                                                 // 00000005B4AC: 53
	.byte 0x2                                                  // 00000005B4AD: 02
	.short 0                                                   // 00000005B4AE: 0000
	.ascii " "                                                 // 00000005B4B0: 20
	.byte 0x2                                                  // 00000005B4B1: 02
	.short 0                                                   // 00000005B4B2: 0000
	.ascii "M"                                                 // 00000005B4B4: 4D
	.byte 0x1                                                  // 00000005B4B5: 01
	.short 0                                                   // 00000005B4B6: 0000
	.long 0                                                    // 00000005B4B8: 00000000
	.long 0                                                    // 00000005B4BC: 00000000
	.long 0                                                    // 00000005B4C0: 00000000
	.long 0                                                    // 00000005B4C4: 00000000
	.long 0xaf                                                 // 00000005B4C8: 000000AF
	.long 0                                                    // 00000005B4CC: 00000000
	.long 0xe0                                                 // 00000005B4D0: 000000E0
	.long 0x11f                                                // 00000005B4D4: 0000011F
	.long 0                                                    // 00000005B4D8: 00000000
	.long 0x19a                                                // 00000005B4DC: 0000019A
	.ascii ">"                                                 // 00000005B4E0: 3E
	.byte 0x1                                                  // 00000005B4E1: 01
	.short 0                                                   // 00000005B4E2: 0000
	.long 0x1ac                                                // 00000005B4E4: 000001AC
	.long 0                                                    // 00000005B4E8: 00000000
	.long 0x1a7                                                // 00000005B4EC: 000001A7
	.ascii "M"                                                 // 00000005B4F0: 4D
	.byte 0x2                                                  // 00000005B4F1: 02
	.short 0                                                   // 00000005B4F2: 0000
	.long 0x215                                                // 00000005B4F4: 00000215
	.long 0x1cd                                                // 00000005B4F8: 000001CD
	.ascii " "                                                 // 00000005B4FC: 20
	.byte 0x1                                                  // 00000005B4FD: 01
	.short 0                                                   // 00000005B4FE: 0000
	.ascii "6"                                                 // 00000005B500: 36
	.byte 0x2                                                  // 00000005B501: 02
	.short 0                                                   // 00000005B502: 0000
	.long 0x187                                                // 00000005B504: 00000187
	.ascii "u"                                                 // 00000005B508: 75
	.byte 0x1                                                  // 00000005B509: 01
	.short 0                                                   // 00000005B50A: 0000
	.long 0                                                    // 00000005B50C: 00000000
	.long 0x1db                                                // 00000005B510: 000001DB
	.long 0x196                                                // 00000005B514: 00000196
	.ascii "E"                                                 // 00000005B518: 45
	.byte 0                                                    // 00000005B519: 00
	.short 0                                                   // 00000005B51A: 0000
	.ascii "8"                                                 // 00000005B51C: 38
	.byte 0x2                                                  // 00000005B51D: 02
	.short 0                                                   // 00000005B51E: 0000
	.long 0                                                    // 00000005B520: 00000000
	.long 0                                                    // 00000005B524: 00000000
	.long 0xcc                                                 // 00000005B528: 000000CC
	.ascii ":"                                                 // 00000005B52C: 3A
	.byte 0x1                                                  // 00000005B52D: 01
	.short 0                                                   // 00000005B52E: 0000
	.ascii "]"                                                 // 00000005B530: 5D
	.byte 0x1                                                  // 00000005B531: 01
	.short 0                                                   // 00000005B532: 0000
	.long 0x1cf                                                // 00000005B534: 000001CF
	.ascii "7"                                                 // 00000005B538: 37
	.byte 0x2                                                  // 00000005B539: 02
	.short 0                                                   // 00000005B53A: 0000
	.long 0xb7                                                 // 00000005B53C: 000000B7
	.long 0xbf                                                 // 00000005B540: 000000BF
	.long 0x1f6                                                // 00000005B544: 000001F6
	.ascii "`"                                                 // 00000005B548: 60
	.byte 0                                                    // 00000005B549: 00
	.short 0                                                   // 00000005B54A: 0000
	.long 0x11                                                 // 00000005B54C: 00000011
	.ascii "%"                                                 // 00000005B550: 25
	.byte 0x2                                                  // 00000005B551: 02
	.short 0                                                   // 00000005B552: 0000
	.long 0                                                    // 00000005B554: 00000000
	.long 0x117                                                // 00000005B558: 00000117
	.long 0                                                    // 00000005B55C: 00000000
	.long 0x21f                                                // 00000005B560: 0000021F
	.ascii "+"                                                 // 00000005B564: 2B
	.byte 0x2                                                  // 00000005B565: 02
	.short 0                                                   // 00000005B566: 0000
	.long 0x210                                                // 00000005B568: 00000210
	.long 0xee                                                 // 00000005B56C: 000000EE
	.ascii "["                                                 // 00000005B570: 5B
	.byte 0                                                    // 00000005B571: 00
	.short 0                                                   // 00000005B572: 0000
	.long 0                                                    // 00000005B574: 00000000
	.ascii "x"                                                 // 00000005B578: 78
	.byte 0x1                                                  // 00000005B579: 01
	.short 0                                                   // 00000005B57A: 0000
	.long 0                                                    // 00000005B57C: 00000000
	.ascii "9"                                                 // 00000005B580: 39
	.byte 0x2                                                  // 00000005B581: 02
	.short 0                                                   // 00000005B582: 0000
	.ascii "}"                                                 // 00000005B584: 7D
	.byte 0x1                                                  // 00000005B585: 01
	.short 0                                                   // 00000005B586: 0000
	.long 0x10d                                                // 00000005B588: 0000010D
	.ascii "~"                                                 // 00000005B58C: 7E
	.byte 0x1                                                  // 00000005B58D: 01
	.short 0                                                   // 00000005B58E: 0000
	.long 0                                                    // 00000005B590: 00000000
	.long 0x21e                                                // 00000005B594: 0000021E
	.long 0xd7                                                 // 00000005B598: 000000D7
	.long 0x1fa                                                // 00000005B59C: 000001FA
	.long 0x1bc                                                // 00000005B5A0: 000001BC
	.ascii "Z"                                                 // 00000005B5A4: 5A
	.byte 0x1                                                  // 00000005B5A5: 01
	.short 0                                                   // 00000005B5A6: 0000
	.long 0x8e                                                 // 00000005B5A8: 0000008E
	.ascii "J"                                                 // 00000005B5AC: 4A
	.byte 0                                                    // 00000005B5AD: 00
	.short 0                                                   // 00000005B5AE: 0000
	.long 0x1e0                                                // 00000005B5B0: 000001E0
	.long 0x18f                                                // 00000005B5B4: 0000018F
	.long 0xde                                                 // 00000005B5B8: 000000DE
	.long 0x212                                                // 00000005B5BC: 00000212
	.ascii "l"                                                 // 00000005B5C0: 6C
	.byte 0                                                    // 00000005B5C1: 00
	.short 0                                                   // 00000005B5C2: 0000
	.long 0                                                    // 00000005B5C4: 00000000
	.long 0                                                    // 00000005B5C8: 00000000
	.long 0x1a4                                                // 00000005B5CC: 000001A4
	.long 0xe2                                                 // 00000005B5D0: 000000E2
	.long 0xc6                                                 // 00000005B5D4: 000000C6
	.long 0                                                    // 00000005B5D8: 00000000
	.long 0xe1                                                 // 00000005B5DC: 000000E1
	.long 0x1e6                                                // 00000005B5E0: 000001E6
	.long 0                                                    // 00000005B5E4: 00000000
	.long 0xe6                                                 // 00000005B5E8: 000000E6
	.long 0                                                    // 00000005B5EC: 00000000
	.long 0x1ee                                                // 00000005B5F0: 000001EE
	.long 0                                                    // 00000005B5F4: 00000000
	.long 0                                                    // 00000005B5F8: 00000000
	.ascii "$"                                                 // 00000005B5FC: 24
	.byte 0x2                                                  // 00000005B5FD: 02
	.short 0                                                   // 00000005B5FE: 0000
	.long 0                                                    // 00000005B600: 00000000
	.long 0                                                    // 00000005B604: 00000000
	.long 0                                                    // 00000005B608: 00000000
	.ascii "7"                                                 // 00000005B60C: 37
	.byte 0x1                                                  // 00000005B60D: 01
	.short 0                                                   // 00000005B60E: 0000
	.ascii "_"                                                 // 00000005B610: 5F
	.byte 0x1                                                  // 00000005B611: 01
	.short 0                                                   // 00000005B612: 0000
	.long 0xc1                                                 // 00000005B614: 000000C1
	.long 0                                                    // 00000005B618: 00000000
	.long 0                                                    // 00000005B61C: 00000000
	.long 0x10f                                                // 00000005B620: 0000010F
	.long 0x208                                                // 00000005B624: 00000208
	.ascii "G"                                                 // 00000005B628: 47
	.byte 0x2                                                  // 00000005B629: 02
	.short 0                                                   // 00000005B62A: 0000
	.long 0x116                                                // 00000005B62C: 00000116
	.ascii "f"                                                 // 00000005B630: 66
	.byte 0x1                                                  // 00000005B631: 01
	.short 0                                                   // 00000005B632: 0000
	.long 0x1ec                                                // 00000005B634: 000001EC
	.long 0xf1                                                 // 00000005B638: 000000F1
	.long 0x1eb                                                // 00000005B63C: 000001EB
	.ascii "A"                                                 // 00000005B640: 41
	.byte 0x2                                                  // 00000005B641: 02
	.short 0                                                   // 00000005B642: 0000
	.long 0x1ba                                                // 00000005B644: 000001BA
	.long 0                                                    // 00000005B648: 00000000
	.long 0                                                    // 00000005B64C: 00000000
	.long 0x93                                                 // 00000005B650: 00000093
	.long 0x95                                                 // 00000005B654: 00000095
	.long 0x1c6                                                // 00000005B658: 000001C6
	.ascii "1"                                                 // 00000005B65C: 31
	.byte 0x2                                                  // 00000005B65D: 02
	.short 0                                                   // 00000005B65E: 0000
	.long 0                                                    // 00000005B660: 00000000
	.long 0                                                    // 00000005B664: 00000000
	.long 0x1f7                                                // 00000005B668: 000001F7
	.long 0x1d2                                                // 00000005B66C: 000001D2
	.long 0x21c                                                // 00000005B670: 0000021C
	.long 0x1f                                                 // 00000005B674: 0000001F
	.long 0                                                    // 00000005B678: 00000000
	.long 0                                                    // 00000005B67C: 00000000
	.long 0x20f                                                // 00000005B680: 0000020F
	.long 0x1de                                                // 00000005B684: 000001DE
	.long 0                                                    // 00000005B688: 00000000
	.long 0                                                    // 00000005B68C: 00000000
	.long 0                                                    // 00000005B690: 00000000
	.ascii "\n"                                                // 00000005B694: 0A
	.byte 0x1                                                  // 00000005B695: 01
	.short 0                                                   // 00000005B696: 0000
	.long 0x19b                                                // 00000005B698: 0000019B
	.ascii "Q"                                                 // 00000005B69C: 51
	.byte 0x1                                                  // 00000005B69D: 01
	.short 0                                                   // 00000005B69E: 0000
	.ascii "1"                                                 // 00000005B6A0: 31
	.byte 0x1                                                  // 00000005B6A1: 01
	.short 0                                                   // 00000005B6A2: 0000
	.ascii "	"                                                 // 00000005B6A4: 09
	.byte 0                                                    // 00000005B6A5: 00
	.short 0                                                   // 00000005B6A6: 0000
	.long 0xf8                                                 // 00000005B6A8: 000000F8
	.long 0x1e2                                                // 00000005B6AC: 000001E2
	.long 0x1c5                                                // 00000005B6B0: 000001C5
	.ascii "-"                                                 // 00000005B6B4: 2D
	.byte 0x2                                                  // 00000005B6B5: 02
	.short 0                                                   // 00000005B6B6: 0000
	.long 0                                                    // 00000005B6B8: 00000000
	.long 0x1b8                                                // 00000005B6BC: 000001B8
	.long 0x201                                                // 00000005B6C0: 00000201
	.long 0                                                    // 00000005B6C4: 00000000
	.long 0                                                    // 00000005B6C8: 00000000
	.long 0x1d9                                                // 00000005B6CC: 000001D9
	.ascii "D"                                                 // 00000005B6D0: 44
	.byte 0x1                                                  // 00000005B6D1: 01
	.short 0                                                   // 00000005B6D2: 0000
	.long 0x214                                                // 00000005B6D4: 00000214
	.long 0x17f                                                // 00000005B6D8: 0000017F
	.long 0                                                    // 00000005B6DC: 00000000
	.long 0xd0                                                 // 00000005B6E0: 000000D0
	.long 0x1a5                                                // 00000005B6E4: 000001A5
	.long 0xff                                                 // 00000005B6E8: 000000FF
	.long 0x1e8                                                // 00000005B6EC: 000001E8
	.ascii "h"                                                 // 00000005B6F0: 68
	.byte 0x1                                                  // 00000005B6F1: 01
	.short 0                                                   // 00000005B6F2: 0000
	.long 0x1b5                                                // 00000005B6F4: 000001B5
	.long 0xa4                                                 // 00000005B6F8: 000000A4
	.long 0                                                    // 00000005B6FC: 00000000
	.ascii "K"                                                 // 00000005B700: 4B
	.byte 0                                                    // 00000005B701: 00
	.short 0                                                   // 00000005B702: 0000
	.long 0x91                                                 // 00000005B704: 00000091
	.long 0                                                    // 00000005B708: 00000000
	.long 0                                                    // 00000005B70C: 00000000
	.long 0x86                                                 // 00000005B710: 00000086
	.long 0                                                    // 00000005B714: 00000000
	.ascii "c"                                                 // 00000005B718: 63
	.byte 0x1                                                  // 00000005B719: 01
	.short 0                                                   // 00000005B71A: 0000
	.ascii "R"                                                 // 00000005B71C: 52
	.byte 0x2                                                  // 00000005B71D: 02
	.short 0                                                   // 00000005B71E: 0000
	.long 0x1c1                                                // 00000005B720: 000001C1
	.long 0                                                    // 00000005B724: 00000000
	.long 0                                                    // 00000005B728: 00000000
	.long 0                                                    // 00000005B72C: 00000000
	.long 0                                                    // 00000005B730: 00000000
	.long 0xa9                                                 // 00000005B734: 000000A9
	.long 0xc8                                                 // 00000005B738: 000000C8
	.long 0x1b9                                                // 00000005B73C: 000001B9
	.long 0                                                    // 00000005B740: 00000000
	.long 0                                                    // 00000005B744: 00000000
	.ascii "n"                                                 // 00000005B748: 6E
	.byte 0                                                    // 00000005B749: 00
	.short 0                                                   // 00000005B74A: 0000
	.long 0x1cc                                                // 00000005B74C: 000001CC
	.long 0                                                    // 00000005B750: 00000000
	.long 0x1fc                                                // 00000005B754: 000001FC
	.long 0                                                    // 00000005B758: 00000000
	.long 0xda                                                 // 00000005B75C: 000000DA
	.long 0x19e                                                // 00000005B760: 0000019E
	.long 0                                                    // 00000005B764: 00000000
	.ascii ";"                                                 // 00000005B768: 3B
	.byte 0x2                                                  // 00000005B769: 02
	.short 0                                                   // 00000005B76A: 0000
	.ascii "{"                                                 // 00000005B76C: 7B
	.byte 0x1                                                  // 00000005B76D: 01
	.short 0                                                   // 00000005B76E: 0000
	.long 0x1c                                                 // 00000005B770: 0000001C
	.long 0x1b3                                                // 00000005B774: 000001B3
	.long 0                                                    // 00000005B778: 00000000
	.ascii "\""                                                // 00000005B77C: 22
	.byte 0x1                                                  // 00000005B77D: 01
	.short 0                                                   // 00000005B77E: 0000
	.long 0                                                    // 00000005B780: 00000000
	.long 0                                                    // 00000005B784: 00000000
	.ascii "y"                                                 // 00000005B788: 79
	.byte 0                                                    // 00000005B789: 00
	.short 0                                                   // 00000005B78A: 0000
	.long 0                                                    // 00000005B78C: 00000000
	.long 0                                                    // 00000005B790: 00000000
	.ascii "8"                                                 // 00000005B794: 38
	.byte 0x1                                                  // 00000005B795: 01
	.short 0                                                   // 00000005B796: 0000
	.long 0xbc                                                 // 00000005B798: 000000BC
	.long 0x217                                                // 00000005B79C: 00000217
	.ascii "K"                                                 // 00000005B7A0: 4B
	.byte 0x1                                                  // 00000005B7A1: 01
	.short 0                                                   // 00000005B7A2: 0000
	.long 0                                                    // 00000005B7A4: 00000000
	.long 0x183                                                // 00000005B7A8: 00000183
	.ascii ")"                                                 // 00000005B7AC: 29
	.byte 0x1                                                  // 00000005B7AD: 01
	.short 0                                                   // 00000005B7AE: 0000
	.long 0x1f8                                                // 00000005B7B0: 000001F8
	.long 0xb0                                                 // 00000005B7B4: 000000B0
	.long 0x89                                                 // 00000005B7B8: 00000089
	.ascii "H"                                                 // 00000005B7BC: 48
	.byte 0                                                    // 00000005B7BD: 00
	.short 0                                                   // 00000005B7BE: 0000
	.long 0                                                    // 00000005B7C0: 00000000
	.long 0                                                    // 00000005B7C4: 00000000
	.ascii "o"                                                 // 00000005B7C8: 6F
	.byte 0                                                    // 00000005B7C9: 00
	.short 0                                                   // 00000005B7CA: 0000
	.long 0x1f5                                                // 00000005B7CC: 000001F5
	.ascii "4"                                                 // 00000005B7D0: 34
	.byte 0x2                                                  // 00000005B7D1: 02
	.short 0                                                   // 00000005B7D2: 0000
	.long 0                                                    // 00000005B7D4: 00000000
	.long 0                                                    // 00000005B7D8: 00000000
	.ascii "F"                                                 // 00000005B7DC: 46
	.byte 0x2                                                  // 00000005B7DD: 02
	.short 0                                                   // 00000005B7DE: 0000
	.long 0xa2                                                 // 00000005B7E0: 000000A2
	.long 0                                                    // 00000005B7E4: 00000000
	.long 0                                                    // 00000005B7E8: 00000000
	.long 0x180                                                // 00000005B7EC: 00000180
	.long 0                                                    // 00000005B7F0: 00000000
	.ascii "<"                                                 // 00000005B7F4: 3C
	.byte 0x2                                                  // 00000005B7F5: 02
	.short 0                                                   // 00000005B7F6: 0000
	.long 0                                                    // 00000005B7F8: 00000000
	.long 0                                                    // 00000005B7FC: 00000000
	.ascii "2"                                                 // 00000005B800: 32
	.byte 0x2                                                  // 00000005B801: 02
	.short 0                                                   // 00000005B802: 0000
	.long 0                                                    // 00000005B804: 00000000
	.long 0                                                    // 00000005B808: 00000000
	.long 0                                                    // 00000005B80C: 00000000
	.long 0x1c2                                                // 00000005B810: 000001C2
	.long 0x198                                                // 00000005B814: 00000198
	.long 0                                                    // 00000005B818: 00000000
	.long 0xfc                                                 // 00000005B81C: 000000FC
	.long 0                                                    // 00000005B820: 00000000
	.long 0                                                    // 00000005B824: 00000000
	.long 0x1e1                                                // 00000005B828: 000001E1
	.long 0x1fb                                                // 00000005B82C: 000001FB
	.long 0xb6                                                 // 00000005B830: 000000B6
	.long 0x112                                                // 00000005B834: 00000112
	.long 0                                                    // 00000005B838: 00000000
	.ascii "H"                                                 // 00000005B83C: 48
	.byte 0x2                                                  // 00000005B83D: 02
	.short 0                                                   // 00000005B83E: 0000
	.long 0                                                    // 00000005B840: 00000000
	.long 0                                                    // 00000005B844: 00000000
	.long 0                                                    // 00000005B848: 00000000
	.long 0                                                    // 00000005B84C: 00000000
	.ascii "3"                                                 // 00000005B850: 33
	.byte 0                                                    // 00000005B851: 00
	.short 0                                                   // 00000005B852: 0000
	.long 0x1c9                                                // 00000005B854: 000001C9
	.long 0                                                    // 00000005B858: 00000000
	.long 0                                                    // 00000005B85C: 00000000
	.ascii "n"                                                 // 00000005B860: 6E
	.byte 0x1                                                  // 00000005B861: 01
	.short 0                                                   // 00000005B862: 0000
	.long 0xf3                                                 // 00000005B864: 000000F3
	.long 0                                                    // 00000005B868: 00000000
	.long 0                                                    // 00000005B86C: 00000000
	.ascii "C"                                                 // 00000005B870: 43
	.byte 0                                                    // 00000005B871: 00
	.short 0                                                   // 00000005B872: 0000
	.long 0x200                                                // 00000005B874: 00000200
	.ascii "2"                                                 // 00000005B878: 32
	.byte 0x1                                                  // 00000005B879: 01
	.short 0                                                   // 00000005B87A: 0000
	.long 0                                                    // 00000005B87C: 00000000
	.long 0                                                    // 00000005B880: 00000000
	.long 0                                                    // 00000005B884: 00000000
	.long 0x207                                                // 00000005B888: 00000207
	.long 0x9b                                                 // 00000005B88C: 0000009B
	.long 0xfe                                                 // 00000005B890: 000000FE
	.long 0xe                                                  // 00000005B894: 0000000E
	.long 0x1c3                                                // 00000005B898: 000001C3
	.long 0x8a                                                 // 00000005B89C: 0000008A
	.ascii "]"                                                 // 00000005B8A0: 5D
	.byte 0                                                    // 00000005B8A1: 00
	.short 0                                                   // 00000005B8A2: 0000
	.long 0                                                    // 00000005B8A4: 00000000
	.long 0                                                    // 00000005B8A8: 00000000
	.ascii "&"                                                 // 00000005B8AC: 26
	.byte 0x2                                                  // 00000005B8AD: 02
	.short 0                                                   // 00000005B8AE: 0000
	.long 0x1f1                                                // 00000005B8B0: 000001F1
	.long 0xc                                                  // 00000005B8B4: 0000000C
	.long 0                                                    // 00000005B8B8: 00000000
	.long 0xf0                                                 // 00000005B8BC: 000000F0
	.long 0                                                    // 00000005B8C0: 00000000
	.ascii "/"                                                 // 00000005B8C4: 2F
	.byte 0x2                                                  // 00000005B8C5: 02
	.short 0                                                   // 00000005B8C6: 0000
	.long 0xe9                                                 // 00000005B8C8: 000000E9
	.long 0                                                    // 00000005B8CC: 00000000
	.ascii "d"                                                 // 00000005B8D0: 64
	.byte 0x1                                                  // 00000005B8D1: 01
	.short 0                                                   // 00000005B8D2: 0000
	.ascii "*"                                                 // 00000005B8D4: 2A
	.byte 0x2                                                  // 00000005B8D5: 02
	.short 0                                                   // 00000005B8D6: 0000
	.long 0                                                    // 00000005B8D8: 00000000
	.long 0                                                    // 00000005B8DC: 00000000
	.long 0xb9                                                 // 00000005B8E0: 000000B9
	.long 0                                                    // 00000005B8E4: 00000000
	.long 0x193                                                // 00000005B8E8: 00000193
	.long 0                                                    // 00000005B8EC: 00000000
	.long 0x1bb                                                // 00000005B8F0: 000001BB
	.ascii "\""                                                // 00000005B8F4: 22
	.byte 0x2                                                  // 00000005B8F5: 02
	.short 0                                                   // 00000005B8F6: 0000
	.long 0x1e5                                                // 00000005B8F8: 000001E5
	.long 0x1dd                                                // 00000005B8FC: 000001DD
	.ascii "\""                                                // 00000005B900: 22
	.byte 0                                                    // 00000005B901: 00
	.short 0                                                   // 00000005B902: 0000
	.ascii "w"                                                 // 00000005B904: 77
	.byte 0                                                    // 00000005B905: 00
	.short 0                                                   // 00000005B906: 0000
	.long 0                                                    // 00000005B908: 00000000
	.long 0                                                    // 00000005B90C: 00000000
	.ascii "'"                                                 // 00000005B910: 27
	.byte 0x1                                                  // 00000005B911: 01
	.short 0                                                   // 00000005B912: 0000
	.long 0x110                                                // 00000005B914: 00000110
	.ascii "E"                                                 // 00000005B918: 45
	.byte 0x2                                                  // 00000005B919: 02
	.short 0                                                   // 00000005B91A: 0000
	.long 0                                                    // 00000005B91C: 00000000
	.long 0x1ce                                                // 00000005B920: 000001CE
	.long 0x9a                                                 // 00000005B924: 0000009A
	.long 0x11d                                                // 00000005B928: 0000011D
	.long 0                                                    // 00000005B92C: 00000000
	.long 0                                                    // 00000005B930: 00000000
	.long 0x1c8                                                // 00000005B934: 000001C8
	.long 0                                                    // 00000005B938: 00000000
	.long 0x1fd                                                // 00000005B93C: 000001FD
	.long 0x204                                                // 00000005B940: 00000204
	.long 0                                                    // 00000005B944: 00000000
	.ascii "C"                                                 // 00000005B948: 43
	.byte 0x1                                                  // 00000005B949: 01
	.short 0                                                   // 00000005B94A: 0000
	.long 0                                                    // 00000005B94C: 00000000
	.long 0x9d                                                 // 00000005B950: 0000009D
	.ascii "("                                                 // 00000005B954: 28
	.byte 0                                                    // 00000005B955: 00
	.short 0                                                   // 00000005B956: 0000
	.long 0                                                    // 00000005B958: 00000000
	.long 0x185                                                // 00000005B95C: 00000185
	.ascii "p"                                                 // 00000005B960: 70
	.byte 0                                                    // 00000005B961: 00
	.short 0                                                   // 00000005B962: 0000
	.long 0                                                    // 00000005B964: 00000000
	.long 0x182                                                // 00000005B968: 00000182
	.ascii "R"                                                 // 00000005B96C: 52
	.byte 0x1                                                  // 00000005B96D: 01
	.short 0                                                   // 00000005B96E: 0000
	.long 0x1ed                                                // 00000005B970: 000001ED
	.long 0                                                    // 00000005B974: 00000000
	.ascii ")"                                                 // 00000005B978: 29
	.byte 0x2                                                  // 00000005B979: 02
	.short 0                                                   // 00000005B97A: 0000
	.ascii "Q"                                                 // 00000005B97C: 51
	.byte 0x2                                                  // 00000005B97D: 02
	.short 0                                                   // 00000005B97E: 0000
	.long 0                                                    // 00000005B980: 00000000
	.ascii "@"                                                 // 00000005B984: 40
	.byte 0x2                                                  // 00000005B985: 02
	.short 0                                                   // 00000005B986: 0000
	.long 0                                                    // 00000005B988: 00000000
	.long 0x20c                                                // 00000005B98C: 0000020C
	.ascii "T"                                                 // 00000005B990: 54
	.byte 0x1                                                  // 00000005B991: 01
	.short 0                                                   // 00000005B992: 0000
	.long 0x203                                                // 00000005B994: 00000203
	.long 0x1e3                                                // 00000005B998: 000001E3
	.ascii "k"                                                 // 00000005B99C: 6B
	.byte 0x1                                                  // 00000005B99D: 01
	.short 0                                                   // 00000005B99E: 0000
	.long 0                                                    // 00000005B9A0: 00000000
	.long 0xbe                                                 // 00000005B9A4: 000000BE
	.long 0x1d1                                                // 00000005B9A8: 000001D1
	.long 0x11c                                                // 00000005B9AC: 0000011C
	.long 0                                                    // 00000005B9B0: 00000000
	.ascii "j"                                                 // 00000005B9B4: 6A
	.byte 0                                                    // 00000005B9B5: 00
	.short 0                                                   // 00000005B9B6: 0000
	.long 0xea                                                 // 00000005B9B8: 000000EA
	.ascii "P"                                                 // 00000005B9BC: 50
	.byte 0x2                                                  // 00000005B9BD: 02
	.short 0                                                   // 00000005B9BE: 0000
	.long 0x1ea                                                // 00000005B9C0: 000001EA
	.long 0                                                    // 00000005B9C4: 00000000
	.long 0x113                                                // 00000005B9C8: 00000113
	.ascii "s"                                                 // 00000005B9CC: 73
	.byte 0                                                    // 00000005B9CD: 00
	.short 0                                                   // 00000005B9CE: 0000
	.long 0                                                    // 00000005B9D0: 00000000
	.ascii "9"                                                 // 00000005B9D4: 39
	.byte 0x1                                                  // 00000005B9D5: 01
	.short 0                                                   // 00000005B9D6: 0000
	.long 0                                                    // 00000005B9D8: 00000000
	.long 0                                                    // 00000005B9DC: 00000000
	.long 0                                                    // 00000005B9E0: 00000000
	.long 0                                                    // 00000005B9E4: 00000000
	.long 0x1e4                                                // 00000005B9E8: 000001E4
	.long 0                                                    // 00000005B9EC: 00000000
	.long 0                                                    // 00000005B9F0: 00000000
	.long 0x194                                                // 00000005B9F4: 00000194
	.long 0                                                    // 00000005B9F8: 00000000
	.long 0x118                                                // 00000005B9FC: 00000118
	.ascii "a"                                                 // 00000005BA00: 61
	.byte 0                                                    // 00000005BA01: 00
	.short 0                                                   // 00000005BA02: 0000
	.long 0                                                    // 00000005BA04: 00000000
	.long 0                                                    // 00000005BA08: 00000000
	.long 0x81                                                 // 00000005BA0C: 00000081
	.ascii "/"                                                 // 00000005BA10: 2F
	.byte 0x1                                                  // 00000005BA11: 01
	.short 0                                                   // 00000005BA12: 0000
	.ascii "3"                                                 // 00000005BA14: 33
	.byte 0x2                                                  // 00000005BA15: 02
	.short 0                                                   // 00000005BA16: 0000
	.long 0                                                    // 00000005BA18: 00000000
	.long 0x1dc                                                // 00000005BA1C: 000001DC
	.long 0                                                    // 00000005BA20: 00000000
	.long 0                                                    // 00000005BA24: 00000000
	.ascii "K"                                                 // 00000005BA28: 4B
	.byte 0x2                                                  // 00000005BA29: 02
	.short 0                                                   // 00000005BA2A: 0000
	.ascii "\n"                                                // 00000005BA2C: 0A
	.byte 0                                                    // 00000005BA2D: 00
	.short 0                                                   // 00000005BA2E: 0000
	.long 0                                                    // 00000005BA30: 00000000
	.ascii ","                                                 // 00000005BA34: 2C
	.byte 0x2                                                  // 00000005BA35: 02
	.short 0                                                   // 00000005BA36: 0000
	.long 0                                                    // 00000005BA38: 00000000
	.long 0                                                    // 00000005BA3C: 00000000
	.ascii "!"                                                 // 00000005BA40: 21
	.byte 0x2                                                  // 00000005BA41: 02
	.short 0                                                   // 00000005BA42: 0000
	.long 0                                                    // 00000005BA44: 00000000
	.long 0                                                    // 00000005BA48: 00000000
	.long 0xef                                                 // 00000005BA4C: 000000EF
	.long 0x8c                                                 // 00000005BA50: 0000008C
	.long 0                                                    // 00000005BA54: 00000000
	.long 0x19                                                 // 00000005BA58: 00000019
	.long 0                                                    // 00000005BA5C: 00000000
	.long 0x90                                                 // 00000005BA60: 00000090
	.ascii "D"                                                 // 00000005BA64: 44
	.byte 0x2                                                  // 00000005BA65: 02
	.short 0                                                   // 00000005BA66: 0000
	.long 0                                                    // 00000005BA68: 00000000
	.long 0x1b7                                                // 00000005BA6C: 000001B7
	.long 0x15                                                 // 00000005BA70: 00000015
	.long 0                                                    // 00000005BA74: 00000000
	.long 0                                                    // 00000005BA78: 00000000
	.long 0x1c7                                                // 00000005BA7C: 000001C7
	.long 0x202                                                // 00000005BA80: 00000202
	.long 0                                                    // 00000005BA84: 00000000
	.long 0                                                    // 00000005BA88: 00000000
	.long 0                                                    // 00000005BA8C: 00000000
	.long 0x20d                                                // 00000005BA90: 0000020D
	.long 0x189                                                // 00000005BA94: 00000189
	.long 0                                                    // 00000005BA98: 00000000
	.long 0x8                                                  // 00000005BA9C: 00000008
	.long 0                                                    // 00000005BAA0: 00000000
	.long 0                                                    // 00000005BAA4: 00000000
	.long 0                                                    // 00000005BAA8: 00000000
	.long 0x1f0                                                // 00000005BAAC: 000001F0
	.ascii "("                                                 // 00000005BAB0: 28
	.byte 0x2                                                  // 00000005BAB1: 02
	.short 0                                                   // 00000005BAB2: 0000
	.long 0                                                    // 00000005BAB4: 00000000
	.long 0                                                    // 00000005BAB8: 00000000
	.long 0xbb                                                 // 00000005BABC: 000000BB
	.long 0                                                    // 00000005BAC0: 00000000
	.long 0                                                    // 00000005BAC4: 00000000
	.long 0x18c                                                // 00000005BAC8: 0000018C
	.long 0                                                    // 00000005BACC: 00000000
	.long 0                                                    // 00000005BAD0: 00000000
	.long 0                                                    // 00000005BAD4: 00000000
	.long 0                                                    // 00000005BAD8: 00000000
	.ascii "p"                                                 // 00000005BADC: 70
	.byte 0x1                                                  // 00000005BADD: 01
	.short 0                                                   // 00000005BADE: 0000
	.long 0xdf                                                 // 00000005BAE0: 000000DF
	.ascii "S"                                                 // 00000005BAE4: 53
	.byte 0                                                    // 00000005BAE5: 00
	.short 0                                                   // 00000005BAE6: 0000
	.ascii ":"                                                 // 00000005BAE8: 3A
	.byte 0x2                                                  // 00000005BAE9: 02
	.short 0                                                   // 00000005BAEA: 0000
	.long 0x192                                                // 00000005BAEC: 00000192
	.long 0                                                    // 00000005BAF0: 00000000
	.long 0                                                    // 00000005BAF4: 00000000
	.long 0                                                    // 00000005BAF8: 00000000
	.long 0                                                    // 00000005BAFC: 00000000
	.long 0                                                    // 00000005BB00: 00000000
	.long 0                                                    // 00000005BB04: 00000000
	.ascii "	"                                                 // 00000005BB08: 09
	.byte 0x2                                                  // 00000005BB09: 02
	.short 0                                                   // 00000005BB0A: 0000
	.long 0x1c0                                                // 00000005BB0C: 000001C0
	.long 0                                                    // 00000005BB10: 00000000
	.long 0                                                    // 00000005BB14: 00000000
	.long 0x213                                                // 00000005BB18: 00000213
	.long 0xd1                                                 // 00000005BB1C: 000000D1
	.long 0                                                    // 00000005BB20: 00000000
	.long 0x7f                                                 // 00000005BB24: 0000007F
	.long 0x106                                                // 00000005BB28: 00000106
	.long 0                                                    // 00000005BB2C: 00000000
	.long 0x1e7                                                // 00000005BB30: 000001E7
	.long 0                                                    // 00000005BB34: 00000000
	.ascii "O"                                                 // 00000005BB38: 4F
	.byte 0x2                                                  // 00000005BB39: 02
	.short 0                                                   // 00000005BB3A: 0000
	.long 0                                                    // 00000005BB3C: 00000000
	.long 0                                                    // 00000005BB40: 00000000
	.ascii "!"                                                 // 00000005BB44: 21
	.byte 0x1                                                  // 00000005BB45: 01
	.short 0                                                   // 00000005BB46: 0000
	.long 0                                                    // 00000005BB48: 00000000
	.long 0                                                    // 00000005BB4C: 00000000
	.long 0x1b1                                                // 00000005BB50: 000001B1
	.long 0xcd                                                 // 00000005BB54: 000000CD
	.long 0                                                    // 00000005BB58: 00000000
	.long 0                                                    // 00000005BB5C: 00000000
	.long 0                                                    // 00000005BB60: 00000000
	.long 0                                                    // 00000005BB64: 00000000
	.long 0                                                    // 00000005BB68: 00000000
	.long 0x1a6                                                // 00000005BB6C: 000001A6
	.ascii "&"                                                 // 00000005BB70: 26
	.byte 0                                                    // 00000005BB71: 00
	.short 0                                                   // 00000005BB72: 0000
	.ascii "+"                                                 // 00000005BB74: 2B
	.byte 0x1                                                  // 00000005BB75: 01
	.short 0                                                   // 00000005BB76: 0000
	.long 0x21a                                                // 00000005BB78: 0000021A
	.long 0                                                    // 00000005BB7C: 00000000
	.long 0                                                    // 00000005BB80: 00000000
	.ascii "$"                                                 // 00000005BB84: 24
	.byte 0                                                    // 00000005BB85: 00
	.short 0                                                   // 00000005BB86: 0000
	.ascii "?"                                                 // 00000005BB88: 3F
	.byte 0x2                                                  // 00000005BB89: 02
	.short 0                                                   // 00000005BB8A: 0000
	.long 0                                                    // 00000005BB8C: 00000000
	.long 0                                                    // 00000005BB90: 00000000
	.long 0                                                    // 00000005BB94: 00000000
	.ascii "x"                                                 // 00000005BB98: 78
	.byte 0                                                    // 00000005BB99: 00
	.short 0                                                   // 00000005BB9A: 0000
	.ascii ","                                                 // 00000005BB9C: 2C
	.byte 0x1                                                  // 00000005BB9D: 01
	.short 0                                                   // 00000005BB9E: 0000
	.ascii "B"                                                 // 00000005BBA0: 42
	.byte 0x2                                                  // 00000005BBA1: 02
	.short 0                                                   // 00000005BBA2: 0000
	.ascii "Q"                                                 // 00000005BBA4: 51
	.byte 0                                                    // 00000005BBA5: 00
	.short 0                                                   // 00000005BBA6: 0000
	.long 0x188                                                // 00000005BBA8: 00000188
	.ascii "="                                                 // 00000005BBAC: 3D
	.byte 0x2                                                  // 00000005BBAD: 02
	.short 0                                                   // 00000005BBAE: 0000
	.long 0x21d                                                // 00000005BBB0: 0000021D
	.long 0x18a                                                // 00000005BBB4: 0000018A
	.long 0                                                    // 00000005BBB8: 00000000
	.ascii "y"                                                 // 00000005BBBC: 79
	.byte 0x1                                                  // 00000005BBBD: 01
	.short 0                                                   // 00000005BBBE: 0000
	.ascii "s"                                                 // 00000005BBC0: 73
	.byte 0x1                                                  // 00000005BBC1: 01
	.short 0                                                   // 00000005BBC2: 0000
	.ascii "N"                                                 // 00000005BBC4: 4E
	.byte 0x2                                                  // 00000005BBC5: 02
	.short 0                                                   // 00000005BBC6: 0000
	.long 0x11a                                                // 00000005BBC8: 0000011A
	.long 0                                                    // 00000005BBCC: 00000000
	.long 0xb1                                                 // 00000005BBD0: 000000B1
	.long 0                                                    // 00000005BBD4: 00000000
	.long 0                                                    // 00000005BBD8: 00000000
	.long 0                                                    // 00000005BBDC: 00000000
	.ascii "@"                                                 // 00000005BBE0: 40
	.byte 0                                                    // 00000005BBE1: 00
	.short 0                                                   // 00000005BBE2: 0000
	.ascii "I"                                                 // 00000005BBE4: 49
	.byte 0x2                                                  // 00000005BBE5: 02
	.short 0                                                   // 00000005BBE6: 0000
	.long 0                                                    // 00000005BBE8: 00000000
	.long 0                                                    // 00000005BBEC: 00000000
	.long 0x184                                                // 00000005BBF0: 00000184
	.long 0                                                    // 00000005BBF4: 00000000
	.long 0                                                    // 00000005BBF8: 00000000
	.long 0x1da                                                // 00000005BBFC: 000001DA
	.long 0xf7                                                 // 00000005BC00: 000000F7
	.long 0x84                                                 // 00000005BC04: 00000084
	.long 0xd8                                                 // 00000005BC08: 000000D8
	.long 0                                                    // 00000005BC0C: 00000000
	.long 0                                                    // 00000005BC10: 00000000
	.ascii "h"                                                 // 00000005BC14: 68
	.byte 0                                                    // 00000005BC15: 00
	.short 0                                                   // 00000005BC16: 0000
	.long 0                                                    // 00000005BC18: 00000000
	.ascii "%"                                                 // 00000005BC1C: 25
	.byte 0x1                                                  // 00000005BC1D: 01
	.short 0                                                   // 00000005BC1E: 0000
	.long 0                                                    // 00000005BC20: 00000000
	.ascii "'"                                                 // 00000005BC24: 27
	.byte 0x2                                                  // 00000005BC25: 02
	.short 0                                                   // 00000005BC26: 0000
	.ascii "O"                                                 // 00000005BC28: 4F
	.byte 0x1                                                  // 00000005BC29: 01
	.short 0                                                   // 00000005BC2A: 0000
	.long 0                                                    // 00000005BC2C: 00000000
	.long 0x1f9                                                // 00000005BC30: 000001F9
	.ascii "g"                                                 // 00000005BC34: 67
	.byte 0x1                                                  // 00000005BC35: 01
	.short 0                                                   // 00000005BC36: 0000
	.long 0                                                    // 00000005BC38: 00000000
	.long 0x1f3                                                // 00000005BC3C: 000001F3
	.ascii "C"                                                 // 00000005BC40: 43
	.byte 0x2                                                  // 00000005BC41: 02
	.short 0                                                   // 00000005BC42: 0000
	.ascii "q"                                                 // 00000005BC44: 71
	.byte 0x1                                                  // 00000005BC45: 01
	.short 0                                                   // 00000005BC46: 0000
	.long 0                                                    // 00000005BC48: 00000000
	.ascii "1"                                                 // 00000005BC4C: 31
	.byte 0                                                    // 00000005BC4D: 00
	.short 0                                                   // 00000005BC4E: 0000
	.ascii "J"                                                 // 00000005BC50: 4A
	.byte 0x1                                                  // 00000005BC51: 01
	.short 0                                                   // 00000005BC52: 0000
	.long 0x10c                                                // 00000005BC54: 0000010C
	.long 0                                                    // 00000005BC58: 00000000
	.long 0                                                    // 00000005BC5C: 00000000
	.ascii "T"                                                 // 00000005BC60: 54
	.byte 0                                                    // 00000005BC61: 00
	.short 0                                                   // 00000005BC62: 0000
	.ascii "z"                                                 // 00000005BC64: 7A
	.byte 0x1                                                  // 00000005BC65: 01
	.short 0                                                   // 00000005BC66: 0000
	.long 0                                                    // 00000005BC68: 00000000
	.long 0                                                    // 00000005BC6C: 00000000
	.long 0                                                    // 00000005BC70: 00000000
	.long 0                                                    // 00000005BC74: 00000000
	.long 0x102                                                // 00000005BC78: 00000102
	.long 0                                                    // 00000005BC7C: 00000000
	.long 0                                                    // 00000005BC80: 00000000
	.long 0x9e                                                 // 00000005BC84: 0000009E
	.ascii "i"                                                 // 00000005BC88: 69
	.byte 0x1                                                  // 00000005BC89: 01
	.short 0                                                   // 00000005BC8A: 0000
	.ascii "4"                                                 // 00000005BC8C: 34
	.byte 0                                                    // 00000005BC8D: 00
	.short 0                                                   // 00000005BC8E: 0000
	.long 0                                                    // 00000005BC90: 00000000
	.ascii "|"                                                 // 00000005BC94: 7C
	.byte 0x1                                                  // 00000005BC95: 01
	.short 0                                                   // 00000005BC96: 0000
	.ascii "5"                                                 // 00000005BC98: 35
	.byte 0x2                                                  // 00000005BC99: 02
	.short 0                                                   // 00000005BC9A: 0000
	.long 0                                                    // 00000005BC9C: 00000000
	.long 0                                                    // 00000005BCA0: 00000000
	.long 0                                                    // 00000005BCA4: 00000000
	.long 0                                                    // 00000005BCA8: 00000000
	.long 0x1ef                                                // 00000005BCAC: 000001EF
	.long 0                                                    // 00000005BCB0: 00000000
	.ascii "."                                                 // 00000005BCB4: 2E
	.byte 0x2                                                  // 00000005BCB5: 02
	.short 0                                                   // 00000005BCB6: 0000
	.long 0                                                    // 00000005BCB8: 00000000
	.long 0                                                    // 00000005BCBC: 00000000
	.long 0                                                    // 00000005BCC0: 00000000
	.long 0                                                    // 00000005BCC4: 00000000
	.ascii "<"                                                 // 00000005BCC8: 3C
	.byte 0                                                    // 00000005BCC9: 00
	.short 0                                                   // 00000005BCCA: 0000
	.long 0                                                    // 00000005BCCC: 00000000
	.long 0                                                    // 00000005BCD0: 00000000
	.long 0x206                                                // 00000005BCD4: 00000206
	.long 0x1d4                                                // 00000005BCD8: 000001D4
	.long 0x16                                                 // 00000005BCDC: 00000016
	.long 0                                                    // 00000005BCE0: 00000000
	.long 0                                                    // 00000005BCE4: 00000000
	.long 0x11e                                                // 00000005BCE8: 0000011E
	.ascii "\n"                                                // 00000005BCEC: 0A
	.byte 0x2                                                  // 00000005BCED: 02
	.short 0                                                   // 00000005BCEE: 0000
	.long 0xa3                                                 // 00000005BCF0: 000000A3
	.long 0x9c                                                 // 00000005BCF4: 0000009C
	.long 0xd9                                                 // 00000005BCF8: 000000D9
	.ascii "*"                                                 // 00000005BCFC: 2A
	.byte 0                                                    // 00000005BCFD: 00
	.short 0                                                   // 00000005BCFE: 0000
	.long 0                                                    // 00000005BD00: 00000000
	.long 0x1bf                                                // 00000005BD04: 000001BF
	.long 0x199                                                // 00000005BD08: 00000199
	.long 0x1d                                                 // 00000005BD0C: 0000001D
	.long 0x21b                                                // 00000005BD10: 0000021B
	.ascii "("                                                 // 00000005BD14: 28
	.byte 0x1                                                  // 00000005BD15: 01
	.short 0                                                   // 00000005BD16: 0000
	.long 0x1af                                                // 00000005BD18: 000001AF
	.ascii "J"                                                 // 00000005BD1C: 4A
	.byte 0x2                                                  // 00000005BD1D: 02
	.short 0                                                   // 00000005BD1E: 0000
	.long 0x10e                                                // 00000005BD20: 0000010E
	.long 0                                                    // 00000005BD24: 00000000
	.long 0x19f                                                // 00000005BD28: 0000019F
	.ascii "e"                                                 // 00000005BD2C: 65
	.byte 0x1                                                  // 00000005BD2D: 01
	.short 0                                                   // 00000005BD2E: 0000
	.ascii "	"                                                 // 00000005BD30: 09
	.byte 0x1                                                  // 00000005BD31: 01
	.short 0                                                   // 00000005BD32: 0000
	.long 0x1ad                                                // 00000005BD34: 000001AD
	.long 0xb5                                                 // 00000005BD38: 000000B5
	.long 0                                                    // 00000005BD3C: 00000000
	.long 0x1ff                                                // 00000005BD40: 000001FF
	.ascii "{"                                                 // 00000005BD44: 7B
	.byte 0                                                    // 00000005BD45: 00
	.short 0                                                   // 00000005BD46: 0000
	.long 0xe3                                                 // 00000005BD48: 000000E3
	.long 0x1ab                                                // 00000005BD4C: 000001AB
	.long 0                                                    // 00000005BD50: 00000000
	.long 0                                                    // 00000005BD54: 00000000
	.long 0xd6                                                 // 00000005BD58: 000000D6
	.long 0x1b6                                                // 00000005BD5C: 000001B6
	.long 0                                                    // 00000005BD60: 00000000
	.long 0x104                                                // 00000005BD64: 00000104
	.long 0                                                    // 00000005BD68: 00000000
	.long 0                                                    // 00000005BD6C: 00000000
	.long 0                                                    // 00000005BD70: 00000000
	.long 0                                                    // 00000005BD74: 00000000
	.long 0                                                    // 00000005BD78: 00000000
	.ascii "<"                                                 // 00000005BD7C: 3C
	.byte 0x1                                                  // 00000005BD7D: 01
	.short 0                                                   // 00000005BD7E: 0000
	.long 0x1df                                                // 00000005BD80: 000001DF
	.long 0xf4                                                 // 00000005BD84: 000000F4
	.long 0                                                    // 00000005BD88: 00000000
	.long 0x1b                                                 // 00000005BD8C: 0000001B
	.long 0xa5                                                 // 00000005BD90: 000000A5
	.ascii "L"                                                 // 00000005BD94: 4C
	.byte 0x2                                                  // 00000005BD95: 02
	.short 0                                                   // 00000005BD96: 0000
	.ascii ">"                                                 // 00000005BD98: 3E
	.byte 0x2                                                  // 00000005BD99: 02
	.short 0                                                   // 00000005BD9A: 0000
	.long 0x1d7                                                // 00000005BD9C: 000001D7
	.long 0xc0                                                 // 00000005BDA0: 000000C0
	.ascii "="                                                 // 00000005BDA4: 3D
	.byte 0x1                                                  // 00000005BDA5: 01
	.short 0                                                   // 00000005BDA6: 0000
	.long 0xa6                                                 // 00000005BDA8: 000000A6
	.ascii "G"                                                 // 00000005BDAC: 47
	.byte 0x1                                                  // 00000005BDAD: 01
	.short 0                                                   // 00000005BDAE: 0000
	.long 0x1a9                                                // 00000005BDB0: 000001A9
	.ascii "W"                                                 // 00000005BDB4: 57
	.byte 0x1                                                  // 00000005BDB5: 01
	.short 0                                                   // 00000005BDB6: 0000
	.long 0                                                    // 00000005BDB8: 00000000
	.long 0                                                    // 00000005BDBC: 00000000
	.long 0                                                    // 00000005BDC0: 00000000
	.long 0x1c4                                                // 00000005BDC4: 000001C4
	.long 0                                                    // 00000005BDC8: 00000000
	.long 0                                                    // 00000005BDCC: 00000000
	.long 0x1a1                                                // 00000005BDD0: 000001A1
	.long 0                                                    // 00000005BDD4: 00000000
	.long 0                                                    // 00000005BDD8: 00000000
	.long 0x218                                                // 00000005BDDC: 00000218
	.long 0                                                    // 00000005BDE0: 00000000
	.long 0                                                    // 00000005BDE4: 00000000
	.long 0x13                                                 // 00000005BDE8: 00000013
	.long 0                                                    // 00000005BDEC: 00000000
	.long 0x211                                                // 00000005BDF0: 00000211
	.long 0                                                    // 00000005BDF4: 00000000
	.long 0x1ae                                                // 00000005BDF8: 000001AE
	.long 0                                                    // 00000005BDFC: 00000000
	.long 0                                                    // 00000005BE00: 00000000
	.long 0                                                    // 00000005BE04: 00000000
	.long 0                                                    // 00000005BE08: 00000000
	.long 0                                                    // 00000005BE0C: 00000000
	.long 0                                                    // 00000005BE10: 00000000
	.long 0                                                    // 00000005BE14: 00000000
	.long 0                                                    // 00000005BE18: 00000000
	.long 0                                                    // 00000005BE1C: 00000000
	.long 0                                                    // 00000005BE20: 00000000
	.long 0                                                    // 00000005BE24: 00000000
	.long 0                                                    // 00000005BE28: 00000000
	.long 0                                                    // 00000005BE2C: 00000000
	.long 0                                                    // 00000005BE30: 00000000
	.long 0                                                    // 00000005BE34: 00000000
	.long 0                                                    // 00000005BE38: 00000000
	.long 0                                                    // 00000005BE3C: 00000000
	.long 0                                                    // 00000005BE40: 00000000
	.long 0x3                                                  // 00000005BE44: 00000003
	.long 0                                                    // 00000005BE48: 00000000
	.long 0                                                    // 00000005BE4C: 00000000
	.long 0                                                    // 00000005BE50: 00000000
	.long 0                                                    // 00000005BE54: 00000000
	.long 0                                                    // 00000005BE58: 00000000
	.long 0                                                    // 00000005BE5C: 00000000
	.long 0                                                    // 00000005BE60: 00000000
	.long 0                                                    // 00000005BE64: 00000000
	.long 0                                                    // 00000005BE68: 00000000
	.long 0                                                    // 00000005BE6C: 00000000
	.long 0                                                    // 00000005BE70: 00000000
	.long 0                                                    // 00000005BE74: 00000000
	.long 0                                                    // 00000005BE78: 00000000
	.long 0                                                    // 00000005BE7C: 00000000
	.long 0                                                    // 00000005BE80: 00000000
	.long 0                                                    // 00000005BE84: 00000000
	.long 0                                                    // 00000005BE88: 00000000
	.long 0                                                    // 00000005BE8C: 00000000
	.long 0                                                    // 00000005BE90: 00000000
	.long 0                                                    // 00000005BE94: 00000000
	.long 0                                                    // 00000005BE98: 00000000
	.long 0                                                    // 00000005BE9C: 00000000
	.long 0                                                    // 00000005BEA0: 00000000
	.long 0                                                    // 00000005BEA4: 00000000
	.long 0                                                    // 00000005BEA8: 00000000
	.long 0                                                    // 00000005BEAC: 00000000
	.long 0                                                    // 00000005BEB0: 00000000
	.long 0                                                    // 00000005BEB4: 00000000
	.long 0                                                    // 00000005BEB8: 00000000
	.long 0                                                    // 00000005BEBC: 00000000
	.long 0                                                    // 00000005BEC0: 00000000
	.long 0                                                    // 00000005BEC4: 00000000
	.long 0                                                    // 00000005BEC8: 00000000
	.long 0                                                    // 00000005BECC: 00000000
	.long 0                                                    // 00000005BED0: 00000000
	.ascii ")"                                                 // 00000005BED4: 29
	.byte 0                                                    // 00000005BED5: 00
	.short 0                                                   // 00000005BED6: 0000
	.long 0                                                    // 00000005BED8: 00000000
	.long 0                                                    // 00000005BEDC: 00000000
	.long 0                                                    // 00000005BEE0: 00000000
	.long 0                                                    // 00000005BEE4: 00000000
	.long 0                                                    // 00000005BEE8: 00000000
	.long 0                                                    // 00000005BEEC: 00000000
	.long 0                                                    // 00000005BEF0: 00000000
	.long 0                                                    // 00000005BEF4: 00000000
	.long 0                                                    // 00000005BEF8: 00000000
	.long 0                                                    // 00000005BEFC: 00000000
	.long 0                                                    // 00000005BF00: 00000000
	.long 0                                                    // 00000005BF04: 00000000
	.long 0                                                    // 00000005BF08: 00000000
	.long 0                                                    // 00000005BF0C: 00000000
	.long 0x14                                                 // 00000005BF10: 00000014
	.long 0                                                    // 00000005BF14: 00000000
	.ascii " "                                                 // 00000005BF18: 20
	.byte 0                                                    // 00000005BF19: 00
	.short 0                                                   // 00000005BF1A: 0000
	.long 0                                                    // 00000005BF1C: 00000000
	.long 0                                                    // 00000005BF20: 00000000
	.long 0                                                    // 00000005BF24: 00000000
	.long 0                                                    // 00000005BF28: 00000000
	.long 0                                                    // 00000005BF2C: 00000000
	.long 0                                                    // 00000005BF30: 00000000
	.long 0                                                    // 00000005BF34: 00000000
	.long 0                                                    // 00000005BF38: 00000000
	.long 0                                                    // 00000005BF3C: 00000000
	.long 0                                                    // 00000005BF40: 00000000
	.long 0                                                    // 00000005BF44: 00000000
	.long 0                                                    // 00000005BF48: 00000000
	.long 0                                                    // 00000005BF4C: 00000000
	.long 0                                                    // 00000005BF50: 00000000
	.long 0                                                    // 00000005BF54: 00000000
	.long 0                                                    // 00000005BF58: 00000000
	.long 0                                                    // 00000005BF5C: 00000000
	.long 0                                                    // 00000005BF60: 00000000
	.long 0                                                    // 00000005BF64: 00000000
	.ascii "V"                                                 // 00000005BF68: 56
	.byte 0                                                    // 00000005BF69: 00
	.short 0                                                   // 00000005BF6A: 0000
	.ascii "W"                                                 // 00000005BF6C: 57
	.byte 0                                                    // 00000005BF6D: 00
	.short 0                                                   // 00000005BF6E: 0000
	.long 0                                                    // 00000005BF70: 00000000
	.long 0                                                    // 00000005BF74: 00000000
	.long 0                                                    // 00000005BF78: 00000000
	.long 0                                                    // 00000005BF7C: 00000000
	.long 0                                                    // 00000005BF80: 00000000
	.long 0                                                    // 00000005BF84: 00000000
	.long 0                                                    // 00000005BF88: 00000000
	.long 0                                                    // 00000005BF8C: 00000000
	.long 0                                                    // 00000005BF90: 00000000
	.ascii "O"                                                 // 00000005BF94: 4F
	.byte 0                                                    // 00000005BF95: 00
	.short 0                                                   // 00000005BF96: 0000
	.long 0                                                    // 00000005BF98: 00000000
	.long 0                                                    // 00000005BF9C: 00000000
	.long 0                                                    // 00000005BFA0: 00000000
	.long 0                                                    // 00000005BFA4: 00000000
	.long 0                                                    // 00000005BFA8: 00000000
	.long 0                                                    // 00000005BFAC: 00000000
	.long 0                                                    // 00000005BFB0: 00000000
	.long 0                                                    // 00000005BFB4: 00000000
	.long 0                                                    // 00000005BFB8: 00000000
	.long 0                                                    // 00000005BFBC: 00000000
	.long 0                                                    // 00000005BFC0: 00000000
	.long 0                                                    // 00000005BFC4: 00000000
	.long 0                                                    // 00000005BFC8: 00000000
	.long 0                                                    // 00000005BFCC: 00000000
	.long 0                                                    // 00000005BFD0: 00000000
	.long 0                                                    // 00000005BFD4: 00000000
	.long 0                                                    // 00000005BFD8: 00000000
	.long 0                                                    // 00000005BFDC: 00000000
	.long 0                                                    // 00000005BFE0: 00000000
	.ascii "t"                                                 // 00000005BFE4: 74
	.byte 0                                                    // 00000005BFE5: 00
	.short 0                                                   // 00000005BFE6: 0000
	.ascii "v"                                                 // 00000005BFE8: 76
	.byte 0                                                    // 00000005BFE9: 00
	.short 0                                                   // 00000005BFEA: 0000
	.long 0                                                    // 00000005BFEC: 00000000
	.long 0                                                    // 00000005BFF0: 00000000
	.long 0                                                    // 00000005BFF4: 00000000
	.long 0                                                    // 00000005BFF8: 00000000
	.long 0                                                    // 00000005BFFC: 00000000
	.long 0                                                    // 00000005C000: 00000000
	.long 0xb                                                  // 00000005C004: 0000000B
	.ascii "6"                                                 // 00000005C008: 36
	.byte 0                                                    // 00000005C009: 00
	.short 0                                                   // 00000005C00A: 0000
	.long 0                                                    // 00000005C00C: 00000000
	.ascii "\\"                                                // 00000005C010: 5C
	.byte 0                                                    // 00000005C011: 00
	.short 0                                                   // 00000005C012: 0000
	.long 0                                                    // 00000005C014: 00000000
	.long 0x17                                                 // 00000005C018: 00000017
	.long 0                                                    // 00000005C01C: 00000000
	.long 0                                                    // 00000005C020: 00000000
	.long 0                                                    // 00000005C024: 00000000
	.long 0                                                    // 00000005C028: 00000000
	.long 0                                                    // 00000005C02C: 00000000
	.long 0                                                    // 00000005C030: 00000000
	.ascii "m"                                                 // 00000005C034: 6D
	.byte 0                                                    // 00000005C035: 00
	.short 0                                                   // 00000005C036: 0000
	.long 0x10                                                 // 00000005C038: 00000010
	.long 0                                                    // 00000005C03C: 00000000
	.long 0                                                    // 00000005C040: 00000000
	.long 0x80                                                 // 00000005C044: 00000080
	.long 0                                                    // 00000005C048: 00000000
	.long 0                                                    // 00000005C04C: 00000000
	.long 0                                                    // 00000005C050: 00000000
	.long 0x1a                                                 // 00000005C054: 0000001A
	.ascii "+"                                                 // 00000005C058: 2B
	.byte 0                                                    // 00000005C059: 00
	.short 0                                                   // 00000005C05A: 0000
	.ascii ":"                                                 // 00000005C05C: 3A
	.byte 0                                                    // 00000005C05D: 00
	.short 0                                                   // 00000005C05E: 0000
	.long 0                                                    // 00000005C060: 00000000
	.long 0                                                    // 00000005C064: 00000000
	.ascii "g"                                                 // 00000005C068: 67
	.byte 0                                                    // 00000005C069: 00
	.short 0                                                   // 00000005C06A: 0000
	.ascii "f"                                                 // 00000005C06C: 66
	.byte 0                                                    // 00000005C06D: 00
	.short 0                                                   // 00000005C06E: 0000
	.long 0                                                    // 00000005C070: 00000000
	.long 0                                                    // 00000005C074: 00000000
	.ascii "c"                                                 // 00000005C078: 63
	.byte 0                                                    // 00000005C079: 00
	.short 0                                                   // 00000005C07A: 0000
	.ascii "2"                                                 // 00000005C07C: 32
	.byte 0                                                    // 00000005C07D: 00
	.short 0                                                   // 00000005C07E: 0000
	.long 0                                                    // 00000005C080: 00000000
	.long 0                                                    // 00000005C084: 00000000
	.long 0                                                    // 00000005C088: 00000000
	.long 0                                                    // 00000005C08C: 00000000
	.long 0                                                    // 00000005C090: 00000000
	.ascii ";"                                                 // 00000005C094: 3B
	.byte 0                                                    // 00000005C095: 00
	.short 0                                                   // 00000005C096: 0000
	.ascii "."                                                 // 00000005C098: 2E
	.byte 0                                                    // 00000005C099: 00
	.short 0                                                   // 00000005C09A: 0000
	.long 0x96                                                 // 00000005C09C: 00000096
	.long 0                                                    // 00000005C0A0: 00000000
	.ascii "9"                                                 // 00000005C0A4: 39
	.byte 0                                                    // 00000005C0A5: 00
	.short 0                                                   // 00000005C0A6: 0000
	.long 0                                                    // 00000005C0A8: 00000000
	.ascii "L"                                                 // 00000005C0AC: 4C
	.byte 0                                                    // 00000005C0AD: 00
	.short 0                                                   // 00000005C0AE: 0000
	.long 0                                                    // 00000005C0B0: 00000000
	.long 0                                                    // 00000005C0B4: 00000000
	.long 0                                                    // 00000005C0B8: 00000000
	.long 0                                                    // 00000005C0BC: 00000000
	.long 0                                                    // 00000005C0C0: 00000000
	.long 0                                                    // 00000005C0C4: 00000000
	.long 0                                                    // 00000005C0C8: 00000000
	.long 0x92                                                 // 00000005C0CC: 00000092
	.long 0                                                    // 00000005C0D0: 00000000
	.long 0x85                                                 // 00000005C0D4: 00000085
	.long 0                                                    // 00000005C0D8: 00000000
	.long 0                                                    // 00000005C0DC: 00000000
	.long 0                                                    // 00000005C0E0: 00000000
	.long 0                                                    // 00000005C0E4: 00000000
	.long 0x8b                                                 // 00000005C0E8: 0000008B
	.long 0                                                    // 00000005C0EC: 00000000
	.long 0                                                    // 00000005C0F0: 00000000
	.long 0                                                    // 00000005C0F4: 00000000
	.long 0x1e                                                 // 00000005C0F8: 0000001E
	.long 0                                                    // 00000005C0FC: 00000000
	.long 0                                                    // 00000005C100: 00000000
	.long 0                                                    // 00000005C104: 00000000
	.ascii ">"                                                 // 00000005C108: 3E
	.byte 0                                                    // 00000005C109: 00
	.short 0                                                   // 00000005C10A: 0000
	.long 0                                                    // 00000005C10C: 00000000
	.long 0                                                    // 00000005C110: 00000000
	.long 0x7                                                  // 00000005C114: 00000007
	.long 0                                                    // 00000005C118: 00000000
	.long 0xc2                                                 // 00000005C11C: 000000C2
	.long 0                                                    // 00000005C120: 00000000
	.long 0                                                    // 00000005C124: 00000000
	.long 0                                                    // 00000005C128: 00000000
	.long 0                                                    // 00000005C12C: 00000000
	.ascii "A"                                                 // 00000005C130: 41
	.byte 0                                                    // 00000005C131: 00
	.short 0                                                   // 00000005C132: 0000
	.long 0                                                    // 00000005C134: 00000000
	.long 0x9f                                                 // 00000005C138: 0000009F
	.long 0x1                                                  // 00000005C13C: 00000001
	.long 0                                                    // 00000005C140: 00000000
	.long 0                                                    // 00000005C144: 00000000
	.long 0                                                    // 00000005C148: 00000000
	.long 0xa7                                                 // 00000005C14C: 000000A7
	.long 0                                                    // 00000005C150: 00000000
	.long 0                                                    // 00000005C154: 00000000
	.long 0                                                    // 00000005C158: 00000000
	.long 0                                                    // 00000005C15C: 00000000
	.long 0xa8                                                 // 00000005C160: 000000A8
	.ascii "b"                                                 // 00000005C164: 62
	.byte 0                                                    // 00000005C165: 00
	.short 0                                                   // 00000005C166: 0000
	.long 0x18                                                 // 00000005C168: 00000018
	.long 0xc3                                                 // 00000005C16C: 000000C3
	.long 0                                                    // 00000005C170: 00000000
	.long 0xa0                                                 // 00000005C174: 000000A0
	.long 0                                                    // 00000005C178: 00000000
	.long 0                                                    // 00000005C17C: 00000000
	.ascii "#"                                                 // 00000005C180: 23
	.byte 0                                                    // 00000005C181: 00
	.short 0                                                   // 00000005C182: 0000
	.long 0x8d                                                 // 00000005C184: 0000008D
	.long 0                                                    // 00000005C188: 00000000
	.long 0                                                    // 00000005C18C: 00000000
	.long 0                                                    // 00000005C190: 00000000
	.ascii "I"                                                 // 00000005C194: 49
	.byte 0                                                    // 00000005C195: 00
	.short 0                                                   // 00000005C196: 0000
	.long 0x98                                                 // 00000005C198: 00000098
	.ascii "/"                                                 // 00000005C19C: 2F
	.byte 0                                                    // 00000005C19D: 00
	.short 0                                                   // 00000005C19E: 0000
	.ascii ","                                                 // 00000005C1A0: 2C
	.byte 0                                                    // 00000005C1A1: 00
	.short 0                                                   // 00000005C1A2: 0000
	.long 0                                                    // 00000005C1A4: 00000000
	.long 0                                                    // 00000005C1A8: 00000000
	.long 0x5                                                  // 00000005C1AC: 00000005
	.long 0                                                    // 00000005C1B0: 00000000
	.long 0                                                    // 00000005C1B4: 00000000
	.long 0                                                    // 00000005C1B8: 00000000
	.long 0xc9                                                 // 00000005C1BC: 000000C9
	.long 0                                                    // 00000005C1C0: 00000000
	.long 0                                                    // 00000005C1C4: 00000000
	.ascii "^"                                                 // 00000005C1C8: 5E
	.byte 0                                                    // 00000005C1C9: 00
	.short 0                                                   // 00000005C1CA: 0000
	.long 0xd3                                                 // 00000005C1CC: 000000D3
	.long 0                                                    // 00000005C1D0: 00000000
	.long 0                                                    // 00000005C1D4: 00000000
	.ascii "X"                                                 // 00000005C1D8: 58
	.byte 0                                                    // 00000005C1D9: 00
	.short 0                                                   // 00000005C1DA: 0000
	.long 0x6                                                  // 00000005C1DC: 00000006
	.long 0                                                    // 00000005C1E0: 00000000
	.long 0                                                    // 00000005C1E4: 00000000
	.long 0                                                    // 00000005C1E8: 00000000
	.long 0x12                                                 // 00000005C1EC: 00000012
	.long 0                                                    // 00000005C1F0: 00000000
	.long 0                                                    // 00000005C1F4: 00000000
	.long 0                                                    // 00000005C1F8: 00000000
	.long 0                                                    // 00000005C1FC: 00000000
	.long 0                                                    // 00000005C200: 00000000
	.long 0                                                    // 00000005C204: 00000000
	.long 0                                                    // 00000005C208: 00000000
	.long 0xec                                                 // 00000005C20C: 000000EC
	.long 0                                                    // 00000005C210: 00000000
	.long 0                                                    // 00000005C214: 00000000
	.ascii "e"                                                 // 00000005C218: 65
	.byte 0                                                    // 00000005C219: 00
	.short 0                                                   // 00000005C21A: 0000
	.long 0                                                    // 00000005C21C: 00000000
	.long 0                                                    // 00000005C220: 00000000
	.ascii "-"                                                 // 00000005C224: 2D
	.byte 0                                                    // 00000005C225: 00
	.short 0                                                   // 00000005C226: 0000
	.long 0                                                    // 00000005C228: 00000000
	.long 0                                                    // 00000005C22C: 00000000
	.ascii "r"                                                 // 00000005C230: 72
	.byte 0                                                    // 00000005C231: 00
	.short 0                                                   // 00000005C232: 0000
	.long 0                                                    // 00000005C234: 00000000
	.long 0                                                    // 00000005C238: 00000000
	.long 0                                                    // 00000005C23C: 00000000
	.long 0                                                    // 00000005C240: 00000000
	.long 0                                                    // 00000005C244: 00000000
	.ascii "Y"                                                 // 00000005C248: 59
	.byte 0                                                    // 00000005C249: 00
	.short 0                                                   // 00000005C24A: 0000
	.long 0                                                    // 00000005C24C: 00000000
	.long 0                                                    // 00000005C250: 00000000
	.long 0                                                    // 00000005C254: 00000000
	.long 0                                                    // 00000005C258: 00000000
	.long 0                                                    // 00000005C25C: 00000000
	.long 0                                                    // 00000005C260: 00000000
	.long 0                                                    // 00000005C264: 00000000
	.long 0                                                    // 00000005C268: 00000000
	.long 0xbd                                                 // 00000005C26C: 000000BD
	.long 0xba                                                 // 00000005C270: 000000BA
	.long 0                                                    // 00000005C274: 00000000
	.ascii "Z"                                                 // 00000005C278: 5A
	.byte 0                                                    // 00000005C279: 00
	.short 0                                                   // 00000005C27A: 0000
	.long 0                                                    // 00000005C27C: 00000000
	.long 0                                                    // 00000005C280: 00000000
	.long 0xed                                                 // 00000005C284: 000000ED
	.long 0xfa                                                 // 00000005C288: 000000FA
	.long 0x100                                                // 00000005C28C: 00000100
	.long 0                                                    // 00000005C290: 00000000
	.long 0                                                    // 00000005C294: 00000000
	.long 0                                                    // 00000005C298: 00000000
	.long 0xdc                                                 // 00000005C29C: 000000DC
	.long 0                                                    // 00000005C2A0: 00000000
	.ascii "F"                                                 // 00000005C2A4: 46
	.byte 0                                                    // 00000005C2A5: 00
	.short 0                                                   // 00000005C2A6: 0000
	.long 0x114                                                // 00000005C2A8: 00000114
	.ascii "q"                                                 // 00000005C2AC: 71
	.byte 0                                                    // 00000005C2AD: 00
	.short 0                                                   // 00000005C2AE: 0000
	.long 0                                                    // 00000005C2B0: 00000000
	.long 0                                                    // 00000005C2B4: 00000000
	.long 0                                                    // 00000005C2B8: 00000000
	.long 0                                                    // 00000005C2BC: 00000000
	.long 0x10b                                                // 00000005C2C0: 0000010B
	.long 0                                                    // 00000005C2C4: 00000000
	.long 0xad                                                 // 00000005C2C8: 000000AD
	.long 0                                                    // 00000005C2CC: 00000000
	.ascii "D"                                                 // 00000005C2D0: 44
	.byte 0                                                    // 00000005C2D1: 00
	.short 0                                                   // 00000005C2D2: 0000
	.long 0                                                    // 00000005C2D4: 00000000
	.long 0xd4                                                 // 00000005C2D8: 000000D4
	.long 0                                                    // 00000005C2DC: 00000000
	.long 0                                                    // 00000005C2E0: 00000000
	.long 0xd5                                                 // 00000005C2E4: 000000D5
	.long 0                                                    // 00000005C2E8: 00000000
	.long 0xe8                                                 // 00000005C2EC: 000000E8
	.long 0                                                    // 00000005C2F0: 00000000
	.long 0                                                    // 00000005C2F4: 00000000
	.long 0                                                    // 00000005C2F8: 00000000
	.long 0                                                    // 00000005C2FC: 00000000
	.long 0x11b                                                // 00000005C300: 0000011B
	.long 0                                                    // 00000005C304: 00000000
	.long 0x107                                                // 00000005C308: 00000107
	.long 0                                                    // 00000005C30C: 00000000
	.long 0                                                    // 00000005C310: 00000000
	.long 0                                                    // 00000005C314: 00000000
	.ascii "U"                                                 // 00000005C318: 55
	.byte 0                                                    // 00000005C319: 00
	.short 0                                                   // 00000005C31A: 0000
	.ascii "B"                                                 // 00000005C31C: 42
	.byte 0x1                                                  // 00000005C31D: 01
	.short 0                                                   // 00000005C31E: 0000
	.long 0                                                    // 00000005C320: 00000000
	.ascii "?"                                                 // 00000005C324: 3F
	.byte 0                                                    // 00000005C325: 00
	.short 0                                                   // 00000005C326: 0000
	.long 0                                                    // 00000005C328: 00000000
	.ascii "*"                                                 // 00000005C32C: 2A
	.byte 0x1                                                  // 00000005C32D: 01
	.short 0                                                   // 00000005C32E: 0000
	.long 0                                                    // 00000005C330: 00000000
	.long 0                                                    // 00000005C334: 00000000
	.ascii "N"                                                 // 00000005C338: 4E
	.byte 0x1                                                  // 00000005C339: 01
	.short 0                                                   // 00000005C33A: 0000
	.long 0                                                    // 00000005C33C: 00000000
	.long 0                                                    // 00000005C340: 00000000
	.ascii "5"                                                 // 00000005C344: 35
	.byte 0x1                                                  // 00000005C345: 01
	.short 0                                                   // 00000005C346: 0000
	.long 0xac                                                 // 00000005C348: 000000AC
	.long 0                                                    // 00000005C34C: 00000000
	.ascii "'"                                                 // 00000005C350: 27
	.byte 0                                                    // 00000005C351: 00
	.short 0                                                   // 00000005C352: 0000
	.ascii "A"                                                 // 00000005C354: 41
	.byte 0x1                                                  // 00000005C355: 01
	.short 0                                                   // 00000005C356: 0000
	.long 0xca                                                 // 00000005C358: 000000CA
	.long 0xb4                                                 // 00000005C35C: 000000B4
	.ascii "k"                                                 // 00000005C360: 6B
	.byte 0                                                    // 00000005C361: 00
	.short 0                                                   // 00000005C362: 0000
	.long 0                                                    // 00000005C364: 00000000
	.long 0                                                    // 00000005C368: 00000000
	.ascii "L"                                                 // 00000005C36C: 4C
	.byte 0x1                                                  // 00000005C36D: 01
	.short 0                                                   // 00000005C36E: 0000
	.long 0                                                    // 00000005C370: 00000000
	.long 0                                                    // 00000005C374: 00000000
	.long 0                                                    // 00000005C378: 00000000
	.long 0                                                    // 00000005C37C: 00000000
	.long 0x83                                                 // 00000005C380: 00000083
	.long 0                                                    // 00000005C384: 00000000
	.long 0                                                    // 00000005C388: 00000000
	.long 0                                                    // 00000005C38C: 00000000
	.long 0                                                    // 00000005C390: 00000000
	.long 0                                                    // 00000005C394: 00000000
	.ascii "d"                                                 // 00000005C398: 64
	.byte 0                                                    // 00000005C399: 00
	.short 0                                                   // 00000005C39A: 0000
	.long 0                                                    // 00000005C39C: 00000000
	.long 0xdb                                                 // 00000005C3A0: 000000DB
	.long 0                                                    // 00000005C3A4: 00000000
	.long 0x2                                                  // 00000005C3A8: 00000002
	.long 0                                                    // 00000005C3AC: 00000000
	.long 0xe4                                                 // 00000005C3B0: 000000E4
	.ascii "0"                                                 // 00000005C3B4: 30
	.byte 0                                                    // 00000005C3B5: 00
	.short 0                                                   // 00000005C3B6: 0000
	.long 0                                                    // 00000005C3B8: 00000000
	.ascii ";"                                                 // 00000005C3BC: 3B
	.byte 0x1                                                  // 00000005C3BD: 01
	.short 0                                                   // 00000005C3BE: 0000
	.ascii "P"                                                 // 00000005C3C0: 50
	.byte 0                                                    // 00000005C3C1: 00
	.short 0                                                   // 00000005C3C2: 0000
	.long 0                                                    // 00000005C3C4: 00000000
	.long 0                                                    // 00000005C3C8: 00000000
	.long 0                                                    // 00000005C3CC: 00000000
	.long 0                                                    // 00000005C3D0: 00000000
	.long 0xc5                                                 // 00000005C3D4: 000000C5
	.long 0                                                    // 00000005C3D8: 00000000
	.long 0                                                    // 00000005C3DC: 00000000
	.ascii "#"                                                 // 00000005C3E0: 23
	.byte 0x1                                                  // 00000005C3E1: 01
	.short 0                                                   // 00000005C3E2: 0000
	.long 0                                                    // 00000005C3E4: 00000000
	.ascii "4"                                                 // 00000005C3E8: 34
	.byte 0x1                                                  // 00000005C3E9: 01
	.short 0                                                   // 00000005C3EA: 0000
	.ascii "!"                                                 // 00000005C3EC: 21
	.byte 0                                                    // 00000005C3ED: 00
	.short 0                                                   // 00000005C3EE: 0000
	.long 0xae                                                 // 00000005C3F0: 000000AE
	.long 0                                                    // 00000005C3F4: 00000000
	.long 0                                                    // 00000005C3F8: 00000000
	.long 0                                                    // 00000005C3FC: 00000000
	.long 0                                                    // 00000005C400: 00000000
	.ascii "8"                                                 // 00000005C404: 38
	.byte 0                                                    // 00000005C405: 00
	.short 0                                                   // 00000005C406: 0000
	.long 0xf                                                  // 00000005C408: 0000000F
	.long 0xce                                                 // 00000005C40C: 000000CE
	.long 0xdd                                                 // 00000005C410: 000000DD
	.long 0                                                    // 00000005C414: 00000000
	.long 0x4                                                  // 00000005C418: 00000004
	.long 0                                                    // 00000005C41C: 00000000
	.ascii "B"                                                 // 00000005C420: 42
	.byte 0                                                    // 00000005C421: 00
	.short 0                                                   // 00000005C422: 0000
	.long 0                                                    // 00000005C424: 00000000
	.long 0                                                    // 00000005C428: 00000000
	.long 0xcb                                                 // 00000005C42C: 000000CB
	.ascii "b"                                                 // 00000005C430: 62
	.byte 0x1                                                  // 00000005C431: 01
	.short 0                                                   // 00000005C432: 0000
	.ascii "G"                                                 // 00000005C434: 47
	.byte 0                                                    // 00000005C435: 00
	.short 0                                                   // 00000005C436: 0000
	.long 0xd2                                                 // 00000005C438: 000000D2
	.long 0                                                    // 00000005C43C: 00000000
	.long 0                                                    // 00000005C440: 00000000
	.long 0                                                    // 00000005C444: 00000000
	.long 0                                                    // 00000005C448: 00000000
	.long 0xe5                                                 // 00000005C44C: 000000E5
	.ascii "&"                                                 // 00000005C450: 26
	.byte 0x1                                                  // 00000005C451: 01
	.short 0                                                   // 00000005C452: 0000
	.long 0                                                    // 00000005C454: 00000000
	.long 0                                                    // 00000005C458: 00000000
	.long 0x119                                                // 00000005C45C: 00000119
	.long 0x18d                                                // 00000005C460: 0000018D
	.long 0                                                    // 00000005C464: 00000000
	.long 0x186                                                // 00000005C468: 00000186
	.long 0                                                    // 00000005C46C: 00000000
	.long 0                                                    // 00000005C470: 00000000
	.ascii "z"                                                 // 00000005C474: 7A
	.byte 0                                                    // 00000005C475: 00
	.short 0                                                   // 00000005C476: 0000
	.ascii "S"                                                 // 00000005C478: 53
	.byte 0x1                                                  // 00000005C479: 01
	.short 0                                                   // 00000005C47A: 0000
	.long 0                                                    // 00000005C47C: 00000000
	.long 0x101                                                // 00000005C480: 00000101
	.ascii "V"                                                 // 00000005C484: 56
	.byte 0x1                                                  // 00000005C485: 01
	.short 0                                                   // 00000005C486: 0000
	.long 0x115                                                // 00000005C488: 00000115
	.long 0                                                    // 00000005C48C: 00000000
	.long 0x181                                                // 00000005C490: 00000181
	.ascii "`"                                                 // 00000005C494: 60
	.byte 0x1                                                  // 00000005C495: 01
	.short 0                                                   // 00000005C496: 0000
	.long 0                                                    // 00000005C498: 00000000
	.long 0                                                    // 00000005C49C: 00000000
	.long 0x191                                                // 00000005C4A0: 00000191
	.long 0x190                                                // 00000005C4A4: 00000190
	.ascii "-"                                                 // 00000005C4A8: 2D
	.byte 0x1                                                  // 00000005C4A9: 01
	.short 0                                                   // 00000005C4AA: 0000
	.ascii "a"                                                 // 00000005C4AC: 61
	.byte 0x1                                                  // 00000005C4AD: 01
	.short 0                                                   // 00000005C4AE: 0000
	.long 0                                                    // 00000005C4B0: 00000000
	.ascii "P"                                                 // 00000005C4B4: 50
	.byte 0x1                                                  // 00000005C4B5: 01
	.short 0                                                   // 00000005C4B6: 0000
	.ascii "l"                                                 // 00000005C4B8: 6C
	.byte 0x1                                                  // 00000005C4B9: 01
	.short 0                                                   // 00000005C4BA: 0000
	.long 0                                                    // 00000005C4BC: 00000000
	.long 0x8f                                                 // 00000005C4C0: 0000008F
	.long 0x94                                                 // 00000005C4C4: 00000094
	.ascii "j"                                                 // 00000005C4C8: 6A
	.byte 0x1                                                  // 00000005C4C9: 01
	.short 0                                                   // 00000005C4CA: 0000
	.long 0                                                    // 00000005C4CC: 00000000
	.long 0x1a2                                                // 00000005C4D0: 000001A2
	.long 0                                                    // 00000005C4D4: 00000000
	.long 0                                                    // 00000005C4D8: 00000000
	.long 0x1b4                                                // 00000005C4DC: 000001B4
	.ascii "|"                                                 // 00000005C4E0: 7C
	.byte 0                                                    // 00000005C4E1: 00
	.short 0                                                   // 00000005C4E2: 0000
	.long 0                                                    // 00000005C4E4: 00000000
	.long 0x18b                                                // 00000005C4E8: 0000018B
	.long 0                                                    // 00000005C4EC: 00000000
	.long 0x105                                                // 00000005C4F0: 00000105
	.ascii "\\"                                                // 00000005C4F4: 5C
	.byte 0x1                                                  // 00000005C4F5: 01
	.short 0                                                   // 00000005C4F6: 0000
	.long 0x1be                                                // 00000005C4F8: 000001BE
	.long 0                                                    // 00000005C4FC: 00000000
	.long 0                                                    // 00000005C500: 00000000
	.long 0                                                    // 00000005C504: 00000000
	.ascii "?"                                                 // 00000005C508: 3F
	.byte 0x1                                                  // 00000005C509: 01
	.short 0                                                   // 00000005C50A: 0000
	.ascii "v"                                                 // 00000005C50C: 76
	.byte 0x1                                                  // 00000005C50D: 01
	.short 0                                                   // 00000005C50E: 0000
	.long 0                                                    // 00000005C510: 00000000
	.ascii "Y"                                                 // 00000005C514: 59
	.byte 0x1                                                  // 00000005C515: 01
	.short 0                                                   // 00000005C516: 0000
	.ascii "$"                                                 // 00000005C518: 24
	.byte 0x1                                                  // 00000005C519: 01
	.short 0                                                   // 00000005C51A: 0000
	.long 0                                                    // 00000005C51C: 00000000
	.long 0xcf                                                 // 00000005C520: 000000CF
	.long 0x1b0                                                // 00000005C524: 000001B0
	.long 0                                                    // 00000005C528: 00000000
	.long 0                                                    // 00000005C52C: 00000000
	.long 0xfd                                                 // 00000005C530: 000000FD
	.long 0                                                    // 00000005C534: 00000000
	.ascii "m"                                                 // 00000005C538: 6D
	.byte 0x1                                                  // 00000005C539: 01
	.short 0                                                   // 00000005C53A: 0000
	.long 0x1ca                                                // 00000005C53C: 000001CA
	.long 0                                                    // 00000005C540: 00000000
	.ascii "["                                                 // 00000005C544: 5B
	.byte 0x1                                                  // 00000005C545: 01
	.short 0                                                   // 00000005C546: 0000
	.ascii "_"                                                 // 00000005C548: 5F
	.byte 0                                                    // 00000005C549: 00
	.short 0                                                   // 00000005C54A: 0000
	.ascii "r"                                                 // 00000005C54C: 72
	.byte 0x1                                                  // 00000005C54D: 01
	.short 0                                                   // 00000005C54E: 0000
	.long 0x99                                                 // 00000005C550: 00000099
	.ascii "~"                                                 // 00000005C554: 7E
	.byte 0                                                    // 00000005C555: 00
	.short 0                                                   // 00000005C556: 0000
	.long 0xc4                                                 // 00000005C558: 000000C4
	.long 0x1d3                                                // 00000005C55C: 000001D3
	.long 0                                                    // 00000005C560: 00000000
	.long 0                                                    // 00000005C564: 00000000
	.long 0xb8                                                 // 00000005C568: 000000B8
	.ascii "3"                                                 // 00000005C56C: 33
	.byte 0x1                                                  // 00000005C56D: 01
	.short 0                                                   // 00000005C56E: 0000
	.long 0                                                    // 00000005C570: 00000000
	.long 0                                                    // 00000005C574: 00000000
	.long 0                                                    // 00000005C578: 00000000
	.long 0                                                    // 00000005C57C: 00000000
	.long 0                                                    // 00000005C580: 00000000
	.long 0                                                    // 00000005C584: 00000000
	.long 0                                                    // 00000005C588: 00000000
	.long 0xf9                                                 // 00000005C58C: 000000F9
	.long 0                                                    // 00000005C590: 00000000
	.long 0xf5                                                 // 00000005C594: 000000F5
	.long 0                                                    // 00000005C598: 00000000
	.long 0x1cb                                                // 00000005C59C: 000001CB
	.long 0                                                    // 00000005C5A0: 00000000
	.long 0                                                    // 00000005C5A4: 00000000
	.long 0xaa                                                 // 00000005C5A8: 000000AA
	.long 0x1bd                                                // 00000005C5AC: 000001BD
	.long 0                                                    // 00000005C5B0: 00000000
	.ascii "u"                                                 // 00000005C5B4: 75
	.byte 0                                                    // 00000005C5B5: 00
	.short 0                                                   // 00000005C5B6: 0000
	.long 0                                                    // 00000005C5B8: 00000000
	.ascii "6"                                                 // 00000005C5BC: 36
	.byte 0x1                                                  // 00000005C5BD: 01
	.short 0                                                   // 00000005C5BE: 0000
	.long 0                                                    // 00000005C5C0: 00000000
	.long 0                                                    // 00000005C5C4: 00000000
	.long 0x87                                                 // 00000005C5C8: 00000087
	.long 0                                                    // 00000005C5CC: 00000000
	.long 0                                                    // 00000005C5D0: 00000000
	.long 0                                                    // 00000005C5D4: 00000000
	.long 0x82                                                 // 00000005C5D8: 00000082
	.long 0x1d0                                                // 00000005C5DC: 000001D0
	.ascii "^"                                                 // 00000005C5E0: 5E
	.byte 0x1                                                  // 00000005C5E1: 01
	.short 0                                                   // 00000005C5E2: 0000
	.long 0x88                                                 // 00000005C5E4: 00000088
	.long 0xb2                                                 // 00000005C5E8: 000000B2
	.long 0xfb                                                 // 00000005C5EC: 000000FB
	.ascii "E"                                                 // 00000005C5F0: 45
	.byte 0x1                                                  // 00000005C5F1: 01
	.short 0                                                   // 00000005C5F2: 0000
	.long 0                                                    // 00000005C5F4: 00000000
	.ascii "0"                                                 // 00000005C5F8: 30
	.byte 0x1                                                  // 00000005C5F9: 01
	.short 0                                                   // 00000005C5FA: 0000
	.ascii "i"                                                 // 00000005C5FC: 69
	.byte 0                                                    // 00000005C5FD: 00
	.short 0                                                   // 00000005C5FE: 0000
	.long 0                                                    // 00000005C600: 00000000
	.long 0xb3                                                 // 00000005C604: 000000B3
	.long 0                                                    // 00000005C608: 00000000
	.long 0x1d8                                                // 00000005C60C: 000001D8
	.long 0x1aa                                                // 00000005C610: 000001AA
	.ascii "X"                                                 // 00000005C614: 58
	.byte 0x1                                                  // 00000005C615: 01
	.short 0                                                   // 00000005C616: 0000
	.long 0                                                    // 00000005C618: 00000000
	.ascii "}"                                                 // 00000005C61C: 7D
	.byte 0                                                    // 00000005C61D: 00
	.short 0                                                   // 00000005C61E: 0000
	.ascii "@"                                                 // 00000005C620: 40
	.byte 0x1                                                  // 00000005C621: 01
	.short 0                                                   // 00000005C622: 0000
	.ascii "."                                                 // 00000005C624: 2E
	.byte 0x1                                                  // 00000005C625: 01
	.short 0                                                   // 00000005C626: 0000
	.long 0x195                                                // 00000005C628: 00000195
	.long 0xa1                                                 // 00000005C62C: 000000A1
	.long 0xf2                                                 // 00000005C630: 000000F2
	.ascii "F"                                                 // 00000005C634: 46
	.byte 0x1                                                  // 00000005C635: 01
	.short 0                                                   // 00000005C636: 0000
	.ascii "t"                                                 // 00000005C638: 74
	.byte 0x1                                                  // 00000005C639: 01
	.short 0                                                   // 00000005C63A: 0000
	.ascii "M"                                                 // 00000005C63C: 4D
	.byte 0                                                    // 00000005C63D: 00
	.short 0                                                   // 00000005C63E: 0000
	.long 0x1fe                                                // 00000005C640: 000001FE
	.long 0                                                    // 00000005C644: 00000000
	.ascii "w"                                                 // 00000005C648: 77
	.byte 0x1                                                  // 00000005C649: 01
	.short 0                                                   // 00000005C64A: 0000
	.long 0                                                    // 00000005C64C: 00000000
	.long 0                                                    // 00000005C650: 00000000
	.ascii "H"                                                 // 00000005C654: 48
	.byte 0x1                                                  // 00000005C655: 01
	.short 0                                                   // 00000005C656: 0000
	.long 0                                                    // 00000005C658: 00000000
	.ascii "%"                                                 // 00000005C65C: 25
	.byte 0                                                    // 00000005C65D: 00
	.short 0                                                   // 00000005C65E: 0000
	.long 0x20b                                                // 00000005C660: 0000020B
	.ascii "R"                                                 // 00000005C664: 52
	.byte 0                                                    // 00000005C665: 00
	.short 0                                                   // 00000005C666: 0000
	.long 0                                                    // 00000005C668: 00000000
	.long 0                                                    // 00000005C66C: 00000000
	.ascii "I"                                                 // 00000005C670: 49
	.byte 0x1                                                  // 00000005C671: 01
	.short 0                                                   // 00000005C672: 0000
	.long 0                                                    // 00000005C674: 00000000
	.long 0                                                    // 00000005C678: 00000000
	.long 0                                                    // 00000005C67C: 00000000
	.long 0                                                    // 00000005C680: 00000000
	.long 0                                                    // 00000005C684: 00000000
	.long 0x1d5                                                // 00000005C688: 000001D5
	.long 0x1f4                                                // 00000005C68C: 000001F4
	.long 0x111                                                // 00000005C690: 00000111
	.long 0xeb                                                 // 00000005C694: 000000EB
	.long 0                                                    // 00000005C698: 00000000
	.long 0                                                    // 00000005C69C: 00000000
	.long 0x108                                                // 00000005C6A0: 00000108
	.long 0x19c                                                // 00000005C6A4: 0000019C
	.long 0                                                    // 00000005C6A8: 00000000
	.long 0                                                    // 00000005C6AC: 00000000
	.long 0x1e9                                                // 00000005C6B0: 000001E9
	.long 0x1f2                                                // 00000005C6B4: 000001F2
	.long 0x1a8                                                // 00000005C6B8: 000001A8
	.long 0xab                                                 // 00000005C6BC: 000000AB
	.ascii "0"                                                 // 00000005C6C0: 30
	.byte 0x2                                                  // 00000005C6C1: 02
	.short 0                                                   // 00000005C6C2: 0000
	.long 0x219                                                // 00000005C6C4: 00000219
	.long 0x205                                                // 00000005C6C8: 00000205
	.ascii "N"                                                 // 00000005C6CC: 4E
	.byte 0                                                    // 00000005C6CD: 00
	.short 0                                                   // 00000005C6CE: 0000
	.ascii "7"                                                 // 00000005C6D0: 37
	.byte 0                                                    // 00000005C6D1: 00
	.short 0                                                   // 00000005C6D2: 0000
	.long 0x1a0                                                // 00000005C6D4: 000001A0
	.long 0x103                                                // 00000005C6D8: 00000103
	.long 0xe7                                                 // 00000005C6DC: 000000E7
	.long 0x1d6                                                // 00000005C6E0: 000001D6
	.long 0                                                    // 00000005C6E4: 00000000
	.long 0                                                    // 00000005C6E8: 00000000
	.long 0                                                    // 00000005C6EC: 00000000
	.ascii "U"                                                 // 00000005C6F0: 55
	.byte 0x1                                                  // 00000005C6F1: 01
	.short 0                                                   // 00000005C6F2: 0000
	.ascii "o"                                                 // 00000005C6F4: 6F
	.byte 0x1                                                  // 00000005C6F5: 01
	.short 0                                                   // 00000005C6F6: 0000
	.long 0                                                    // 00000005C6F8: 00000000
	.long 0x1b2                                                // 00000005C6FC: 000001B2
	.long 0x18e                                                // 00000005C700: 0000018E
	.long 0                                                    // 00000005C704: 00000000
	.ascii "="                                                 // 00000005C708: 3D
	.byte 0                                                    // 00000005C709: 00
	.short 0                                                   // 00000005C70A: 0000
	.long 0                                                    // 00000005C70C: 00000000
	.long 0x197                                                // 00000005C710: 00000197
	.long 0x20e                                                // 00000005C714: 0000020E
	.ascii "#"                                                 // 00000005C718: 23
	.byte 0x2                                                  // 00000005C719: 02
	.short 0                                                   // 00000005C71A: 0000
	.long 0                                                    // 00000005C71C: 00000000
	.long 0x1a3                                                // 00000005C720: 000001A3
	.long 0xc7                                                 // 00000005C724: 000000C7
	.long 0                                                    // 00000005C728: 00000000
	.long 0x97                                                 // 00000005C72C: 00000097
	.long 0x19d                                                // 00000005C730: 0000019D
	.long 0xf6                                                 // 00000005C734: 000000F6
	.long 0xd                                                  // 00000005C738: 0000000D
	.long 0x216                                                // 00000005C73C: 00000216
	.ascii "5"                                                 // 00000005C740: 35
	.byte 0                                                    // 00000005C741: 00
	.short 0                                                   // 00000005C742: 0000
	.long 0                                                    // 00000005C744: 00000000

	.section	.rodata,#alloc
	.type	add_x_x.kd,@object
add_x_x.kd:
	.long 0                                                    // 000000061500: 00000000
	.long 0                                                    // 000000061504: 00000000
	.long 0x110                                                // 000000061508: 00000110
	.long 0                                                    // 00000006150C: 00000000
	.long 0x5b00                                               // 000000061510: 00005B00
	.long 0                                                    // 000000061514: 00000000
	.long 0                                                    // 000000061518: 00000000
	.long 0                                                    // 00000006151C: 00000000
	.long 0                                                    // 000000061520: 00000000
	.long 0                                                    // 000000061524: 00000000
	.long 0                                                    // 000000061528: 00000000
	.long 0                                                    // 00000006152C: 00000000
	.long 0x60af0100                                           // 000000061530: 60AF0100
	.long 0x84                                                 // 000000061534: 00000084
	.long 0x408                                                // 000000061538: 00000408
	.long 0                                                    // 00000006153C: 00000000
	.type	add_get_global_offset_x.kd,@object
add_get_global_offset_x.kd:
	.long 0                                                    // 000000061540: 00000000
	.long 0                                                    // 000000061544: 00000000
	.long 0x110                                                // 000000061548: 00000110
	.long 0                                                    // 00000006154C: 00000000
	.long 0x5bc0                                               // 000000061550: 00005BC0
	.long 0                                                    // 000000061554: 00000000
	.long 0                                                    // 000000061558: 00000000
	.long 0                                                    // 00000006155C: 00000000
	.long 0                                                    // 000000061560: 00000000
	.long 0                                                    // 000000061564: 00000000
	.long 0                                                    // 000000061568: 00000000
	.long 0                                                    // 00000006156C: 00000000
	.long 0x60af0101                                           // 000000061570: 60AF0101
	.long 0x1384                                               // 000000061574: 00001384
	.long 0x408                                                // 000000061578: 00000408
	.long 0                                                    // 00000006157C: 00000000
	.type	add_get_local_id_x.kd,@object
add_get_local_id_x.kd:
	.long 0                                                    // 000000061580: 00000000
	.long 0                                                    // 000000061584: 00000000
	.long 0x110                                                // 000000061588: 00000110
	.long 0                                                    // 00000006158C: 00000000
	.long 0x5d80                                               // 000000061590: 00005D80
	.long 0                                                    // 000000061594: 00000000
	.long 0                                                    // 000000061598: 00000000
	.long 0                                                    // 00000006159C: 00000000
	.long 0                                                    // 0000000615A0: 00000000
	.long 0                                                    // 0000000615A4: 00000000
	.long 0                                                    // 0000000615A8: 00000000
	.long 0                                                    // 0000000615AC: 00000000
	.long 0x60af0101                                           // 0000000615B0: 60AF0101
	.long 0x1384                                               // 0000000615B4: 00001384
	.long 0x408                                                // 0000000615B8: 00000408
	.long 0                                                    // 0000000615BC: 00000000
	.type	add_get_group_id_x.kd,@object
add_get_group_id_x.kd:
	.long 0                                                    // 0000000615C0: 00000000
	.long 0                                                    // 0000000615C4: 00000000
	.long 0x110                                                // 0000000615C8: 00000110
	.long 0                                                    // 0000000615CC: 00000000
	.ascii "@_"                                                // 0000000615D0: 5F40
	.short 0                                                   // 0000000615D2: 0000
	.long 0                                                    // 0000000615D4: 00000000
	.long 0                                                    // 0000000615D8: 00000000
	.long 0                                                    // 0000000615DC: 00000000
	.long 0                                                    // 0000000615E0: 00000000
	.long 0                                                    // 0000000615E4: 00000000
	.long 0                                                    // 0000000615E8: 00000000
	.long 0                                                    // 0000000615EC: 00000000
	.long 0x60af0101                                           // 0000000615F0: 60AF0101
	.long 0x1384                                               // 0000000615F4: 00001384
	.long 0x408                                                // 0000000615F8: 00000408
	.long 0                                                    // 0000000615FC: 00000000
	.type	add_get_local_size_x.kd,@object
add_get_local_size_x.kd:
	.long 0                                                    // 000000061600: 00000000
	.long 0                                                    // 000000061604: 00000000
	.long 0x110                                                // 000000061608: 00000110
	.long 0                                                    // 00000006160C: 00000000
	.long 0x6100                                               // 000000061610: 00006100
	.long 0                                                    // 000000061614: 00000000
	.long 0                                                    // 000000061618: 00000000
	.long 0                                                    // 00000006161C: 00000000
	.long 0                                                    // 000000061620: 00000000
	.long 0                                                    // 000000061624: 00000000
	.long 0                                                    // 000000061628: 00000000
	.long 0                                                    // 00000006162C: 00000000
	.long 0x60af0100                                           // 000000061630: 60AF0100
	.long 0x1384                                               // 000000061634: 00001384
	.long 0x408                                                // 000000061638: 00000408
	.long 0                                                    // 00000006163C: 00000000
	.type	add_get_global_id_x.kd,@object
add_get_global_id_x.kd:
	.long 0                                                    // 000000061640: 00000000
	.long 0                                                    // 000000061644: 00000000
	.long 0x110                                                // 000000061648: 00000110
	.long 0                                                    // 00000006164C: 00000000
	.long 0x62c0                                               // 000000061650: 000062C0
	.long 0                                                    // 000000061654: 00000000
	.long 0                                                    // 000000061658: 00000000
	.long 0                                                    // 00000006165C: 00000000
	.long 0                                                    // 000000061660: 00000000
	.long 0                                                    // 000000061664: 00000000
	.long 0                                                    // 000000061668: 00000000
	.long 0                                                    // 00000006166C: 00000000
	.long 0x60af0101                                           // 000000061670: 60AF0101
	.long 0x1384                                               // 000000061674: 00001384
	.long 0x408                                                // 000000061678: 00000408
	.long 0                                                    // 00000006167C: 00000000
	.type	add_get_global_size_x.kd,@object
add_get_global_size_x.kd:
	.long 0                                                    // 000000061680: 00000000
	.long 0                                                    // 000000061684: 00000000
	.long 0x110                                                // 000000061688: 00000110
	.long 0                                                    // 00000006168C: 00000000
	.long 0x6480                                               // 000000061690: 00006480
	.long 0                                                    // 000000061694: 00000000
	.long 0                                                    // 000000061698: 00000000
	.long 0                                                    // 00000006169C: 00000000
	.long 0                                                    // 0000000616A0: 00000000
	.long 0                                                    // 0000000616A4: 00000000
	.long 0                                                    // 0000000616A8: 00000000
	.long 0                                                    // 0000000616AC: 00000000
	.long 0x60af0101                                           // 0000000616B0: 60AF0101
	.long 0x1384                                               // 0000000616B4: 00001384
	.long 0x408                                                // 0000000616B8: 00000408
	.long 0                                                    // 0000000616BC: 00000000
	.type	add_get_num_groups_x.kd,@object
add_get_num_groups_x.kd:
	.long 0                                                    // 0000000616C0: 00000000
	.long 0                                                    // 0000000616C4: 00000000
	.long 0x110                                                // 0000000616C8: 00000110
	.long 0                                                    // 0000000616CC: 00000000
	.ascii "@f"                                                // 0000000616D0: 6640
	.short 0                                                   // 0000000616D2: 0000
	.long 0                                                    // 0000000616D4: 00000000
	.long 0                                                    // 0000000616D8: 00000000
	.long 0                                                    // 0000000616DC: 00000000
	.long 0                                                    // 0000000616E0: 00000000
	.long 0                                                    // 0000000616E4: 00000000
	.long 0                                                    // 0000000616E8: 00000000
	.long 0                                                    // 0000000616EC: 00000000
	.long 0x60af0101                                           // 0000000616F0: 60AF0101
	.long 0x1384                                               // 0000000616F4: 00001384
	.long 0x408                                                // 0000000616F8: 00000408
	.long 0                                                    // 0000000616FC: 00000000
	.type	add_get_work_dim_x.kd,@object
add_get_work_dim_x.kd:
	.long 0                                                    // 000000061700: 00000000
	.long 0                                                    // 000000061704: 00000000
	.long 0x110                                                // 000000061708: 00000110
	.long 0                                                    // 00000006170C: 00000000
	.long 0x6800                                               // 000000061710: 00006800
	.long 0                                                    // 000000061714: 00000000
	.long 0                                                    // 000000061718: 00000000
	.long 0                                                    // 00000006171C: 00000000
	.long 0                                                    // 000000061720: 00000000
	.long 0                                                    // 000000061724: 00000000
	.long 0                                                    // 000000061728: 00000000
	.long 0                                                    // 00000006172C: 00000000
	.long 0x60af0100                                           // 000000061730: 60AF0100
	.long 0x84                                                 // 000000061734: 00000084
	.long 0x408                                                // 000000061738: 00000408
	.long 0                                                    // 00000006173C: 00000000
	.type	add_x_get_global_offset.kd,@object
add_x_get_global_offset.kd:
	.long 0                                                    // 000000061740: 00000000
	.long 0                                                    // 000000061744: 00000000
	.long 0x110                                                // 000000061748: 00000110
	.long 0                                                    // 00000006174C: 00000000
	.long 0x68c0                                               // 000000061750: 000068C0
	.long 0                                                    // 000000061754: 00000000
	.long 0                                                    // 000000061758: 00000000
	.long 0                                                    // 00000006175C: 00000000
	.long 0                                                    // 000000061760: 00000000
	.long 0                                                    // 000000061764: 00000000
	.long 0                                                    // 000000061768: 00000000
	.long 0                                                    // 00000006176C: 00000000
	.long 0x60af0101                                           // 000000061770: 60AF0101
	.long 0x1384                                               // 000000061774: 00001384
	.long 0x408                                                // 000000061778: 00000408
	.long 0                                                    // 00000006177C: 00000000
	.type	add_get_global_offset_get_global_offset.kd,@object
add_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 000000061780: 00000000
	.long 0                                                    // 000000061784: 00000000
	.long 0x110                                                // 000000061788: 00000110
	.long 0                                                    // 00000006178C: 00000000
	.long 0x6a80                                               // 000000061790: 00006A80
	.long 0                                                    // 000000061794: 00000000
	.long 0                                                    // 000000061798: 00000000
	.long 0                                                    // 00000006179C: 00000000
	.long 0                                                    // 0000000617A0: 00000000
	.long 0                                                    // 0000000617A4: 00000000
	.long 0                                                    // 0000000617A8: 00000000
	.long 0                                                    // 0000000617AC: 00000000
	.long 0x60af0101                                           // 0000000617B0: 60AF0101
	.long 0x1384                                               // 0000000617B4: 00001384
	.long 0x408                                                // 0000000617B8: 00000408
	.long 0                                                    // 0000000617BC: 00000000
	.type	add_get_local_id_get_global_offset.kd,@object
add_get_local_id_get_global_offset.kd:
	.long 0                                                    // 0000000617C0: 00000000
	.long 0                                                    // 0000000617C4: 00000000
	.long 0x110                                                // 0000000617C8: 00000110
	.long 0                                                    // 0000000617CC: 00000000
	.ascii "@l"                                                // 0000000617D0: 6C40
	.short 0                                                   // 0000000617D2: 0000
	.long 0                                                    // 0000000617D4: 00000000
	.long 0                                                    // 0000000617D8: 00000000
	.long 0                                                    // 0000000617DC: 00000000
	.long 0                                                    // 0000000617E0: 00000000
	.long 0                                                    // 0000000617E4: 00000000
	.long 0                                                    // 0000000617E8: 00000000
	.long 0                                                    // 0000000617EC: 00000000
	.long 0x60af0101                                           // 0000000617F0: 60AF0101
	.long 0x1384                                               // 0000000617F4: 00001384
	.long 0x408                                                // 0000000617F8: 00000408
	.long 0                                                    // 0000000617FC: 00000000
	.type	add_get_group_id_get_global_offset.kd,@object
add_get_group_id_get_global_offset.kd:
	.long 0                                                    // 000000061800: 00000000
	.long 0                                                    // 000000061804: 00000000
	.long 0x110                                                // 000000061808: 00000110
	.long 0                                                    // 00000006180C: 00000000
	.long 0x6e00                                               // 000000061810: 00006E00
	.long 0                                                    // 000000061814: 00000000
	.long 0                                                    // 000000061818: 00000000
	.long 0                                                    // 00000006181C: 00000000
	.long 0                                                    // 000000061820: 00000000
	.long 0                                                    // 000000061824: 00000000
	.long 0                                                    // 000000061828: 00000000
	.long 0                                                    // 00000006182C: 00000000
	.long 0x60af0101                                           // 000000061830: 60AF0101
	.long 0x1384                                               // 000000061834: 00001384
	.long 0x408                                                // 000000061838: 00000408
	.long 0                                                    // 00000006183C: 00000000
	.type	add_get_local_size_get_global_offset.kd,@object
add_get_local_size_get_global_offset.kd:
	.long 0                                                    // 000000061840: 00000000
	.long 0                                                    // 000000061844: 00000000
	.long 0x110                                                // 000000061848: 00000110
	.long 0                                                    // 00000006184C: 00000000
	.long 0x6fc0                                               // 000000061850: 00006FC0
	.long 0                                                    // 000000061854: 00000000
	.long 0                                                    // 000000061858: 00000000
	.long 0                                                    // 00000006185C: 00000000
	.long 0                                                    // 000000061860: 00000000
	.long 0                                                    // 000000061864: 00000000
	.long 0                                                    // 000000061868: 00000000
	.long 0                                                    // 00000006186C: 00000000
	.long 0x60af0101                                           // 000000061870: 60AF0101
	.long 0x1384                                               // 000000061874: 00001384
	.long 0x408                                                // 000000061878: 00000408
	.long 0                                                    // 00000006187C: 00000000
	.type	add_get_global_id_get_global_offset.kd,@object
add_get_global_id_get_global_offset.kd:
	.long 0                                                    // 000000061880: 00000000
	.long 0                                                    // 000000061884: 00000000
	.long 0x110                                                // 000000061888: 00000110
	.long 0                                                    // 00000006188C: 00000000
	.long 0x7180                                               // 000000061890: 00007180
	.long 0                                                    // 000000061894: 00000000
	.long 0                                                    // 000000061898: 00000000
	.long 0                                                    // 00000006189C: 00000000
	.long 0                                                    // 0000000618A0: 00000000
	.long 0                                                    // 0000000618A4: 00000000
	.long 0                                                    // 0000000618A8: 00000000
	.long 0                                                    // 0000000618AC: 00000000
	.long 0x60af0101                                           // 0000000618B0: 60AF0101
	.long 0x1384                                               // 0000000618B4: 00001384
	.long 0x408                                                // 0000000618B8: 00000408
	.long 0                                                    // 0000000618BC: 00000000
	.type	add_get_global_size_get_global_offset.kd,@object
add_get_global_size_get_global_offset.kd:
	.long 0                                                    // 0000000618C0: 00000000
	.long 0                                                    // 0000000618C4: 00000000
	.long 0x110                                                // 0000000618C8: 00000110
	.long 0                                                    // 0000000618CC: 00000000
	.ascii "@r"                                                // 0000000618D0: 7240
	.short 0                                                   // 0000000618D2: 0000
	.long 0                                                    // 0000000618D4: 00000000
	.long 0                                                    // 0000000618D8: 00000000
	.long 0                                                    // 0000000618DC: 00000000
	.long 0                                                    // 0000000618E0: 00000000
	.long 0                                                    // 0000000618E4: 00000000
	.long 0                                                    // 0000000618E8: 00000000
	.long 0                                                    // 0000000618EC: 00000000
	.long 0x60af0101                                           // 0000000618F0: 60AF0101
	.long 0x1384                                               // 0000000618F4: 00001384
	.long 0x408                                                // 0000000618F8: 00000408
	.long 0                                                    // 0000000618FC: 00000000
	.type	add_get_num_groups_get_global_offset.kd,@object
add_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 000000061900: 00000000
	.long 0                                                    // 000000061904: 00000000
	.long 0x110                                                // 000000061908: 00000110
	.long 0                                                    // 00000006190C: 00000000
	.long 0x7400                                               // 000000061910: 00007400
	.long 0                                                    // 000000061914: 00000000
	.long 0                                                    // 000000061918: 00000000
	.long 0                                                    // 00000006191C: 00000000
	.long 0                                                    // 000000061920: 00000000
	.long 0                                                    // 000000061924: 00000000
	.long 0                                                    // 000000061928: 00000000
	.long 0                                                    // 00000006192C: 00000000
	.long 0x60af0101                                           // 000000061930: 60AF0101
	.long 0x1384                                               // 000000061934: 00001384
	.long 0x408                                                // 000000061938: 00000408
	.long 0                                                    // 00000006193C: 00000000
	.type	add_get_work_dim_get_global_offset.kd,@object
add_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 000000061940: 00000000
	.long 0                                                    // 000000061944: 00000000
	.long 0x110                                                // 000000061948: 00000110
	.long 0                                                    // 00000006194C: 00000000
	.long 0x75c0                                               // 000000061950: 000075C0
	.long 0                                                    // 000000061954: 00000000
	.long 0                                                    // 000000061958: 00000000
	.long 0                                                    // 00000006195C: 00000000
	.long 0                                                    // 000000061960: 00000000
	.long 0                                                    // 000000061964: 00000000
	.long 0                                                    // 000000061968: 00000000
	.long 0                                                    // 00000006196C: 00000000
	.long 0x60af0101                                           // 000000061970: 60AF0101
	.long 0x1384                                               // 000000061974: 00001384
	.long 0x408                                                // 000000061978: 00000408
	.long 0                                                    // 00000006197C: 00000000
	.type	add_x_get_local_id.kd,@object
add_x_get_local_id.kd:
	.long 0                                                    // 000000061980: 00000000
	.long 0                                                    // 000000061984: 00000000
	.long 0x110                                                // 000000061988: 00000110
	.long 0                                                    // 00000006198C: 00000000
	.long 0x7780                                               // 000000061990: 00007780
	.long 0                                                    // 000000061994: 00000000
	.long 0                                                    // 000000061998: 00000000
	.long 0                                                    // 00000006199C: 00000000
	.long 0                                                    // 0000000619A0: 00000000
	.long 0                                                    // 0000000619A4: 00000000
	.long 0                                                    // 0000000619A8: 00000000
	.long 0                                                    // 0000000619AC: 00000000
	.long 0x60af0101                                           // 0000000619B0: 60AF0101
	.long 0x1384                                               // 0000000619B4: 00001384
	.long 0x408                                                // 0000000619B8: 00000408
	.long 0                                                    // 0000000619BC: 00000000
	.type	add_get_global_offset_get_local_id.kd,@object
add_get_global_offset_get_local_id.kd:
	.long 0                                                    // 0000000619C0: 00000000
	.long 0                                                    // 0000000619C4: 00000000
	.long 0x110                                                // 0000000619C8: 00000110
	.long 0                                                    // 0000000619CC: 00000000
	.ascii "@y"                                                // 0000000619D0: 7940
	.short 0                                                   // 0000000619D2: 0000
	.long 0                                                    // 0000000619D4: 00000000
	.long 0                                                    // 0000000619D8: 00000000
	.long 0                                                    // 0000000619DC: 00000000
	.long 0                                                    // 0000000619E0: 00000000
	.long 0                                                    // 0000000619E4: 00000000
	.long 0                                                    // 0000000619E8: 00000000
	.long 0                                                    // 0000000619EC: 00000000
	.long 0x60af0101                                           // 0000000619F0: 60AF0101
	.long 0x1384                                               // 0000000619F4: 00001384
	.long 0x408                                                // 0000000619F8: 00000408
	.long 0                                                    // 0000000619FC: 00000000
	.type	add_get_local_id_get_local_id.kd,@object
add_get_local_id_get_local_id.kd:
	.long 0                                                    // 000000061A00: 00000000
	.long 0                                                    // 000000061A04: 00000000
	.long 0x110                                                // 000000061A08: 00000110
	.long 0                                                    // 000000061A0C: 00000000
	.long 0x7b00                                               // 000000061A10: 00007B00
	.long 0                                                    // 000000061A14: 00000000
	.long 0                                                    // 000000061A18: 00000000
	.long 0                                                    // 000000061A1C: 00000000
	.long 0                                                    // 000000061A20: 00000000
	.long 0                                                    // 000000061A24: 00000000
	.long 0                                                    // 000000061A28: 00000000
	.long 0                                                    // 000000061A2C: 00000000
	.long 0x60af0101                                           // 000000061A30: 60AF0101
	.long 0x1384                                               // 000000061A34: 00001384
	.long 0x408                                                // 000000061A38: 00000408
	.long 0                                                    // 000000061A3C: 00000000
	.type	add_get_group_id_get_local_id.kd,@object
add_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000061A40: 00000000
	.long 0                                                    // 000000061A44: 00000000
	.long 0x110                                                // 000000061A48: 00000110
	.long 0                                                    // 000000061A4C: 00000000
	.long 0x7cc0                                               // 000000061A50: 00007CC0
	.long 0                                                    // 000000061A54: 00000000
	.long 0                                                    // 000000061A58: 00000000
	.long 0                                                    // 000000061A5C: 00000000
	.long 0                                                    // 000000061A60: 00000000
	.long 0                                                    // 000000061A64: 00000000
	.long 0                                                    // 000000061A68: 00000000
	.long 0                                                    // 000000061A6C: 00000000
	.long 0x60af0101                                           // 000000061A70: 60AF0101
	.long 0x1384                                               // 000000061A74: 00001384
	.long 0x408                                                // 000000061A78: 00000408
	.long 0                                                    // 000000061A7C: 00000000
	.type	add_get_local_size_get_local_id.kd,@object
add_get_local_size_get_local_id.kd:
	.long 0                                                    // 000000061A80: 00000000
	.long 0                                                    // 000000061A84: 00000000
	.long 0x110                                                // 000000061A88: 00000110
	.long 0                                                    // 000000061A8C: 00000000
	.long 0x7e80                                               // 000000061A90: 00007E80
	.long 0                                                    // 000000061A94: 00000000
	.long 0                                                    // 000000061A98: 00000000
	.long 0                                                    // 000000061A9C: 00000000
	.long 0                                                    // 000000061AA0: 00000000
	.long 0                                                    // 000000061AA4: 00000000
	.long 0                                                    // 000000061AA8: 00000000
	.long 0                                                    // 000000061AAC: 00000000
	.long 0x60af0101                                           // 000000061AB0: 60AF0101
	.long 0x1384                                               // 000000061AB4: 00001384
	.long 0x408                                                // 000000061AB8: 00000408
	.long 0                                                    // 000000061ABC: 00000000
	.type	add_get_global_id_get_local_id.kd,@object
add_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000061AC0: 00000000
	.long 0                                                    // 000000061AC4: 00000000
	.long 0x110                                                // 000000061AC8: 00000110
	.long 0                                                    // 000000061ACC: 00000000
	.ascii "@"                                                 // 000000061AD0: 40
	.byte 0x80                                                 // 000000061AD1: 80
	.short 0                                                   // 000000061AD2: 0000
	.long 0                                                    // 000000061AD4: 00000000
	.long 0                                                    // 000000061AD8: 00000000
	.long 0                                                    // 000000061ADC: 00000000
	.long 0                                                    // 000000061AE0: 00000000
	.long 0                                                    // 000000061AE4: 00000000
	.long 0                                                    // 000000061AE8: 00000000
	.long 0                                                    // 000000061AEC: 00000000
	.long 0x60af0101                                           // 000000061AF0: 60AF0101
	.long 0x1384                                               // 000000061AF4: 00001384
	.long 0x408                                                // 000000061AF8: 00000408
	.long 0                                                    // 000000061AFC: 00000000
	.type	add_get_global_size_get_local_id.kd,@object
add_get_global_size_get_local_id.kd:
	.long 0                                                    // 000000061B00: 00000000
	.long 0                                                    // 000000061B04: 00000000
	.long 0x110                                                // 000000061B08: 00000110
	.long 0                                                    // 000000061B0C: 00000000
	.long 0x8100                                               // 000000061B10: 00008100
	.long 0                                                    // 000000061B14: 00000000
	.long 0                                                    // 000000061B18: 00000000
	.long 0                                                    // 000000061B1C: 00000000
	.long 0                                                    // 000000061B20: 00000000
	.long 0                                                    // 000000061B24: 00000000
	.long 0                                                    // 000000061B28: 00000000
	.long 0                                                    // 000000061B2C: 00000000
	.long 0x60af0101                                           // 000000061B30: 60AF0101
	.long 0x1384                                               // 000000061B34: 00001384
	.long 0x408                                                // 000000061B38: 00000408
	.long 0                                                    // 000000061B3C: 00000000
	.type	add_get_num_groups_get_local_id.kd,@object
add_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000061B40: 00000000
	.long 0                                                    // 000000061B44: 00000000
	.long 0x110                                                // 000000061B48: 00000110
	.long 0                                                    // 000000061B4C: 00000000
	.long 0x82c0                                               // 000000061B50: 000082C0
	.long 0                                                    // 000000061B54: 00000000
	.long 0                                                    // 000000061B58: 00000000
	.long 0                                                    // 000000061B5C: 00000000
	.long 0                                                    // 000000061B60: 00000000
	.long 0                                                    // 000000061B64: 00000000
	.long 0                                                    // 000000061B68: 00000000
	.long 0                                                    // 000000061B6C: 00000000
	.long 0x60af0101                                           // 000000061B70: 60AF0101
	.long 0x1384                                               // 000000061B74: 00001384
	.long 0x408                                                // 000000061B78: 00000408
	.long 0                                                    // 000000061B7C: 00000000
	.type	add_get_work_dim_get_local_id.kd,@object
add_get_work_dim_get_local_id.kd:
	.long 0                                                    // 000000061B80: 00000000
	.long 0                                                    // 000000061B84: 00000000
	.long 0x110                                                // 000000061B88: 00000110
	.long 0                                                    // 000000061B8C: 00000000
	.long 0x8480                                               // 000000061B90: 00008480
	.long 0                                                    // 000000061B94: 00000000
	.long 0                                                    // 000000061B98: 00000000
	.long 0                                                    // 000000061B9C: 00000000
	.long 0                                                    // 000000061BA0: 00000000
	.long 0                                                    // 000000061BA4: 00000000
	.long 0                                                    // 000000061BA8: 00000000
	.long 0                                                    // 000000061BAC: 00000000
	.long 0x60af0101                                           // 000000061BB0: 60AF0101
	.long 0x1384                                               // 000000061BB4: 00001384
	.long 0x408                                                // 000000061BB8: 00000408
	.long 0                                                    // 000000061BBC: 00000000
	.type	add_x_get_group_id.kd,@object
add_x_get_group_id.kd:
	.long 0                                                    // 000000061BC0: 00000000
	.long 0                                                    // 000000061BC4: 00000000
	.long 0x110                                                // 000000061BC8: 00000110
	.long 0                                                    // 000000061BCC: 00000000
	.ascii "@"                                                 // 000000061BD0: 40
	.byte 0x86                                                 // 000000061BD1: 86
	.short 0                                                   // 000000061BD2: 0000
	.long 0                                                    // 000000061BD4: 00000000
	.long 0                                                    // 000000061BD8: 00000000
	.long 0                                                    // 000000061BDC: 00000000
	.long 0                                                    // 000000061BE0: 00000000
	.long 0                                                    // 000000061BE4: 00000000
	.long 0                                                    // 000000061BE8: 00000000
	.long 0                                                    // 000000061BEC: 00000000
	.long 0x60af0101                                           // 000000061BF0: 60AF0101
	.long 0x1384                                               // 000000061BF4: 00001384
	.long 0x408                                                // 000000061BF8: 00000408
	.long 0                                                    // 000000061BFC: 00000000
	.type	add_get_global_offset_get_group_id.kd,@object
add_get_global_offset_get_group_id.kd:
	.long 0                                                    // 000000061C00: 00000000
	.long 0                                                    // 000000061C04: 00000000
	.long 0x110                                                // 000000061C08: 00000110
	.long 0                                                    // 000000061C0C: 00000000
	.long 0x8800                                               // 000000061C10: 00008800
	.long 0                                                    // 000000061C14: 00000000
	.long 0                                                    // 000000061C18: 00000000
	.long 0                                                    // 000000061C1C: 00000000
	.long 0                                                    // 000000061C20: 00000000
	.long 0                                                    // 000000061C24: 00000000
	.long 0                                                    // 000000061C28: 00000000
	.long 0                                                    // 000000061C2C: 00000000
	.long 0x60af0101                                           // 000000061C30: 60AF0101
	.long 0x1384                                               // 000000061C34: 00001384
	.long 0x408                                                // 000000061C38: 00000408
	.long 0                                                    // 000000061C3C: 00000000
	.type	add_get_local_id_get_group_id.kd,@object
add_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000061C40: 00000000
	.long 0                                                    // 000000061C44: 00000000
	.long 0x110                                                // 000000061C48: 00000110
	.long 0                                                    // 000000061C4C: 00000000
	.long 0x89c0                                               // 000000061C50: 000089C0
	.long 0                                                    // 000000061C54: 00000000
	.long 0                                                    // 000000061C58: 00000000
	.long 0                                                    // 000000061C5C: 00000000
	.long 0                                                    // 000000061C60: 00000000
	.long 0                                                    // 000000061C64: 00000000
	.long 0                                                    // 000000061C68: 00000000
	.long 0                                                    // 000000061C6C: 00000000
	.long 0x60af0101                                           // 000000061C70: 60AF0101
	.long 0x1384                                               // 000000061C74: 00001384
	.long 0x408                                                // 000000061C78: 00000408
	.long 0                                                    // 000000061C7C: 00000000
	.type	add_get_group_id_get_group_id.kd,@object
add_get_group_id_get_group_id.kd:
	.long 0                                                    // 000000061C80: 00000000
	.long 0                                                    // 000000061C84: 00000000
	.long 0x110                                                // 000000061C88: 00000110
	.long 0                                                    // 000000061C8C: 00000000
	.long 0x8b80                                               // 000000061C90: 00008B80
	.long 0                                                    // 000000061C94: 00000000
	.long 0                                                    // 000000061C98: 00000000
	.long 0                                                    // 000000061C9C: 00000000
	.long 0                                                    // 000000061CA0: 00000000
	.long 0                                                    // 000000061CA4: 00000000
	.long 0                                                    // 000000061CA8: 00000000
	.long 0                                                    // 000000061CAC: 00000000
	.long 0x60af0101                                           // 000000061CB0: 60AF0101
	.long 0x1384                                               // 000000061CB4: 00001384
	.long 0x408                                                // 000000061CB8: 00000408
	.long 0                                                    // 000000061CBC: 00000000
	.type	add_get_local_size_get_group_id.kd,@object
add_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000061CC0: 00000000
	.long 0                                                    // 000000061CC4: 00000000
	.long 0x110                                                // 000000061CC8: 00000110
	.long 0                                                    // 000000061CCC: 00000000
	.ascii "@"                                                 // 000000061CD0: 40
	.byte 0x8d                                                 // 000000061CD1: 8D
	.short 0                                                   // 000000061CD2: 0000
	.long 0                                                    // 000000061CD4: 00000000
	.long 0                                                    // 000000061CD8: 00000000
	.long 0                                                    // 000000061CDC: 00000000
	.long 0                                                    // 000000061CE0: 00000000
	.long 0                                                    // 000000061CE4: 00000000
	.long 0                                                    // 000000061CE8: 00000000
	.long 0                                                    // 000000061CEC: 00000000
	.long 0x60af0101                                           // 000000061CF0: 60AF0101
	.long 0x1384                                               // 000000061CF4: 00001384
	.long 0x408                                                // 000000061CF8: 00000408
	.long 0                                                    // 000000061CFC: 00000000
	.type	add_get_global_id_get_group_id.kd,@object
add_get_global_id_get_group_id.kd:
	.long 0                                                    // 000000061D00: 00000000
	.long 0                                                    // 000000061D04: 00000000
	.long 0x110                                                // 000000061D08: 00000110
	.long 0                                                    // 000000061D0C: 00000000
	.long 0x8f00                                               // 000000061D10: 00008F00
	.long 0                                                    // 000000061D14: 00000000
	.long 0                                                    // 000000061D18: 00000000
	.long 0                                                    // 000000061D1C: 00000000
	.long 0                                                    // 000000061D20: 00000000
	.long 0                                                    // 000000061D24: 00000000
	.long 0                                                    // 000000061D28: 00000000
	.long 0                                                    // 000000061D2C: 00000000
	.long 0x60af0101                                           // 000000061D30: 60AF0101
	.long 0x1384                                               // 000000061D34: 00001384
	.long 0x408                                                // 000000061D38: 00000408
	.long 0                                                    // 000000061D3C: 00000000
	.type	add_get_global_size_get_group_id.kd,@object
add_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000061D40: 00000000
	.long 0                                                    // 000000061D44: 00000000
	.long 0x110                                                // 000000061D48: 00000110
	.long 0                                                    // 000000061D4C: 00000000
	.long 0x8fc0                                               // 000000061D50: 00008FC0
	.long 0                                                    // 000000061D54: 00000000
	.long 0                                                    // 000000061D58: 00000000
	.long 0                                                    // 000000061D5C: 00000000
	.long 0                                                    // 000000061D60: 00000000
	.long 0                                                    // 000000061D64: 00000000
	.long 0                                                    // 000000061D68: 00000000
	.long 0                                                    // 000000061D6C: 00000000
	.long 0x60af0101                                           // 000000061D70: 60AF0101
	.long 0x1384                                               // 000000061D74: 00001384
	.long 0x408                                                // 000000061D78: 00000408
	.long 0                                                    // 000000061D7C: 00000000
	.type	add_get_num_groups_get_group_id.kd,@object
add_get_num_groups_get_group_id.kd:
	.long 0                                                    // 000000061D80: 00000000
	.long 0                                                    // 000000061D84: 00000000
	.long 0x110                                                // 000000061D88: 00000110
	.long 0                                                    // 000000061D8C: 00000000
	.long 0x9180                                               // 000000061D90: 00009180
	.long 0                                                    // 000000061D94: 00000000
	.long 0                                                    // 000000061D98: 00000000
	.long 0                                                    // 000000061D9C: 00000000
	.long 0                                                    // 000000061DA0: 00000000
	.long 0                                                    // 000000061DA4: 00000000
	.long 0                                                    // 000000061DA8: 00000000
	.long 0                                                    // 000000061DAC: 00000000
	.long 0x60af0101                                           // 000000061DB0: 60AF0101
	.long 0x1384                                               // 000000061DB4: 00001384
	.long 0x408                                                // 000000061DB8: 00000408
	.long 0                                                    // 000000061DBC: 00000000
	.type	add_get_work_dim_get_group_id.kd,@object
add_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000061DC0: 00000000
	.long 0                                                    // 000000061DC4: 00000000
	.long 0x110                                                // 000000061DC8: 00000110
	.long 0                                                    // 000000061DCC: 00000000
	.ascii "@"                                                 // 000000061DD0: 40
	.byte 0x93                                                 // 000000061DD1: 93
	.short 0                                                   // 000000061DD2: 0000
	.long 0                                                    // 000000061DD4: 00000000
	.long 0                                                    // 000000061DD8: 00000000
	.long 0                                                    // 000000061DDC: 00000000
	.long 0                                                    // 000000061DE0: 00000000
	.long 0                                                    // 000000061DE4: 00000000
	.long 0                                                    // 000000061DE8: 00000000
	.long 0                                                    // 000000061DEC: 00000000
	.long 0x60af0101                                           // 000000061DF0: 60AF0101
	.long 0x1384                                               // 000000061DF4: 00001384
	.long 0x408                                                // 000000061DF8: 00000408
	.long 0                                                    // 000000061DFC: 00000000
	.type	add_x_get_local_size.kd,@object
add_x_get_local_size.kd:
	.long 0                                                    // 000000061E00: 00000000
	.long 0                                                    // 000000061E04: 00000000
	.long 0x110                                                // 000000061E08: 00000110
	.long 0                                                    // 000000061E0C: 00000000
	.long 0x9500                                               // 000000061E10: 00009500
	.long 0                                                    // 000000061E14: 00000000
	.long 0                                                    // 000000061E18: 00000000
	.long 0                                                    // 000000061E1C: 00000000
	.long 0                                                    // 000000061E20: 00000000
	.long 0                                                    // 000000061E24: 00000000
	.long 0                                                    // 000000061E28: 00000000
	.long 0                                                    // 000000061E2C: 00000000
	.long 0x60af0100                                           // 000000061E30: 60AF0100
	.long 0x1384                                               // 000000061E34: 00001384
	.long 0x408                                                // 000000061E38: 00000408
	.long 0                                                    // 000000061E3C: 00000000
	.type	add_get_global_offset_get_local_size.kd,@object
add_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000061E40: 00000000
	.long 0                                                    // 000000061E44: 00000000
	.long 0x110                                                // 000000061E48: 00000110
	.long 0                                                    // 000000061E4C: 00000000
	.long 0x96c0                                               // 000000061E50: 000096C0
	.long 0                                                    // 000000061E54: 00000000
	.long 0                                                    // 000000061E58: 00000000
	.long 0                                                    // 000000061E5C: 00000000
	.long 0                                                    // 000000061E60: 00000000
	.long 0                                                    // 000000061E64: 00000000
	.long 0                                                    // 000000061E68: 00000000
	.long 0                                                    // 000000061E6C: 00000000
	.long 0x60af0101                                           // 000000061E70: 60AF0101
	.long 0x1384                                               // 000000061E74: 00001384
	.long 0x408                                                // 000000061E78: 00000408
	.long 0                                                    // 000000061E7C: 00000000
	.type	add_get_local_id_get_local_size.kd,@object
add_get_local_id_get_local_size.kd:
	.long 0                                                    // 000000061E80: 00000000
	.long 0                                                    // 000000061E84: 00000000
	.long 0x110                                                // 000000061E88: 00000110
	.long 0                                                    // 000000061E8C: 00000000
	.long 0x9880                                               // 000000061E90: 00009880
	.long 0                                                    // 000000061E94: 00000000
	.long 0                                                    // 000000061E98: 00000000
	.long 0                                                    // 000000061E9C: 00000000
	.long 0                                                    // 000000061EA0: 00000000
	.long 0                                                    // 000000061EA4: 00000000
	.long 0                                                    // 000000061EA8: 00000000
	.long 0                                                    // 000000061EAC: 00000000
	.long 0x60af0101                                           // 000000061EB0: 60AF0101
	.long 0x1384                                               // 000000061EB4: 00001384
	.long 0x408                                                // 000000061EB8: 00000408
	.long 0                                                    // 000000061EBC: 00000000
	.type	add_get_group_id_get_local_size.kd,@object
add_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000061EC0: 00000000
	.long 0                                                    // 000000061EC4: 00000000
	.long 0x110                                                // 000000061EC8: 00000110
	.long 0                                                    // 000000061ECC: 00000000
	.ascii "@"                                                 // 000000061ED0: 40
	.byte 0x9a                                                 // 000000061ED1: 9A
	.short 0                                                   // 000000061ED2: 0000
	.long 0                                                    // 000000061ED4: 00000000
	.long 0                                                    // 000000061ED8: 00000000
	.long 0                                                    // 000000061EDC: 00000000
	.long 0                                                    // 000000061EE0: 00000000
	.long 0                                                    // 000000061EE4: 00000000
	.long 0                                                    // 000000061EE8: 00000000
	.long 0                                                    // 000000061EEC: 00000000
	.long 0x60af0101                                           // 000000061EF0: 60AF0101
	.long 0x1384                                               // 000000061EF4: 00001384
	.long 0x408                                                // 000000061EF8: 00000408
	.long 0                                                    // 000000061EFC: 00000000
	.type	add_get_local_size_get_local_size.kd,@object
add_get_local_size_get_local_size.kd:
	.long 0                                                    // 000000061F00: 00000000
	.long 0                                                    // 000000061F04: 00000000
	.long 0x110                                                // 000000061F08: 00000110
	.long 0                                                    // 000000061F0C: 00000000
	.long 0x9c00                                               // 000000061F10: 00009C00
	.long 0                                                    // 000000061F14: 00000000
	.long 0                                                    // 000000061F18: 00000000
	.long 0                                                    // 000000061F1C: 00000000
	.long 0                                                    // 000000061F20: 00000000
	.long 0                                                    // 000000061F24: 00000000
	.long 0                                                    // 000000061F28: 00000000
	.long 0                                                    // 000000061F2C: 00000000
	.long 0x60af0100                                           // 000000061F30: 60AF0100
	.long 0x1384                                               // 000000061F34: 00001384
	.long 0x408                                                // 000000061F38: 00000408
	.long 0                                                    // 000000061F3C: 00000000
	.type	add_get_global_id_get_local_size.kd,@object
add_get_global_id_get_local_size.kd:
	.long 0                                                    // 000000061F40: 00000000
	.long 0                                                    // 000000061F44: 00000000
	.long 0x110                                                // 000000061F48: 00000110
	.long 0                                                    // 000000061F4C: 00000000
	.long 0x9dc0                                               // 000000061F50: 00009DC0
	.long 0                                                    // 000000061F54: 00000000
	.long 0                                                    // 000000061F58: 00000000
	.long 0                                                    // 000000061F5C: 00000000
	.long 0                                                    // 000000061F60: 00000000
	.long 0                                                    // 000000061F64: 00000000
	.long 0                                                    // 000000061F68: 00000000
	.long 0                                                    // 000000061F6C: 00000000
	.long 0x60af0101                                           // 000000061F70: 60AF0101
	.long 0x1384                                               // 000000061F74: 00001384
	.long 0x408                                                // 000000061F78: 00000408
	.long 0                                                    // 000000061F7C: 00000000
	.type	add_get_global_size_get_local_size.kd,@object
add_get_global_size_get_local_size.kd:
	.long 0                                                    // 000000061F80: 00000000
	.long 0                                                    // 000000061F84: 00000000
	.long 0x110                                                // 000000061F88: 00000110
	.long 0                                                    // 000000061F8C: 00000000
	.long 0x9e80                                               // 000000061F90: 00009E80
	.long 0                                                    // 000000061F94: 00000000
	.long 0                                                    // 000000061F98: 00000000
	.long 0                                                    // 000000061F9C: 00000000
	.long 0                                                    // 000000061FA0: 00000000
	.long 0                                                    // 000000061FA4: 00000000
	.long 0                                                    // 000000061FA8: 00000000
	.long 0                                                    // 000000061FAC: 00000000
	.long 0x60af0101                                           // 000000061FB0: 60AF0101
	.long 0x1384                                               // 000000061FB4: 00001384
	.long 0x408                                                // 000000061FB8: 00000408
	.long 0                                                    // 000000061FBC: 00000000
	.type	add_get_num_groups_get_local_size.kd,@object
add_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000061FC0: 00000000
	.long 0                                                    // 000000061FC4: 00000000
	.long 0x110                                                // 000000061FC8: 00000110
	.long 0                                                    // 000000061FCC: 00000000
	.ascii "@"                                                 // 000000061FD0: 40
	.byte 0xa0                                                 // 000000061FD1: A0
	.short 0                                                   // 000000061FD2: 0000
	.long 0                                                    // 000000061FD4: 00000000
	.long 0                                                    // 000000061FD8: 00000000
	.long 0                                                    // 000000061FDC: 00000000
	.long 0                                                    // 000000061FE0: 00000000
	.long 0                                                    // 000000061FE4: 00000000
	.long 0                                                    // 000000061FE8: 00000000
	.long 0                                                    // 000000061FEC: 00000000
	.long 0x60af0101                                           // 000000061FF0: 60AF0101
	.long 0x1384                                               // 000000061FF4: 00001384
	.long 0x408                                                // 000000061FF8: 00000408
	.long 0                                                    // 000000061FFC: 00000000
	.type	add_get_work_dim_get_local_size.kd,@object
add_get_work_dim_get_local_size.kd:
	.long 0                                                    // 000000062000: 00000000
	.long 0                                                    // 000000062004: 00000000
	.long 0x110                                                // 000000062008: 00000110
	.long 0                                                    // 00000006200C: 00000000
	.long 0xa200                                               // 000000062010: 0000A200
	.long 0                                                    // 000000062014: 00000000
	.long 0                                                    // 000000062018: 00000000
	.long 0                                                    // 00000006201C: 00000000
	.long 0                                                    // 000000062020: 00000000
	.long 0                                                    // 000000062024: 00000000
	.long 0                                                    // 000000062028: 00000000
	.long 0                                                    // 00000006202C: 00000000
	.long 0x60af0100                                           // 000000062030: 60AF0100
	.long 0x1384                                               // 000000062034: 00001384
	.long 0x408                                                // 000000062038: 00000408
	.long 0                                                    // 00000006203C: 00000000
	.type	add_x_get_global_id.kd,@object
add_x_get_global_id.kd:
	.long 0                                                    // 000000062040: 00000000
	.long 0                                                    // 000000062044: 00000000
	.long 0x110                                                // 000000062048: 00000110
	.long 0                                                    // 00000006204C: 00000000
	.long 0xa3c0                                               // 000000062050: 0000A3C0
	.long 0                                                    // 000000062054: 00000000
	.long 0                                                    // 000000062058: 00000000
	.long 0                                                    // 00000006205C: 00000000
	.long 0                                                    // 000000062060: 00000000
	.long 0                                                    // 000000062064: 00000000
	.long 0                                                    // 000000062068: 00000000
	.long 0                                                    // 00000006206C: 00000000
	.long 0x60af0101                                           // 000000062070: 60AF0101
	.long 0x1384                                               // 000000062074: 00001384
	.long 0x408                                                // 000000062078: 00000408
	.long 0                                                    // 00000006207C: 00000000
	.type	add_get_global_offset_get_global_id.kd,@object
add_get_global_offset_get_global_id.kd:
	.long 0                                                    // 000000062080: 00000000
	.long 0                                                    // 000000062084: 00000000
	.long 0x110                                                // 000000062088: 00000110
	.long 0                                                    // 00000006208C: 00000000
	.long 0xa580                                               // 000000062090: 0000A580
	.long 0                                                    // 000000062094: 00000000
	.long 0                                                    // 000000062098: 00000000
	.long 0                                                    // 00000006209C: 00000000
	.long 0                                                    // 0000000620A0: 00000000
	.long 0                                                    // 0000000620A4: 00000000
	.long 0                                                    // 0000000620A8: 00000000
	.long 0                                                    // 0000000620AC: 00000000
	.long 0x60af0101                                           // 0000000620B0: 60AF0101
	.long 0x1384                                               // 0000000620B4: 00001384
	.long 0x408                                                // 0000000620B8: 00000408
	.long 0                                                    // 0000000620BC: 00000000
	.type	add_get_local_id_get_global_id.kd,@object
add_get_local_id_get_global_id.kd:
	.long 0                                                    // 0000000620C0: 00000000
	.long 0                                                    // 0000000620C4: 00000000
	.long 0x110                                                // 0000000620C8: 00000110
	.long 0                                                    // 0000000620CC: 00000000
	.ascii "@"                                                 // 0000000620D0: 40
	.byte 0xa7                                                 // 0000000620D1: A7
	.short 0                                                   // 0000000620D2: 0000
	.long 0                                                    // 0000000620D4: 00000000
	.long 0                                                    // 0000000620D8: 00000000
	.long 0                                                    // 0000000620DC: 00000000
	.long 0                                                    // 0000000620E0: 00000000
	.long 0                                                    // 0000000620E4: 00000000
	.long 0                                                    // 0000000620E8: 00000000
	.long 0                                                    // 0000000620EC: 00000000
	.long 0x60af0101                                           // 0000000620F0: 60AF0101
	.long 0x1384                                               // 0000000620F4: 00001384
	.long 0x408                                                // 0000000620F8: 00000408
	.long 0                                                    // 0000000620FC: 00000000
	.type	add_get_group_id_get_global_id.kd,@object
add_get_group_id_get_global_id.kd:
	.long 0                                                    // 000000062100: 00000000
	.long 0                                                    // 000000062104: 00000000
	.long 0x110                                                // 000000062108: 00000110
	.long 0                                                    // 00000006210C: 00000000
	.long 0xa900                                               // 000000062110: 0000A900
	.long 0                                                    // 000000062114: 00000000
	.long 0                                                    // 000000062118: 00000000
	.long 0                                                    // 00000006211C: 00000000
	.long 0                                                    // 000000062120: 00000000
	.long 0                                                    // 000000062124: 00000000
	.long 0                                                    // 000000062128: 00000000
	.long 0                                                    // 00000006212C: 00000000
	.long 0x60af0101                                           // 000000062130: 60AF0101
	.long 0x1384                                               // 000000062134: 00001384
	.long 0x408                                                // 000000062138: 00000408
	.long 0                                                    // 00000006213C: 00000000
	.type	add_get_local_size_get_global_id.kd,@object
add_get_local_size_get_global_id.kd:
	.long 0                                                    // 000000062140: 00000000
	.long 0                                                    // 000000062144: 00000000
	.long 0x110                                                // 000000062148: 00000110
	.long 0                                                    // 00000006214C: 00000000
	.long 0xaac0                                               // 000000062150: 0000AAC0
	.long 0                                                    // 000000062154: 00000000
	.long 0                                                    // 000000062158: 00000000
	.long 0                                                    // 00000006215C: 00000000
	.long 0                                                    // 000000062160: 00000000
	.long 0                                                    // 000000062164: 00000000
	.long 0                                                    // 000000062168: 00000000
	.long 0                                                    // 00000006216C: 00000000
	.long 0x60af0101                                           // 000000062170: 60AF0101
	.long 0x1384                                               // 000000062174: 00001384
	.long 0x408                                                // 000000062178: 00000408
	.long 0                                                    // 00000006217C: 00000000
	.type	add_get_global_id_get_global_id.kd,@object
add_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000062180: 00000000
	.long 0                                                    // 000000062184: 00000000
	.long 0x110                                                // 000000062188: 00000110
	.long 0                                                    // 00000006218C: 00000000
	.long 0xac80                                               // 000000062190: 0000AC80
	.long 0                                                    // 000000062194: 00000000
	.long 0                                                    // 000000062198: 00000000
	.long 0                                                    // 00000006219C: 00000000
	.long 0                                                    // 0000000621A0: 00000000
	.long 0                                                    // 0000000621A4: 00000000
	.long 0                                                    // 0000000621A8: 00000000
	.long 0                                                    // 0000000621AC: 00000000
	.long 0x60af0101                                           // 0000000621B0: 60AF0101
	.long 0x1384                                               // 0000000621B4: 00001384
	.long 0x408                                                // 0000000621B8: 00000408
	.long 0                                                    // 0000000621BC: 00000000
	.type	add_get_global_size_get_global_id.kd,@object
add_get_global_size_get_global_id.kd:
	.long 0                                                    // 0000000621C0: 00000000
	.long 0                                                    // 0000000621C4: 00000000
	.long 0x110                                                // 0000000621C8: 00000110
	.long 0                                                    // 0000000621CC: 00000000
	.ascii "@"                                                 // 0000000621D0: 40
	.byte 0xad                                                 // 0000000621D1: AD
	.short 0                                                   // 0000000621D2: 0000
	.long 0                                                    // 0000000621D4: 00000000
	.long 0                                                    // 0000000621D8: 00000000
	.long 0                                                    // 0000000621DC: 00000000
	.long 0                                                    // 0000000621E0: 00000000
	.long 0                                                    // 0000000621E4: 00000000
	.long 0                                                    // 0000000621E8: 00000000
	.long 0                                                    // 0000000621EC: 00000000
	.long 0x60af0101                                           // 0000000621F0: 60AF0101
	.long 0x1384                                               // 0000000621F4: 00001384
	.long 0x408                                                // 0000000621F8: 00000408
	.long 0                                                    // 0000000621FC: 00000000
	.type	add_get_num_groups_get_global_id.kd,@object
add_get_num_groups_get_global_id.kd:
	.long 0                                                    // 000000062200: 00000000
	.long 0                                                    // 000000062204: 00000000
	.long 0x110                                                // 000000062208: 00000110
	.long 0                                                    // 00000006220C: 00000000
	.long 0xaf00                                               // 000000062210: 0000AF00
	.long 0                                                    // 000000062214: 00000000
	.long 0                                                    // 000000062218: 00000000
	.long 0                                                    // 00000006221C: 00000000
	.long 0                                                    // 000000062220: 00000000
	.long 0                                                    // 000000062224: 00000000
	.long 0                                                    // 000000062228: 00000000
	.long 0                                                    // 00000006222C: 00000000
	.long 0x60af0101                                           // 000000062230: 60AF0101
	.long 0x1384                                               // 000000062234: 00001384
	.long 0x408                                                // 000000062238: 00000408
	.long 0                                                    // 00000006223C: 00000000
	.type	add_get_work_dim_get_global_id.kd,@object
add_get_work_dim_get_global_id.kd:
	.long 0                                                    // 000000062240: 00000000
	.long 0                                                    // 000000062244: 00000000
	.long 0x110                                                // 000000062248: 00000110
	.long 0                                                    // 00000006224C: 00000000
	.long 0xb0c0                                               // 000000062250: 0000B0C0
	.long 0                                                    // 000000062254: 00000000
	.long 0                                                    // 000000062258: 00000000
	.long 0                                                    // 00000006225C: 00000000
	.long 0                                                    // 000000062260: 00000000
	.long 0                                                    // 000000062264: 00000000
	.long 0                                                    // 000000062268: 00000000
	.long 0                                                    // 00000006226C: 00000000
	.long 0x60af0101                                           // 000000062270: 60AF0101
	.long 0x1384                                               // 000000062274: 00001384
	.long 0x408                                                // 000000062278: 00000408
	.long 0                                                    // 00000006227C: 00000000
	.type	add_x_get_global_size.kd,@object
add_x_get_global_size.kd:
	.long 0                                                    // 000000062280: 00000000
	.long 0                                                    // 000000062284: 00000000
	.long 0x110                                                // 000000062288: 00000110
	.long 0                                                    // 00000006228C: 00000000
	.long 0xb280                                               // 000000062290: 0000B280
	.long 0                                                    // 000000062294: 00000000
	.long 0                                                    // 000000062298: 00000000
	.long 0                                                    // 00000006229C: 00000000
	.long 0                                                    // 0000000622A0: 00000000
	.long 0                                                    // 0000000622A4: 00000000
	.long 0                                                    // 0000000622A8: 00000000
	.long 0                                                    // 0000000622AC: 00000000
	.long 0x60af0101                                           // 0000000622B0: 60AF0101
	.long 0x1384                                               // 0000000622B4: 00001384
	.long 0x408                                                // 0000000622B8: 00000408
	.long 0                                                    // 0000000622BC: 00000000
	.type	add_get_global_offset_get_global_size.kd,@object
add_get_global_offset_get_global_size.kd:
	.long 0                                                    // 0000000622C0: 00000000
	.long 0                                                    // 0000000622C4: 00000000
	.long 0x110                                                // 0000000622C8: 00000110
	.long 0                                                    // 0000000622CC: 00000000
	.ascii "@"                                                 // 0000000622D0: 40
	.byte 0xb4                                                 // 0000000622D1: B4
	.short 0                                                   // 0000000622D2: 0000
	.long 0                                                    // 0000000622D4: 00000000
	.long 0                                                    // 0000000622D8: 00000000
	.long 0                                                    // 0000000622DC: 00000000
	.long 0                                                    // 0000000622E0: 00000000
	.long 0                                                    // 0000000622E4: 00000000
	.long 0                                                    // 0000000622E8: 00000000
	.long 0                                                    // 0000000622EC: 00000000
	.long 0x60af0101                                           // 0000000622F0: 60AF0101
	.long 0x1384                                               // 0000000622F4: 00001384
	.long 0x408                                                // 0000000622F8: 00000408
	.long 0                                                    // 0000000622FC: 00000000
	.type	add_get_local_id_get_global_size.kd,@object
add_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000062300: 00000000
	.long 0                                                    // 000000062304: 00000000
	.long 0x110                                                // 000000062308: 00000110
	.long 0                                                    // 00000006230C: 00000000
	.long 0xb600                                               // 000000062310: 0000B600
	.long 0                                                    // 000000062314: 00000000
	.long 0                                                    // 000000062318: 00000000
	.long 0                                                    // 00000006231C: 00000000
	.long 0                                                    // 000000062320: 00000000
	.long 0                                                    // 000000062324: 00000000
	.long 0                                                    // 000000062328: 00000000
	.long 0                                                    // 00000006232C: 00000000
	.long 0x60af0101                                           // 000000062330: 60AF0101
	.long 0x1384                                               // 000000062334: 00001384
	.long 0x408                                                // 000000062338: 00000408
	.long 0                                                    // 00000006233C: 00000000
	.type	add_get_group_id_get_global_size.kd,@object
add_get_group_id_get_global_size.kd:
	.long 0                                                    // 000000062340: 00000000
	.long 0                                                    // 000000062344: 00000000
	.long 0x110                                                // 000000062348: 00000110
	.long 0                                                    // 00000006234C: 00000000
	.long 0xb7c0                                               // 000000062350: 0000B7C0
	.long 0                                                    // 000000062354: 00000000
	.long 0                                                    // 000000062358: 00000000
	.long 0                                                    // 00000006235C: 00000000
	.long 0                                                    // 000000062360: 00000000
	.long 0                                                    // 000000062364: 00000000
	.long 0                                                    // 000000062368: 00000000
	.long 0                                                    // 00000006236C: 00000000
	.long 0x60af0101                                           // 000000062370: 60AF0101
	.long 0x1384                                               // 000000062374: 00001384
	.long 0x408                                                // 000000062378: 00000408
	.long 0                                                    // 00000006237C: 00000000
	.type	add_get_local_size_get_global_size.kd,@object
add_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000062380: 00000000
	.long 0                                                    // 000000062384: 00000000
	.long 0x110                                                // 000000062388: 00000110
	.long 0                                                    // 00000006238C: 00000000
	.long 0xb980                                               // 000000062390: 0000B980
	.long 0                                                    // 000000062394: 00000000
	.long 0                                                    // 000000062398: 00000000
	.long 0                                                    // 00000006239C: 00000000
	.long 0                                                    // 0000000623A0: 00000000
	.long 0                                                    // 0000000623A4: 00000000
	.long 0                                                    // 0000000623A8: 00000000
	.long 0                                                    // 0000000623AC: 00000000
	.long 0x60af0101                                           // 0000000623B0: 60AF0101
	.long 0x1384                                               // 0000000623B4: 00001384
	.long 0x408                                                // 0000000623B8: 00000408
	.long 0                                                    // 0000000623BC: 00000000
	.type	add_get_global_id_get_global_size.kd,@object
add_get_global_id_get_global_size.kd:
	.long 0                                                    // 0000000623C0: 00000000
	.long 0                                                    // 0000000623C4: 00000000
	.long 0x110                                                // 0000000623C8: 00000110
	.long 0                                                    // 0000000623CC: 00000000
	.ascii "@"                                                 // 0000000623D0: 40
	.byte 0xbb                                                 // 0000000623D1: BB
	.short 0                                                   // 0000000623D2: 0000
	.long 0                                                    // 0000000623D4: 00000000
	.long 0                                                    // 0000000623D8: 00000000
	.long 0                                                    // 0000000623DC: 00000000
	.long 0                                                    // 0000000623E0: 00000000
	.long 0                                                    // 0000000623E4: 00000000
	.long 0                                                    // 0000000623E8: 00000000
	.long 0                                                    // 0000000623EC: 00000000
	.long 0x60af0101                                           // 0000000623F0: 60AF0101
	.long 0x1384                                               // 0000000623F4: 00001384
	.long 0x408                                                // 0000000623F8: 00000408
	.long 0                                                    // 0000000623FC: 00000000
	.type	add_get_global_size_get_global_size.kd,@object
add_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000062400: 00000000
	.long 0                                                    // 000000062404: 00000000
	.long 0x110                                                // 000000062408: 00000110
	.long 0                                                    // 00000006240C: 00000000
	.long 0xbd00                                               // 000000062410: 0000BD00
	.long 0                                                    // 000000062414: 00000000
	.long 0                                                    // 000000062418: 00000000
	.long 0                                                    // 00000006241C: 00000000
	.long 0                                                    // 000000062420: 00000000
	.long 0                                                    // 000000062424: 00000000
	.long 0                                                    // 000000062428: 00000000
	.long 0                                                    // 00000006242C: 00000000
	.long 0x60af0101                                           // 000000062430: 60AF0101
	.long 0x1384                                               // 000000062434: 00001384
	.long 0x408                                                // 000000062438: 00000408
	.long 0                                                    // 00000006243C: 00000000
	.type	add_get_num_groups_get_global_size.kd,@object
add_get_num_groups_get_global_size.kd:
	.long 0                                                    // 000000062440: 00000000
	.long 0                                                    // 000000062444: 00000000
	.long 0x110                                                // 000000062448: 00000110
	.long 0                                                    // 00000006244C: 00000000
	.long 0xbec0                                               // 000000062450: 0000BEC0
	.long 0                                                    // 000000062454: 00000000
	.long 0                                                    // 000000062458: 00000000
	.long 0                                                    // 00000006245C: 00000000
	.long 0                                                    // 000000062460: 00000000
	.long 0                                                    // 000000062464: 00000000
	.long 0                                                    // 000000062468: 00000000
	.long 0                                                    // 00000006246C: 00000000
	.long 0x60af0101                                           // 000000062470: 60AF0101
	.long 0x1384                                               // 000000062474: 00001384
	.long 0x408                                                // 000000062478: 00000408
	.long 0                                                    // 00000006247C: 00000000
	.type	add_get_work_dim_get_global_size.kd,@object
add_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000062480: 00000000
	.long 0                                                    // 000000062484: 00000000
	.long 0x110                                                // 000000062488: 00000110
	.long 0                                                    // 00000006248C: 00000000
	.long 0xc080                                               // 000000062490: 0000C080
	.long 0                                                    // 000000062494: 00000000
	.long 0                                                    // 000000062498: 00000000
	.long 0                                                    // 00000006249C: 00000000
	.long 0                                                    // 0000000624A0: 00000000
	.long 0                                                    // 0000000624A4: 00000000
	.long 0                                                    // 0000000624A8: 00000000
	.long 0                                                    // 0000000624AC: 00000000
	.long 0x60af0101                                           // 0000000624B0: 60AF0101
	.long 0x1384                                               // 0000000624B4: 00001384
	.long 0x408                                                // 0000000624B8: 00000408
	.long 0                                                    // 0000000624BC: 00000000
	.type	add_x_get_num_groups.kd,@object
add_x_get_num_groups.kd:
	.long 0                                                    // 0000000624C0: 00000000
	.long 0                                                    // 0000000624C4: 00000000
	.long 0x110                                                // 0000000624C8: 00000110
	.long 0                                                    // 0000000624CC: 00000000
	.ascii "@"                                                 // 0000000624D0: 40
	.byte 0xc2                                                 // 0000000624D1: C2
	.short 0                                                   // 0000000624D2: 0000
	.long 0                                                    // 0000000624D4: 00000000
	.long 0                                                    // 0000000624D8: 00000000
	.long 0                                                    // 0000000624DC: 00000000
	.long 0                                                    // 0000000624E0: 00000000
	.long 0                                                    // 0000000624E4: 00000000
	.long 0                                                    // 0000000624E8: 00000000
	.long 0                                                    // 0000000624EC: 00000000
	.long 0x60af0101                                           // 0000000624F0: 60AF0101
	.long 0x1384                                               // 0000000624F4: 00001384
	.long 0x408                                                // 0000000624F8: 00000408
	.long 0                                                    // 0000000624FC: 00000000
	.type	add_get_global_offset_get_num_groups.kd,@object
add_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000062500: 00000000
	.long 0                                                    // 000000062504: 00000000
	.long 0x110                                                // 000000062508: 00000110
	.long 0                                                    // 00000006250C: 00000000
	.long 0xc400                                               // 000000062510: 0000C400
	.long 0                                                    // 000000062514: 00000000
	.long 0                                                    // 000000062518: 00000000
	.long 0                                                    // 00000006251C: 00000000
	.long 0                                                    // 000000062520: 00000000
	.long 0                                                    // 000000062524: 00000000
	.long 0                                                    // 000000062528: 00000000
	.long 0                                                    // 00000006252C: 00000000
	.long 0x60af0101                                           // 000000062530: 60AF0101
	.long 0x1384                                               // 000000062534: 00001384
	.long 0x408                                                // 000000062538: 00000408
	.long 0                                                    // 00000006253C: 00000000
	.type	add_get_local_id_get_num_groups.kd,@object
add_get_local_id_get_num_groups.kd:
	.long 0                                                    // 000000062540: 00000000
	.long 0                                                    // 000000062544: 00000000
	.long 0x110                                                // 000000062548: 00000110
	.long 0                                                    // 00000006254C: 00000000
	.long 0xc5c0                                               // 000000062550: 0000C5C0
	.long 0                                                    // 000000062554: 00000000
	.long 0                                                    // 000000062558: 00000000
	.long 0                                                    // 00000006255C: 00000000
	.long 0                                                    // 000000062560: 00000000
	.long 0                                                    // 000000062564: 00000000
	.long 0                                                    // 000000062568: 00000000
	.long 0                                                    // 00000006256C: 00000000
	.long 0x60af0101                                           // 000000062570: 60AF0101
	.long 0x1384                                               // 000000062574: 00001384
	.long 0x408                                                // 000000062578: 00000408
	.long 0                                                    // 00000006257C: 00000000
	.type	add_get_group_id_get_num_groups.kd,@object
add_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000062580: 00000000
	.long 0                                                    // 000000062584: 00000000
	.long 0x110                                                // 000000062588: 00000110
	.long 0                                                    // 00000006258C: 00000000
	.long 0xc780                                               // 000000062590: 0000C780
	.long 0                                                    // 000000062594: 00000000
	.long 0                                                    // 000000062598: 00000000
	.long 0                                                    // 00000006259C: 00000000
	.long 0                                                    // 0000000625A0: 00000000
	.long 0                                                    // 0000000625A4: 00000000
	.long 0                                                    // 0000000625A8: 00000000
	.long 0                                                    // 0000000625AC: 00000000
	.long 0x60af0101                                           // 0000000625B0: 60AF0101
	.long 0x1384                                               // 0000000625B4: 00001384
	.long 0x408                                                // 0000000625B8: 00000408
	.long 0                                                    // 0000000625BC: 00000000
	.type	add_get_local_size_get_num_groups.kd,@object
add_get_local_size_get_num_groups.kd:
	.long 0                                                    // 0000000625C0: 00000000
	.long 0                                                    // 0000000625C4: 00000000
	.long 0x110                                                // 0000000625C8: 00000110
	.long 0                                                    // 0000000625CC: 00000000
	.ascii "@"                                                 // 0000000625D0: 40
	.byte 0xc9                                                 // 0000000625D1: C9
	.short 0                                                   // 0000000625D2: 0000
	.long 0                                                    // 0000000625D4: 00000000
	.long 0                                                    // 0000000625D8: 00000000
	.long 0                                                    // 0000000625DC: 00000000
	.long 0                                                    // 0000000625E0: 00000000
	.long 0                                                    // 0000000625E4: 00000000
	.long 0                                                    // 0000000625E8: 00000000
	.long 0                                                    // 0000000625EC: 00000000
	.long 0x60af0101                                           // 0000000625F0: 60AF0101
	.long 0x1384                                               // 0000000625F4: 00001384
	.long 0x408                                                // 0000000625F8: 00000408
	.long 0                                                    // 0000000625FC: 00000000
	.type	add_get_global_id_get_num_groups.kd,@object
add_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000062600: 00000000
	.long 0                                                    // 000000062604: 00000000
	.long 0x110                                                // 000000062608: 00000110
	.long 0                                                    // 00000006260C: 00000000
	.long 0xcb00                                               // 000000062610: 0000CB00
	.long 0                                                    // 000000062614: 00000000
	.long 0                                                    // 000000062618: 00000000
	.long 0                                                    // 00000006261C: 00000000
	.long 0                                                    // 000000062620: 00000000
	.long 0                                                    // 000000062624: 00000000
	.long 0                                                    // 000000062628: 00000000
	.long 0                                                    // 00000006262C: 00000000
	.long 0x60af0101                                           // 000000062630: 60AF0101
	.long 0x1384                                               // 000000062634: 00001384
	.long 0x408                                                // 000000062638: 00000408
	.long 0                                                    // 00000006263C: 00000000
	.type	add_get_global_size_get_num_groups.kd,@object
add_get_global_size_get_num_groups.kd:
	.long 0                                                    // 000000062640: 00000000
	.long 0                                                    // 000000062644: 00000000
	.long 0x110                                                // 000000062648: 00000110
	.long 0                                                    // 00000006264C: 00000000
	.long 0xccc0                                               // 000000062650: 0000CCC0
	.long 0                                                    // 000000062654: 00000000
	.long 0                                                    // 000000062658: 00000000
	.long 0                                                    // 00000006265C: 00000000
	.long 0                                                    // 000000062660: 00000000
	.long 0                                                    // 000000062664: 00000000
	.long 0                                                    // 000000062668: 00000000
	.long 0                                                    // 00000006266C: 00000000
	.long 0x60af0101                                           // 000000062670: 60AF0101
	.long 0x1384                                               // 000000062674: 00001384
	.long 0x408                                                // 000000062678: 00000408
	.long 0                                                    // 00000006267C: 00000000
	.type	add_get_num_groups_get_num_groups.kd,@object
add_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000062680: 00000000
	.long 0                                                    // 000000062684: 00000000
	.long 0x110                                                // 000000062688: 00000110
	.long 0                                                    // 00000006268C: 00000000
	.long 0xce80                                               // 000000062690: 0000CE80
	.long 0                                                    // 000000062694: 00000000
	.long 0                                                    // 000000062698: 00000000
	.long 0                                                    // 00000006269C: 00000000
	.long 0                                                    // 0000000626A0: 00000000
	.long 0                                                    // 0000000626A4: 00000000
	.long 0                                                    // 0000000626A8: 00000000
	.long 0                                                    // 0000000626AC: 00000000
	.long 0x60af0101                                           // 0000000626B0: 60AF0101
	.long 0x1384                                               // 0000000626B4: 00001384
	.long 0x408                                                // 0000000626B8: 00000408
	.long 0                                                    // 0000000626BC: 00000000
	.type	add_get_work_dim_get_num_groups.kd,@object
add_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 0000000626C0: 00000000
	.long 0                                                    // 0000000626C4: 00000000
	.long 0x110                                                // 0000000626C8: 00000110
	.long 0                                                    // 0000000626CC: 00000000
	.ascii "@"                                                 // 0000000626D0: 40
	.byte 0xd0                                                 // 0000000626D1: D0
	.short 0                                                   // 0000000626D2: 0000
	.long 0                                                    // 0000000626D4: 00000000
	.long 0                                                    // 0000000626D8: 00000000
	.long 0                                                    // 0000000626DC: 00000000
	.long 0                                                    // 0000000626E0: 00000000
	.long 0                                                    // 0000000626E4: 00000000
	.long 0                                                    // 0000000626E8: 00000000
	.long 0                                                    // 0000000626EC: 00000000
	.long 0x60af0101                                           // 0000000626F0: 60AF0101
	.long 0x1384                                               // 0000000626F4: 00001384
	.long 0x408                                                // 0000000626F8: 00000408
	.long 0                                                    // 0000000626FC: 00000000
	.type	add_x_get_work_dim.kd,@object
add_x_get_work_dim.kd:
	.long 0                                                    // 000000062700: 00000000
	.long 0                                                    // 000000062704: 00000000
	.long 0x110                                                // 000000062708: 00000110
	.long 0                                                    // 00000006270C: 00000000
	.long 0xd200                                               // 000000062710: 0000D200
	.long 0                                                    // 000000062714: 00000000
	.long 0                                                    // 000000062718: 00000000
	.long 0                                                    // 00000006271C: 00000000
	.long 0                                                    // 000000062720: 00000000
	.long 0                                                    // 000000062724: 00000000
	.long 0                                                    // 000000062728: 00000000
	.long 0                                                    // 00000006272C: 00000000
	.long 0x60af0100                                           // 000000062730: 60AF0100
	.long 0x1384                                               // 000000062734: 00001384
	.long 0x408                                                // 000000062738: 00000408
	.long 0                                                    // 00000006273C: 00000000
	.type	add_get_global_offset_get_work_dim.kd,@object
add_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 000000062740: 00000000
	.long 0                                                    // 000000062744: 00000000
	.long 0x110                                                // 000000062748: 00000110
	.long 0                                                    // 00000006274C: 00000000
	.long 0xd3c0                                               // 000000062750: 0000D3C0
	.long 0                                                    // 000000062754: 00000000
	.long 0                                                    // 000000062758: 00000000
	.long 0                                                    // 00000006275C: 00000000
	.long 0                                                    // 000000062760: 00000000
	.long 0                                                    // 000000062764: 00000000
	.long 0                                                    // 000000062768: 00000000
	.long 0                                                    // 00000006276C: 00000000
	.long 0x60af0101                                           // 000000062770: 60AF0101
	.long 0x1384                                               // 000000062774: 00001384
	.long 0x408                                                // 000000062778: 00000408
	.long 0                                                    // 00000006277C: 00000000
	.type	add_get_local_id_get_work_dim.kd,@object
add_get_local_id_get_work_dim.kd:
	.long 0                                                    // 000000062780: 00000000
	.long 0                                                    // 000000062784: 00000000
	.long 0x110                                                // 000000062788: 00000110
	.long 0                                                    // 00000006278C: 00000000
	.long 0xd580                                               // 000000062790: 0000D580
	.long 0                                                    // 000000062794: 00000000
	.long 0                                                    // 000000062798: 00000000
	.long 0                                                    // 00000006279C: 00000000
	.long 0                                                    // 0000000627A0: 00000000
	.long 0                                                    // 0000000627A4: 00000000
	.long 0                                                    // 0000000627A8: 00000000
	.long 0                                                    // 0000000627AC: 00000000
	.long 0x60af0101                                           // 0000000627B0: 60AF0101
	.long 0x1384                                               // 0000000627B4: 00001384
	.long 0x408                                                // 0000000627B8: 00000408
	.long 0                                                    // 0000000627BC: 00000000
	.type	add_get_group_id_get_work_dim.kd,@object
add_get_group_id_get_work_dim.kd:
	.long 0                                                    // 0000000627C0: 00000000
	.long 0                                                    // 0000000627C4: 00000000
	.long 0x110                                                // 0000000627C8: 00000110
	.long 0                                                    // 0000000627CC: 00000000
	.ascii "@"                                                 // 0000000627D0: 40
	.byte 0xd7                                                 // 0000000627D1: D7
	.short 0                                                   // 0000000627D2: 0000
	.long 0                                                    // 0000000627D4: 00000000
	.long 0                                                    // 0000000627D8: 00000000
	.long 0                                                    // 0000000627DC: 00000000
	.long 0                                                    // 0000000627E0: 00000000
	.long 0                                                    // 0000000627E4: 00000000
	.long 0                                                    // 0000000627E8: 00000000
	.long 0                                                    // 0000000627EC: 00000000
	.long 0x60af0101                                           // 0000000627F0: 60AF0101
	.long 0x1384                                               // 0000000627F4: 00001384
	.long 0x408                                                // 0000000627F8: 00000408
	.long 0                                                    // 0000000627FC: 00000000
	.type	add_get_local_size_get_work_dim.kd,@object
add_get_local_size_get_work_dim.kd:
	.long 0                                                    // 000000062800: 00000000
	.long 0                                                    // 000000062804: 00000000
	.long 0x110                                                // 000000062808: 00000110
	.long 0                                                    // 00000006280C: 00000000
	.long 0xd900                                               // 000000062810: 0000D900
	.long 0                                                    // 000000062814: 00000000
	.long 0                                                    // 000000062818: 00000000
	.long 0                                                    // 00000006281C: 00000000
	.long 0                                                    // 000000062820: 00000000
	.long 0                                                    // 000000062824: 00000000
	.long 0                                                    // 000000062828: 00000000
	.long 0                                                    // 00000006282C: 00000000
	.long 0x60af0100                                           // 000000062830: 60AF0100
	.long 0x1384                                               // 000000062834: 00001384
	.long 0x408                                                // 000000062838: 00000408
	.long 0                                                    // 00000006283C: 00000000
	.type	add_get_global_id_get_work_dim.kd,@object
add_get_global_id_get_work_dim.kd:
	.long 0                                                    // 000000062840: 00000000
	.long 0                                                    // 000000062844: 00000000
	.long 0x110                                                // 000000062848: 00000110
	.long 0                                                    // 00000006284C: 00000000
	.long 0xdac0                                               // 000000062850: 0000DAC0
	.long 0                                                    // 000000062854: 00000000
	.long 0                                                    // 000000062858: 00000000
	.long 0                                                    // 00000006285C: 00000000
	.long 0                                                    // 000000062860: 00000000
	.long 0                                                    // 000000062864: 00000000
	.long 0                                                    // 000000062868: 00000000
	.long 0                                                    // 00000006286C: 00000000
	.long 0x60af0101                                           // 000000062870: 60AF0101
	.long 0x1384                                               // 000000062874: 00001384
	.long 0x408                                                // 000000062878: 00000408
	.long 0                                                    // 00000006287C: 00000000
	.type	add_get_global_size_get_work_dim.kd,@object
add_get_global_size_get_work_dim.kd:
	.long 0                                                    // 000000062880: 00000000
	.long 0                                                    // 000000062884: 00000000
	.long 0x110                                                // 000000062888: 00000110
	.long 0                                                    // 00000006288C: 00000000
	.long 0xdc80                                               // 000000062890: 0000DC80
	.long 0                                                    // 000000062894: 00000000
	.long 0                                                    // 000000062898: 00000000
	.long 0                                                    // 00000006289C: 00000000
	.long 0                                                    // 0000000628A0: 00000000
	.long 0                                                    // 0000000628A4: 00000000
	.long 0                                                    // 0000000628A8: 00000000
	.long 0                                                    // 0000000628AC: 00000000
	.long 0x60af0101                                           // 0000000628B0: 60AF0101
	.long 0x1384                                               // 0000000628B4: 00001384
	.long 0x408                                                // 0000000628B8: 00000408
	.long 0                                                    // 0000000628BC: 00000000
	.type	add_get_num_groups_get_work_dim.kd,@object
add_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 0000000628C0: 00000000
	.long 0                                                    // 0000000628C4: 00000000
	.long 0x110                                                // 0000000628C8: 00000110
	.long 0                                                    // 0000000628CC: 00000000
	.ascii "@"                                                 // 0000000628D0: 40
	.byte 0xde                                                 // 0000000628D1: DE
	.short 0                                                   // 0000000628D2: 0000
	.long 0                                                    // 0000000628D4: 00000000
	.long 0                                                    // 0000000628D8: 00000000
	.long 0                                                    // 0000000628DC: 00000000
	.long 0                                                    // 0000000628E0: 00000000
	.long 0                                                    // 0000000628E4: 00000000
	.long 0                                                    // 0000000628E8: 00000000
	.long 0                                                    // 0000000628EC: 00000000
	.long 0x60af0101                                           // 0000000628F0: 60AF0101
	.long 0x1384                                               // 0000000628F4: 00001384
	.long 0x408                                                // 0000000628F8: 00000408
	.long 0                                                    // 0000000628FC: 00000000
	.type	add_get_work_dim_get_work_dim.kd,@object
add_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 000000062900: 00000000
	.long 0                                                    // 000000062904: 00000000
	.long 0x110                                                // 000000062908: 00000110
	.long 0                                                    // 00000006290C: 00000000
	.long 0xe000                                               // 000000062910: 0000E000
	.long 0                                                    // 000000062914: 00000000
	.long 0                                                    // 000000062918: 00000000
	.long 0                                                    // 00000006291C: 00000000
	.long 0                                                    // 000000062920: 00000000
	.long 0                                                    // 000000062924: 00000000
	.long 0                                                    // 000000062928: 00000000
	.long 0                                                    // 00000006292C: 00000000
	.long 0x60af0100                                           // 000000062930: 60AF0100
	.long 0x1384                                               // 000000062934: 00001384
	.long 0x408                                                // 000000062938: 00000408
	.long 0                                                    // 00000006293C: 00000000
	.type	add_x_64.kd,@object
add_x_64.kd:
	.long 0                                                    // 000000062940: 00000000
	.long 0                                                    // 000000062944: 00000000
	.long 0x110                                                // 000000062948: 00000110
	.long 0                                                    // 00000006294C: 00000000
	.long 0xe1c0                                               // 000000062950: 0000E1C0
	.long 0                                                    // 000000062954: 00000000
	.long 0                                                    // 000000062958: 00000000
	.long 0                                                    // 00000006295C: 00000000
	.long 0                                                    // 000000062960: 00000000
	.long 0                                                    // 000000062964: 00000000
	.long 0                                                    // 000000062968: 00000000
	.long 0                                                    // 00000006296C: 00000000
	.long 0x60af0100                                           // 000000062970: 60AF0100
	.long 0x84                                                 // 000000062974: 00000084
	.long 0x408                                                // 000000062978: 00000408
	.long 0                                                    // 00000006297C: 00000000
	.type	add_get_global_offset_64.kd,@object
add_get_global_offset_64.kd:
	.long 0                                                    // 000000062980: 00000000
	.long 0                                                    // 000000062984: 00000000
	.long 0x110                                                // 000000062988: 00000110
	.long 0                                                    // 00000006298C: 00000000
	.long 0xe280                                               // 000000062990: 0000E280
	.long 0                                                    // 000000062994: 00000000
	.long 0                                                    // 000000062998: 00000000
	.long 0                                                    // 00000006299C: 00000000
	.long 0                                                    // 0000000629A0: 00000000
	.long 0                                                    // 0000000629A4: 00000000
	.long 0                                                    // 0000000629A8: 00000000
	.long 0                                                    // 0000000629AC: 00000000
	.long 0x60af0100                                           // 0000000629B0: 60AF0100
	.long 0x84                                                 // 0000000629B4: 00000084
	.long 0x408                                                // 0000000629B8: 00000408
	.long 0                                                    // 0000000629BC: 00000000
	.type	add_get_local_id_64.kd,@object
add_get_local_id_64.kd:
	.long 0                                                    // 0000000629C0: 00000000
	.long 0                                                    // 0000000629C4: 00000000
	.long 0x110                                                // 0000000629C8: 00000110
	.long 0                                                    // 0000000629CC: 00000000
	.ascii "@"                                                 // 0000000629D0: 40
	.byte 0xe3                                                 // 0000000629D1: E3
	.short 0                                                   // 0000000629D2: 0000
	.long 0                                                    // 0000000629D4: 00000000
	.long 0                                                    // 0000000629D8: 00000000
	.long 0                                                    // 0000000629DC: 00000000
	.long 0                                                    // 0000000629E0: 00000000
	.long 0                                                    // 0000000629E4: 00000000
	.long 0                                                    // 0000000629E8: 00000000
	.long 0                                                    // 0000000629EC: 00000000
	.long 0x60af0100                                           // 0000000629F0: 60AF0100
	.long 0x84                                                 // 0000000629F4: 00000084
	.long 0x408                                                // 0000000629F8: 00000408
	.long 0                                                    // 0000000629FC: 00000000
	.type	add_get_group_id_64.kd,@object
add_get_group_id_64.kd:
	.long 0                                                    // 000000062A00: 00000000
	.long 0                                                    // 000000062A04: 00000000
	.long 0x110                                                // 000000062A08: 00000110
	.long 0                                                    // 000000062A0C: 00000000
	.long 0xe400                                               // 000000062A10: 0000E400
	.long 0                                                    // 000000062A14: 00000000
	.long 0                                                    // 000000062A18: 00000000
	.long 0                                                    // 000000062A1C: 00000000
	.long 0                                                    // 000000062A20: 00000000
	.long 0                                                    // 000000062A24: 00000000
	.long 0                                                    // 000000062A28: 00000000
	.long 0                                                    // 000000062A2C: 00000000
	.long 0x60af0100                                           // 000000062A30: 60AF0100
	.long 0x84                                                 // 000000062A34: 00000084
	.long 0x408                                                // 000000062A38: 00000408
	.long 0                                                    // 000000062A3C: 00000000
	.type	add_get_local_size_64.kd,@object
add_get_local_size_64.kd:
	.long 0                                                    // 000000062A40: 00000000
	.long 0                                                    // 000000062A44: 00000000
	.long 0x110                                                // 000000062A48: 00000110
	.long 0                                                    // 000000062A4C: 00000000
	.long 0xe4c0                                               // 000000062A50: 0000E4C0
	.long 0                                                    // 000000062A54: 00000000
	.long 0                                                    // 000000062A58: 00000000
	.long 0                                                    // 000000062A5C: 00000000
	.long 0                                                    // 000000062A60: 00000000
	.long 0                                                    // 000000062A64: 00000000
	.long 0                                                    // 000000062A68: 00000000
	.long 0                                                    // 000000062A6C: 00000000
	.long 0x60af0100                                           // 000000062A70: 60AF0100
	.long 0x84                                                 // 000000062A74: 00000084
	.long 0x408                                                // 000000062A78: 00000408
	.long 0                                                    // 000000062A7C: 00000000
	.type	add_get_global_id_64.kd,@object
add_get_global_id_64.kd:
	.long 0                                                    // 000000062A80: 00000000
	.long 0                                                    // 000000062A84: 00000000
	.long 0x110                                                // 000000062A88: 00000110
	.long 0                                                    // 000000062A8C: 00000000
	.long 0xe580                                               // 000000062A90: 0000E580
	.long 0                                                    // 000000062A94: 00000000
	.long 0                                                    // 000000062A98: 00000000
	.long 0                                                    // 000000062A9C: 00000000
	.long 0                                                    // 000000062AA0: 00000000
	.long 0                                                    // 000000062AA4: 00000000
	.long 0                                                    // 000000062AA8: 00000000
	.long 0                                                    // 000000062AAC: 00000000
	.long 0x60af0100                                           // 000000062AB0: 60AF0100
	.long 0x84                                                 // 000000062AB4: 00000084
	.long 0x408                                                // 000000062AB8: 00000408
	.long 0                                                    // 000000062ABC: 00000000
	.type	add_get_global_size_64.kd,@object
add_get_global_size_64.kd:
	.long 0                                                    // 000000062AC0: 00000000
	.long 0                                                    // 000000062AC4: 00000000
	.long 0x110                                                // 000000062AC8: 00000110
	.long 0                                                    // 000000062ACC: 00000000
	.ascii "@"                                                 // 000000062AD0: 40
	.byte 0xe6                                                 // 000000062AD1: E6
	.short 0                                                   // 000000062AD2: 0000
	.long 0                                                    // 000000062AD4: 00000000
	.long 0                                                    // 000000062AD8: 00000000
	.long 0                                                    // 000000062ADC: 00000000
	.long 0                                                    // 000000062AE0: 00000000
	.long 0                                                    // 000000062AE4: 00000000
	.long 0                                                    // 000000062AE8: 00000000
	.long 0                                                    // 000000062AEC: 00000000
	.long 0x60af0100                                           // 000000062AF0: 60AF0100
	.long 0x84                                                 // 000000062AF4: 00000084
	.long 0x408                                                // 000000062AF8: 00000408
	.long 0                                                    // 000000062AFC: 00000000
	.type	add_get_num_groups_64.kd,@object
add_get_num_groups_64.kd:
	.long 0                                                    // 000000062B00: 00000000
	.long 0                                                    // 000000062B04: 00000000
	.long 0x110                                                // 000000062B08: 00000110
	.long 0                                                    // 000000062B0C: 00000000
	.long 0xe700                                               // 000000062B10: 0000E700
	.long 0                                                    // 000000062B14: 00000000
	.long 0                                                    // 000000062B18: 00000000
	.long 0                                                    // 000000062B1C: 00000000
	.long 0                                                    // 000000062B20: 00000000
	.long 0                                                    // 000000062B24: 00000000
	.long 0                                                    // 000000062B28: 00000000
	.long 0                                                    // 000000062B2C: 00000000
	.long 0x60af0100                                           // 000000062B30: 60AF0100
	.long 0x84                                                 // 000000062B34: 00000084
	.long 0x408                                                // 000000062B38: 00000408
	.long 0                                                    // 000000062B3C: 00000000
	.type	add_get_work_dim.kd,@object
add_get_work_dim.kd:
	.long 0                                                    // 000000062B40: 00000000
	.long 0                                                    // 000000062B44: 00000000
	.long 0x110                                                // 000000062B48: 00000110
	.long 0                                                    // 000000062B4C: 00000000
	.long 0xe7c0                                               // 000000062B50: 0000E7C0
	.long 0                                                    // 000000062B54: 00000000
	.long 0                                                    // 000000062B58: 00000000
	.long 0                                                    // 000000062B5C: 00000000
	.long 0                                                    // 000000062B60: 00000000
	.long 0                                                    // 000000062B64: 00000000
	.long 0                                                    // 000000062B68: 00000000
	.long 0                                                    // 000000062B6C: 00000000
	.long 0x60af0100                                           // 000000062B70: 60AF0100
	.long 0x84                                                 // 000000062B74: 00000084
	.long 0x408                                                // 000000062B78: 00000408
	.long 0                                                    // 000000062B7C: 00000000
	.type	add_x_8_8.kd,@object
add_x_8_8.kd:
	.long 0                                                    // 000000062B80: 00000000
	.long 0                                                    // 000000062B84: 00000000
	.long 0x110                                                // 000000062B88: 00000110
	.long 0                                                    // 000000062B8C: 00000000
	.long 0xe880                                               // 000000062B90: 0000E880
	.long 0                                                    // 000000062B94: 00000000
	.long 0                                                    // 000000062B98: 00000000
	.long 0                                                    // 000000062B9C: 00000000
	.long 0                                                    // 000000062BA0: 00000000
	.long 0                                                    // 000000062BA4: 00000000
	.long 0                                                    // 000000062BA8: 00000000
	.long 0                                                    // 000000062BAC: 00000000
	.long 0x60af0100                                           // 000000062BB0: 60AF0100
	.long 0x984                                                // 000000062BB4: 00000984
	.long 0x408                                                // 000000062BB8: 00000408
	.long 0                                                    // 000000062BBC: 00000000
	.type	add_get_global_offset_8_8.kd,@object
add_get_global_offset_8_8.kd:
	.long 0                                                    // 000000062BC0: 00000000
	.long 0                                                    // 000000062BC4: 00000000
	.long 0x110                                                // 000000062BC8: 00000110
	.long 0                                                    // 000000062BCC: 00000000
	.ascii "@"                                                 // 000000062BD0: 40
	.byte 0xe9                                                 // 000000062BD1: E9
	.short 0                                                   // 000000062BD2: 0000
	.long 0                                                    // 000000062BD4: 00000000
	.long 0                                                    // 000000062BD8: 00000000
	.long 0                                                    // 000000062BDC: 00000000
	.long 0                                                    // 000000062BE0: 00000000
	.long 0                                                    // 000000062BE4: 00000000
	.long 0                                                    // 000000062BE8: 00000000
	.long 0                                                    // 000000062BEC: 00000000
	.long 0x60af0100                                           // 000000062BF0: 60AF0100
	.long 0x84                                                 // 000000062BF4: 00000084
	.long 0x408                                                // 000000062BF8: 00000408
	.long 0                                                    // 000000062BFC: 00000000
	.type	add_get_local_id_8_8.kd,@object
add_get_local_id_8_8.kd:
	.long 0                                                    // 000000062C00: 00000000
	.long 0                                                    // 000000062C04: 00000000
	.long 0x110                                                // 000000062C08: 00000110
	.long 0                                                    // 000000062C0C: 00000000
	.long 0xea00                                               // 000000062C10: 0000EA00
	.long 0                                                    // 000000062C14: 00000000
	.long 0                                                    // 000000062C18: 00000000
	.long 0                                                    // 000000062C1C: 00000000
	.long 0                                                    // 000000062C20: 00000000
	.long 0                                                    // 000000062C24: 00000000
	.long 0                                                    // 000000062C28: 00000000
	.long 0                                                    // 000000062C2C: 00000000
	.long 0x60af0100                                           // 000000062C30: 60AF0100
	.long 0x884                                                // 000000062C34: 00000884
	.long 0x408                                                // 000000062C38: 00000408
	.long 0                                                    // 000000062C3C: 00000000
	.type	add_get_group_id_8_8.kd,@object
add_get_group_id_8_8.kd:
	.long 0                                                    // 000000062C40: 00000000
	.long 0                                                    // 000000062C44: 00000000
	.long 0x110                                                // 000000062C48: 00000110
	.long 0                                                    // 000000062C4C: 00000000
	.long 0xeac0                                               // 000000062C50: 0000EAC0
	.long 0                                                    // 000000062C54: 00000000
	.long 0                                                    // 000000062C58: 00000000
	.long 0                                                    // 000000062C5C: 00000000
	.long 0                                                    // 000000062C60: 00000000
	.long 0                                                    // 000000062C64: 00000000
	.long 0                                                    // 000000062C68: 00000000
	.long 0                                                    // 000000062C6C: 00000000
	.long 0x60af0100                                           // 000000062C70: 60AF0100
	.long 0x184                                                // 000000062C74: 00000184
	.long 0x408                                                // 000000062C78: 00000408
	.long 0                                                    // 000000062C7C: 00000000
	.type	add_get_local_size_8_8.kd,@object
add_get_local_size_8_8.kd:
	.long 0                                                    // 000000062C80: 00000000
	.long 0                                                    // 000000062C84: 00000000
	.long 0x110                                                // 000000062C88: 00000110
	.long 0                                                    // 000000062C8C: 00000000
	.long 0xeb80                                               // 000000062C90: 0000EB80
	.long 0                                                    // 000000062C94: 00000000
	.long 0                                                    // 000000062C98: 00000000
	.long 0                                                    // 000000062C9C: 00000000
	.long 0                                                    // 000000062CA0: 00000000
	.long 0                                                    // 000000062CA4: 00000000
	.long 0                                                    // 000000062CA8: 00000000
	.long 0                                                    // 000000062CAC: 00000000
	.long 0x60af0100                                           // 000000062CB0: 60AF0100
	.long 0x84                                                 // 000000062CB4: 00000084
	.long 0x408                                                // 000000062CB8: 00000408
	.long 0                                                    // 000000062CBC: 00000000
	.type	add_get_global_id_8_8.kd,@object
add_get_global_id_8_8.kd:
	.long 0                                                    // 000000062CC0: 00000000
	.long 0                                                    // 000000062CC4: 00000000
	.long 0x110                                                // 000000062CC8: 00000110
	.long 0                                                    // 000000062CCC: 00000000
	.ascii "@"                                                 // 000000062CD0: 40
	.byte 0xec                                                 // 000000062CD1: EC
	.short 0                                                   // 000000062CD2: 0000
	.long 0                                                    // 000000062CD4: 00000000
	.long 0                                                    // 000000062CD8: 00000000
	.long 0                                                    // 000000062CDC: 00000000
	.long 0                                                    // 000000062CE0: 00000000
	.long 0                                                    // 000000062CE4: 00000000
	.long 0                                                    // 000000062CE8: 00000000
	.long 0                                                    // 000000062CEC: 00000000
	.long 0x60af0100                                           // 000000062CF0: 60AF0100
	.long 0x984                                                // 000000062CF4: 00000984
	.long 0x408                                                // 000000062CF8: 00000408
	.long 0                                                    // 000000062CFC: 00000000
	.type	add_get_global_size_8_8.kd,@object
add_get_global_size_8_8.kd:
	.long 0                                                    // 000000062D00: 00000000
	.long 0                                                    // 000000062D04: 00000000
	.long 0x110                                                // 000000062D08: 00000110
	.long 0                                                    // 000000062D0C: 00000000
	.long 0xed00                                               // 000000062D10: 0000ED00
	.long 0                                                    // 000000062D14: 00000000
	.long 0                                                    // 000000062D18: 00000000
	.long 0                                                    // 000000062D1C: 00000000
	.long 0                                                    // 000000062D20: 00000000
	.long 0                                                    // 000000062D24: 00000000
	.long 0                                                    // 000000062D28: 00000000
	.long 0                                                    // 000000062D2C: 00000000
	.long 0x60af0100                                           // 000000062D30: 60AF0100
	.long 0x84                                                 // 000000062D34: 00000084
	.long 0x408                                                // 000000062D38: 00000408
	.long 0                                                    // 000000062D3C: 00000000
	.type	add_get_num_groups_8_8.kd,@object
add_get_num_groups_8_8.kd:
	.long 0                                                    // 000000062D40: 00000000
	.long 0                                                    // 000000062D44: 00000000
	.long 0x110                                                // 000000062D48: 00000110
	.long 0                                                    // 000000062D4C: 00000000
	.long 0xedc0                                               // 000000062D50: 0000EDC0
	.long 0                                                    // 000000062D54: 00000000
	.long 0                                                    // 000000062D58: 00000000
	.long 0                                                    // 000000062D5C: 00000000
	.long 0                                                    // 000000062D60: 00000000
	.long 0                                                    // 000000062D64: 00000000
	.long 0                                                    // 000000062D68: 00000000
	.long 0                                                    // 000000062D6C: 00000000
	.long 0x60af0100                                           // 000000062D70: 60AF0100
	.long 0x84                                                 // 000000062D74: 00000084
	.long 0x408                                                // 000000062D78: 00000408
	.long 0                                                    // 000000062D7C: 00000000
	.type	add_get_work_dim_8_8.kd,@object
add_get_work_dim_8_8.kd:
	.long 0                                                    // 000000062D80: 00000000
	.long 0                                                    // 000000062D84: 00000000
	.long 0x110                                                // 000000062D88: 00000110
	.long 0                                                    // 000000062D8C: 00000000
	.long 0xee80                                               // 000000062D90: 0000EE80
	.long 0                                                    // 000000062D94: 00000000
	.long 0                                                    // 000000062D98: 00000000
	.long 0                                                    // 000000062D9C: 00000000
	.long 0                                                    // 000000062DA0: 00000000
	.long 0                                                    // 000000062DA4: 00000000
	.long 0                                                    // 000000062DA8: 00000000
	.long 0                                                    // 000000062DAC: 00000000
	.long 0x60af0100                                           // 000000062DB0: 60AF0100
	.long 0x984                                                // 000000062DB4: 00000984
	.long 0x408                                                // 000000062DB8: 00000408
	.long 0                                                    // 000000062DBC: 00000000
	.type	add_long_x_x.kd,@object
add_long_x_x.kd:
	.long 0                                                    // 000000062DC0: 00000000
	.long 0                                                    // 000000062DC4: 00000000
	.long 0x110                                                // 000000062DC8: 00000110
	.long 0                                                    // 000000062DCC: 00000000
	.ascii "@"                                                 // 000000062DD0: 40
	.byte 0xef                                                 // 000000062DD1: EF
	.short 0                                                   // 000000062DD2: 0000
	.long 0                                                    // 000000062DD4: 00000000
	.long 0                                                    // 000000062DD8: 00000000
	.long 0                                                    // 000000062DDC: 00000000
	.long 0                                                    // 000000062DE0: 00000000
	.long 0                                                    // 000000062DE4: 00000000
	.long 0                                                    // 000000062DE8: 00000000
	.long 0                                                    // 000000062DEC: 00000000
	.long 0x60af0100                                           // 000000062DF0: 60AF0100
	.long 0x84                                                 // 000000062DF4: 00000084
	.long 0x408                                                // 000000062DF8: 00000408
	.long 0                                                    // 000000062DFC: 00000000
	.type	add_long_get_global_offset_x.kd,@object
add_long_get_global_offset_x.kd:
	.long 0                                                    // 000000062E00: 00000000
	.long 0                                                    // 000000062E04: 00000000
	.long 0x110                                                // 000000062E08: 00000110
	.long 0                                                    // 000000062E0C: 00000000
	.long 0xf000                                               // 000000062E10: 0000F000
	.long 0                                                    // 000000062E14: 00000000
	.long 0                                                    // 000000062E18: 00000000
	.long 0                                                    // 000000062E1C: 00000000
	.long 0                                                    // 000000062E20: 00000000
	.long 0                                                    // 000000062E24: 00000000
	.long 0                                                    // 000000062E28: 00000000
	.long 0                                                    // 000000062E2C: 00000000
	.long 0x60af0101                                           // 000000062E30: 60AF0101
	.long 0x1384                                               // 000000062E34: 00001384
	.long 0x408                                                // 000000062E38: 00000408
	.long 0                                                    // 000000062E3C: 00000000
	.type	add_long_get_local_id_x.kd,@object
add_long_get_local_id_x.kd:
	.long 0                                                    // 000000062E40: 00000000
	.long 0                                                    // 000000062E44: 00000000
	.long 0x110                                                // 000000062E48: 00000110
	.long 0                                                    // 000000062E4C: 00000000
	.long 0xf1c0                                               // 000000062E50: 0000F1C0
	.long 0                                                    // 000000062E54: 00000000
	.long 0                                                    // 000000062E58: 00000000
	.long 0                                                    // 000000062E5C: 00000000
	.long 0                                                    // 000000062E60: 00000000
	.long 0                                                    // 000000062E64: 00000000
	.long 0                                                    // 000000062E68: 00000000
	.long 0                                                    // 000000062E6C: 00000000
	.long 0x60af0101                                           // 000000062E70: 60AF0101
	.long 0x1384                                               // 000000062E74: 00001384
	.long 0x408                                                // 000000062E78: 00000408
	.long 0                                                    // 000000062E7C: 00000000
	.type	add_long_get_group_id_x.kd,@object
add_long_get_group_id_x.kd:
	.long 0                                                    // 000000062E80: 00000000
	.long 0                                                    // 000000062E84: 00000000
	.long 0x110                                                // 000000062E88: 00000110
	.long 0                                                    // 000000062E8C: 00000000
	.long 0xf380                                               // 000000062E90: 0000F380
	.long 0                                                    // 000000062E94: 00000000
	.long 0                                                    // 000000062E98: 00000000
	.long 0                                                    // 000000062E9C: 00000000
	.long 0                                                    // 000000062EA0: 00000000
	.long 0                                                    // 000000062EA4: 00000000
	.long 0                                                    // 000000062EA8: 00000000
	.long 0                                                    // 000000062EAC: 00000000
	.long 0x60af0101                                           // 000000062EB0: 60AF0101
	.long 0x1384                                               // 000000062EB4: 00001384
	.long 0x408                                                // 000000062EB8: 00000408
	.long 0                                                    // 000000062EBC: 00000000
	.type	add_long_get_local_size_x.kd,@object
add_long_get_local_size_x.kd:
	.long 0                                                    // 000000062EC0: 00000000
	.long 0                                                    // 000000062EC4: 00000000
	.long 0x110                                                // 000000062EC8: 00000110
	.long 0                                                    // 000000062ECC: 00000000
	.ascii "@"                                                 // 000000062ED0: 40
	.byte 0xf5                                                 // 000000062ED1: F5
	.short 0                                                   // 000000062ED2: 0000
	.long 0                                                    // 000000062ED4: 00000000
	.long 0                                                    // 000000062ED8: 00000000
	.long 0                                                    // 000000062EDC: 00000000
	.long 0                                                    // 000000062EE0: 00000000
	.long 0                                                    // 000000062EE4: 00000000
	.long 0                                                    // 000000062EE8: 00000000
	.long 0                                                    // 000000062EEC: 00000000
	.long 0x60af0101                                           // 000000062EF0: 60AF0101
	.long 0x1384                                               // 000000062EF4: 00001384
	.long 0x408                                                // 000000062EF8: 00000408
	.long 0                                                    // 000000062EFC: 00000000
	.type	add_long_get_global_id_x.kd,@object
add_long_get_global_id_x.kd:
	.long 0                                                    // 000000062F00: 00000000
	.long 0                                                    // 000000062F04: 00000000
	.long 0x110                                                // 000000062F08: 00000110
	.long 0                                                    // 000000062F0C: 00000000
	.long 0xf700                                               // 000000062F10: 0000F700
	.long 0                                                    // 000000062F14: 00000000
	.long 0                                                    // 000000062F18: 00000000
	.long 0                                                    // 000000062F1C: 00000000
	.long 0                                                    // 000000062F20: 00000000
	.long 0                                                    // 000000062F24: 00000000
	.long 0                                                    // 000000062F28: 00000000
	.long 0                                                    // 000000062F2C: 00000000
	.long 0x60af0101                                           // 000000062F30: 60AF0101
	.long 0x1384                                               // 000000062F34: 00001384
	.long 0x408                                                // 000000062F38: 00000408
	.long 0                                                    // 000000062F3C: 00000000
	.type	add_long_get_global_size_x.kd,@object
add_long_get_global_size_x.kd:
	.long 0                                                    // 000000062F40: 00000000
	.long 0                                                    // 000000062F44: 00000000
	.long 0x110                                                // 000000062F48: 00000110
	.long 0                                                    // 000000062F4C: 00000000
	.long 0xf8c0                                               // 000000062F50: 0000F8C0
	.long 0                                                    // 000000062F54: 00000000
	.long 0                                                    // 000000062F58: 00000000
	.long 0                                                    // 000000062F5C: 00000000
	.long 0                                                    // 000000062F60: 00000000
	.long 0                                                    // 000000062F64: 00000000
	.long 0                                                    // 000000062F68: 00000000
	.long 0                                                    // 000000062F6C: 00000000
	.long 0x60af0101                                           // 000000062F70: 60AF0101
	.long 0x1384                                               // 000000062F74: 00001384
	.long 0x408                                                // 000000062F78: 00000408
	.long 0                                                    // 000000062F7C: 00000000
	.type	add_long_get_num_groups_x.kd,@object
add_long_get_num_groups_x.kd:
	.long 0                                                    // 000000062F80: 00000000
	.long 0                                                    // 000000062F84: 00000000
	.long 0x110                                                // 000000062F88: 00000110
	.long 0                                                    // 000000062F8C: 00000000
	.long 0xfa80                                               // 000000062F90: 0000FA80
	.long 0                                                    // 000000062F94: 00000000
	.long 0                                                    // 000000062F98: 00000000
	.long 0                                                    // 000000062F9C: 00000000
	.long 0                                                    // 000000062FA0: 00000000
	.long 0                                                    // 000000062FA4: 00000000
	.long 0                                                    // 000000062FA8: 00000000
	.long 0                                                    // 000000062FAC: 00000000
	.long 0x60af0101                                           // 000000062FB0: 60AF0101
	.long 0x1384                                               // 000000062FB4: 00001384
	.long 0x408                                                // 000000062FB8: 00000408
	.long 0                                                    // 000000062FBC: 00000000
	.type	add_long_get_work_dim_x.kd,@object
add_long_get_work_dim_x.kd:
	.long 0                                                    // 000000062FC0: 00000000
	.long 0                                                    // 000000062FC4: 00000000
	.long 0x110                                                // 000000062FC8: 00000110
	.long 0                                                    // 000000062FCC: 00000000
	.ascii "@"                                                 // 000000062FD0: 40
	.byte 0xfc                                                 // 000000062FD1: FC
	.short 0                                                   // 000000062FD2: 0000
	.long 0                                                    // 000000062FD4: 00000000
	.long 0                                                    // 000000062FD8: 00000000
	.long 0                                                    // 000000062FDC: 00000000
	.long 0                                                    // 000000062FE0: 00000000
	.long 0                                                    // 000000062FE4: 00000000
	.long 0                                                    // 000000062FE8: 00000000
	.long 0                                                    // 000000062FEC: 00000000
	.long 0x60af0100                                           // 000000062FF0: 60AF0100
	.long 0x84                                                 // 000000062FF4: 00000084
	.long 0x408                                                // 000000062FF8: 00000408
	.long 0                                                    // 000000062FFC: 00000000
	.type	add_long_x_get_global_offset.kd,@object
add_long_x_get_global_offset.kd:
	.long 0                                                    // 000000063000: 00000000
	.long 0                                                    // 000000063004: 00000000
	.long 0x110                                                // 000000063008: 00000110
	.long 0                                                    // 00000006300C: 00000000
	.long 0xfd00                                               // 000000063010: 0000FD00
	.long 0                                                    // 000000063014: 00000000
	.long 0                                                    // 000000063018: 00000000
	.long 0                                                    // 00000006301C: 00000000
	.long 0                                                    // 000000063020: 00000000
	.long 0                                                    // 000000063024: 00000000
	.long 0                                                    // 000000063028: 00000000
	.long 0                                                    // 00000006302C: 00000000
	.long 0x60af0101                                           // 000000063030: 60AF0101
	.long 0x1384                                               // 000000063034: 00001384
	.long 0x408                                                // 000000063038: 00000408
	.long 0                                                    // 00000006303C: 00000000
	.type	add_long_get_global_offset_get_global_offset.kd,@object
add_long_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 000000063040: 00000000
	.long 0                                                    // 000000063044: 00000000
	.long 0x110                                                // 000000063048: 00000110
	.long 0                                                    // 00000006304C: 00000000
	.long 0xfec0                                               // 000000063050: 0000FEC0
	.long 0                                                    // 000000063054: 00000000
	.long 0                                                    // 000000063058: 00000000
	.long 0                                                    // 00000006305C: 00000000
	.long 0                                                    // 000000063060: 00000000
	.long 0                                                    // 000000063064: 00000000
	.long 0                                                    // 000000063068: 00000000
	.long 0                                                    // 00000006306C: 00000000
	.long 0x60af0101                                           // 000000063070: 60AF0101
	.long 0x1384                                               // 000000063074: 00001384
	.long 0x408                                                // 000000063078: 00000408
	.long 0                                                    // 00000006307C: 00000000
	.type	add_long_get_local_id_get_global_offset.kd,@object
add_long_get_local_id_get_global_offset.kd:
	.long 0                                                    // 000000063080: 00000000
	.long 0                                                    // 000000063084: 00000000
	.long 0x110                                                // 000000063088: 00000110
	.long 0                                                    // 00000006308C: 00000000
	.long 0x10080                                              // 000000063090: 00010080
	.long 0                                                    // 000000063094: 00000000
	.long 0                                                    // 000000063098: 00000000
	.long 0                                                    // 00000006309C: 00000000
	.long 0                                                    // 0000000630A0: 00000000
	.long 0                                                    // 0000000630A4: 00000000
	.long 0                                                    // 0000000630A8: 00000000
	.long 0                                                    // 0000000630AC: 00000000
	.long 0x60af0101                                           // 0000000630B0: 60AF0101
	.long 0x1384                                               // 0000000630B4: 00001384
	.long 0x408                                                // 0000000630B8: 00000408
	.long 0                                                    // 0000000630BC: 00000000
	.type	add_long_get_group_id_get_global_offset.kd,@object
add_long_get_group_id_get_global_offset.kd:
	.long 0                                                    // 0000000630C0: 00000000
	.long 0                                                    // 0000000630C4: 00000000
	.long 0x110                                                // 0000000630C8: 00000110
	.long 0                                                    // 0000000630CC: 00000000
	.ascii "@"                                                 // 0000000630D0: 40
	.byte 0x2                                                  // 0000000630D1: 02
	.short 0x1                                                 // 0000000630D2: 0001
	.long 0                                                    // 0000000630D4: 00000000
	.long 0                                                    // 0000000630D8: 00000000
	.long 0                                                    // 0000000630DC: 00000000
	.long 0                                                    // 0000000630E0: 00000000
	.long 0                                                    // 0000000630E4: 00000000
	.long 0                                                    // 0000000630E8: 00000000
	.long 0                                                    // 0000000630EC: 00000000
	.long 0x60af0101                                           // 0000000630F0: 60AF0101
	.long 0x1384                                               // 0000000630F4: 00001384
	.long 0x408                                                // 0000000630F8: 00000408
	.long 0                                                    // 0000000630FC: 00000000
	.type	add_long_get_local_size_get_global_offset.kd,@object
add_long_get_local_size_get_global_offset.kd:
	.long 0                                                    // 000000063100: 00000000
	.long 0                                                    // 000000063104: 00000000
	.long 0x110                                                // 000000063108: 00000110
	.long 0                                                    // 00000006310C: 00000000
	.long 0x10400                                              // 000000063110: 00010400
	.long 0                                                    // 000000063114: 00000000
	.long 0                                                    // 000000063118: 00000000
	.long 0                                                    // 00000006311C: 00000000
	.long 0                                                    // 000000063120: 00000000
	.long 0                                                    // 000000063124: 00000000
	.long 0                                                    // 000000063128: 00000000
	.long 0                                                    // 00000006312C: 00000000
	.long 0x60af0101                                           // 000000063130: 60AF0101
	.long 0x1384                                               // 000000063134: 00001384
	.long 0x408                                                // 000000063138: 00000408
	.long 0                                                    // 00000006313C: 00000000
	.type	add_long_get_global_id_get_global_offset.kd,@object
add_long_get_global_id_get_global_offset.kd:
	.long 0                                                    // 000000063140: 00000000
	.long 0                                                    // 000000063144: 00000000
	.long 0x110                                                // 000000063148: 00000110
	.long 0                                                    // 00000006314C: 00000000
	.long 0x105c0                                              // 000000063150: 000105C0
	.long 0                                                    // 000000063154: 00000000
	.long 0                                                    // 000000063158: 00000000
	.long 0                                                    // 00000006315C: 00000000
	.long 0                                                    // 000000063160: 00000000
	.long 0                                                    // 000000063164: 00000000
	.long 0                                                    // 000000063168: 00000000
	.long 0                                                    // 00000006316C: 00000000
	.long 0x60af0101                                           // 000000063170: 60AF0101
	.long 0x1384                                               // 000000063174: 00001384
	.long 0x408                                                // 000000063178: 00000408
	.long 0                                                    // 00000006317C: 00000000
	.type	add_long_get_global_size_get_global_offset.kd,@object
add_long_get_global_size_get_global_offset.kd:
	.long 0                                                    // 000000063180: 00000000
	.long 0                                                    // 000000063184: 00000000
	.long 0x110                                                // 000000063188: 00000110
	.long 0                                                    // 00000006318C: 00000000
	.long 0x10780                                              // 000000063190: 00010780
	.long 0                                                    // 000000063194: 00000000
	.long 0                                                    // 000000063198: 00000000
	.long 0                                                    // 00000006319C: 00000000
	.long 0                                                    // 0000000631A0: 00000000
	.long 0                                                    // 0000000631A4: 00000000
	.long 0                                                    // 0000000631A8: 00000000
	.long 0                                                    // 0000000631AC: 00000000
	.long 0x60af0101                                           // 0000000631B0: 60AF0101
	.long 0x1384                                               // 0000000631B4: 00001384
	.long 0x408                                                // 0000000631B8: 00000408
	.long 0                                                    // 0000000631BC: 00000000
	.type	add_long_get_num_groups_get_global_offset.kd,@object
add_long_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 0000000631C0: 00000000
	.long 0                                                    // 0000000631C4: 00000000
	.long 0x110                                                // 0000000631C8: 00000110
	.long 0                                                    // 0000000631CC: 00000000
	.ascii "@	"                                                // 0000000631D0: 0940
	.short 0x1                                                 // 0000000631D2: 0001
	.long 0                                                    // 0000000631D4: 00000000
	.long 0                                                    // 0000000631D8: 00000000
	.long 0                                                    // 0000000631DC: 00000000
	.long 0                                                    // 0000000631E0: 00000000
	.long 0                                                    // 0000000631E4: 00000000
	.long 0                                                    // 0000000631E8: 00000000
	.long 0                                                    // 0000000631EC: 00000000
	.long 0x60af0101                                           // 0000000631F0: 60AF0101
	.long 0x1384                                               // 0000000631F4: 00001384
	.long 0x408                                                // 0000000631F8: 00000408
	.long 0                                                    // 0000000631FC: 00000000
	.type	add_long_get_work_dim_get_global_offset.kd,@object
add_long_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 000000063200: 00000000
	.long 0                                                    // 000000063204: 00000000
	.long 0x110                                                // 000000063208: 00000110
	.long 0                                                    // 00000006320C: 00000000
	.long 0x10b00                                              // 000000063210: 00010B00
	.long 0                                                    // 000000063214: 00000000
	.long 0                                                    // 000000063218: 00000000
	.long 0                                                    // 00000006321C: 00000000
	.long 0                                                    // 000000063220: 00000000
	.long 0                                                    // 000000063224: 00000000
	.long 0                                                    // 000000063228: 00000000
	.long 0                                                    // 00000006322C: 00000000
	.long 0x60af0101                                           // 000000063230: 60AF0101
	.long 0x1384                                               // 000000063234: 00001384
	.long 0x408                                                // 000000063238: 00000408
	.long 0                                                    // 00000006323C: 00000000
	.type	add_long_x_get_local_id.kd,@object
add_long_x_get_local_id.kd:
	.long 0                                                    // 000000063240: 00000000
	.long 0                                                    // 000000063244: 00000000
	.long 0x110                                                // 000000063248: 00000110
	.long 0                                                    // 00000006324C: 00000000
	.long 0x10cc0                                              // 000000063250: 00010CC0
	.long 0                                                    // 000000063254: 00000000
	.long 0                                                    // 000000063258: 00000000
	.long 0                                                    // 00000006325C: 00000000
	.long 0                                                    // 000000063260: 00000000
	.long 0                                                    // 000000063264: 00000000
	.long 0                                                    // 000000063268: 00000000
	.long 0                                                    // 00000006326C: 00000000
	.long 0x60af0101                                           // 000000063270: 60AF0101
	.long 0x1384                                               // 000000063274: 00001384
	.long 0x408                                                // 000000063278: 00000408
	.long 0                                                    // 00000006327C: 00000000
	.type	add_long_get_global_offset_get_local_id.kd,@object
add_long_get_global_offset_get_local_id.kd:
	.long 0                                                    // 000000063280: 00000000
	.long 0                                                    // 000000063284: 00000000
	.long 0x110                                                // 000000063288: 00000110
	.long 0                                                    // 00000006328C: 00000000
	.long 0x10e80                                              // 000000063290: 00010E80
	.long 0                                                    // 000000063294: 00000000
	.long 0                                                    // 000000063298: 00000000
	.long 0                                                    // 00000006329C: 00000000
	.long 0                                                    // 0000000632A0: 00000000
	.long 0                                                    // 0000000632A4: 00000000
	.long 0                                                    // 0000000632A8: 00000000
	.long 0                                                    // 0000000632AC: 00000000
	.long 0x60af0101                                           // 0000000632B0: 60AF0101
	.long 0x1384                                               // 0000000632B4: 00001384
	.long 0x408                                                // 0000000632B8: 00000408
	.long 0                                                    // 0000000632BC: 00000000
	.type	add_long_get_local_id_get_local_id.kd,@object
add_long_get_local_id_get_local_id.kd:
	.long 0                                                    // 0000000632C0: 00000000
	.long 0                                                    // 0000000632C4: 00000000
	.long 0x110                                                // 0000000632C8: 00000110
	.long 0                                                    // 0000000632CC: 00000000
	.ascii "@"                                                 // 0000000632D0: 40
	.byte 0x10                                                 // 0000000632D1: 10
	.short 0x1                                                 // 0000000632D2: 0001
	.long 0                                                    // 0000000632D4: 00000000
	.long 0                                                    // 0000000632D8: 00000000
	.long 0                                                    // 0000000632DC: 00000000
	.long 0                                                    // 0000000632E0: 00000000
	.long 0                                                    // 0000000632E4: 00000000
	.long 0                                                    // 0000000632E8: 00000000
	.long 0                                                    // 0000000632EC: 00000000
	.long 0x60af0101                                           // 0000000632F0: 60AF0101
	.long 0x1384                                               // 0000000632F4: 00001384
	.long 0x408                                                // 0000000632F8: 00000408
	.long 0                                                    // 0000000632FC: 00000000
	.type	add_long_get_group_id_get_local_id.kd,@object
add_long_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000063300: 00000000
	.long 0                                                    // 000000063304: 00000000
	.long 0x110                                                // 000000063308: 00000110
	.long 0                                                    // 00000006330C: 00000000
	.long 0x11200                                              // 000000063310: 00011200
	.long 0                                                    // 000000063314: 00000000
	.long 0                                                    // 000000063318: 00000000
	.long 0                                                    // 00000006331C: 00000000
	.long 0                                                    // 000000063320: 00000000
	.long 0                                                    // 000000063324: 00000000
	.long 0                                                    // 000000063328: 00000000
	.long 0                                                    // 00000006332C: 00000000
	.long 0x60af0101                                           // 000000063330: 60AF0101
	.long 0x1384                                               // 000000063334: 00001384
	.long 0x408                                                // 000000063338: 00000408
	.long 0                                                    // 00000006333C: 00000000
	.type	add_long_get_local_size_get_local_id.kd,@object
add_long_get_local_size_get_local_id.kd:
	.long 0                                                    // 000000063340: 00000000
	.long 0                                                    // 000000063344: 00000000
	.long 0x110                                                // 000000063348: 00000110
	.long 0                                                    // 00000006334C: 00000000
	.long 0x113c0                                              // 000000063350: 000113C0
	.long 0                                                    // 000000063354: 00000000
	.long 0                                                    // 000000063358: 00000000
	.long 0                                                    // 00000006335C: 00000000
	.long 0                                                    // 000000063360: 00000000
	.long 0                                                    // 000000063364: 00000000
	.long 0                                                    // 000000063368: 00000000
	.long 0                                                    // 00000006336C: 00000000
	.long 0x60af0101                                           // 000000063370: 60AF0101
	.long 0x1384                                               // 000000063374: 00001384
	.long 0x408                                                // 000000063378: 00000408
	.long 0                                                    // 00000006337C: 00000000
	.type	add_long_get_global_id_get_local_id.kd,@object
add_long_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000063380: 00000000
	.long 0                                                    // 000000063384: 00000000
	.long 0x110                                                // 000000063388: 00000110
	.long 0                                                    // 00000006338C: 00000000
	.long 0x11580                                              // 000000063390: 00011580
	.long 0                                                    // 000000063394: 00000000
	.long 0                                                    // 000000063398: 00000000
	.long 0                                                    // 00000006339C: 00000000
	.long 0                                                    // 0000000633A0: 00000000
	.long 0                                                    // 0000000633A4: 00000000
	.long 0                                                    // 0000000633A8: 00000000
	.long 0                                                    // 0000000633AC: 00000000
	.long 0x60af0101                                           // 0000000633B0: 60AF0101
	.long 0x1384                                               // 0000000633B4: 00001384
	.long 0x408                                                // 0000000633B8: 00000408
	.long 0                                                    // 0000000633BC: 00000000
	.type	add_long_get_global_size_get_local_id.kd,@object
add_long_get_global_size_get_local_id.kd:
	.long 0                                                    // 0000000633C0: 00000000
	.long 0                                                    // 0000000633C4: 00000000
	.long 0x110                                                // 0000000633C8: 00000110
	.long 0                                                    // 0000000633CC: 00000000
	.ascii "@"                                                 // 0000000633D0: 40
	.byte 0x17                                                 // 0000000633D1: 17
	.short 0x1                                                 // 0000000633D2: 0001
	.long 0                                                    // 0000000633D4: 00000000
	.long 0                                                    // 0000000633D8: 00000000
	.long 0                                                    // 0000000633DC: 00000000
	.long 0                                                    // 0000000633E0: 00000000
	.long 0                                                    // 0000000633E4: 00000000
	.long 0                                                    // 0000000633E8: 00000000
	.long 0                                                    // 0000000633EC: 00000000
	.long 0x60af0101                                           // 0000000633F0: 60AF0101
	.long 0x1384                                               // 0000000633F4: 00001384
	.long 0x408                                                // 0000000633F8: 00000408
	.long 0                                                    // 0000000633FC: 00000000
	.type	add_long_get_num_groups_get_local_id.kd,@object
add_long_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000063400: 00000000
	.long 0                                                    // 000000063404: 00000000
	.long 0x110                                                // 000000063408: 00000110
	.long 0                                                    // 00000006340C: 00000000
	.long 0x11900                                              // 000000063410: 00011900
	.long 0                                                    // 000000063414: 00000000
	.long 0                                                    // 000000063418: 00000000
	.long 0                                                    // 00000006341C: 00000000
	.long 0                                                    // 000000063420: 00000000
	.long 0                                                    // 000000063424: 00000000
	.long 0                                                    // 000000063428: 00000000
	.long 0                                                    // 00000006342C: 00000000
	.long 0x60af0101                                           // 000000063430: 60AF0101
	.long 0x1384                                               // 000000063434: 00001384
	.long 0x408                                                // 000000063438: 00000408
	.long 0                                                    // 00000006343C: 00000000
	.type	add_long_get_work_dim_get_local_id.kd,@object
add_long_get_work_dim_get_local_id.kd:
	.long 0                                                    // 000000063440: 00000000
	.long 0                                                    // 000000063444: 00000000
	.long 0x110                                                // 000000063448: 00000110
	.long 0                                                    // 00000006344C: 00000000
	.long 0x11ac0                                              // 000000063450: 00011AC0
	.long 0                                                    // 000000063454: 00000000
	.long 0                                                    // 000000063458: 00000000
	.long 0                                                    // 00000006345C: 00000000
	.long 0                                                    // 000000063460: 00000000
	.long 0                                                    // 000000063464: 00000000
	.long 0                                                    // 000000063468: 00000000
	.long 0                                                    // 00000006346C: 00000000
	.long 0x60af0101                                           // 000000063470: 60AF0101
	.long 0x1384                                               // 000000063474: 00001384
	.long 0x408                                                // 000000063478: 00000408
	.long 0                                                    // 00000006347C: 00000000
	.type	add_long_x_get_group_id.kd,@object
add_long_x_get_group_id.kd:
	.long 0                                                    // 000000063480: 00000000
	.long 0                                                    // 000000063484: 00000000
	.long 0x110                                                // 000000063488: 00000110
	.long 0                                                    // 00000006348C: 00000000
	.long 0x11c80                                              // 000000063490: 00011C80
	.long 0                                                    // 000000063494: 00000000
	.long 0                                                    // 000000063498: 00000000
	.long 0                                                    // 00000006349C: 00000000
	.long 0                                                    // 0000000634A0: 00000000
	.long 0                                                    // 0000000634A4: 00000000
	.long 0                                                    // 0000000634A8: 00000000
	.long 0                                                    // 0000000634AC: 00000000
	.long 0x60af0101                                           // 0000000634B0: 60AF0101
	.long 0x1384                                               // 0000000634B4: 00001384
	.long 0x408                                                // 0000000634B8: 00000408
	.long 0                                                    // 0000000634BC: 00000000
	.type	add_long_get_global_offset_get_group_id.kd,@object
add_long_get_global_offset_get_group_id.kd:
	.long 0                                                    // 0000000634C0: 00000000
	.long 0                                                    // 0000000634C4: 00000000
	.long 0x110                                                // 0000000634C8: 00000110
	.long 0                                                    // 0000000634CC: 00000000
	.ascii "@"                                                 // 0000000634D0: 40
	.byte 0x1e                                                 // 0000000634D1: 1E
	.short 0x1                                                 // 0000000634D2: 0001
	.long 0                                                    // 0000000634D4: 00000000
	.long 0                                                    // 0000000634D8: 00000000
	.long 0                                                    // 0000000634DC: 00000000
	.long 0                                                    // 0000000634E0: 00000000
	.long 0                                                    // 0000000634E4: 00000000
	.long 0                                                    // 0000000634E8: 00000000
	.long 0                                                    // 0000000634EC: 00000000
	.long 0x60af0101                                           // 0000000634F0: 60AF0101
	.long 0x1384                                               // 0000000634F4: 00001384
	.long 0x408                                                // 0000000634F8: 00000408
	.long 0                                                    // 0000000634FC: 00000000
	.type	add_long_get_local_id_get_group_id.kd,@object
add_long_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000063500: 00000000
	.long 0                                                    // 000000063504: 00000000
	.long 0x110                                                // 000000063508: 00000110
	.long 0                                                    // 00000006350C: 00000000
	.long 0x12000                                              // 000000063510: 00012000
	.long 0                                                    // 000000063514: 00000000
	.long 0                                                    // 000000063518: 00000000
	.long 0                                                    // 00000006351C: 00000000
	.long 0                                                    // 000000063520: 00000000
	.long 0                                                    // 000000063524: 00000000
	.long 0                                                    // 000000063528: 00000000
	.long 0                                                    // 00000006352C: 00000000
	.long 0x60af0101                                           // 000000063530: 60AF0101
	.long 0x1384                                               // 000000063534: 00001384
	.long 0x408                                                // 000000063538: 00000408
	.long 0                                                    // 00000006353C: 00000000
	.type	add_long_get_group_id_get_group_id.kd,@object
add_long_get_group_id_get_group_id.kd:
	.long 0                                                    // 000000063540: 00000000
	.long 0                                                    // 000000063544: 00000000
	.long 0x110                                                // 000000063548: 00000110
	.long 0                                                    // 00000006354C: 00000000
	.long 0x121c0                                              // 000000063550: 000121C0
	.long 0                                                    // 000000063554: 00000000
	.long 0                                                    // 000000063558: 00000000
	.long 0                                                    // 00000006355C: 00000000
	.long 0                                                    // 000000063560: 00000000
	.long 0                                                    // 000000063564: 00000000
	.long 0                                                    // 000000063568: 00000000
	.long 0                                                    // 00000006356C: 00000000
	.long 0x60af0101                                           // 000000063570: 60AF0101
	.long 0x1384                                               // 000000063574: 00001384
	.long 0x408                                                // 000000063578: 00000408
	.long 0                                                    // 00000006357C: 00000000
	.type	add_long_get_local_size_get_group_id.kd,@object
add_long_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000063580: 00000000
	.long 0                                                    // 000000063584: 00000000
	.long 0x110                                                // 000000063588: 00000110
	.long 0                                                    // 00000006358C: 00000000
	.long 0x12380                                              // 000000063590: 00012380
	.long 0                                                    // 000000063594: 00000000
	.long 0                                                    // 000000063598: 00000000
	.long 0                                                    // 00000006359C: 00000000
	.long 0                                                    // 0000000635A0: 00000000
	.long 0                                                    // 0000000635A4: 00000000
	.long 0                                                    // 0000000635A8: 00000000
	.long 0                                                    // 0000000635AC: 00000000
	.long 0x60af0101                                           // 0000000635B0: 60AF0101
	.long 0x1384                                               // 0000000635B4: 00001384
	.long 0x408                                                // 0000000635B8: 00000408
	.long 0                                                    // 0000000635BC: 00000000
	.type	add_long_get_global_id_get_group_id.kd,@object
add_long_get_global_id_get_group_id.kd:
	.long 0                                                    // 0000000635C0: 00000000
	.long 0                                                    // 0000000635C4: 00000000
	.long 0x110                                                // 0000000635C8: 00000110
	.long 0                                                    // 0000000635CC: 00000000
	.ascii "@%"                                                // 0000000635D0: 2540
	.short 0x1                                                 // 0000000635D2: 0001
	.long 0                                                    // 0000000635D4: 00000000
	.long 0                                                    // 0000000635D8: 00000000
	.long 0                                                    // 0000000635DC: 00000000
	.long 0                                                    // 0000000635E0: 00000000
	.long 0                                                    // 0000000635E4: 00000000
	.long 0                                                    // 0000000635E8: 00000000
	.long 0                                                    // 0000000635EC: 00000000
	.long 0x60af0101                                           // 0000000635F0: 60AF0101
	.long 0x1384                                               // 0000000635F4: 00001384
	.long 0x408                                                // 0000000635F8: 00000408
	.long 0                                                    // 0000000635FC: 00000000
	.type	add_long_get_global_size_get_group_id.kd,@object
add_long_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000063600: 00000000
	.long 0                                                    // 000000063604: 00000000
	.long 0x110                                                // 000000063608: 00000110
	.long 0                                                    // 00000006360C: 00000000
	.long 0x12700                                              // 000000063610: 00012700
	.long 0                                                    // 000000063614: 00000000
	.long 0                                                    // 000000063618: 00000000
	.long 0                                                    // 00000006361C: 00000000
	.long 0                                                    // 000000063620: 00000000
	.long 0                                                    // 000000063624: 00000000
	.long 0                                                    // 000000063628: 00000000
	.long 0                                                    // 00000006362C: 00000000
	.long 0x60af0101                                           // 000000063630: 60AF0101
	.long 0x1384                                               // 000000063634: 00001384
	.long 0x408                                                // 000000063638: 00000408
	.long 0                                                    // 00000006363C: 00000000
	.type	add_long_get_num_groups_get_group_id.kd,@object
add_long_get_num_groups_get_group_id.kd:
	.long 0                                                    // 000000063640: 00000000
	.long 0                                                    // 000000063644: 00000000
	.long 0x110                                                // 000000063648: 00000110
	.long 0                                                    // 00000006364C: 00000000
	.long 0x128c0                                              // 000000063650: 000128C0
	.long 0                                                    // 000000063654: 00000000
	.long 0                                                    // 000000063658: 00000000
	.long 0                                                    // 00000006365C: 00000000
	.long 0                                                    // 000000063660: 00000000
	.long 0                                                    // 000000063664: 00000000
	.long 0                                                    // 000000063668: 00000000
	.long 0                                                    // 00000006366C: 00000000
	.long 0x60af0101                                           // 000000063670: 60AF0101
	.long 0x1384                                               // 000000063674: 00001384
	.long 0x408                                                // 000000063678: 00000408
	.long 0                                                    // 00000006367C: 00000000
	.type	add_long_get_work_dim_get_group_id.kd,@object
add_long_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000063680: 00000000
	.long 0                                                    // 000000063684: 00000000
	.long 0x110                                                // 000000063688: 00000110
	.long 0                                                    // 00000006368C: 00000000
	.long 0x12a80                                              // 000000063690: 00012A80
	.long 0                                                    // 000000063694: 00000000
	.long 0                                                    // 000000063698: 00000000
	.long 0                                                    // 00000006369C: 00000000
	.long 0                                                    // 0000000636A0: 00000000
	.long 0                                                    // 0000000636A4: 00000000
	.long 0                                                    // 0000000636A8: 00000000
	.long 0                                                    // 0000000636AC: 00000000
	.long 0x60af0101                                           // 0000000636B0: 60AF0101
	.long 0x1384                                               // 0000000636B4: 00001384
	.long 0x408                                                // 0000000636B8: 00000408
	.long 0                                                    // 0000000636BC: 00000000
	.type	add_long_x_get_local_size.kd,@object
add_long_x_get_local_size.kd:
	.long 0                                                    // 0000000636C0: 00000000
	.long 0                                                    // 0000000636C4: 00000000
	.long 0x110                                                // 0000000636C8: 00000110
	.long 0                                                    // 0000000636CC: 00000000
	.ascii "@,"                                                // 0000000636D0: 2C40
	.short 0x1                                                 // 0000000636D2: 0001
	.long 0                                                    // 0000000636D4: 00000000
	.long 0                                                    // 0000000636D8: 00000000
	.long 0                                                    // 0000000636DC: 00000000
	.long 0                                                    // 0000000636E0: 00000000
	.long 0                                                    // 0000000636E4: 00000000
	.long 0                                                    // 0000000636E8: 00000000
	.long 0                                                    // 0000000636EC: 00000000
	.long 0x60af0101                                           // 0000000636F0: 60AF0101
	.long 0x1384                                               // 0000000636F4: 00001384
	.long 0x408                                                // 0000000636F8: 00000408
	.long 0                                                    // 0000000636FC: 00000000
	.type	add_long_get_global_offset_get_local_size.kd,@object
add_long_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000063700: 00000000
	.long 0                                                    // 000000063704: 00000000
	.long 0x110                                                // 000000063708: 00000110
	.long 0                                                    // 00000006370C: 00000000
	.long 0x12e00                                              // 000000063710: 00012E00
	.long 0                                                    // 000000063714: 00000000
	.long 0                                                    // 000000063718: 00000000
	.long 0                                                    // 00000006371C: 00000000
	.long 0                                                    // 000000063720: 00000000
	.long 0                                                    // 000000063724: 00000000
	.long 0                                                    // 000000063728: 00000000
	.long 0                                                    // 00000006372C: 00000000
	.long 0x60af0101                                           // 000000063730: 60AF0101
	.long 0x1384                                               // 000000063734: 00001384
	.long 0x408                                                // 000000063738: 00000408
	.long 0                                                    // 00000006373C: 00000000
	.type	add_long_get_local_id_get_local_size.kd,@object
add_long_get_local_id_get_local_size.kd:
	.long 0                                                    // 000000063740: 00000000
	.long 0                                                    // 000000063744: 00000000
	.long 0x110                                                // 000000063748: 00000110
	.long 0                                                    // 00000006374C: 00000000
	.long 0x12fc0                                              // 000000063750: 00012FC0
	.long 0                                                    // 000000063754: 00000000
	.long 0                                                    // 000000063758: 00000000
	.long 0                                                    // 00000006375C: 00000000
	.long 0                                                    // 000000063760: 00000000
	.long 0                                                    // 000000063764: 00000000
	.long 0                                                    // 000000063768: 00000000
	.long 0                                                    // 00000006376C: 00000000
	.long 0x60af0101                                           // 000000063770: 60AF0101
	.long 0x1384                                               // 000000063774: 00001384
	.long 0x408                                                // 000000063778: 00000408
	.long 0                                                    // 00000006377C: 00000000
	.type	add_long_get_group_id_get_local_size.kd,@object
add_long_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000063780: 00000000
	.long 0                                                    // 000000063784: 00000000
	.long 0x110                                                // 000000063788: 00000110
	.long 0                                                    // 00000006378C: 00000000
	.long 0x13180                                              // 000000063790: 00013180
	.long 0                                                    // 000000063794: 00000000
	.long 0                                                    // 000000063798: 00000000
	.long 0                                                    // 00000006379C: 00000000
	.long 0                                                    // 0000000637A0: 00000000
	.long 0                                                    // 0000000637A4: 00000000
	.long 0                                                    // 0000000637A8: 00000000
	.long 0                                                    // 0000000637AC: 00000000
	.long 0x60af0101                                           // 0000000637B0: 60AF0101
	.long 0x1384                                               // 0000000637B4: 00001384
	.long 0x408                                                // 0000000637B8: 00000408
	.long 0                                                    // 0000000637BC: 00000000
	.type	add_long_get_local_size_get_local_size.kd,@object
add_long_get_local_size_get_local_size.kd:
	.long 0                                                    // 0000000637C0: 00000000
	.long 0                                                    // 0000000637C4: 00000000
	.long 0x110                                                // 0000000637C8: 00000110
	.long 0                                                    // 0000000637CC: 00000000
	.ascii "@3"                                                // 0000000637D0: 3340
	.short 0x1                                                 // 0000000637D2: 0001
	.long 0                                                    // 0000000637D4: 00000000
	.long 0                                                    // 0000000637D8: 00000000
	.long 0                                                    // 0000000637DC: 00000000
	.long 0                                                    // 0000000637E0: 00000000
	.long 0                                                    // 0000000637E4: 00000000
	.long 0                                                    // 0000000637E8: 00000000
	.long 0                                                    // 0000000637EC: 00000000
	.long 0x60af0101                                           // 0000000637F0: 60AF0101
	.long 0x1384                                               // 0000000637F4: 00001384
	.long 0x408                                                // 0000000637F8: 00000408
	.long 0                                                    // 0000000637FC: 00000000
	.type	add_long_get_global_id_get_local_size.kd,@object
add_long_get_global_id_get_local_size.kd:
	.long 0                                                    // 000000063800: 00000000
	.long 0                                                    // 000000063804: 00000000
	.long 0x110                                                // 000000063808: 00000110
	.long 0                                                    // 00000006380C: 00000000
	.long 0x13500                                              // 000000063810: 00013500
	.long 0                                                    // 000000063814: 00000000
	.long 0                                                    // 000000063818: 00000000
	.long 0                                                    // 00000006381C: 00000000
	.long 0                                                    // 000000063820: 00000000
	.long 0                                                    // 000000063824: 00000000
	.long 0                                                    // 000000063828: 00000000
	.long 0                                                    // 00000006382C: 00000000
	.long 0x60af0101                                           // 000000063830: 60AF0101
	.long 0x1384                                               // 000000063834: 00001384
	.long 0x408                                                // 000000063838: 00000408
	.long 0                                                    // 00000006383C: 00000000
	.type	add_long_get_global_size_get_local_size.kd,@object
add_long_get_global_size_get_local_size.kd:
	.long 0                                                    // 000000063840: 00000000
	.long 0                                                    // 000000063844: 00000000
	.long 0x110                                                // 000000063848: 00000110
	.long 0                                                    // 00000006384C: 00000000
	.long 0x136c0                                              // 000000063850: 000136C0
	.long 0                                                    // 000000063854: 00000000
	.long 0                                                    // 000000063858: 00000000
	.long 0                                                    // 00000006385C: 00000000
	.long 0                                                    // 000000063860: 00000000
	.long 0                                                    // 000000063864: 00000000
	.long 0                                                    // 000000063868: 00000000
	.long 0                                                    // 00000006386C: 00000000
	.long 0x60af0101                                           // 000000063870: 60AF0101
	.long 0x1384                                               // 000000063874: 00001384
	.long 0x408                                                // 000000063878: 00000408
	.long 0                                                    // 00000006387C: 00000000
	.type	add_long_get_num_groups_get_local_size.kd,@object
add_long_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000063880: 00000000
	.long 0                                                    // 000000063884: 00000000
	.long 0x110                                                // 000000063888: 00000110
	.long 0                                                    // 00000006388C: 00000000
	.long 0x13880                                              // 000000063890: 00013880
	.long 0                                                    // 000000063894: 00000000
	.long 0                                                    // 000000063898: 00000000
	.long 0                                                    // 00000006389C: 00000000
	.long 0                                                    // 0000000638A0: 00000000
	.long 0                                                    // 0000000638A4: 00000000
	.long 0                                                    // 0000000638A8: 00000000
	.long 0                                                    // 0000000638AC: 00000000
	.long 0x60af0101                                           // 0000000638B0: 60AF0101
	.long 0x1384                                               // 0000000638B4: 00001384
	.long 0x408                                                // 0000000638B8: 00000408
	.long 0                                                    // 0000000638BC: 00000000
	.type	add_long_get_work_dim_get_local_size.kd,@object
add_long_get_work_dim_get_local_size.kd:
	.long 0                                                    // 0000000638C0: 00000000
	.long 0                                                    // 0000000638C4: 00000000
	.long 0x110                                                // 0000000638C8: 00000110
	.long 0                                                    // 0000000638CC: 00000000
	.ascii "@:"                                                // 0000000638D0: 3A40
	.short 0x1                                                 // 0000000638D2: 0001
	.long 0                                                    // 0000000638D4: 00000000
	.long 0                                                    // 0000000638D8: 00000000
	.long 0                                                    // 0000000638DC: 00000000
	.long 0                                                    // 0000000638E0: 00000000
	.long 0                                                    // 0000000638E4: 00000000
	.long 0                                                    // 0000000638E8: 00000000
	.long 0                                                    // 0000000638EC: 00000000
	.long 0x60af0101                                           // 0000000638F0: 60AF0101
	.long 0x1384                                               // 0000000638F4: 00001384
	.long 0x408                                                // 0000000638F8: 00000408
	.long 0                                                    // 0000000638FC: 00000000
	.type	add_long_x_get_global_id.kd,@object
add_long_x_get_global_id.kd:
	.long 0                                                    // 000000063900: 00000000
	.long 0                                                    // 000000063904: 00000000
	.long 0x110                                                // 000000063908: 00000110
	.long 0                                                    // 00000006390C: 00000000
	.long 0x13c00                                              // 000000063910: 00013C00
	.long 0                                                    // 000000063914: 00000000
	.long 0                                                    // 000000063918: 00000000
	.long 0                                                    // 00000006391C: 00000000
	.long 0                                                    // 000000063920: 00000000
	.long 0                                                    // 000000063924: 00000000
	.long 0                                                    // 000000063928: 00000000
	.long 0                                                    // 00000006392C: 00000000
	.long 0x60af0101                                           // 000000063930: 60AF0101
	.long 0x1384                                               // 000000063934: 00001384
	.long 0x408                                                // 000000063938: 00000408
	.long 0                                                    // 00000006393C: 00000000
	.type	add_long_get_global_offset_get_global_id.kd,@object
add_long_get_global_offset_get_global_id.kd:
	.long 0                                                    // 000000063940: 00000000
	.long 0                                                    // 000000063944: 00000000
	.long 0x110                                                // 000000063948: 00000110
	.long 0                                                    // 00000006394C: 00000000
	.long 0x13dc0                                              // 000000063950: 00013DC0
	.long 0                                                    // 000000063954: 00000000
	.long 0                                                    // 000000063958: 00000000
	.long 0                                                    // 00000006395C: 00000000
	.long 0                                                    // 000000063960: 00000000
	.long 0                                                    // 000000063964: 00000000
	.long 0                                                    // 000000063968: 00000000
	.long 0                                                    // 00000006396C: 00000000
	.long 0x60af0101                                           // 000000063970: 60AF0101
	.long 0x1384                                               // 000000063974: 00001384
	.long 0x408                                                // 000000063978: 00000408
	.long 0                                                    // 00000006397C: 00000000
	.type	add_long_get_local_id_get_global_id.kd,@object
add_long_get_local_id_get_global_id.kd:
	.long 0                                                    // 000000063980: 00000000
	.long 0                                                    // 000000063984: 00000000
	.long 0x110                                                // 000000063988: 00000110
	.long 0                                                    // 00000006398C: 00000000
	.long 0x13f80                                              // 000000063990: 00013F80
	.long 0                                                    // 000000063994: 00000000
	.long 0                                                    // 000000063998: 00000000
	.long 0                                                    // 00000006399C: 00000000
	.long 0                                                    // 0000000639A0: 00000000
	.long 0                                                    // 0000000639A4: 00000000
	.long 0                                                    // 0000000639A8: 00000000
	.long 0                                                    // 0000000639AC: 00000000
	.long 0x60af0101                                           // 0000000639B0: 60AF0101
	.long 0x1384                                               // 0000000639B4: 00001384
	.long 0x408                                                // 0000000639B8: 00000408
	.long 0                                                    // 0000000639BC: 00000000
	.type	add_long_get_group_id_get_global_id.kd,@object
add_long_get_group_id_get_global_id.kd:
	.long 0                                                    // 0000000639C0: 00000000
	.long 0                                                    // 0000000639C4: 00000000
	.long 0x110                                                // 0000000639C8: 00000110
	.long 0                                                    // 0000000639CC: 00000000
	.ascii "@A"                                                // 0000000639D0: 4140
	.short 0x1                                                 // 0000000639D2: 0001
	.long 0                                                    // 0000000639D4: 00000000
	.long 0                                                    // 0000000639D8: 00000000
	.long 0                                                    // 0000000639DC: 00000000
	.long 0                                                    // 0000000639E0: 00000000
	.long 0                                                    // 0000000639E4: 00000000
	.long 0                                                    // 0000000639E8: 00000000
	.long 0                                                    // 0000000639EC: 00000000
	.long 0x60af0101                                           // 0000000639F0: 60AF0101
	.long 0x1384                                               // 0000000639F4: 00001384
	.long 0x408                                                // 0000000639F8: 00000408
	.long 0                                                    // 0000000639FC: 00000000
	.type	add_long_get_local_size_get_global_id.kd,@object
add_long_get_local_size_get_global_id.kd:
	.long 0                                                    // 000000063A00: 00000000
	.long 0                                                    // 000000063A04: 00000000
	.long 0x110                                                // 000000063A08: 00000110
	.long 0                                                    // 000000063A0C: 00000000
	.long 0x14300                                              // 000000063A10: 00014300
	.long 0                                                    // 000000063A14: 00000000
	.long 0                                                    // 000000063A18: 00000000
	.long 0                                                    // 000000063A1C: 00000000
	.long 0                                                    // 000000063A20: 00000000
	.long 0                                                    // 000000063A24: 00000000
	.long 0                                                    // 000000063A28: 00000000
	.long 0                                                    // 000000063A2C: 00000000
	.long 0x60af0101                                           // 000000063A30: 60AF0101
	.long 0x1384                                               // 000000063A34: 00001384
	.long 0x408                                                // 000000063A38: 00000408
	.long 0                                                    // 000000063A3C: 00000000
	.type	add_long_get_global_id_get_global_id.kd,@object
add_long_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000063A40: 00000000
	.long 0                                                    // 000000063A44: 00000000
	.long 0x110                                                // 000000063A48: 00000110
	.long 0                                                    // 000000063A4C: 00000000
	.long 0x144c0                                              // 000000063A50: 000144C0
	.long 0                                                    // 000000063A54: 00000000
	.long 0                                                    // 000000063A58: 00000000
	.long 0                                                    // 000000063A5C: 00000000
	.long 0                                                    // 000000063A60: 00000000
	.long 0                                                    // 000000063A64: 00000000
	.long 0                                                    // 000000063A68: 00000000
	.long 0                                                    // 000000063A6C: 00000000
	.long 0x60af0101                                           // 000000063A70: 60AF0101
	.long 0x1384                                               // 000000063A74: 00001384
	.long 0x408                                                // 000000063A78: 00000408
	.long 0                                                    // 000000063A7C: 00000000
	.type	add_long_get_global_size_get_global_id.kd,@object
add_long_get_global_size_get_global_id.kd:
	.long 0                                                    // 000000063A80: 00000000
	.long 0                                                    // 000000063A84: 00000000
	.long 0x110                                                // 000000063A88: 00000110
	.long 0                                                    // 000000063A8C: 00000000
	.long 0x14680                                              // 000000063A90: 00014680
	.long 0                                                    // 000000063A94: 00000000
	.long 0                                                    // 000000063A98: 00000000
	.long 0                                                    // 000000063A9C: 00000000
	.long 0                                                    // 000000063AA0: 00000000
	.long 0                                                    // 000000063AA4: 00000000
	.long 0                                                    // 000000063AA8: 00000000
	.long 0                                                    // 000000063AAC: 00000000
	.long 0x60af0101                                           // 000000063AB0: 60AF0101
	.long 0x1384                                               // 000000063AB4: 00001384
	.long 0x408                                                // 000000063AB8: 00000408
	.long 0                                                    // 000000063ABC: 00000000
	.type	add_long_get_num_groups_get_global_id.kd,@object
add_long_get_num_groups_get_global_id.kd:
	.long 0                                                    // 000000063AC0: 00000000
	.long 0                                                    // 000000063AC4: 00000000
	.long 0x110                                                // 000000063AC8: 00000110
	.long 0                                                    // 000000063ACC: 00000000
	.ascii "@H"                                                // 000000063AD0: 4840
	.short 0x1                                                 // 000000063AD2: 0001
	.long 0                                                    // 000000063AD4: 00000000
	.long 0                                                    // 000000063AD8: 00000000
	.long 0                                                    // 000000063ADC: 00000000
	.long 0                                                    // 000000063AE0: 00000000
	.long 0                                                    // 000000063AE4: 00000000
	.long 0                                                    // 000000063AE8: 00000000
	.long 0                                                    // 000000063AEC: 00000000
	.long 0x60af0101                                           // 000000063AF0: 60AF0101
	.long 0x1384                                               // 000000063AF4: 00001384
	.long 0x408                                                // 000000063AF8: 00000408
	.long 0                                                    // 000000063AFC: 00000000
	.type	add_long_get_work_dim_get_global_id.kd,@object
add_long_get_work_dim_get_global_id.kd:
	.long 0                                                    // 000000063B00: 00000000
	.long 0                                                    // 000000063B04: 00000000
	.long 0x110                                                // 000000063B08: 00000110
	.long 0                                                    // 000000063B0C: 00000000
	.long 0x14a00                                              // 000000063B10: 00014A00
	.long 0                                                    // 000000063B14: 00000000
	.long 0                                                    // 000000063B18: 00000000
	.long 0                                                    // 000000063B1C: 00000000
	.long 0                                                    // 000000063B20: 00000000
	.long 0                                                    // 000000063B24: 00000000
	.long 0                                                    // 000000063B28: 00000000
	.long 0                                                    // 000000063B2C: 00000000
	.long 0x60af0101                                           // 000000063B30: 60AF0101
	.long 0x1384                                               // 000000063B34: 00001384
	.long 0x408                                                // 000000063B38: 00000408
	.long 0                                                    // 000000063B3C: 00000000
	.type	add_long_x_get_global_size.kd,@object
add_long_x_get_global_size.kd:
	.long 0                                                    // 000000063B40: 00000000
	.long 0                                                    // 000000063B44: 00000000
	.long 0x110                                                // 000000063B48: 00000110
	.long 0                                                    // 000000063B4C: 00000000
	.long 0x14bc0                                              // 000000063B50: 00014BC0
	.long 0                                                    // 000000063B54: 00000000
	.long 0                                                    // 000000063B58: 00000000
	.long 0                                                    // 000000063B5C: 00000000
	.long 0                                                    // 000000063B60: 00000000
	.long 0                                                    // 000000063B64: 00000000
	.long 0                                                    // 000000063B68: 00000000
	.long 0                                                    // 000000063B6C: 00000000
	.long 0x60af0101                                           // 000000063B70: 60AF0101
	.long 0x1384                                               // 000000063B74: 00001384
	.long 0x408                                                // 000000063B78: 00000408
	.long 0                                                    // 000000063B7C: 00000000
	.type	add_long_get_global_offset_get_global_size.kd,@object
add_long_get_global_offset_get_global_size.kd:
	.long 0                                                    // 000000063B80: 00000000
	.long 0                                                    // 000000063B84: 00000000
	.long 0x110                                                // 000000063B88: 00000110
	.long 0                                                    // 000000063B8C: 00000000
	.long 0x14d80                                              // 000000063B90: 00014D80
	.long 0                                                    // 000000063B94: 00000000
	.long 0                                                    // 000000063B98: 00000000
	.long 0                                                    // 000000063B9C: 00000000
	.long 0                                                    // 000000063BA0: 00000000
	.long 0                                                    // 000000063BA4: 00000000
	.long 0                                                    // 000000063BA8: 00000000
	.long 0                                                    // 000000063BAC: 00000000
	.long 0x60af0101                                           // 000000063BB0: 60AF0101
	.long 0x1384                                               // 000000063BB4: 00001384
	.long 0x408                                                // 000000063BB8: 00000408
	.long 0                                                    // 000000063BBC: 00000000
	.type	add_long_get_local_id_get_global_size.kd,@object
add_long_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000063BC0: 00000000
	.long 0                                                    // 000000063BC4: 00000000
	.long 0x110                                                // 000000063BC8: 00000110
	.long 0                                                    // 000000063BCC: 00000000
	.ascii "@O"                                                // 000000063BD0: 4F40
	.short 0x1                                                 // 000000063BD2: 0001
	.long 0                                                    // 000000063BD4: 00000000
	.long 0                                                    // 000000063BD8: 00000000
	.long 0                                                    // 000000063BDC: 00000000
	.long 0                                                    // 000000063BE0: 00000000
	.long 0                                                    // 000000063BE4: 00000000
	.long 0                                                    // 000000063BE8: 00000000
	.long 0                                                    // 000000063BEC: 00000000
	.long 0x60af0101                                           // 000000063BF0: 60AF0101
	.long 0x1384                                               // 000000063BF4: 00001384
	.long 0x408                                                // 000000063BF8: 00000408
	.long 0                                                    // 000000063BFC: 00000000
	.type	add_long_get_group_id_get_global_size.kd,@object
add_long_get_group_id_get_global_size.kd:
	.long 0                                                    // 000000063C00: 00000000
	.long 0                                                    // 000000063C04: 00000000
	.long 0x110                                                // 000000063C08: 00000110
	.long 0                                                    // 000000063C0C: 00000000
	.long 0x15100                                              // 000000063C10: 00015100
	.long 0                                                    // 000000063C14: 00000000
	.long 0                                                    // 000000063C18: 00000000
	.long 0                                                    // 000000063C1C: 00000000
	.long 0                                                    // 000000063C20: 00000000
	.long 0                                                    // 000000063C24: 00000000
	.long 0                                                    // 000000063C28: 00000000
	.long 0                                                    // 000000063C2C: 00000000
	.long 0x60af0101                                           // 000000063C30: 60AF0101
	.long 0x1384                                               // 000000063C34: 00001384
	.long 0x408                                                // 000000063C38: 00000408
	.long 0                                                    // 000000063C3C: 00000000
	.type	add_long_get_local_size_get_global_size.kd,@object
add_long_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000063C40: 00000000
	.long 0                                                    // 000000063C44: 00000000
	.long 0x110                                                // 000000063C48: 00000110
	.long 0                                                    // 000000063C4C: 00000000
	.long 0x152c0                                              // 000000063C50: 000152C0
	.long 0                                                    // 000000063C54: 00000000
	.long 0                                                    // 000000063C58: 00000000
	.long 0                                                    // 000000063C5C: 00000000
	.long 0                                                    // 000000063C60: 00000000
	.long 0                                                    // 000000063C64: 00000000
	.long 0                                                    // 000000063C68: 00000000
	.long 0                                                    // 000000063C6C: 00000000
	.long 0x60af0101                                           // 000000063C70: 60AF0101
	.long 0x1384                                               // 000000063C74: 00001384
	.long 0x408                                                // 000000063C78: 00000408
	.long 0                                                    // 000000063C7C: 00000000
	.type	add_long_get_global_id_get_global_size.kd,@object
add_long_get_global_id_get_global_size.kd:
	.long 0                                                    // 000000063C80: 00000000
	.long 0                                                    // 000000063C84: 00000000
	.long 0x110                                                // 000000063C88: 00000110
	.long 0                                                    // 000000063C8C: 00000000
	.long 0x15480                                              // 000000063C90: 00015480
	.long 0                                                    // 000000063C94: 00000000
	.long 0                                                    // 000000063C98: 00000000
	.long 0                                                    // 000000063C9C: 00000000
	.long 0                                                    // 000000063CA0: 00000000
	.long 0                                                    // 000000063CA4: 00000000
	.long 0                                                    // 000000063CA8: 00000000
	.long 0                                                    // 000000063CAC: 00000000
	.long 0x60af0101                                           // 000000063CB0: 60AF0101
	.long 0x1384                                               // 000000063CB4: 00001384
	.long 0x408                                                // 000000063CB8: 00000408
	.long 0                                                    // 000000063CBC: 00000000
	.type	add_long_get_global_size_get_global_size.kd,@object
add_long_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000063CC0: 00000000
	.long 0                                                    // 000000063CC4: 00000000
	.long 0x110                                                // 000000063CC8: 00000110
	.long 0                                                    // 000000063CCC: 00000000
	.ascii "@V"                                                // 000000063CD0: 5640
	.short 0x1                                                 // 000000063CD2: 0001
	.long 0                                                    // 000000063CD4: 00000000
	.long 0                                                    // 000000063CD8: 00000000
	.long 0                                                    // 000000063CDC: 00000000
	.long 0                                                    // 000000063CE0: 00000000
	.long 0                                                    // 000000063CE4: 00000000
	.long 0                                                    // 000000063CE8: 00000000
	.long 0                                                    // 000000063CEC: 00000000
	.long 0x60af0101                                           // 000000063CF0: 60AF0101
	.long 0x1384                                               // 000000063CF4: 00001384
	.long 0x408                                                // 000000063CF8: 00000408
	.long 0                                                    // 000000063CFC: 00000000
	.type	add_long_get_num_groups_get_global_size.kd,@object
add_long_get_num_groups_get_global_size.kd:
	.long 0                                                    // 000000063D00: 00000000
	.long 0                                                    // 000000063D04: 00000000
	.long 0x110                                                // 000000063D08: 00000110
	.long 0                                                    // 000000063D0C: 00000000
	.long 0x15800                                              // 000000063D10: 00015800
	.long 0                                                    // 000000063D14: 00000000
	.long 0                                                    // 000000063D18: 00000000
	.long 0                                                    // 000000063D1C: 00000000
	.long 0                                                    // 000000063D20: 00000000
	.long 0                                                    // 000000063D24: 00000000
	.long 0                                                    // 000000063D28: 00000000
	.long 0                                                    // 000000063D2C: 00000000
	.long 0x60af0101                                           // 000000063D30: 60AF0101
	.long 0x1384                                               // 000000063D34: 00001384
	.long 0x408                                                // 000000063D38: 00000408
	.long 0                                                    // 000000063D3C: 00000000
	.type	add_long_get_work_dim_get_global_size.kd,@object
add_long_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000063D40: 00000000
	.long 0                                                    // 000000063D44: 00000000
	.long 0x110                                                // 000000063D48: 00000110
	.long 0                                                    // 000000063D4C: 00000000
	.long 0x159c0                                              // 000000063D50: 000159C0
	.long 0                                                    // 000000063D54: 00000000
	.long 0                                                    // 000000063D58: 00000000
	.long 0                                                    // 000000063D5C: 00000000
	.long 0                                                    // 000000063D60: 00000000
	.long 0                                                    // 000000063D64: 00000000
	.long 0                                                    // 000000063D68: 00000000
	.long 0                                                    // 000000063D6C: 00000000
	.long 0x60af0101                                           // 000000063D70: 60AF0101
	.long 0x1384                                               // 000000063D74: 00001384
	.long 0x408                                                // 000000063D78: 00000408
	.long 0                                                    // 000000063D7C: 00000000
	.type	add_long_x_get_num_groups.kd,@object
add_long_x_get_num_groups.kd:
	.long 0                                                    // 000000063D80: 00000000
	.long 0                                                    // 000000063D84: 00000000
	.long 0x110                                                // 000000063D88: 00000110
	.long 0                                                    // 000000063D8C: 00000000
	.long 0x15b80                                              // 000000063D90: 00015B80
	.long 0                                                    // 000000063D94: 00000000
	.long 0                                                    // 000000063D98: 00000000
	.long 0                                                    // 000000063D9C: 00000000
	.long 0                                                    // 000000063DA0: 00000000
	.long 0                                                    // 000000063DA4: 00000000
	.long 0                                                    // 000000063DA8: 00000000
	.long 0                                                    // 000000063DAC: 00000000
	.long 0x60af0101                                           // 000000063DB0: 60AF0101
	.long 0x1384                                               // 000000063DB4: 00001384
	.long 0x408                                                // 000000063DB8: 00000408
	.long 0                                                    // 000000063DBC: 00000000
	.type	add_long_get_global_offset_get_num_groups.kd,@object
add_long_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000063DC0: 00000000
	.long 0                                                    // 000000063DC4: 00000000
	.long 0x110                                                // 000000063DC8: 00000110
	.long 0                                                    // 000000063DCC: 00000000
	.ascii "@]"                                                // 000000063DD0: 5D40
	.short 0x1                                                 // 000000063DD2: 0001
	.long 0                                                    // 000000063DD4: 00000000
	.long 0                                                    // 000000063DD8: 00000000
	.long 0                                                    // 000000063DDC: 00000000
	.long 0                                                    // 000000063DE0: 00000000
	.long 0                                                    // 000000063DE4: 00000000
	.long 0                                                    // 000000063DE8: 00000000
	.long 0                                                    // 000000063DEC: 00000000
	.long 0x60af0101                                           // 000000063DF0: 60AF0101
	.long 0x1384                                               // 000000063DF4: 00001384
	.long 0x408                                                // 000000063DF8: 00000408
	.long 0                                                    // 000000063DFC: 00000000
	.type	add_long_get_local_id_get_num_groups.kd,@object
add_long_get_local_id_get_num_groups.kd:
	.long 0                                                    // 000000063E00: 00000000
	.long 0                                                    // 000000063E04: 00000000
	.long 0x110                                                // 000000063E08: 00000110
	.long 0                                                    // 000000063E0C: 00000000
	.long 0x15f00                                              // 000000063E10: 00015F00
	.long 0                                                    // 000000063E14: 00000000
	.long 0                                                    // 000000063E18: 00000000
	.long 0                                                    // 000000063E1C: 00000000
	.long 0                                                    // 000000063E20: 00000000
	.long 0                                                    // 000000063E24: 00000000
	.long 0                                                    // 000000063E28: 00000000
	.long 0                                                    // 000000063E2C: 00000000
	.long 0x60af0101                                           // 000000063E30: 60AF0101
	.long 0x1384                                               // 000000063E34: 00001384
	.long 0x408                                                // 000000063E38: 00000408
	.long 0                                                    // 000000063E3C: 00000000
	.type	add_long_get_group_id_get_num_groups.kd,@object
add_long_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000063E40: 00000000
	.long 0                                                    // 000000063E44: 00000000
	.long 0x110                                                // 000000063E48: 00000110
	.long 0                                                    // 000000063E4C: 00000000
	.long 0x160c0                                              // 000000063E50: 000160C0
	.long 0                                                    // 000000063E54: 00000000
	.long 0                                                    // 000000063E58: 00000000
	.long 0                                                    // 000000063E5C: 00000000
	.long 0                                                    // 000000063E60: 00000000
	.long 0                                                    // 000000063E64: 00000000
	.long 0                                                    // 000000063E68: 00000000
	.long 0                                                    // 000000063E6C: 00000000
	.long 0x60af0101                                           // 000000063E70: 60AF0101
	.long 0x1384                                               // 000000063E74: 00001384
	.long 0x408                                                // 000000063E78: 00000408
	.long 0                                                    // 000000063E7C: 00000000
	.type	add_long_get_local_size_get_num_groups.kd,@object
add_long_get_local_size_get_num_groups.kd:
	.long 0                                                    // 000000063E80: 00000000
	.long 0                                                    // 000000063E84: 00000000
	.long 0x110                                                // 000000063E88: 00000110
	.long 0                                                    // 000000063E8C: 00000000
	.long 0x16280                                              // 000000063E90: 00016280
	.long 0                                                    // 000000063E94: 00000000
	.long 0                                                    // 000000063E98: 00000000
	.long 0                                                    // 000000063E9C: 00000000
	.long 0                                                    // 000000063EA0: 00000000
	.long 0                                                    // 000000063EA4: 00000000
	.long 0                                                    // 000000063EA8: 00000000
	.long 0                                                    // 000000063EAC: 00000000
	.long 0x60af0101                                           // 000000063EB0: 60AF0101
	.long 0x1384                                               // 000000063EB4: 00001384
	.long 0x408                                                // 000000063EB8: 00000408
	.long 0                                                    // 000000063EBC: 00000000
	.type	add_long_get_global_id_get_num_groups.kd,@object
add_long_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000063EC0: 00000000
	.long 0                                                    // 000000063EC4: 00000000
	.long 0x110                                                // 000000063EC8: 00000110
	.long 0                                                    // 000000063ECC: 00000000
	.ascii "@d"                                                // 000000063ED0: 6440
	.short 0x1                                                 // 000000063ED2: 0001
	.long 0                                                    // 000000063ED4: 00000000
	.long 0                                                    // 000000063ED8: 00000000
	.long 0                                                    // 000000063EDC: 00000000
	.long 0                                                    // 000000063EE0: 00000000
	.long 0                                                    // 000000063EE4: 00000000
	.long 0                                                    // 000000063EE8: 00000000
	.long 0                                                    // 000000063EEC: 00000000
	.long 0x60af0101                                           // 000000063EF0: 60AF0101
	.long 0x1384                                               // 000000063EF4: 00001384
	.long 0x408                                                // 000000063EF8: 00000408
	.long 0                                                    // 000000063EFC: 00000000
	.type	add_long_get_global_size_get_num_groups.kd,@object
add_long_get_global_size_get_num_groups.kd:
	.long 0                                                    // 000000063F00: 00000000
	.long 0                                                    // 000000063F04: 00000000
	.long 0x110                                                // 000000063F08: 00000110
	.long 0                                                    // 000000063F0C: 00000000
	.long 0x16600                                              // 000000063F10: 00016600
	.long 0                                                    // 000000063F14: 00000000
	.long 0                                                    // 000000063F18: 00000000
	.long 0                                                    // 000000063F1C: 00000000
	.long 0                                                    // 000000063F20: 00000000
	.long 0                                                    // 000000063F24: 00000000
	.long 0                                                    // 000000063F28: 00000000
	.long 0                                                    // 000000063F2C: 00000000
	.long 0x60af0101                                           // 000000063F30: 60AF0101
	.long 0x1384                                               // 000000063F34: 00001384
	.long 0x408                                                // 000000063F38: 00000408
	.long 0                                                    // 000000063F3C: 00000000
	.type	add_long_get_num_groups_get_num_groups.kd,@object
add_long_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000063F40: 00000000
	.long 0                                                    // 000000063F44: 00000000
	.long 0x110                                                // 000000063F48: 00000110
	.long 0                                                    // 000000063F4C: 00000000
	.long 0x167c0                                              // 000000063F50: 000167C0
	.long 0                                                    // 000000063F54: 00000000
	.long 0                                                    // 000000063F58: 00000000
	.long 0                                                    // 000000063F5C: 00000000
	.long 0                                                    // 000000063F60: 00000000
	.long 0                                                    // 000000063F64: 00000000
	.long 0                                                    // 000000063F68: 00000000
	.long 0                                                    // 000000063F6C: 00000000
	.long 0x60af0101                                           // 000000063F70: 60AF0101
	.long 0x1384                                               // 000000063F74: 00001384
	.long 0x408                                                // 000000063F78: 00000408
	.long 0                                                    // 000000063F7C: 00000000
	.type	add_long_get_work_dim_get_num_groups.kd,@object
add_long_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 000000063F80: 00000000
	.long 0                                                    // 000000063F84: 00000000
	.long 0x110                                                // 000000063F88: 00000110
	.long 0                                                    // 000000063F8C: 00000000
	.long 0x16980                                              // 000000063F90: 00016980
	.long 0                                                    // 000000063F94: 00000000
	.long 0                                                    // 000000063F98: 00000000
	.long 0                                                    // 000000063F9C: 00000000
	.long 0                                                    // 000000063FA0: 00000000
	.long 0                                                    // 000000063FA4: 00000000
	.long 0                                                    // 000000063FA8: 00000000
	.long 0                                                    // 000000063FAC: 00000000
	.long 0x60af0101                                           // 000000063FB0: 60AF0101
	.long 0x1384                                               // 000000063FB4: 00001384
	.long 0x408                                                // 000000063FB8: 00000408
	.long 0                                                    // 000000063FBC: 00000000
	.type	add_long_x_get_work_dim.kd,@object
add_long_x_get_work_dim.kd:
	.long 0                                                    // 000000063FC0: 00000000
	.long 0                                                    // 000000063FC4: 00000000
	.long 0x110                                                // 000000063FC8: 00000110
	.long 0                                                    // 000000063FCC: 00000000
	.ascii "@k"                                                // 000000063FD0: 6B40
	.short 0x1                                                 // 000000063FD2: 0001
	.long 0                                                    // 000000063FD4: 00000000
	.long 0                                                    // 000000063FD8: 00000000
	.long 0                                                    // 000000063FDC: 00000000
	.long 0                                                    // 000000063FE0: 00000000
	.long 0                                                    // 000000063FE4: 00000000
	.long 0                                                    // 000000063FE8: 00000000
	.long 0                                                    // 000000063FEC: 00000000
	.long 0x60af0100                                           // 000000063FF0: 60AF0100
	.long 0x1384                                               // 000000063FF4: 00001384
	.long 0x408                                                // 000000063FF8: 00000408
	.long 0                                                    // 000000063FFC: 00000000
	.type	add_long_get_global_offset_get_work_dim.kd,@object
add_long_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 000000064000: 00000000
	.long 0                                                    // 000000064004: 00000000
	.long 0x110                                                // 000000064008: 00000110
	.long 0                                                    // 00000006400C: 00000000
	.long 0x16d00                                              // 000000064010: 00016D00
	.long 0                                                    // 000000064014: 00000000
	.long 0                                                    // 000000064018: 00000000
	.long 0                                                    // 00000006401C: 00000000
	.long 0                                                    // 000000064020: 00000000
	.long 0                                                    // 000000064024: 00000000
	.long 0                                                    // 000000064028: 00000000
	.long 0                                                    // 00000006402C: 00000000
	.long 0x60af0101                                           // 000000064030: 60AF0101
	.long 0x1384                                               // 000000064034: 00001384
	.long 0x408                                                // 000000064038: 00000408
	.long 0                                                    // 00000006403C: 00000000
	.type	add_long_get_local_id_get_work_dim.kd,@object
add_long_get_local_id_get_work_dim.kd:
	.long 0                                                    // 000000064040: 00000000
	.long 0                                                    // 000000064044: 00000000
	.long 0x110                                                // 000000064048: 00000110
	.long 0                                                    // 00000006404C: 00000000
	.long 0x16ec0                                              // 000000064050: 00016EC0
	.long 0                                                    // 000000064054: 00000000
	.long 0                                                    // 000000064058: 00000000
	.long 0                                                    // 00000006405C: 00000000
	.long 0                                                    // 000000064060: 00000000
	.long 0                                                    // 000000064064: 00000000
	.long 0                                                    // 000000064068: 00000000
	.long 0                                                    // 00000006406C: 00000000
	.long 0x60af0101                                           // 000000064070: 60AF0101
	.long 0x1384                                               // 000000064074: 00001384
	.long 0x408                                                // 000000064078: 00000408
	.long 0                                                    // 00000006407C: 00000000
	.type	add_long_get_group_id_get_work_dim.kd,@object
add_long_get_group_id_get_work_dim.kd:
	.long 0                                                    // 000000064080: 00000000
	.long 0                                                    // 000000064084: 00000000
	.long 0x110                                                // 000000064088: 00000110
	.long 0                                                    // 00000006408C: 00000000
	.long 0x17080                                              // 000000064090: 00017080
	.long 0                                                    // 000000064094: 00000000
	.long 0                                                    // 000000064098: 00000000
	.long 0                                                    // 00000006409C: 00000000
	.long 0                                                    // 0000000640A0: 00000000
	.long 0                                                    // 0000000640A4: 00000000
	.long 0                                                    // 0000000640A8: 00000000
	.long 0                                                    // 0000000640AC: 00000000
	.long 0x60af0101                                           // 0000000640B0: 60AF0101
	.long 0x1384                                               // 0000000640B4: 00001384
	.long 0x408                                                // 0000000640B8: 00000408
	.long 0                                                    // 0000000640BC: 00000000
	.type	add_long_get_local_size_get_work_dim.kd,@object
add_long_get_local_size_get_work_dim.kd:
	.long 0                                                    // 0000000640C0: 00000000
	.long 0                                                    // 0000000640C4: 00000000
	.long 0x110                                                // 0000000640C8: 00000110
	.long 0                                                    // 0000000640CC: 00000000
	.ascii "@r"                                                // 0000000640D0: 7240
	.short 0x1                                                 // 0000000640D2: 0001
	.long 0                                                    // 0000000640D4: 00000000
	.long 0                                                    // 0000000640D8: 00000000
	.long 0                                                    // 0000000640DC: 00000000
	.long 0                                                    // 0000000640E0: 00000000
	.long 0                                                    // 0000000640E4: 00000000
	.long 0                                                    // 0000000640E8: 00000000
	.long 0                                                    // 0000000640EC: 00000000
	.long 0x60af0101                                           // 0000000640F0: 60AF0101
	.long 0x1384                                               // 0000000640F4: 00001384
	.long 0x408                                                // 0000000640F8: 00000408
	.long 0                                                    // 0000000640FC: 00000000
	.type	add_long_get_global_id_get_work_dim.kd,@object
add_long_get_global_id_get_work_dim.kd:
	.long 0                                                    // 000000064100: 00000000
	.long 0                                                    // 000000064104: 00000000
	.long 0x110                                                // 000000064108: 00000110
	.long 0                                                    // 00000006410C: 00000000
	.long 0x17400                                              // 000000064110: 00017400
	.long 0                                                    // 000000064114: 00000000
	.long 0                                                    // 000000064118: 00000000
	.long 0                                                    // 00000006411C: 00000000
	.long 0                                                    // 000000064120: 00000000
	.long 0                                                    // 000000064124: 00000000
	.long 0                                                    // 000000064128: 00000000
	.long 0                                                    // 00000006412C: 00000000
	.long 0x60af0101                                           // 000000064130: 60AF0101
	.long 0x1384                                               // 000000064134: 00001384
	.long 0x408                                                // 000000064138: 00000408
	.long 0                                                    // 00000006413C: 00000000
	.type	add_long_get_global_size_get_work_dim.kd,@object
add_long_get_global_size_get_work_dim.kd:
	.long 0                                                    // 000000064140: 00000000
	.long 0                                                    // 000000064144: 00000000
	.long 0x110                                                // 000000064148: 00000110
	.long 0                                                    // 00000006414C: 00000000
	.long 0x175c0                                              // 000000064150: 000175C0
	.long 0                                                    // 000000064154: 00000000
	.long 0                                                    // 000000064158: 00000000
	.long 0                                                    // 00000006415C: 00000000
	.long 0                                                    // 000000064160: 00000000
	.long 0                                                    // 000000064164: 00000000
	.long 0                                                    // 000000064168: 00000000
	.long 0                                                    // 00000006416C: 00000000
	.long 0x60af0101                                           // 000000064170: 60AF0101
	.long 0x1384                                               // 000000064174: 00001384
	.long 0x408                                                // 000000064178: 00000408
	.long 0                                                    // 00000006417C: 00000000
	.type	add_long_get_num_groups_get_work_dim.kd,@object
add_long_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 000000064180: 00000000
	.long 0                                                    // 000000064184: 00000000
	.long 0x110                                                // 000000064188: 00000110
	.long 0                                                    // 00000006418C: 00000000
	.long 0x17780                                              // 000000064190: 00017780
	.long 0                                                    // 000000064194: 00000000
	.long 0                                                    // 000000064198: 00000000
	.long 0                                                    // 00000006419C: 00000000
	.long 0                                                    // 0000000641A0: 00000000
	.long 0                                                    // 0000000641A4: 00000000
	.long 0                                                    // 0000000641A8: 00000000
	.long 0                                                    // 0000000641AC: 00000000
	.long 0x60af0101                                           // 0000000641B0: 60AF0101
	.long 0x1384                                               // 0000000641B4: 00001384
	.long 0x408                                                // 0000000641B8: 00000408
	.long 0                                                    // 0000000641BC: 00000000
	.type	add_long_get_work_dim_get_work_dim.kd,@object
add_long_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 0000000641C0: 00000000
	.long 0                                                    // 0000000641C4: 00000000
	.long 0x110                                                // 0000000641C8: 00000110
	.long 0                                                    // 0000000641CC: 00000000
	.ascii "@y"                                                // 0000000641D0: 7940
	.short 0x1                                                 // 0000000641D2: 0001
	.long 0                                                    // 0000000641D4: 00000000
	.long 0                                                    // 0000000641D8: 00000000
	.long 0                                                    // 0000000641DC: 00000000
	.long 0                                                    // 0000000641E0: 00000000
	.long 0                                                    // 0000000641E4: 00000000
	.long 0                                                    // 0000000641E8: 00000000
	.long 0                                                    // 0000000641EC: 00000000
	.long 0x60af0100                                           // 0000000641F0: 60AF0100
	.long 0x1384                                               // 0000000641F4: 00001384
	.long 0x408                                                // 0000000641F8: 00000408
	.long 0                                                    // 0000000641FC: 00000000
	.type	add_long_x_64.kd,@object
add_long_x_64.kd:
	.long 0                                                    // 000000064200: 00000000
	.long 0                                                    // 000000064204: 00000000
	.long 0x110                                                // 000000064208: 00000110
	.long 0                                                    // 00000006420C: 00000000
	.long 0x17b00                                              // 000000064210: 00017B00
	.long 0                                                    // 000000064214: 00000000
	.long 0                                                    // 000000064218: 00000000
	.long 0                                                    // 00000006421C: 00000000
	.long 0                                                    // 000000064220: 00000000
	.long 0                                                    // 000000064224: 00000000
	.long 0                                                    // 000000064228: 00000000
	.long 0                                                    // 00000006422C: 00000000
	.long 0x60af0100                                           // 000000064230: 60AF0100
	.long 0x84                                                 // 000000064234: 00000084
	.long 0x408                                                // 000000064238: 00000408
	.long 0                                                    // 00000006423C: 00000000
	.type	add_long_get_global_offset_64.kd,@object
add_long_get_global_offset_64.kd:
	.long 0                                                    // 000000064240: 00000000
	.long 0                                                    // 000000064244: 00000000
	.long 0x110                                                // 000000064248: 00000110
	.long 0                                                    // 00000006424C: 00000000
	.long 0x17bc0                                              // 000000064250: 00017BC0
	.long 0                                                    // 000000064254: 00000000
	.long 0                                                    // 000000064258: 00000000
	.long 0                                                    // 00000006425C: 00000000
	.long 0                                                    // 000000064260: 00000000
	.long 0                                                    // 000000064264: 00000000
	.long 0                                                    // 000000064268: 00000000
	.long 0                                                    // 00000006426C: 00000000
	.long 0x60af0100                                           // 000000064270: 60AF0100
	.long 0x84                                                 // 000000064274: 00000084
	.long 0x408                                                // 000000064278: 00000408
	.long 0                                                    // 00000006427C: 00000000
	.type	add_long_get_local_id_64.kd,@object
add_long_get_local_id_64.kd:
	.long 0                                                    // 000000064280: 00000000
	.long 0                                                    // 000000064284: 00000000
	.long 0x110                                                // 000000064288: 00000110
	.long 0                                                    // 00000006428C: 00000000
	.long 0x17c80                                              // 000000064290: 00017C80
	.long 0                                                    // 000000064294: 00000000
	.long 0                                                    // 000000064298: 00000000
	.long 0                                                    // 00000006429C: 00000000
	.long 0                                                    // 0000000642A0: 00000000
	.long 0                                                    // 0000000642A4: 00000000
	.long 0                                                    // 0000000642A8: 00000000
	.long 0                                                    // 0000000642AC: 00000000
	.long 0x60af0100                                           // 0000000642B0: 60AF0100
	.long 0x84                                                 // 0000000642B4: 00000084
	.long 0x408                                                // 0000000642B8: 00000408
	.long 0                                                    // 0000000642BC: 00000000
	.type	add_long_get_group_id_64.kd,@object
add_long_get_group_id_64.kd:
	.long 0                                                    // 0000000642C0: 00000000
	.long 0                                                    // 0000000642C4: 00000000
	.long 0x110                                                // 0000000642C8: 00000110
	.long 0                                                    // 0000000642CC: 00000000
	.ascii "@}"                                                // 0000000642D0: 7D40
	.short 0x1                                                 // 0000000642D2: 0001
	.long 0                                                    // 0000000642D4: 00000000
	.long 0                                                    // 0000000642D8: 00000000
	.long 0                                                    // 0000000642DC: 00000000
	.long 0                                                    // 0000000642E0: 00000000
	.long 0                                                    // 0000000642E4: 00000000
	.long 0                                                    // 0000000642E8: 00000000
	.long 0                                                    // 0000000642EC: 00000000
	.long 0x60af0100                                           // 0000000642F0: 60AF0100
	.long 0x84                                                 // 0000000642F4: 00000084
	.long 0x408                                                // 0000000642F8: 00000408
	.long 0                                                    // 0000000642FC: 00000000
	.type	add_long_get_local_size_64.kd,@object
add_long_get_local_size_64.kd:
	.long 0                                                    // 000000064300: 00000000
	.long 0                                                    // 000000064304: 00000000
	.long 0x110                                                // 000000064308: 00000110
	.long 0                                                    // 00000006430C: 00000000
	.long 0x17e00                                              // 000000064310: 00017E00
	.long 0                                                    // 000000064314: 00000000
	.long 0                                                    // 000000064318: 00000000
	.long 0                                                    // 00000006431C: 00000000
	.long 0                                                    // 000000064320: 00000000
	.long 0                                                    // 000000064324: 00000000
	.long 0                                                    // 000000064328: 00000000
	.long 0                                                    // 00000006432C: 00000000
	.long 0x60af0100                                           // 000000064330: 60AF0100
	.long 0x84                                                 // 000000064334: 00000084
	.long 0x408                                                // 000000064338: 00000408
	.long 0                                                    // 00000006433C: 00000000
	.type	add_long_get_global_id_64.kd,@object
add_long_get_global_id_64.kd:
	.long 0                                                    // 000000064340: 00000000
	.long 0                                                    // 000000064344: 00000000
	.long 0x110                                                // 000000064348: 00000110
	.long 0                                                    // 00000006434C: 00000000
	.long 0x17ec0                                              // 000000064350: 00017EC0
	.long 0                                                    // 000000064354: 00000000
	.long 0                                                    // 000000064358: 00000000
	.long 0                                                    // 00000006435C: 00000000
	.long 0                                                    // 000000064360: 00000000
	.long 0                                                    // 000000064364: 00000000
	.long 0                                                    // 000000064368: 00000000
	.long 0                                                    // 00000006436C: 00000000
	.long 0x60af0100                                           // 000000064370: 60AF0100
	.long 0x84                                                 // 000000064374: 00000084
	.long 0x408                                                // 000000064378: 00000408
	.long 0                                                    // 00000006437C: 00000000
	.type	add_long_get_global_size_64.kd,@object
add_long_get_global_size_64.kd:
	.long 0                                                    // 000000064380: 00000000
	.long 0                                                    // 000000064384: 00000000
	.long 0x110                                                // 000000064388: 00000110
	.long 0                                                    // 00000006438C: 00000000
	.long 0x17f80                                              // 000000064390: 00017F80
	.long 0                                                    // 000000064394: 00000000
	.long 0                                                    // 000000064398: 00000000
	.long 0                                                    // 00000006439C: 00000000
	.long 0                                                    // 0000000643A0: 00000000
	.long 0                                                    // 0000000643A4: 00000000
	.long 0                                                    // 0000000643A8: 00000000
	.long 0                                                    // 0000000643AC: 00000000
	.long 0x60af0100                                           // 0000000643B0: 60AF0100
	.long 0x84                                                 // 0000000643B4: 00000084
	.long 0x408                                                // 0000000643B8: 00000408
	.long 0                                                    // 0000000643BC: 00000000
	.type	add_long_get_num_groups_64.kd,@object
add_long_get_num_groups_64.kd:
	.long 0                                                    // 0000000643C0: 00000000
	.long 0                                                    // 0000000643C4: 00000000
	.long 0x110                                                // 0000000643C8: 00000110
	.long 0                                                    // 0000000643CC: 00000000
	.ascii "@"                                                 // 0000000643D0: 40
	.byte 0x80                                                 // 0000000643D1: 80
	.short 0x1                                                 // 0000000643D2: 0001
	.long 0                                                    // 0000000643D4: 00000000
	.long 0                                                    // 0000000643D8: 00000000
	.long 0                                                    // 0000000643DC: 00000000
	.long 0                                                    // 0000000643E0: 00000000
	.long 0                                                    // 0000000643E4: 00000000
	.long 0                                                    // 0000000643E8: 00000000
	.long 0                                                    // 0000000643EC: 00000000
	.long 0x60af0100                                           // 0000000643F0: 60AF0100
	.long 0x84                                                 // 0000000643F4: 00000084
	.long 0x408                                                // 0000000643F8: 00000408
	.long 0                                                    // 0000000643FC: 00000000
	.type	add_long_get_work_dim.kd,@object
add_long_get_work_dim.kd:
	.long 0                                                    // 000000064400: 00000000
	.long 0                                                    // 000000064404: 00000000
	.long 0x110                                                // 000000064408: 00000110
	.long 0                                                    // 00000006440C: 00000000
	.long 0x18100                                              // 000000064410: 00018100
	.long 0                                                    // 000000064414: 00000000
	.long 0                                                    // 000000064418: 00000000
	.long 0                                                    // 00000006441C: 00000000
	.long 0                                                    // 000000064420: 00000000
	.long 0                                                    // 000000064424: 00000000
	.long 0                                                    // 000000064428: 00000000
	.long 0                                                    // 00000006442C: 00000000
	.long 0x60af0100                                           // 000000064430: 60AF0100
	.long 0x84                                                 // 000000064434: 00000084
	.long 0x408                                                // 000000064438: 00000408
	.long 0                                                    // 00000006443C: 00000000
	.type	add_long_x_8_8.kd,@object
add_long_x_8_8.kd:
	.long 0                                                    // 000000064440: 00000000
	.long 0                                                    // 000000064444: 00000000
	.long 0x110                                                // 000000064448: 00000110
	.long 0                                                    // 00000006444C: 00000000
	.long 0x181c0                                              // 000000064450: 000181C0
	.long 0                                                    // 000000064454: 00000000
	.long 0                                                    // 000000064458: 00000000
	.long 0                                                    // 00000006445C: 00000000
	.long 0                                                    // 000000064460: 00000000
	.long 0                                                    // 000000064464: 00000000
	.long 0                                                    // 000000064468: 00000000
	.long 0                                                    // 00000006446C: 00000000
	.long 0x60af0100                                           // 000000064470: 60AF0100
	.long 0x984                                                // 000000064474: 00000984
	.long 0x408                                                // 000000064478: 00000408
	.long 0                                                    // 00000006447C: 00000000
	.type	add_long_get_global_offset_8_8.kd,@object
add_long_get_global_offset_8_8.kd:
	.long 0                                                    // 000000064480: 00000000
	.long 0                                                    // 000000064484: 00000000
	.long 0x110                                                // 000000064488: 00000110
	.long 0                                                    // 00000006448C: 00000000
	.long 0x18280                                              // 000000064490: 00018280
	.long 0                                                    // 000000064494: 00000000
	.long 0                                                    // 000000064498: 00000000
	.long 0                                                    // 00000006449C: 00000000
	.long 0                                                    // 0000000644A0: 00000000
	.long 0                                                    // 0000000644A4: 00000000
	.long 0                                                    // 0000000644A8: 00000000
	.long 0                                                    // 0000000644AC: 00000000
	.long 0x60af0100                                           // 0000000644B0: 60AF0100
	.long 0x84                                                 // 0000000644B4: 00000084
	.long 0x408                                                // 0000000644B8: 00000408
	.long 0                                                    // 0000000644BC: 00000000
	.type	add_long_get_local_id_8_8.kd,@object
add_long_get_local_id_8_8.kd:
	.long 0                                                    // 0000000644C0: 00000000
	.long 0                                                    // 0000000644C4: 00000000
	.long 0x110                                                // 0000000644C8: 00000110
	.long 0                                                    // 0000000644CC: 00000000
	.ascii "@"                                                 // 0000000644D0: 40
	.byte 0x83                                                 // 0000000644D1: 83
	.short 0x1                                                 // 0000000644D2: 0001
	.long 0                                                    // 0000000644D4: 00000000
	.long 0                                                    // 0000000644D8: 00000000
	.long 0                                                    // 0000000644DC: 00000000
	.long 0                                                    // 0000000644E0: 00000000
	.long 0                                                    // 0000000644E4: 00000000
	.long 0                                                    // 0000000644E8: 00000000
	.long 0                                                    // 0000000644EC: 00000000
	.long 0x60af0100                                           // 0000000644F0: 60AF0100
	.long 0x884                                                // 0000000644F4: 00000884
	.long 0x408                                                // 0000000644F8: 00000408
	.long 0                                                    // 0000000644FC: 00000000
	.type	add_long_get_group_id_8_8.kd,@object
add_long_get_group_id_8_8.kd:
	.long 0                                                    // 000000064500: 00000000
	.long 0                                                    // 000000064504: 00000000
	.long 0x110                                                // 000000064508: 00000110
	.long 0                                                    // 00000006450C: 00000000
	.long 0x18400                                              // 000000064510: 00018400
	.long 0                                                    // 000000064514: 00000000
	.long 0                                                    // 000000064518: 00000000
	.long 0                                                    // 00000006451C: 00000000
	.long 0                                                    // 000000064520: 00000000
	.long 0                                                    // 000000064524: 00000000
	.long 0                                                    // 000000064528: 00000000
	.long 0                                                    // 00000006452C: 00000000
	.long 0x60af0100                                           // 000000064530: 60AF0100
	.long 0x184                                                // 000000064534: 00000184
	.long 0x408                                                // 000000064538: 00000408
	.long 0                                                    // 00000006453C: 00000000
	.type	add_long_get_local_size_8_8.kd,@object
add_long_get_local_size_8_8.kd:
	.long 0                                                    // 000000064540: 00000000
	.long 0                                                    // 000000064544: 00000000
	.long 0x110                                                // 000000064548: 00000110
	.long 0                                                    // 00000006454C: 00000000
	.long 0x184c0                                              // 000000064550: 000184C0
	.long 0                                                    // 000000064554: 00000000
	.long 0                                                    // 000000064558: 00000000
	.long 0                                                    // 00000006455C: 00000000
	.long 0                                                    // 000000064560: 00000000
	.long 0                                                    // 000000064564: 00000000
	.long 0                                                    // 000000064568: 00000000
	.long 0                                                    // 00000006456C: 00000000
	.long 0x60af0100                                           // 000000064570: 60AF0100
	.long 0x84                                                 // 000000064574: 00000084
	.long 0x408                                                // 000000064578: 00000408
	.long 0                                                    // 00000006457C: 00000000
	.type	add_long_get_global_id_8_8.kd,@object
add_long_get_global_id_8_8.kd:
	.long 0                                                    // 000000064580: 00000000
	.long 0                                                    // 000000064584: 00000000
	.long 0x110                                                // 000000064588: 00000110
	.long 0                                                    // 00000006458C: 00000000
	.long 0x18580                                              // 000000064590: 00018580
	.long 0                                                    // 000000064594: 00000000
	.long 0                                                    // 000000064598: 00000000
	.long 0                                                    // 00000006459C: 00000000
	.long 0                                                    // 0000000645A0: 00000000
	.long 0                                                    // 0000000645A4: 00000000
	.long 0                                                    // 0000000645A8: 00000000
	.long 0                                                    // 0000000645AC: 00000000
	.long 0x60af0100                                           // 0000000645B0: 60AF0100
	.long 0x984                                                // 0000000645B4: 00000984
	.long 0x408                                                // 0000000645B8: 00000408
	.long 0                                                    // 0000000645BC: 00000000
	.type	add_long_get_global_size_8_8.kd,@object
add_long_get_global_size_8_8.kd:
	.long 0                                                    // 0000000645C0: 00000000
	.long 0                                                    // 0000000645C4: 00000000
	.long 0x110                                                // 0000000645C8: 00000110
	.long 0                                                    // 0000000645CC: 00000000
	.ascii "@"                                                 // 0000000645D0: 40
	.byte 0x86                                                 // 0000000645D1: 86
	.short 0x1                                                 // 0000000645D2: 0001
	.long 0                                                    // 0000000645D4: 00000000
	.long 0                                                    // 0000000645D8: 00000000
	.long 0                                                    // 0000000645DC: 00000000
	.long 0                                                    // 0000000645E0: 00000000
	.long 0                                                    // 0000000645E4: 00000000
	.long 0                                                    // 0000000645E8: 00000000
	.long 0                                                    // 0000000645EC: 00000000
	.long 0x60af0100                                           // 0000000645F0: 60AF0100
	.long 0x84                                                 // 0000000645F4: 00000084
	.long 0x408                                                // 0000000645F8: 00000408
	.long 0                                                    // 0000000645FC: 00000000
	.type	add_long_get_num_groups_8_8.kd,@object
add_long_get_num_groups_8_8.kd:
	.long 0                                                    // 000000064600: 00000000
	.long 0                                                    // 000000064604: 00000000
	.long 0x110                                                // 000000064608: 00000110
	.long 0                                                    // 00000006460C: 00000000
	.long 0x18700                                              // 000000064610: 00018700
	.long 0                                                    // 000000064614: 00000000
	.long 0                                                    // 000000064618: 00000000
	.long 0                                                    // 00000006461C: 00000000
	.long 0                                                    // 000000064620: 00000000
	.long 0                                                    // 000000064624: 00000000
	.long 0                                                    // 000000064628: 00000000
	.long 0                                                    // 00000006462C: 00000000
	.long 0x60af0100                                           // 000000064630: 60AF0100
	.long 0x84                                                 // 000000064634: 00000084
	.long 0x408                                                // 000000064638: 00000408
	.long 0                                                    // 00000006463C: 00000000
	.type	add_long_get_work_dim_8_8.kd,@object
add_long_get_work_dim_8_8.kd:
	.long 0                                                    // 000000064640: 00000000
	.long 0                                                    // 000000064644: 00000000
	.long 0x110                                                // 000000064648: 00000110
	.long 0                                                    // 00000006464C: 00000000
	.long 0x187c0                                              // 000000064650: 000187C0
	.long 0                                                    // 000000064654: 00000000
	.long 0                                                    // 000000064658: 00000000
	.long 0                                                    // 00000006465C: 00000000
	.long 0                                                    // 000000064660: 00000000
	.long 0                                                    // 000000064664: 00000000
	.long 0                                                    // 000000064668: 00000000
	.long 0                                                    // 00000006466C: 00000000
	.long 0x60af0100                                           // 000000064670: 60AF0100
	.long 0x984                                                // 000000064674: 00000984
	.long 0x408                                                // 000000064678: 00000408
	.long 0                                                    // 00000006467C: 00000000
	.type	add_char_x_x.kd,@object
add_char_x_x.kd:
	.long 0                                                    // 000000064680: 00000000
	.long 0                                                    // 000000064684: 00000000
	.long 0x110                                                // 000000064688: 00000110
	.long 0                                                    // 00000006468C: 00000000
	.long 0x18880                                              // 000000064690: 00018880
	.long 0                                                    // 000000064694: 00000000
	.long 0                                                    // 000000064698: 00000000
	.long 0                                                    // 00000006469C: 00000000
	.long 0                                                    // 0000000646A0: 00000000
	.long 0                                                    // 0000000646A4: 00000000
	.long 0                                                    // 0000000646A8: 00000000
	.long 0                                                    // 0000000646AC: 00000000
	.long 0x60af0100                                           // 0000000646B0: 60AF0100
	.long 0x84                                                 // 0000000646B4: 00000084
	.long 0x408                                                // 0000000646B8: 00000408
	.long 0                                                    // 0000000646BC: 00000000
	.type	add_char_get_global_offset_x.kd,@object
add_char_get_global_offset_x.kd:
	.long 0                                                    // 0000000646C0: 00000000
	.long 0                                                    // 0000000646C4: 00000000
	.long 0x110                                                // 0000000646C8: 00000110
	.long 0                                                    // 0000000646CC: 00000000
	.ascii "@"                                                 // 0000000646D0: 40
	.byte 0x89                                                 // 0000000646D1: 89
	.short 0x1                                                 // 0000000646D2: 0001
	.long 0                                                    // 0000000646D4: 00000000
	.long 0                                                    // 0000000646D8: 00000000
	.long 0                                                    // 0000000646DC: 00000000
	.long 0                                                    // 0000000646E0: 00000000
	.long 0                                                    // 0000000646E4: 00000000
	.long 0                                                    // 0000000646E8: 00000000
	.long 0                                                    // 0000000646EC: 00000000
	.long 0x60af0100                                           // 0000000646F0: 60AF0100
	.long 0x1384                                               // 0000000646F4: 00001384
	.long 0x408                                                // 0000000646F8: 00000408
	.long 0                                                    // 0000000646FC: 00000000
	.type	add_char_get_local_id_x.kd,@object
add_char_get_local_id_x.kd:
	.long 0                                                    // 000000064700: 00000000
	.long 0                                                    // 000000064704: 00000000
	.long 0x110                                                // 000000064708: 00000110
	.long 0                                                    // 00000006470C: 00000000
	.long 0x18a00                                              // 000000064710: 00018A00
	.long 0                                                    // 000000064714: 00000000
	.long 0                                                    // 000000064718: 00000000
	.long 0                                                    // 00000006471C: 00000000
	.long 0                                                    // 000000064720: 00000000
	.long 0                                                    // 000000064724: 00000000
	.long 0                                                    // 000000064728: 00000000
	.long 0                                                    // 00000006472C: 00000000
	.long 0x60af0100                                           // 000000064730: 60AF0100
	.long 0x1384                                               // 000000064734: 00001384
	.long 0x408                                                // 000000064738: 00000408
	.long 0                                                    // 00000006473C: 00000000
	.type	add_char_get_group_id_x.kd,@object
add_char_get_group_id_x.kd:
	.long 0                                                    // 000000064740: 00000000
	.long 0                                                    // 000000064744: 00000000
	.long 0x110                                                // 000000064748: 00000110
	.long 0                                                    // 00000006474C: 00000000
	.long 0x18ac0                                              // 000000064750: 00018AC0
	.long 0                                                    // 000000064754: 00000000
	.long 0                                                    // 000000064758: 00000000
	.long 0                                                    // 00000006475C: 00000000
	.long 0                                                    // 000000064760: 00000000
	.long 0                                                    // 000000064764: 00000000
	.long 0                                                    // 000000064768: 00000000
	.long 0                                                    // 00000006476C: 00000000
	.long 0x60af0100                                           // 000000064770: 60AF0100
	.long 0x1384                                               // 000000064774: 00001384
	.long 0x408                                                // 000000064778: 00000408
	.long 0                                                    // 00000006477C: 00000000
	.type	add_char_get_local_size_x.kd,@object
add_char_get_local_size_x.kd:
	.long 0                                                    // 000000064780: 00000000
	.long 0                                                    // 000000064784: 00000000
	.long 0x110                                                // 000000064788: 00000110
	.long 0                                                    // 00000006478C: 00000000
	.long 0x18b80                                              // 000000064790: 00018B80
	.long 0                                                    // 000000064794: 00000000
	.long 0                                                    // 000000064798: 00000000
	.long 0                                                    // 00000006479C: 00000000
	.long 0                                                    // 0000000647A0: 00000000
	.long 0                                                    // 0000000647A4: 00000000
	.long 0                                                    // 0000000647A8: 00000000
	.long 0                                                    // 0000000647AC: 00000000
	.long 0x60af0100                                           // 0000000647B0: 60AF0100
	.long 0x1384                                               // 0000000647B4: 00001384
	.long 0x408                                                // 0000000647B8: 00000408
	.long 0                                                    // 0000000647BC: 00000000
	.type	add_char_get_global_id_x.kd,@object
add_char_get_global_id_x.kd:
	.long 0                                                    // 0000000647C0: 00000000
	.long 0                                                    // 0000000647C4: 00000000
	.long 0x110                                                // 0000000647C8: 00000110
	.long 0                                                    // 0000000647CC: 00000000
	.ascii "@"                                                 // 0000000647D0: 40
	.byte 0x8c                                                 // 0000000647D1: 8C
	.short 0x1                                                 // 0000000647D2: 0001
	.long 0                                                    // 0000000647D4: 00000000
	.long 0                                                    // 0000000647D8: 00000000
	.long 0                                                    // 0000000647DC: 00000000
	.long 0                                                    // 0000000647E0: 00000000
	.long 0                                                    // 0000000647E4: 00000000
	.long 0                                                    // 0000000647E8: 00000000
	.long 0                                                    // 0000000647EC: 00000000
	.long 0x60af0101                                           // 0000000647F0: 60AF0101
	.long 0x1384                                               // 0000000647F4: 00001384
	.long 0x408                                                // 0000000647F8: 00000408
	.long 0                                                    // 0000000647FC: 00000000
	.type	add_char_get_global_size_x.kd,@object
add_char_get_global_size_x.kd:
	.long 0                                                    // 000000064800: 00000000
	.long 0                                                    // 000000064804: 00000000
	.long 0x110                                                // 000000064808: 00000110
	.long 0                                                    // 00000006480C: 00000000
	.long 0x18d00                                              // 000000064810: 00018D00
	.long 0                                                    // 000000064814: 00000000
	.long 0                                                    // 000000064818: 00000000
	.long 0                                                    // 00000006481C: 00000000
	.long 0                                                    // 000000064820: 00000000
	.long 0                                                    // 000000064824: 00000000
	.long 0                                                    // 000000064828: 00000000
	.long 0                                                    // 00000006482C: 00000000
	.long 0x60af0100                                           // 000000064830: 60AF0100
	.long 0x1384                                               // 000000064834: 00001384
	.long 0x408                                                // 000000064838: 00000408
	.long 0                                                    // 00000006483C: 00000000
	.type	add_char_get_num_groups_x.kd,@object
add_char_get_num_groups_x.kd:
	.long 0                                                    // 000000064840: 00000000
	.long 0                                                    // 000000064844: 00000000
	.long 0x110                                                // 000000064848: 00000110
	.long 0                                                    // 00000006484C: 00000000
	.long 0x18dc0                                              // 000000064850: 00018DC0
	.long 0                                                    // 000000064854: 00000000
	.long 0                                                    // 000000064858: 00000000
	.long 0                                                    // 00000006485C: 00000000
	.long 0                                                    // 000000064860: 00000000
	.long 0                                                    // 000000064864: 00000000
	.long 0                                                    // 000000064868: 00000000
	.long 0                                                    // 00000006486C: 00000000
	.long 0x60af0100                                           // 000000064870: 60AF0100
	.long 0x1384                                               // 000000064874: 00001384
	.long 0x408                                                // 000000064878: 00000408
	.long 0                                                    // 00000006487C: 00000000
	.type	add_char_get_work_dim_x.kd,@object
add_char_get_work_dim_x.kd:
	.long 0                                                    // 000000064880: 00000000
	.long 0                                                    // 000000064884: 00000000
	.long 0x110                                                // 000000064888: 00000110
	.long 0                                                    // 00000006488C: 00000000
	.long 0x18f80                                              // 000000064890: 00018F80
	.long 0                                                    // 000000064894: 00000000
	.long 0                                                    // 000000064898: 00000000
	.long 0                                                    // 00000006489C: 00000000
	.long 0                                                    // 0000000648A0: 00000000
	.long 0                                                    // 0000000648A4: 00000000
	.long 0                                                    // 0000000648A8: 00000000
	.long 0                                                    // 0000000648AC: 00000000
	.long 0x60af0100                                           // 0000000648B0: 60AF0100
	.long 0x84                                                 // 0000000648B4: 00000084
	.long 0x408                                                // 0000000648B8: 00000408
	.long 0                                                    // 0000000648BC: 00000000
	.type	add_char_x_get_global_offset.kd,@object
add_char_x_get_global_offset.kd:
	.long 0                                                    // 0000000648C0: 00000000
	.long 0                                                    // 0000000648C4: 00000000
	.long 0x110                                                // 0000000648C8: 00000110
	.long 0                                                    // 0000000648CC: 00000000
	.ascii "@"                                                 // 0000000648D0: 40
	.byte 0x90                                                 // 0000000648D1: 90
	.short 0x1                                                 // 0000000648D2: 0001
	.long 0                                                    // 0000000648D4: 00000000
	.long 0                                                    // 0000000648D8: 00000000
	.long 0                                                    // 0000000648DC: 00000000
	.long 0                                                    // 0000000648E0: 00000000
	.long 0                                                    // 0000000648E4: 00000000
	.long 0                                                    // 0000000648E8: 00000000
	.long 0                                                    // 0000000648EC: 00000000
	.long 0x60af0100                                           // 0000000648F0: 60AF0100
	.long 0x1384                                               // 0000000648F4: 00001384
	.long 0x408                                                // 0000000648F8: 00000408
	.long 0                                                    // 0000000648FC: 00000000
	.type	add_char_get_global_offset_get_global_offset.kd,@object
add_char_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 000000064900: 00000000
	.long 0                                                    // 000000064904: 00000000
	.long 0x110                                                // 000000064908: 00000110
	.long 0                                                    // 00000006490C: 00000000
	.long 0x19100                                              // 000000064910: 00019100
	.long 0                                                    // 000000064914: 00000000
	.long 0                                                    // 000000064918: 00000000
	.long 0                                                    // 00000006491C: 00000000
	.long 0                                                    // 000000064920: 00000000
	.long 0                                                    // 000000064924: 00000000
	.long 0                                                    // 000000064928: 00000000
	.long 0                                                    // 00000006492C: 00000000
	.long 0x60af0100                                           // 000000064930: 60AF0100
	.long 0x1384                                               // 000000064934: 00001384
	.long 0x408                                                // 000000064938: 00000408
	.long 0                                                    // 00000006493C: 00000000
	.type	add_char_get_local_id_get_global_offset.kd,@object
add_char_get_local_id_get_global_offset.kd:
	.long 0                                                    // 000000064940: 00000000
	.long 0                                                    // 000000064944: 00000000
	.long 0x110                                                // 000000064948: 00000110
	.long 0                                                    // 00000006494C: 00000000
	.long 0x191c0                                              // 000000064950: 000191C0
	.long 0                                                    // 000000064954: 00000000
	.long 0                                                    // 000000064958: 00000000
	.long 0                                                    // 00000006495C: 00000000
	.long 0                                                    // 000000064960: 00000000
	.long 0                                                    // 000000064964: 00000000
	.long 0                                                    // 000000064968: 00000000
	.long 0                                                    // 00000006496C: 00000000
	.long 0x60af0100                                           // 000000064970: 60AF0100
	.long 0x1384                                               // 000000064974: 00001384
	.long 0x408                                                // 000000064978: 00000408
	.long 0                                                    // 00000006497C: 00000000
	.type	add_char_get_group_id_get_global_offset.kd,@object
add_char_get_group_id_get_global_offset.kd:
	.long 0                                                    // 000000064980: 00000000
	.long 0                                                    // 000000064984: 00000000
	.long 0x110                                                // 000000064988: 00000110
	.long 0                                                    // 00000006498C: 00000000
	.long 0x19280                                              // 000000064990: 00019280
	.long 0                                                    // 000000064994: 00000000
	.long 0                                                    // 000000064998: 00000000
	.long 0                                                    // 00000006499C: 00000000
	.long 0                                                    // 0000000649A0: 00000000
	.long 0                                                    // 0000000649A4: 00000000
	.long 0                                                    // 0000000649A8: 00000000
	.long 0                                                    // 0000000649AC: 00000000
	.long 0x60af0100                                           // 0000000649B0: 60AF0100
	.long 0x1384                                               // 0000000649B4: 00001384
	.long 0x408                                                // 0000000649B8: 00000408
	.long 0                                                    // 0000000649BC: 00000000
	.type	add_char_get_local_size_get_global_offset.kd,@object
add_char_get_local_size_get_global_offset.kd:
	.long 0                                                    // 0000000649C0: 00000000
	.long 0                                                    // 0000000649C4: 00000000
	.long 0x110                                                // 0000000649C8: 00000110
	.long 0                                                    // 0000000649CC: 00000000
	.ascii "@"                                                 // 0000000649D0: 40
	.byte 0x93                                                 // 0000000649D1: 93
	.short 0x1                                                 // 0000000649D2: 0001
	.long 0                                                    // 0000000649D4: 00000000
	.long 0                                                    // 0000000649D8: 00000000
	.long 0                                                    // 0000000649DC: 00000000
	.long 0                                                    // 0000000649E0: 00000000
	.long 0                                                    // 0000000649E4: 00000000
	.long 0                                                    // 0000000649E8: 00000000
	.long 0                                                    // 0000000649EC: 00000000
	.long 0x60af0100                                           // 0000000649F0: 60AF0100
	.long 0x1384                                               // 0000000649F4: 00001384
	.long 0x408                                                // 0000000649F8: 00000408
	.long 0                                                    // 0000000649FC: 00000000
	.type	add_char_get_global_id_get_global_offset.kd,@object
add_char_get_global_id_get_global_offset.kd:
	.long 0                                                    // 000000064A00: 00000000
	.long 0                                                    // 000000064A04: 00000000
	.long 0x110                                                // 000000064A08: 00000110
	.long 0                                                    // 000000064A0C: 00000000
	.long 0x19400                                              // 000000064A10: 00019400
	.long 0                                                    // 000000064A14: 00000000
	.long 0                                                    // 000000064A18: 00000000
	.long 0                                                    // 000000064A1C: 00000000
	.long 0                                                    // 000000064A20: 00000000
	.long 0                                                    // 000000064A24: 00000000
	.long 0                                                    // 000000064A28: 00000000
	.long 0                                                    // 000000064A2C: 00000000
	.long 0x60af0101                                           // 000000064A30: 60AF0101
	.long 0x1384                                               // 000000064A34: 00001384
	.long 0x408                                                // 000000064A38: 00000408
	.long 0                                                    // 000000064A3C: 00000000
	.type	add_char_get_global_size_get_global_offset.kd,@object
add_char_get_global_size_get_global_offset.kd:
	.long 0                                                    // 000000064A40: 00000000
	.long 0                                                    // 000000064A44: 00000000
	.long 0x110                                                // 000000064A48: 00000110
	.long 0                                                    // 000000064A4C: 00000000
	.long 0x194c0                                              // 000000064A50: 000194C0
	.long 0                                                    // 000000064A54: 00000000
	.long 0                                                    // 000000064A58: 00000000
	.long 0                                                    // 000000064A5C: 00000000
	.long 0                                                    // 000000064A60: 00000000
	.long 0                                                    // 000000064A64: 00000000
	.long 0                                                    // 000000064A68: 00000000
	.long 0                                                    // 000000064A6C: 00000000
	.long 0x60af0100                                           // 000000064A70: 60AF0100
	.long 0x1384                                               // 000000064A74: 00001384
	.long 0x408                                                // 000000064A78: 00000408
	.long 0                                                    // 000000064A7C: 00000000
	.type	add_char_get_num_groups_get_global_offset.kd,@object
add_char_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 000000064A80: 00000000
	.long 0                                                    // 000000064A84: 00000000
	.long 0x110                                                // 000000064A88: 00000110
	.long 0                                                    // 000000064A8C: 00000000
	.long 0x19580                                              // 000000064A90: 00019580
	.long 0                                                    // 000000064A94: 00000000
	.long 0                                                    // 000000064A98: 00000000
	.long 0                                                    // 000000064A9C: 00000000
	.long 0                                                    // 000000064AA0: 00000000
	.long 0                                                    // 000000064AA4: 00000000
	.long 0                                                    // 000000064AA8: 00000000
	.long 0                                                    // 000000064AAC: 00000000
	.long 0x60af0100                                           // 000000064AB0: 60AF0100
	.long 0x1384                                               // 000000064AB4: 00001384
	.long 0x408                                                // 000000064AB8: 00000408
	.long 0                                                    // 000000064ABC: 00000000
	.type	add_char_get_work_dim_get_global_offset.kd,@object
add_char_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 000000064AC0: 00000000
	.long 0                                                    // 000000064AC4: 00000000
	.long 0x110                                                // 000000064AC8: 00000110
	.long 0                                                    // 000000064ACC: 00000000
	.ascii "@"                                                 // 000000064AD0: 40
	.byte 0x96                                                 // 000000064AD1: 96
	.short 0x1                                                 // 000000064AD2: 0001
	.long 0                                                    // 000000064AD4: 00000000
	.long 0                                                    // 000000064AD8: 00000000
	.long 0                                                    // 000000064ADC: 00000000
	.long 0                                                    // 000000064AE0: 00000000
	.long 0                                                    // 000000064AE4: 00000000
	.long 0                                                    // 000000064AE8: 00000000
	.long 0                                                    // 000000064AEC: 00000000
	.long 0x60af0100                                           // 000000064AF0: 60AF0100
	.long 0x1384                                               // 000000064AF4: 00001384
	.long 0x408                                                // 000000064AF8: 00000408
	.long 0                                                    // 000000064AFC: 00000000
	.type	add_char_x_get_local_id.kd,@object
add_char_x_get_local_id.kd:
	.long 0                                                    // 000000064B00: 00000000
	.long 0                                                    // 000000064B04: 00000000
	.long 0x110                                                // 000000064B08: 00000110
	.long 0                                                    // 000000064B0C: 00000000
	.long 0x19700                                              // 000000064B10: 00019700
	.long 0                                                    // 000000064B14: 00000000
	.long 0                                                    // 000000064B18: 00000000
	.long 0                                                    // 000000064B1C: 00000000
	.long 0                                                    // 000000064B20: 00000000
	.long 0                                                    // 000000064B24: 00000000
	.long 0                                                    // 000000064B28: 00000000
	.long 0                                                    // 000000064B2C: 00000000
	.long 0x60af0100                                           // 000000064B30: 60AF0100
	.long 0x1384                                               // 000000064B34: 00001384
	.long 0x408                                                // 000000064B38: 00000408
	.long 0                                                    // 000000064B3C: 00000000
	.type	add_char_get_global_offset_get_local_id.kd,@object
add_char_get_global_offset_get_local_id.kd:
	.long 0                                                    // 000000064B40: 00000000
	.long 0                                                    // 000000064B44: 00000000
	.long 0x110                                                // 000000064B48: 00000110
	.long 0                                                    // 000000064B4C: 00000000
	.long 0x197c0                                              // 000000064B50: 000197C0
	.long 0                                                    // 000000064B54: 00000000
	.long 0                                                    // 000000064B58: 00000000
	.long 0                                                    // 000000064B5C: 00000000
	.long 0                                                    // 000000064B60: 00000000
	.long 0                                                    // 000000064B64: 00000000
	.long 0                                                    // 000000064B68: 00000000
	.long 0                                                    // 000000064B6C: 00000000
	.long 0x60af0100                                           // 000000064B70: 60AF0100
	.long 0x1384                                               // 000000064B74: 00001384
	.long 0x408                                                // 000000064B78: 00000408
	.long 0                                                    // 000000064B7C: 00000000
	.type	add_char_get_local_id_get_local_id.kd,@object
add_char_get_local_id_get_local_id.kd:
	.long 0                                                    // 000000064B80: 00000000
	.long 0                                                    // 000000064B84: 00000000
	.long 0x110                                                // 000000064B88: 00000110
	.long 0                                                    // 000000064B8C: 00000000
	.long 0x19880                                              // 000000064B90: 00019880
	.long 0                                                    // 000000064B94: 00000000
	.long 0                                                    // 000000064B98: 00000000
	.long 0                                                    // 000000064B9C: 00000000
	.long 0                                                    // 000000064BA0: 00000000
	.long 0                                                    // 000000064BA4: 00000000
	.long 0                                                    // 000000064BA8: 00000000
	.long 0                                                    // 000000064BAC: 00000000
	.long 0x60af0100                                           // 000000064BB0: 60AF0100
	.long 0x1384                                               // 000000064BB4: 00001384
	.long 0x408                                                // 000000064BB8: 00000408
	.long 0                                                    // 000000064BBC: 00000000
	.type	add_char_get_group_id_get_local_id.kd,@object
add_char_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000064BC0: 00000000
	.long 0                                                    // 000000064BC4: 00000000
	.long 0x110                                                // 000000064BC8: 00000110
	.long 0                                                    // 000000064BCC: 00000000
	.ascii "@"                                                 // 000000064BD0: 40
	.byte 0x99                                                 // 000000064BD1: 99
	.short 0x1                                                 // 000000064BD2: 0001
	.long 0                                                    // 000000064BD4: 00000000
	.long 0                                                    // 000000064BD8: 00000000
	.long 0                                                    // 000000064BDC: 00000000
	.long 0                                                    // 000000064BE0: 00000000
	.long 0                                                    // 000000064BE4: 00000000
	.long 0                                                    // 000000064BE8: 00000000
	.long 0                                                    // 000000064BEC: 00000000
	.long 0x60af0100                                           // 000000064BF0: 60AF0100
	.long 0x1384                                               // 000000064BF4: 00001384
	.long 0x408                                                // 000000064BF8: 00000408
	.long 0                                                    // 000000064BFC: 00000000
	.type	add_char_get_local_size_get_local_id.kd,@object
add_char_get_local_size_get_local_id.kd:
	.long 0                                                    // 000000064C00: 00000000
	.long 0                                                    // 000000064C04: 00000000
	.long 0x110                                                // 000000064C08: 00000110
	.long 0                                                    // 000000064C0C: 00000000
	.long 0x19a00                                              // 000000064C10: 00019A00
	.long 0                                                    // 000000064C14: 00000000
	.long 0                                                    // 000000064C18: 00000000
	.long 0                                                    // 000000064C1C: 00000000
	.long 0                                                    // 000000064C20: 00000000
	.long 0                                                    // 000000064C24: 00000000
	.long 0                                                    // 000000064C28: 00000000
	.long 0                                                    // 000000064C2C: 00000000
	.long 0x60af0100                                           // 000000064C30: 60AF0100
	.long 0x1384                                               // 000000064C34: 00001384
	.long 0x408                                                // 000000064C38: 00000408
	.long 0                                                    // 000000064C3C: 00000000
	.type	add_char_get_global_id_get_local_id.kd,@object
add_char_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000064C40: 00000000
	.long 0                                                    // 000000064C44: 00000000
	.long 0x110                                                // 000000064C48: 00000110
	.long 0                                                    // 000000064C4C: 00000000
	.long 0x19ac0                                              // 000000064C50: 00019AC0
	.long 0                                                    // 000000064C54: 00000000
	.long 0                                                    // 000000064C58: 00000000
	.long 0                                                    // 000000064C5C: 00000000
	.long 0                                                    // 000000064C60: 00000000
	.long 0                                                    // 000000064C64: 00000000
	.long 0                                                    // 000000064C68: 00000000
	.long 0                                                    // 000000064C6C: 00000000
	.long 0x60af0101                                           // 000000064C70: 60AF0101
	.long 0x1384                                               // 000000064C74: 00001384
	.long 0x408                                                // 000000064C78: 00000408
	.long 0                                                    // 000000064C7C: 00000000
	.type	add_char_get_global_size_get_local_id.kd,@object
add_char_get_global_size_get_local_id.kd:
	.long 0                                                    // 000000064C80: 00000000
	.long 0                                                    // 000000064C84: 00000000
	.long 0x110                                                // 000000064C88: 00000110
	.long 0                                                    // 000000064C8C: 00000000
	.long 0x19b80                                              // 000000064C90: 00019B80
	.long 0                                                    // 000000064C94: 00000000
	.long 0                                                    // 000000064C98: 00000000
	.long 0                                                    // 000000064C9C: 00000000
	.long 0                                                    // 000000064CA0: 00000000
	.long 0                                                    // 000000064CA4: 00000000
	.long 0                                                    // 000000064CA8: 00000000
	.long 0                                                    // 000000064CAC: 00000000
	.long 0x60af0100                                           // 000000064CB0: 60AF0100
	.long 0x1384                                               // 000000064CB4: 00001384
	.long 0x408                                                // 000000064CB8: 00000408
	.long 0                                                    // 000000064CBC: 00000000
	.type	add_char_get_num_groups_get_local_id.kd,@object
add_char_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000064CC0: 00000000
	.long 0                                                    // 000000064CC4: 00000000
	.long 0x110                                                // 000000064CC8: 00000110
	.long 0                                                    // 000000064CCC: 00000000
	.ascii "@"                                                 // 000000064CD0: 40
	.byte 0x9c                                                 // 000000064CD1: 9C
	.short 0x1                                                 // 000000064CD2: 0001
	.long 0                                                    // 000000064CD4: 00000000
	.long 0                                                    // 000000064CD8: 00000000
	.long 0                                                    // 000000064CDC: 00000000
	.long 0                                                    // 000000064CE0: 00000000
	.long 0                                                    // 000000064CE4: 00000000
	.long 0                                                    // 000000064CE8: 00000000
	.long 0                                                    // 000000064CEC: 00000000
	.long 0x60af0100                                           // 000000064CF0: 60AF0100
	.long 0x1384                                               // 000000064CF4: 00001384
	.long 0x408                                                // 000000064CF8: 00000408
	.long 0                                                    // 000000064CFC: 00000000
	.type	add_char_get_work_dim_get_local_id.kd,@object
add_char_get_work_dim_get_local_id.kd:
	.long 0                                                    // 000000064D00: 00000000
	.long 0                                                    // 000000064D04: 00000000
	.long 0x110                                                // 000000064D08: 00000110
	.long 0                                                    // 000000064D0C: 00000000
	.long 0x19d00                                              // 000000064D10: 00019D00
	.long 0                                                    // 000000064D14: 00000000
	.long 0                                                    // 000000064D18: 00000000
	.long 0                                                    // 000000064D1C: 00000000
	.long 0                                                    // 000000064D20: 00000000
	.long 0                                                    // 000000064D24: 00000000
	.long 0                                                    // 000000064D28: 00000000
	.long 0                                                    // 000000064D2C: 00000000
	.long 0x60af0100                                           // 000000064D30: 60AF0100
	.long 0x1384                                               // 000000064D34: 00001384
	.long 0x408                                                // 000000064D38: 00000408
	.long 0                                                    // 000000064D3C: 00000000
	.type	add_char_x_get_group_id.kd,@object
add_char_x_get_group_id.kd:
	.long 0                                                    // 000000064D40: 00000000
	.long 0                                                    // 000000064D44: 00000000
	.long 0x110                                                // 000000064D48: 00000110
	.long 0                                                    // 000000064D4C: 00000000
	.long 0x19dc0                                              // 000000064D50: 00019DC0
	.long 0                                                    // 000000064D54: 00000000
	.long 0                                                    // 000000064D58: 00000000
	.long 0                                                    // 000000064D5C: 00000000
	.long 0                                                    // 000000064D60: 00000000
	.long 0                                                    // 000000064D64: 00000000
	.long 0                                                    // 000000064D68: 00000000
	.long 0                                                    // 000000064D6C: 00000000
	.long 0x60af0100                                           // 000000064D70: 60AF0100
	.long 0x1384                                               // 000000064D74: 00001384
	.long 0x408                                                // 000000064D78: 00000408
	.long 0                                                    // 000000064D7C: 00000000
	.type	add_char_get_global_offset_get_group_id.kd,@object
add_char_get_global_offset_get_group_id.kd:
	.long 0                                                    // 000000064D80: 00000000
	.long 0                                                    // 000000064D84: 00000000
	.long 0x110                                                // 000000064D88: 00000110
	.long 0                                                    // 000000064D8C: 00000000
	.long 0x19e80                                              // 000000064D90: 00019E80
	.long 0                                                    // 000000064D94: 00000000
	.long 0                                                    // 000000064D98: 00000000
	.long 0                                                    // 000000064D9C: 00000000
	.long 0                                                    // 000000064DA0: 00000000
	.long 0                                                    // 000000064DA4: 00000000
	.long 0                                                    // 000000064DA8: 00000000
	.long 0                                                    // 000000064DAC: 00000000
	.long 0x60af0100                                           // 000000064DB0: 60AF0100
	.long 0x1384                                               // 000000064DB4: 00001384
	.long 0x408                                                // 000000064DB8: 00000408
	.long 0                                                    // 000000064DBC: 00000000
	.type	add_char_get_local_id_get_group_id.kd,@object
add_char_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000064DC0: 00000000
	.long 0                                                    // 000000064DC4: 00000000
	.long 0x110                                                // 000000064DC8: 00000110
	.long 0                                                    // 000000064DCC: 00000000
	.ascii "@"                                                 // 000000064DD0: 40
	.byte 0x9f                                                 // 000000064DD1: 9F
	.short 0x1                                                 // 000000064DD2: 0001
	.long 0                                                    // 000000064DD4: 00000000
	.long 0                                                    // 000000064DD8: 00000000
	.long 0                                                    // 000000064DDC: 00000000
	.long 0                                                    // 000000064DE0: 00000000
	.long 0                                                    // 000000064DE4: 00000000
	.long 0                                                    // 000000064DE8: 00000000
	.long 0                                                    // 000000064DEC: 00000000
	.long 0x60af0100                                           // 000000064DF0: 60AF0100
	.long 0x1384                                               // 000000064DF4: 00001384
	.long 0x408                                                // 000000064DF8: 00000408
	.long 0                                                    // 000000064DFC: 00000000
	.type	add_char_get_group_id_get_group_id.kd,@object
add_char_get_group_id_get_group_id.kd:
	.long 0                                                    // 000000064E00: 00000000
	.long 0                                                    // 000000064E04: 00000000
	.long 0x110                                                // 000000064E08: 00000110
	.long 0                                                    // 000000064E0C: 00000000
	.long 0x1a000                                              // 000000064E10: 0001A000
	.long 0                                                    // 000000064E14: 00000000
	.long 0                                                    // 000000064E18: 00000000
	.long 0                                                    // 000000064E1C: 00000000
	.long 0                                                    // 000000064E20: 00000000
	.long 0                                                    // 000000064E24: 00000000
	.long 0                                                    // 000000064E28: 00000000
	.long 0                                                    // 000000064E2C: 00000000
	.long 0x60af0100                                           // 000000064E30: 60AF0100
	.long 0x1384                                               // 000000064E34: 00001384
	.long 0x408                                                // 000000064E38: 00000408
	.long 0                                                    // 000000064E3C: 00000000
	.type	add_char_get_local_size_get_group_id.kd,@object
add_char_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000064E40: 00000000
	.long 0                                                    // 000000064E44: 00000000
	.long 0x110                                                // 000000064E48: 00000110
	.long 0                                                    // 000000064E4C: 00000000
	.long 0x1a0c0                                              // 000000064E50: 0001A0C0
	.long 0                                                    // 000000064E54: 00000000
	.long 0                                                    // 000000064E58: 00000000
	.long 0                                                    // 000000064E5C: 00000000
	.long 0                                                    // 000000064E60: 00000000
	.long 0                                                    // 000000064E64: 00000000
	.long 0                                                    // 000000064E68: 00000000
	.long 0                                                    // 000000064E6C: 00000000
	.long 0x60af0100                                           // 000000064E70: 60AF0100
	.long 0x1384                                               // 000000064E74: 00001384
	.long 0x408                                                // 000000064E78: 00000408
	.long 0                                                    // 000000064E7C: 00000000
	.type	add_char_get_global_id_get_group_id.kd,@object
add_char_get_global_id_get_group_id.kd:
	.long 0                                                    // 000000064E80: 00000000
	.long 0                                                    // 000000064E84: 00000000
	.long 0x110                                                // 000000064E88: 00000110
	.long 0                                                    // 000000064E8C: 00000000
	.long 0x1a180                                              // 000000064E90: 0001A180
	.long 0                                                    // 000000064E94: 00000000
	.long 0                                                    // 000000064E98: 00000000
	.long 0                                                    // 000000064E9C: 00000000
	.long 0                                                    // 000000064EA0: 00000000
	.long 0                                                    // 000000064EA4: 00000000
	.long 0                                                    // 000000064EA8: 00000000
	.long 0                                                    // 000000064EAC: 00000000
	.long 0x60af0101                                           // 000000064EB0: 60AF0101
	.long 0x1384                                               // 000000064EB4: 00001384
	.long 0x408                                                // 000000064EB8: 00000408
	.long 0                                                    // 000000064EBC: 00000000
	.type	add_char_get_global_size_get_group_id.kd,@object
add_char_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000064EC0: 00000000
	.long 0                                                    // 000000064EC4: 00000000
	.long 0x110                                                // 000000064EC8: 00000110
	.long 0                                                    // 000000064ECC: 00000000
	.ascii "@"                                                 // 000000064ED0: 40
	.byte 0xa2                                                 // 000000064ED1: A2
	.short 0x1                                                 // 000000064ED2: 0001
	.long 0                                                    // 000000064ED4: 00000000
	.long 0                                                    // 000000064ED8: 00000000
	.long 0                                                    // 000000064EDC: 00000000
	.long 0                                                    // 000000064EE0: 00000000
	.long 0                                                    // 000000064EE4: 00000000
	.long 0                                                    // 000000064EE8: 00000000
	.long 0                                                    // 000000064EEC: 00000000
	.long 0x60af0100                                           // 000000064EF0: 60AF0100
	.long 0x1384                                               // 000000064EF4: 00001384
	.long 0x408                                                // 000000064EF8: 00000408
	.long 0                                                    // 000000064EFC: 00000000
	.type	add_char_get_num_groups_get_group_id.kd,@object
add_char_get_num_groups_get_group_id.kd:
	.long 0                                                    // 000000064F00: 00000000
	.long 0                                                    // 000000064F04: 00000000
	.long 0x110                                                // 000000064F08: 00000110
	.long 0                                                    // 000000064F0C: 00000000
	.long 0x1a300                                              // 000000064F10: 0001A300
	.long 0                                                    // 000000064F14: 00000000
	.long 0                                                    // 000000064F18: 00000000
	.long 0                                                    // 000000064F1C: 00000000
	.long 0                                                    // 000000064F20: 00000000
	.long 0                                                    // 000000064F24: 00000000
	.long 0                                                    // 000000064F28: 00000000
	.long 0                                                    // 000000064F2C: 00000000
	.long 0x60af0100                                           // 000000064F30: 60AF0100
	.long 0x1384                                               // 000000064F34: 00001384
	.long 0x408                                                // 000000064F38: 00000408
	.long 0                                                    // 000000064F3C: 00000000
	.type	add_char_get_work_dim_get_group_id.kd,@object
add_char_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000064F40: 00000000
	.long 0                                                    // 000000064F44: 00000000
	.long 0x110                                                // 000000064F48: 00000110
	.long 0                                                    // 000000064F4C: 00000000
	.long 0x1a3c0                                              // 000000064F50: 0001A3C0
	.long 0                                                    // 000000064F54: 00000000
	.long 0                                                    // 000000064F58: 00000000
	.long 0                                                    // 000000064F5C: 00000000
	.long 0                                                    // 000000064F60: 00000000
	.long 0                                                    // 000000064F64: 00000000
	.long 0                                                    // 000000064F68: 00000000
	.long 0                                                    // 000000064F6C: 00000000
	.long 0x60af0100                                           // 000000064F70: 60AF0100
	.long 0x1384                                               // 000000064F74: 00001384
	.long 0x408                                                // 000000064F78: 00000408
	.long 0                                                    // 000000064F7C: 00000000
	.type	add_char_x_get_local_size.kd,@object
add_char_x_get_local_size.kd:
	.long 0                                                    // 000000064F80: 00000000
	.long 0                                                    // 000000064F84: 00000000
	.long 0x110                                                // 000000064F88: 00000110
	.long 0                                                    // 000000064F8C: 00000000
	.long 0x1a480                                              // 000000064F90: 0001A480
	.long 0                                                    // 000000064F94: 00000000
	.long 0                                                    // 000000064F98: 00000000
	.long 0                                                    // 000000064F9C: 00000000
	.long 0                                                    // 000000064FA0: 00000000
	.long 0                                                    // 000000064FA4: 00000000
	.long 0                                                    // 000000064FA8: 00000000
	.long 0                                                    // 000000064FAC: 00000000
	.long 0x60af0100                                           // 000000064FB0: 60AF0100
	.long 0x1384                                               // 000000064FB4: 00001384
	.long 0x408                                                // 000000064FB8: 00000408
	.long 0                                                    // 000000064FBC: 00000000
	.type	add_char_get_global_offset_get_local_size.kd,@object
add_char_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000064FC0: 00000000
	.long 0                                                    // 000000064FC4: 00000000
	.long 0x110                                                // 000000064FC8: 00000110
	.long 0                                                    // 000000064FCC: 00000000
	.ascii "@"                                                 // 000000064FD0: 40
	.byte 0xa5                                                 // 000000064FD1: A5
	.short 0x1                                                 // 000000064FD2: 0001
	.long 0                                                    // 000000064FD4: 00000000
	.long 0                                                    // 000000064FD8: 00000000
	.long 0                                                    // 000000064FDC: 00000000
	.long 0                                                    // 000000064FE0: 00000000
	.long 0                                                    // 000000064FE4: 00000000
	.long 0                                                    // 000000064FE8: 00000000
	.long 0                                                    // 000000064FEC: 00000000
	.long 0x60af0100                                           // 000000064FF0: 60AF0100
	.long 0x1384                                               // 000000064FF4: 00001384
	.long 0x408                                                // 000000064FF8: 00000408
	.long 0                                                    // 000000064FFC: 00000000
	.type	add_char_get_local_id_get_local_size.kd,@object
add_char_get_local_id_get_local_size.kd:
	.long 0                                                    // 000000065000: 00000000
	.long 0                                                    // 000000065004: 00000000
	.long 0x110                                                // 000000065008: 00000110
	.long 0                                                    // 00000006500C: 00000000
	.long 0x1a600                                              // 000000065010: 0001A600
	.long 0                                                    // 000000065014: 00000000
	.long 0                                                    // 000000065018: 00000000
	.long 0                                                    // 00000006501C: 00000000
	.long 0                                                    // 000000065020: 00000000
	.long 0                                                    // 000000065024: 00000000
	.long 0                                                    // 000000065028: 00000000
	.long 0                                                    // 00000006502C: 00000000
	.long 0x60af0100                                           // 000000065030: 60AF0100
	.long 0x1384                                               // 000000065034: 00001384
	.long 0x408                                                // 000000065038: 00000408
	.long 0                                                    // 00000006503C: 00000000
	.type	add_char_get_group_id_get_local_size.kd,@object
add_char_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000065040: 00000000
	.long 0                                                    // 000000065044: 00000000
	.long 0x110                                                // 000000065048: 00000110
	.long 0                                                    // 00000006504C: 00000000
	.long 0x1a6c0                                              // 000000065050: 0001A6C0
	.long 0                                                    // 000000065054: 00000000
	.long 0                                                    // 000000065058: 00000000
	.long 0                                                    // 00000006505C: 00000000
	.long 0                                                    // 000000065060: 00000000
	.long 0                                                    // 000000065064: 00000000
	.long 0                                                    // 000000065068: 00000000
	.long 0                                                    // 00000006506C: 00000000
	.long 0x60af0100                                           // 000000065070: 60AF0100
	.long 0x1384                                               // 000000065074: 00001384
	.long 0x408                                                // 000000065078: 00000408
	.long 0                                                    // 00000006507C: 00000000
	.type	add_char_get_local_size_get_local_size.kd,@object
add_char_get_local_size_get_local_size.kd:
	.long 0                                                    // 000000065080: 00000000
	.long 0                                                    // 000000065084: 00000000
	.long 0x110                                                // 000000065088: 00000110
	.long 0                                                    // 00000006508C: 00000000
	.long 0x1a780                                              // 000000065090: 0001A780
	.long 0                                                    // 000000065094: 00000000
	.long 0                                                    // 000000065098: 00000000
	.long 0                                                    // 00000006509C: 00000000
	.long 0                                                    // 0000000650A0: 00000000
	.long 0                                                    // 0000000650A4: 00000000
	.long 0                                                    // 0000000650A8: 00000000
	.long 0                                                    // 0000000650AC: 00000000
	.long 0x60af0100                                           // 0000000650B0: 60AF0100
	.long 0x1384                                               // 0000000650B4: 00001384
	.long 0x408                                                // 0000000650B8: 00000408
	.long 0                                                    // 0000000650BC: 00000000
	.type	add_char_get_global_id_get_local_size.kd,@object
add_char_get_global_id_get_local_size.kd:
	.long 0                                                    // 0000000650C0: 00000000
	.long 0                                                    // 0000000650C4: 00000000
	.long 0x110                                                // 0000000650C8: 00000110
	.long 0                                                    // 0000000650CC: 00000000
	.ascii "@"                                                 // 0000000650D0: 40
	.byte 0xa8                                                 // 0000000650D1: A8
	.short 0x1                                                 // 0000000650D2: 0001
	.long 0                                                    // 0000000650D4: 00000000
	.long 0                                                    // 0000000650D8: 00000000
	.long 0                                                    // 0000000650DC: 00000000
	.long 0                                                    // 0000000650E0: 00000000
	.long 0                                                    // 0000000650E4: 00000000
	.long 0                                                    // 0000000650E8: 00000000
	.long 0                                                    // 0000000650EC: 00000000
	.long 0x60af0101                                           // 0000000650F0: 60AF0101
	.long 0x1384                                               // 0000000650F4: 00001384
	.long 0x408                                                // 0000000650F8: 00000408
	.long 0                                                    // 0000000650FC: 00000000
	.type	add_char_get_global_size_get_local_size.kd,@object
add_char_get_global_size_get_local_size.kd:
	.long 0                                                    // 000000065100: 00000000
	.long 0                                                    // 000000065104: 00000000
	.long 0x110                                                // 000000065108: 00000110
	.long 0                                                    // 00000006510C: 00000000
	.long 0x1a900                                              // 000000065110: 0001A900
	.long 0                                                    // 000000065114: 00000000
	.long 0                                                    // 000000065118: 00000000
	.long 0                                                    // 00000006511C: 00000000
	.long 0                                                    // 000000065120: 00000000
	.long 0                                                    // 000000065124: 00000000
	.long 0                                                    // 000000065128: 00000000
	.long 0                                                    // 00000006512C: 00000000
	.long 0x60af0100                                           // 000000065130: 60AF0100
	.long 0x1384                                               // 000000065134: 00001384
	.long 0x408                                                // 000000065138: 00000408
	.long 0                                                    // 00000006513C: 00000000
	.type	add_char_get_num_groups_get_local_size.kd,@object
add_char_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000065140: 00000000
	.long 0                                                    // 000000065144: 00000000
	.long 0x110                                                // 000000065148: 00000110
	.long 0                                                    // 00000006514C: 00000000
	.long 0x1a9c0                                              // 000000065150: 0001A9C0
	.long 0                                                    // 000000065154: 00000000
	.long 0                                                    // 000000065158: 00000000
	.long 0                                                    // 00000006515C: 00000000
	.long 0                                                    // 000000065160: 00000000
	.long 0                                                    // 000000065164: 00000000
	.long 0                                                    // 000000065168: 00000000
	.long 0                                                    // 00000006516C: 00000000
	.long 0x60af0100                                           // 000000065170: 60AF0100
	.long 0x1384                                               // 000000065174: 00001384
	.long 0x408                                                // 000000065178: 00000408
	.long 0                                                    // 00000006517C: 00000000
	.type	add_char_get_work_dim_get_local_size.kd,@object
add_char_get_work_dim_get_local_size.kd:
	.long 0                                                    // 000000065180: 00000000
	.long 0                                                    // 000000065184: 00000000
	.long 0x110                                                // 000000065188: 00000110
	.long 0                                                    // 00000006518C: 00000000
	.long 0x1aa80                                              // 000000065190: 0001AA80
	.long 0                                                    // 000000065194: 00000000
	.long 0                                                    // 000000065198: 00000000
	.long 0                                                    // 00000006519C: 00000000
	.long 0                                                    // 0000000651A0: 00000000
	.long 0                                                    // 0000000651A4: 00000000
	.long 0                                                    // 0000000651A8: 00000000
	.long 0                                                    // 0000000651AC: 00000000
	.long 0x60af0100                                           // 0000000651B0: 60AF0100
	.long 0x1384                                               // 0000000651B4: 00001384
	.long 0x408                                                // 0000000651B8: 00000408
	.long 0                                                    // 0000000651BC: 00000000
	.type	add_char_x_get_global_id.kd,@object
add_char_x_get_global_id.kd:
	.long 0                                                    // 0000000651C0: 00000000
	.long 0                                                    // 0000000651C4: 00000000
	.long 0x110                                                // 0000000651C8: 00000110
	.long 0                                                    // 0000000651CC: 00000000
	.ascii "@"                                                 // 0000000651D0: 40
	.byte 0xab                                                 // 0000000651D1: AB
	.short 0x1                                                 // 0000000651D2: 0001
	.long 0                                                    // 0000000651D4: 00000000
	.long 0                                                    // 0000000651D8: 00000000
	.long 0                                                    // 0000000651DC: 00000000
	.long 0                                                    // 0000000651E0: 00000000
	.long 0                                                    // 0000000651E4: 00000000
	.long 0                                                    // 0000000651E8: 00000000
	.long 0                                                    // 0000000651EC: 00000000
	.long 0x60af0101                                           // 0000000651F0: 60AF0101
	.long 0x1384                                               // 0000000651F4: 00001384
	.long 0x408                                                // 0000000651F8: 00000408
	.long 0                                                    // 0000000651FC: 00000000
	.type	add_char_get_global_offset_get_global_id.kd,@object
add_char_get_global_offset_get_global_id.kd:
	.long 0                                                    // 000000065200: 00000000
	.long 0                                                    // 000000065204: 00000000
	.long 0x110                                                // 000000065208: 00000110
	.long 0                                                    // 00000006520C: 00000000
	.long 0x1ac00                                              // 000000065210: 0001AC00
	.long 0                                                    // 000000065214: 00000000
	.long 0                                                    // 000000065218: 00000000
	.long 0                                                    // 00000006521C: 00000000
	.long 0                                                    // 000000065220: 00000000
	.long 0                                                    // 000000065224: 00000000
	.long 0                                                    // 000000065228: 00000000
	.long 0                                                    // 00000006522C: 00000000
	.long 0x60af0101                                           // 000000065230: 60AF0101
	.long 0x1384                                               // 000000065234: 00001384
	.long 0x408                                                // 000000065238: 00000408
	.long 0                                                    // 00000006523C: 00000000
	.type	add_char_get_local_id_get_global_id.kd,@object
add_char_get_local_id_get_global_id.kd:
	.long 0                                                    // 000000065240: 00000000
	.long 0                                                    // 000000065244: 00000000
	.long 0x110                                                // 000000065248: 00000110
	.long 0                                                    // 00000006524C: 00000000
	.long 0x1acc0                                              // 000000065250: 0001ACC0
	.long 0                                                    // 000000065254: 00000000
	.long 0                                                    // 000000065258: 00000000
	.long 0                                                    // 00000006525C: 00000000
	.long 0                                                    // 000000065260: 00000000
	.long 0                                                    // 000000065264: 00000000
	.long 0                                                    // 000000065268: 00000000
	.long 0                                                    // 00000006526C: 00000000
	.long 0x60af0101                                           // 000000065270: 60AF0101
	.long 0x1384                                               // 000000065274: 00001384
	.long 0x408                                                // 000000065278: 00000408
	.long 0                                                    // 00000006527C: 00000000
	.type	add_char_get_group_id_get_global_id.kd,@object
add_char_get_group_id_get_global_id.kd:
	.long 0                                                    // 000000065280: 00000000
	.long 0                                                    // 000000065284: 00000000
	.long 0x110                                                // 000000065288: 00000110
	.long 0                                                    // 00000006528C: 00000000
	.long 0x1ad80                                              // 000000065290: 0001AD80
	.long 0                                                    // 000000065294: 00000000
	.long 0                                                    // 000000065298: 00000000
	.long 0                                                    // 00000006529C: 00000000
	.long 0                                                    // 0000000652A0: 00000000
	.long 0                                                    // 0000000652A4: 00000000
	.long 0                                                    // 0000000652A8: 00000000
	.long 0                                                    // 0000000652AC: 00000000
	.long 0x60af0101                                           // 0000000652B0: 60AF0101
	.long 0x1384                                               // 0000000652B4: 00001384
	.long 0x408                                                // 0000000652B8: 00000408
	.long 0                                                    // 0000000652BC: 00000000
	.type	add_char_get_local_size_get_global_id.kd,@object
add_char_get_local_size_get_global_id.kd:
	.long 0                                                    // 0000000652C0: 00000000
	.long 0                                                    // 0000000652C4: 00000000
	.long 0x110                                                // 0000000652C8: 00000110
	.long 0                                                    // 0000000652CC: 00000000
	.ascii "@"                                                 // 0000000652D0: 40
	.byte 0xae                                                 // 0000000652D1: AE
	.short 0x1                                                 // 0000000652D2: 0001
	.long 0                                                    // 0000000652D4: 00000000
	.long 0                                                    // 0000000652D8: 00000000
	.long 0                                                    // 0000000652DC: 00000000
	.long 0                                                    // 0000000652E0: 00000000
	.long 0                                                    // 0000000652E4: 00000000
	.long 0                                                    // 0000000652E8: 00000000
	.long 0                                                    // 0000000652EC: 00000000
	.long 0x60af0101                                           // 0000000652F0: 60AF0101
	.long 0x1384                                               // 0000000652F4: 00001384
	.long 0x408                                                // 0000000652F8: 00000408
	.long 0                                                    // 0000000652FC: 00000000
	.type	add_char_get_global_id_get_global_id.kd,@object
add_char_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000065300: 00000000
	.long 0                                                    // 000000065304: 00000000
	.long 0x110                                                // 000000065308: 00000110
	.long 0                                                    // 00000006530C: 00000000
	.long 0x1af00                                              // 000000065310: 0001AF00
	.long 0                                                    // 000000065314: 00000000
	.long 0                                                    // 000000065318: 00000000
	.long 0                                                    // 00000006531C: 00000000
	.long 0                                                    // 000000065320: 00000000
	.long 0                                                    // 000000065324: 00000000
	.long 0                                                    // 000000065328: 00000000
	.long 0                                                    // 00000006532C: 00000000
	.long 0x60af0101                                           // 000000065330: 60AF0101
	.long 0x1384                                               // 000000065334: 00001384
	.long 0x408                                                // 000000065338: 00000408
	.long 0                                                    // 00000006533C: 00000000
	.type	add_char_get_global_size_get_global_id.kd,@object
add_char_get_global_size_get_global_id.kd:
	.long 0                                                    // 000000065340: 00000000
	.long 0                                                    // 000000065344: 00000000
	.long 0x110                                                // 000000065348: 00000110
	.long 0                                                    // 00000006534C: 00000000
	.long 0x1afc0                                              // 000000065350: 0001AFC0
	.long 0                                                    // 000000065354: 00000000
	.long 0                                                    // 000000065358: 00000000
	.long 0                                                    // 00000006535C: 00000000
	.long 0                                                    // 000000065360: 00000000
	.long 0                                                    // 000000065364: 00000000
	.long 0                                                    // 000000065368: 00000000
	.long 0                                                    // 00000006536C: 00000000
	.long 0x60af0101                                           // 000000065370: 60AF0101
	.long 0x1384                                               // 000000065374: 00001384
	.long 0x408                                                // 000000065378: 00000408
	.long 0                                                    // 00000006537C: 00000000
	.type	add_char_get_num_groups_get_global_id.kd,@object
add_char_get_num_groups_get_global_id.kd:
	.long 0                                                    // 000000065380: 00000000
	.long 0                                                    // 000000065384: 00000000
	.long 0x110                                                // 000000065388: 00000110
	.long 0                                                    // 00000006538C: 00000000
	.long 0x1b180                                              // 000000065390: 0001B180
	.long 0                                                    // 000000065394: 00000000
	.long 0                                                    // 000000065398: 00000000
	.long 0                                                    // 00000006539C: 00000000
	.long 0                                                    // 0000000653A0: 00000000
	.long 0                                                    // 0000000653A4: 00000000
	.long 0                                                    // 0000000653A8: 00000000
	.long 0                                                    // 0000000653AC: 00000000
	.long 0x60af0101                                           // 0000000653B0: 60AF0101
	.long 0x1384                                               // 0000000653B4: 00001384
	.long 0x408                                                // 0000000653B8: 00000408
	.long 0                                                    // 0000000653BC: 00000000
	.type	add_char_get_work_dim_get_global_id.kd,@object
add_char_get_work_dim_get_global_id.kd:
	.long 0                                                    // 0000000653C0: 00000000
	.long 0                                                    // 0000000653C4: 00000000
	.long 0x110                                                // 0000000653C8: 00000110
	.long 0                                                    // 0000000653CC: 00000000
	.ascii "@"                                                 // 0000000653D0: 40
	.byte 0xb3                                                 // 0000000653D1: B3
	.short 0x1                                                 // 0000000653D2: 0001
	.long 0                                                    // 0000000653D4: 00000000
	.long 0                                                    // 0000000653D8: 00000000
	.long 0                                                    // 0000000653DC: 00000000
	.long 0                                                    // 0000000653E0: 00000000
	.long 0                                                    // 0000000653E4: 00000000
	.long 0                                                    // 0000000653E8: 00000000
	.long 0                                                    // 0000000653EC: 00000000
	.long 0x60af0101                                           // 0000000653F0: 60AF0101
	.long 0x1384                                               // 0000000653F4: 00001384
	.long 0x408                                                // 0000000653F8: 00000408
	.long 0                                                    // 0000000653FC: 00000000
	.type	add_char_x_get_global_size.kd,@object
add_char_x_get_global_size.kd:
	.long 0                                                    // 000000065400: 00000000
	.long 0                                                    // 000000065404: 00000000
	.long 0x110                                                // 000000065408: 00000110
	.long 0                                                    // 00000006540C: 00000000
	.long 0x1b400                                              // 000000065410: 0001B400
	.long 0                                                    // 000000065414: 00000000
	.long 0                                                    // 000000065418: 00000000
	.long 0                                                    // 00000006541C: 00000000
	.long 0                                                    // 000000065420: 00000000
	.long 0                                                    // 000000065424: 00000000
	.long 0                                                    // 000000065428: 00000000
	.long 0                                                    // 00000006542C: 00000000
	.long 0x60af0100                                           // 000000065430: 60AF0100
	.long 0x1384                                               // 000000065434: 00001384
	.long 0x408                                                // 000000065438: 00000408
	.long 0                                                    // 00000006543C: 00000000
	.type	add_char_get_global_offset_get_global_size.kd,@object
add_char_get_global_offset_get_global_size.kd:
	.long 0                                                    // 000000065440: 00000000
	.long 0                                                    // 000000065444: 00000000
	.long 0x110                                                // 000000065448: 00000110
	.long 0                                                    // 00000006544C: 00000000
	.long 0x1b4c0                                              // 000000065450: 0001B4C0
	.long 0                                                    // 000000065454: 00000000
	.long 0                                                    // 000000065458: 00000000
	.long 0                                                    // 00000006545C: 00000000
	.long 0                                                    // 000000065460: 00000000
	.long 0                                                    // 000000065464: 00000000
	.long 0                                                    // 000000065468: 00000000
	.long 0                                                    // 00000006546C: 00000000
	.long 0x60af0100                                           // 000000065470: 60AF0100
	.long 0x1384                                               // 000000065474: 00001384
	.long 0x408                                                // 000000065478: 00000408
	.long 0                                                    // 00000006547C: 00000000
	.type	add_char_get_local_id_get_global_size.kd,@object
add_char_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000065480: 00000000
	.long 0                                                    // 000000065484: 00000000
	.long 0x110                                                // 000000065488: 00000110
	.long 0                                                    // 00000006548C: 00000000
	.long 0x1b580                                              // 000000065490: 0001B580
	.long 0                                                    // 000000065494: 00000000
	.long 0                                                    // 000000065498: 00000000
	.long 0                                                    // 00000006549C: 00000000
	.long 0                                                    // 0000000654A0: 00000000
	.long 0                                                    // 0000000654A4: 00000000
	.long 0                                                    // 0000000654A8: 00000000
	.long 0                                                    // 0000000654AC: 00000000
	.long 0x60af0100                                           // 0000000654B0: 60AF0100
	.long 0x1384                                               // 0000000654B4: 00001384
	.long 0x408                                                // 0000000654B8: 00000408
	.long 0                                                    // 0000000654BC: 00000000
	.type	add_char_get_group_id_get_global_size.kd,@object
add_char_get_group_id_get_global_size.kd:
	.long 0                                                    // 0000000654C0: 00000000
	.long 0                                                    // 0000000654C4: 00000000
	.long 0x110                                                // 0000000654C8: 00000110
	.long 0                                                    // 0000000654CC: 00000000
	.ascii "@"                                                 // 0000000654D0: 40
	.byte 0xb6                                                 // 0000000654D1: B6
	.short 0x1                                                 // 0000000654D2: 0001
	.long 0                                                    // 0000000654D4: 00000000
	.long 0                                                    // 0000000654D8: 00000000
	.long 0                                                    // 0000000654DC: 00000000
	.long 0                                                    // 0000000654E0: 00000000
	.long 0                                                    // 0000000654E4: 00000000
	.long 0                                                    // 0000000654E8: 00000000
	.long 0                                                    // 0000000654EC: 00000000
	.long 0x60af0100                                           // 0000000654F0: 60AF0100
	.long 0x1384                                               // 0000000654F4: 00001384
	.long 0x408                                                // 0000000654F8: 00000408
	.long 0                                                    // 0000000654FC: 00000000
	.type	add_char_get_local_size_get_global_size.kd,@object
add_char_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000065500: 00000000
	.long 0                                                    // 000000065504: 00000000
	.long 0x110                                                // 000000065508: 00000110
	.long 0                                                    // 00000006550C: 00000000
	.long 0x1b700                                              // 000000065510: 0001B700
	.long 0                                                    // 000000065514: 00000000
	.long 0                                                    // 000000065518: 00000000
	.long 0                                                    // 00000006551C: 00000000
	.long 0                                                    // 000000065520: 00000000
	.long 0                                                    // 000000065524: 00000000
	.long 0                                                    // 000000065528: 00000000
	.long 0                                                    // 00000006552C: 00000000
	.long 0x60af0100                                           // 000000065530: 60AF0100
	.long 0x1384                                               // 000000065534: 00001384
	.long 0x408                                                // 000000065538: 00000408
	.long 0                                                    // 00000006553C: 00000000
	.type	add_char_get_global_id_get_global_size.kd,@object
add_char_get_global_id_get_global_size.kd:
	.long 0                                                    // 000000065540: 00000000
	.long 0                                                    // 000000065544: 00000000
	.long 0x110                                                // 000000065548: 00000110
	.long 0                                                    // 00000006554C: 00000000
	.long 0x1b7c0                                              // 000000065550: 0001B7C0
	.long 0                                                    // 000000065554: 00000000
	.long 0                                                    // 000000065558: 00000000
	.long 0                                                    // 00000006555C: 00000000
	.long 0                                                    // 000000065560: 00000000
	.long 0                                                    // 000000065564: 00000000
	.long 0                                                    // 000000065568: 00000000
	.long 0                                                    // 00000006556C: 00000000
	.long 0x60af0100                                           // 000000065570: 60AF0100
	.long 0x1384                                               // 000000065574: 00001384
	.long 0x408                                                // 000000065578: 00000408
	.long 0                                                    // 00000006557C: 00000000
	.type	add_char_get_global_size_get_global_size.kd,@object
add_char_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000065580: 00000000
	.long 0                                                    // 000000065584: 00000000
	.long 0x110                                                // 000000065588: 00000110
	.long 0                                                    // 00000006558C: 00000000
	.long 0x1b980                                              // 000000065590: 0001B980
	.long 0                                                    // 000000065594: 00000000
	.long 0                                                    // 000000065598: 00000000
	.long 0                                                    // 00000006559C: 00000000
	.long 0                                                    // 0000000655A0: 00000000
	.long 0                                                    // 0000000655A4: 00000000
	.long 0                                                    // 0000000655A8: 00000000
	.long 0                                                    // 0000000655AC: 00000000
	.long 0x60af0100                                           // 0000000655B0: 60AF0100
	.long 0x1384                                               // 0000000655B4: 00001384
	.long 0x408                                                // 0000000655B8: 00000408
	.long 0                                                    // 0000000655BC: 00000000
	.type	add_char_get_num_groups_get_global_size.kd,@object
add_char_get_num_groups_get_global_size.kd:
	.long 0                                                    // 0000000655C0: 00000000
	.long 0                                                    // 0000000655C4: 00000000
	.long 0x110                                                // 0000000655C8: 00000110
	.long 0                                                    // 0000000655CC: 00000000
	.ascii "@"                                                 // 0000000655D0: 40
	.byte 0xba                                                 // 0000000655D1: BA
	.short 0x1                                                 // 0000000655D2: 0001
	.long 0                                                    // 0000000655D4: 00000000
	.long 0                                                    // 0000000655D8: 00000000
	.long 0                                                    // 0000000655DC: 00000000
	.long 0                                                    // 0000000655E0: 00000000
	.long 0                                                    // 0000000655E4: 00000000
	.long 0                                                    // 0000000655E8: 00000000
	.long 0                                                    // 0000000655EC: 00000000
	.long 0x60af0101                                           // 0000000655F0: 60AF0101
	.long 0x1384                                               // 0000000655F4: 00001384
	.long 0x408                                                // 0000000655F8: 00000408
	.long 0                                                    // 0000000655FC: 00000000
	.type	add_char_get_work_dim_get_global_size.kd,@object
add_char_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000065600: 00000000
	.long 0                                                    // 000000065604: 00000000
	.long 0x110                                                // 000000065608: 00000110
	.long 0                                                    // 00000006560C: 00000000
	.long 0x1bb00                                              // 000000065610: 0001BB00
	.long 0                                                    // 000000065614: 00000000
	.long 0                                                    // 000000065618: 00000000
	.long 0                                                    // 00000006561C: 00000000
	.long 0                                                    // 000000065620: 00000000
	.long 0                                                    // 000000065624: 00000000
	.long 0                                                    // 000000065628: 00000000
	.long 0                                                    // 00000006562C: 00000000
	.long 0x60af0100                                           // 000000065630: 60AF0100
	.long 0x1384                                               // 000000065634: 00001384
	.long 0x408                                                // 000000065638: 00000408
	.long 0                                                    // 00000006563C: 00000000
	.type	add_char_x_get_num_groups.kd,@object
add_char_x_get_num_groups.kd:
	.long 0                                                    // 000000065640: 00000000
	.long 0                                                    // 000000065644: 00000000
	.long 0x110                                                // 000000065648: 00000110
	.long 0                                                    // 00000006564C: 00000000
	.long 0x1bbc0                                              // 000000065650: 0001BBC0
	.long 0                                                    // 000000065654: 00000000
	.long 0                                                    // 000000065658: 00000000
	.long 0                                                    // 00000006565C: 00000000
	.long 0                                                    // 000000065660: 00000000
	.long 0                                                    // 000000065664: 00000000
	.long 0                                                    // 000000065668: 00000000
	.long 0                                                    // 00000006566C: 00000000
	.long 0x60af0100                                           // 000000065670: 60AF0100
	.long 0x1384                                               // 000000065674: 00001384
	.long 0x408                                                // 000000065678: 00000408
	.long 0                                                    // 00000006567C: 00000000
	.type	add_char_get_global_offset_get_num_groups.kd,@object
add_char_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000065680: 00000000
	.long 0                                                    // 000000065684: 00000000
	.long 0x110                                                // 000000065688: 00000110
	.long 0                                                    // 00000006568C: 00000000
	.long 0x1bd80                                              // 000000065690: 0001BD80
	.long 0                                                    // 000000065694: 00000000
	.long 0                                                    // 000000065698: 00000000
	.long 0                                                    // 00000006569C: 00000000
	.long 0                                                    // 0000000656A0: 00000000
	.long 0                                                    // 0000000656A4: 00000000
	.long 0                                                    // 0000000656A8: 00000000
	.long 0                                                    // 0000000656AC: 00000000
	.long 0x60af0100                                           // 0000000656B0: 60AF0100
	.long 0x1384                                               // 0000000656B4: 00001384
	.long 0x408                                                // 0000000656B8: 00000408
	.long 0                                                    // 0000000656BC: 00000000
	.type	add_char_get_local_id_get_num_groups.kd,@object
add_char_get_local_id_get_num_groups.kd:
	.long 0                                                    // 0000000656C0: 00000000
	.long 0                                                    // 0000000656C4: 00000000
	.long 0x110                                                // 0000000656C8: 00000110
	.long 0                                                    // 0000000656CC: 00000000
	.ascii "@"                                                 // 0000000656D0: 40
	.byte 0xbe                                                 // 0000000656D1: BE
	.short 0x1                                                 // 0000000656D2: 0001
	.long 0                                                    // 0000000656D4: 00000000
	.long 0                                                    // 0000000656D8: 00000000
	.long 0                                                    // 0000000656DC: 00000000
	.long 0                                                    // 0000000656E0: 00000000
	.long 0                                                    // 0000000656E4: 00000000
	.long 0                                                    // 0000000656E8: 00000000
	.long 0                                                    // 0000000656EC: 00000000
	.long 0x60af0100                                           // 0000000656F0: 60AF0100
	.long 0x1384                                               // 0000000656F4: 00001384
	.long 0x408                                                // 0000000656F8: 00000408
	.long 0                                                    // 0000000656FC: 00000000
	.type	add_char_get_group_id_get_num_groups.kd,@object
add_char_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000065700: 00000000
	.long 0                                                    // 000000065704: 00000000
	.long 0x110                                                // 000000065708: 00000110
	.long 0                                                    // 00000006570C: 00000000
	.long 0x1bf00                                              // 000000065710: 0001BF00
	.long 0                                                    // 000000065714: 00000000
	.long 0                                                    // 000000065718: 00000000
	.long 0                                                    // 00000006571C: 00000000
	.long 0                                                    // 000000065720: 00000000
	.long 0                                                    // 000000065724: 00000000
	.long 0                                                    // 000000065728: 00000000
	.long 0                                                    // 00000006572C: 00000000
	.long 0x60af0100                                           // 000000065730: 60AF0100
	.long 0x1384                                               // 000000065734: 00001384
	.long 0x408                                                // 000000065738: 00000408
	.long 0                                                    // 00000006573C: 00000000
	.type	add_char_get_local_size_get_num_groups.kd,@object
add_char_get_local_size_get_num_groups.kd:
	.long 0                                                    // 000000065740: 00000000
	.long 0                                                    // 000000065744: 00000000
	.long 0x110                                                // 000000065748: 00000110
	.long 0                                                    // 00000006574C: 00000000
	.long 0x1bfc0                                              // 000000065750: 0001BFC0
	.long 0                                                    // 000000065754: 00000000
	.long 0                                                    // 000000065758: 00000000
	.long 0                                                    // 00000006575C: 00000000
	.long 0                                                    // 000000065760: 00000000
	.long 0                                                    // 000000065764: 00000000
	.long 0                                                    // 000000065768: 00000000
	.long 0                                                    // 00000006576C: 00000000
	.long 0x60af0100                                           // 000000065770: 60AF0100
	.long 0x1384                                               // 000000065774: 00001384
	.long 0x408                                                // 000000065778: 00000408
	.long 0                                                    // 00000006577C: 00000000
	.type	add_char_get_global_id_get_num_groups.kd,@object
add_char_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000065780: 00000000
	.long 0                                                    // 000000065784: 00000000
	.long 0x110                                                // 000000065788: 00000110
	.long 0                                                    // 00000006578C: 00000000
	.long 0x1c080                                              // 000000065790: 0001C080
	.long 0                                                    // 000000065794: 00000000
	.long 0                                                    // 000000065798: 00000000
	.long 0                                                    // 00000006579C: 00000000
	.long 0                                                    // 0000000657A0: 00000000
	.long 0                                                    // 0000000657A4: 00000000
	.long 0                                                    // 0000000657A8: 00000000
	.long 0                                                    // 0000000657AC: 00000000
	.long 0x60af0101                                           // 0000000657B0: 60AF0101
	.long 0x1384                                               // 0000000657B4: 00001384
	.long 0x408                                                // 0000000657B8: 00000408
	.long 0                                                    // 0000000657BC: 00000000
	.type	add_char_get_global_size_get_num_groups.kd,@object
add_char_get_global_size_get_num_groups.kd:
	.long 0                                                    // 0000000657C0: 00000000
	.long 0                                                    // 0000000657C4: 00000000
	.long 0x110                                                // 0000000657C8: 00000110
	.long 0                                                    // 0000000657CC: 00000000
	.ascii "@"                                                 // 0000000657D0: 40
	.byte 0xc2                                                 // 0000000657D1: C2
	.short 0x1                                                 // 0000000657D2: 0001
	.long 0                                                    // 0000000657D4: 00000000
	.long 0                                                    // 0000000657D8: 00000000
	.long 0                                                    // 0000000657DC: 00000000
	.long 0                                                    // 0000000657E0: 00000000
	.long 0                                                    // 0000000657E4: 00000000
	.long 0                                                    // 0000000657E8: 00000000
	.long 0                                                    // 0000000657EC: 00000000
	.long 0x60af0101                                           // 0000000657F0: 60AF0101
	.long 0x1384                                               // 0000000657F4: 00001384
	.long 0x408                                                // 0000000657F8: 00000408
	.long 0                                                    // 0000000657FC: 00000000
	.type	add_char_get_num_groups_get_num_groups.kd,@object
add_char_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000065800: 00000000
	.long 0                                                    // 000000065804: 00000000
	.long 0x110                                                // 000000065808: 00000110
	.long 0                                                    // 00000006580C: 00000000
	.long 0x1c300                                              // 000000065810: 0001C300
	.long 0                                                    // 000000065814: 00000000
	.long 0                                                    // 000000065818: 00000000
	.long 0                                                    // 00000006581C: 00000000
	.long 0                                                    // 000000065820: 00000000
	.long 0                                                    // 000000065824: 00000000
	.long 0                                                    // 000000065828: 00000000
	.long 0                                                    // 00000006582C: 00000000
	.long 0x60af0100                                           // 000000065830: 60AF0100
	.long 0x1384                                               // 000000065834: 00001384
	.long 0x408                                                // 000000065838: 00000408
	.long 0                                                    // 00000006583C: 00000000
	.type	add_char_get_work_dim_get_num_groups.kd,@object
add_char_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 000000065840: 00000000
	.long 0                                                    // 000000065844: 00000000
	.long 0x110                                                // 000000065848: 00000110
	.long 0                                                    // 00000006584C: 00000000
	.long 0x1c3c0                                              // 000000065850: 0001C3C0
	.long 0                                                    // 000000065854: 00000000
	.long 0                                                    // 000000065858: 00000000
	.long 0                                                    // 00000006585C: 00000000
	.long 0                                                    // 000000065860: 00000000
	.long 0                                                    // 000000065864: 00000000
	.long 0                                                    // 000000065868: 00000000
	.long 0                                                    // 00000006586C: 00000000
	.long 0x60af0100                                           // 000000065870: 60AF0100
	.long 0x1384                                               // 000000065874: 00001384
	.long 0x408                                                // 000000065878: 00000408
	.long 0                                                    // 00000006587C: 00000000
	.type	add_char_x_get_work_dim.kd,@object
add_char_x_get_work_dim.kd:
	.long 0                                                    // 000000065880: 00000000
	.long 0                                                    // 000000065884: 00000000
	.long 0x110                                                // 000000065888: 00000110
	.long 0                                                    // 00000006588C: 00000000
	.long 0x1c580                                              // 000000065890: 0001C580
	.long 0                                                    // 000000065894: 00000000
	.long 0                                                    // 000000065898: 00000000
	.long 0                                                    // 00000006589C: 00000000
	.long 0                                                    // 0000000658A0: 00000000
	.long 0                                                    // 0000000658A4: 00000000
	.long 0                                                    // 0000000658A8: 00000000
	.long 0                                                    // 0000000658AC: 00000000
	.long 0x60af0100                                           // 0000000658B0: 60AF0100
	.long 0x1384                                               // 0000000658B4: 00001384
	.long 0x408                                                // 0000000658B8: 00000408
	.long 0                                                    // 0000000658BC: 00000000
	.type	add_char_get_global_offset_get_work_dim.kd,@object
add_char_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 0000000658C0: 00000000
	.long 0                                                    // 0000000658C4: 00000000
	.long 0x110                                                // 0000000658C8: 00000110
	.long 0                                                    // 0000000658CC: 00000000
	.ascii "@"                                                 // 0000000658D0: 40
	.byte 0xc6                                                 // 0000000658D1: C6
	.short 0x1                                                 // 0000000658D2: 0001
	.long 0                                                    // 0000000658D4: 00000000
	.long 0                                                    // 0000000658D8: 00000000
	.long 0                                                    // 0000000658DC: 00000000
	.long 0                                                    // 0000000658E0: 00000000
	.long 0                                                    // 0000000658E4: 00000000
	.long 0                                                    // 0000000658E8: 00000000
	.long 0                                                    // 0000000658EC: 00000000
	.long 0x60af0100                                           // 0000000658F0: 60AF0100
	.long 0x1384                                               // 0000000658F4: 00001384
	.long 0x408                                                // 0000000658F8: 00000408
	.long 0                                                    // 0000000658FC: 00000000
	.type	add_char_get_local_id_get_work_dim.kd,@object
add_char_get_local_id_get_work_dim.kd:
	.long 0                                                    // 000000065900: 00000000
	.long 0                                                    // 000000065904: 00000000
	.long 0x110                                                // 000000065908: 00000110
	.long 0                                                    // 00000006590C: 00000000
	.long 0x1c700                                              // 000000065910: 0001C700
	.long 0                                                    // 000000065914: 00000000
	.long 0                                                    // 000000065918: 00000000
	.long 0                                                    // 00000006591C: 00000000
	.long 0                                                    // 000000065920: 00000000
	.long 0                                                    // 000000065924: 00000000
	.long 0                                                    // 000000065928: 00000000
	.long 0                                                    // 00000006592C: 00000000
	.long 0x60af0100                                           // 000000065930: 60AF0100
	.long 0x1384                                               // 000000065934: 00001384
	.long 0x408                                                // 000000065938: 00000408
	.long 0                                                    // 00000006593C: 00000000
	.type	add_char_get_group_id_get_work_dim.kd,@object
add_char_get_group_id_get_work_dim.kd:
	.long 0                                                    // 000000065940: 00000000
	.long 0                                                    // 000000065944: 00000000
	.long 0x110                                                // 000000065948: 00000110
	.long 0                                                    // 00000006594C: 00000000
	.long 0x1c7c0                                              // 000000065950: 0001C7C0
	.long 0                                                    // 000000065954: 00000000
	.long 0                                                    // 000000065958: 00000000
	.long 0                                                    // 00000006595C: 00000000
	.long 0                                                    // 000000065960: 00000000
	.long 0                                                    // 000000065964: 00000000
	.long 0                                                    // 000000065968: 00000000
	.long 0                                                    // 00000006596C: 00000000
	.long 0x60af0100                                           // 000000065970: 60AF0100
	.long 0x1384                                               // 000000065974: 00001384
	.long 0x408                                                // 000000065978: 00000408
	.long 0                                                    // 00000006597C: 00000000
	.type	add_char_get_local_size_get_work_dim.kd,@object
add_char_get_local_size_get_work_dim.kd:
	.long 0                                                    // 000000065980: 00000000
	.long 0                                                    // 000000065984: 00000000
	.long 0x110                                                // 000000065988: 00000110
	.long 0                                                    // 00000006598C: 00000000
	.long 0x1c880                                              // 000000065990: 0001C880
	.long 0                                                    // 000000065994: 00000000
	.long 0                                                    // 000000065998: 00000000
	.long 0                                                    // 00000006599C: 00000000
	.long 0                                                    // 0000000659A0: 00000000
	.long 0                                                    // 0000000659A4: 00000000
	.long 0                                                    // 0000000659A8: 00000000
	.long 0                                                    // 0000000659AC: 00000000
	.long 0x60af0100                                           // 0000000659B0: 60AF0100
	.long 0x1384                                               // 0000000659B4: 00001384
	.long 0x408                                                // 0000000659B8: 00000408
	.long 0                                                    // 0000000659BC: 00000000
	.type	add_char_get_global_id_get_work_dim.kd,@object
add_char_get_global_id_get_work_dim.kd:
	.long 0                                                    // 0000000659C0: 00000000
	.long 0                                                    // 0000000659C4: 00000000
	.long 0x110                                                // 0000000659C8: 00000110
	.long 0                                                    // 0000000659CC: 00000000
	.ascii "@"                                                 // 0000000659D0: 40
	.byte 0xc9                                                 // 0000000659D1: C9
	.short 0x1                                                 // 0000000659D2: 0001
	.long 0                                                    // 0000000659D4: 00000000
	.long 0                                                    // 0000000659D8: 00000000
	.long 0                                                    // 0000000659DC: 00000000
	.long 0                                                    // 0000000659E0: 00000000
	.long 0                                                    // 0000000659E4: 00000000
	.long 0                                                    // 0000000659E8: 00000000
	.long 0                                                    // 0000000659EC: 00000000
	.long 0x60af0101                                           // 0000000659F0: 60AF0101
	.long 0x1384                                               // 0000000659F4: 00001384
	.long 0x408                                                // 0000000659F8: 00000408
	.long 0                                                    // 0000000659FC: 00000000
	.type	add_char_get_global_size_get_work_dim.kd,@object
add_char_get_global_size_get_work_dim.kd:
	.long 0                                                    // 000000065A00: 00000000
	.long 0                                                    // 000000065A04: 00000000
	.long 0x110                                                // 000000065A08: 00000110
	.long 0                                                    // 000000065A0C: 00000000
	.long 0x1ca00                                              // 000000065A10: 0001CA00
	.long 0                                                    // 000000065A14: 00000000
	.long 0                                                    // 000000065A18: 00000000
	.long 0                                                    // 000000065A1C: 00000000
	.long 0                                                    // 000000065A20: 00000000
	.long 0                                                    // 000000065A24: 00000000
	.long 0                                                    // 000000065A28: 00000000
	.long 0                                                    // 000000065A2C: 00000000
	.long 0x60af0100                                           // 000000065A30: 60AF0100
	.long 0x1384                                               // 000000065A34: 00001384
	.long 0x408                                                // 000000065A38: 00000408
	.long 0                                                    // 000000065A3C: 00000000
	.type	add_char_get_num_groups_get_work_dim.kd,@object
add_char_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 000000065A40: 00000000
	.long 0                                                    // 000000065A44: 00000000
	.long 0x110                                                // 000000065A48: 00000110
	.long 0                                                    // 000000065A4C: 00000000
	.long 0x1cbc0                                              // 000000065A50: 0001CBC0
	.long 0                                                    // 000000065A54: 00000000
	.long 0                                                    // 000000065A58: 00000000
	.long 0                                                    // 000000065A5C: 00000000
	.long 0                                                    // 000000065A60: 00000000
	.long 0                                                    // 000000065A64: 00000000
	.long 0                                                    // 000000065A68: 00000000
	.long 0                                                    // 000000065A6C: 00000000
	.long 0x60af0100                                           // 000000065A70: 60AF0100
	.long 0x1384                                               // 000000065A74: 00001384
	.long 0x408                                                // 000000065A78: 00000408
	.long 0                                                    // 000000065A7C: 00000000
	.type	add_char_get_work_dim_get_work_dim.kd,@object
add_char_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 000000065A80: 00000000
	.long 0                                                    // 000000065A84: 00000000
	.long 0x110                                                // 000000065A88: 00000110
	.long 0                                                    // 000000065A8C: 00000000
	.long 0x1cd80                                              // 000000065A90: 0001CD80
	.long 0                                                    // 000000065A94: 00000000
	.long 0                                                    // 000000065A98: 00000000
	.long 0                                                    // 000000065A9C: 00000000
	.long 0                                                    // 000000065AA0: 00000000
	.long 0                                                    // 000000065AA4: 00000000
	.long 0                                                    // 000000065AA8: 00000000
	.long 0                                                    // 000000065AAC: 00000000
	.long 0x60af0100                                           // 000000065AB0: 60AF0100
	.long 0x1384                                               // 000000065AB4: 00001384
	.long 0x408                                                // 000000065AB8: 00000408
	.long 0                                                    // 000000065ABC: 00000000
	.type	add_char_x_64.kd,@object
add_char_x_64.kd:
	.long 0                                                    // 000000065AC0: 00000000
	.long 0                                                    // 000000065AC4: 00000000
	.long 0x110                                                // 000000065AC8: 00000110
	.long 0                                                    // 000000065ACC: 00000000
	.ascii "@"                                                 // 000000065AD0: 40
	.byte 0xce                                                 // 000000065AD1: CE
	.short 0x1                                                 // 000000065AD2: 0001
	.long 0                                                    // 000000065AD4: 00000000
	.long 0                                                    // 000000065AD8: 00000000
	.long 0                                                    // 000000065ADC: 00000000
	.long 0                                                    // 000000065AE0: 00000000
	.long 0                                                    // 000000065AE4: 00000000
	.long 0                                                    // 000000065AE8: 00000000
	.long 0                                                    // 000000065AEC: 00000000
	.long 0x60af0100                                           // 000000065AF0: 60AF0100
	.long 0x84                                                 // 000000065AF4: 00000084
	.long 0x408                                                // 000000065AF8: 00000408
	.long 0                                                    // 000000065AFC: 00000000
	.type	add_char_get_global_offset_64.kd,@object
add_char_get_global_offset_64.kd:
	.long 0                                                    // 000000065B00: 00000000
	.long 0                                                    // 000000065B04: 00000000
	.long 0x110                                                // 000000065B08: 00000110
	.long 0                                                    // 000000065B0C: 00000000
	.long 0x1cf00                                              // 000000065B10: 0001CF00
	.long 0                                                    // 000000065B14: 00000000
	.long 0                                                    // 000000065B18: 00000000
	.long 0                                                    // 000000065B1C: 00000000
	.long 0                                                    // 000000065B20: 00000000
	.long 0                                                    // 000000065B24: 00000000
	.long 0                                                    // 000000065B28: 00000000
	.long 0                                                    // 000000065B2C: 00000000
	.long 0x60af0100                                           // 000000065B30: 60AF0100
	.long 0x84                                                 // 000000065B34: 00000084
	.long 0x408                                                // 000000065B38: 00000408
	.long 0                                                    // 000000065B3C: 00000000
	.type	add_char_get_local_id_64.kd,@object
add_char_get_local_id_64.kd:
	.long 0                                                    // 000000065B40: 00000000
	.long 0                                                    // 000000065B44: 00000000
	.long 0x110                                                // 000000065B48: 00000110
	.long 0                                                    // 000000065B4C: 00000000
	.long 0x1cfc0                                              // 000000065B50: 0001CFC0
	.long 0                                                    // 000000065B54: 00000000
	.long 0                                                    // 000000065B58: 00000000
	.long 0                                                    // 000000065B5C: 00000000
	.long 0                                                    // 000000065B60: 00000000
	.long 0                                                    // 000000065B64: 00000000
	.long 0                                                    // 000000065B68: 00000000
	.long 0                                                    // 000000065B6C: 00000000
	.long 0x60af0100                                           // 000000065B70: 60AF0100
	.long 0x84                                                 // 000000065B74: 00000084
	.long 0x408                                                // 000000065B78: 00000408
	.long 0                                                    // 000000065B7C: 00000000
	.type	add_char_get_group_id_64.kd,@object
add_char_get_group_id_64.kd:
	.long 0                                                    // 000000065B80: 00000000
	.long 0                                                    // 000000065B84: 00000000
	.long 0x110                                                // 000000065B88: 00000110
	.long 0                                                    // 000000065B8C: 00000000
	.long 0x1d080                                              // 000000065B90: 0001D080
	.long 0                                                    // 000000065B94: 00000000
	.long 0                                                    // 000000065B98: 00000000
	.long 0                                                    // 000000065B9C: 00000000
	.long 0                                                    // 000000065BA0: 00000000
	.long 0                                                    // 000000065BA4: 00000000
	.long 0                                                    // 000000065BA8: 00000000
	.long 0                                                    // 000000065BAC: 00000000
	.long 0x60af0100                                           // 000000065BB0: 60AF0100
	.long 0x84                                                 // 000000065BB4: 00000084
	.long 0x408                                                // 000000065BB8: 00000408
	.long 0                                                    // 000000065BBC: 00000000
	.type	add_char_get_local_size_64.kd,@object
add_char_get_local_size_64.kd:
	.long 0                                                    // 000000065BC0: 00000000
	.long 0                                                    // 000000065BC4: 00000000
	.long 0x110                                                // 000000065BC8: 00000110
	.long 0                                                    // 000000065BCC: 00000000
	.ascii "@"                                                 // 000000065BD0: 40
	.byte 0xd1                                                 // 000000065BD1: D1
	.short 0x1                                                 // 000000065BD2: 0001
	.long 0                                                    // 000000065BD4: 00000000
	.long 0                                                    // 000000065BD8: 00000000
	.long 0                                                    // 000000065BDC: 00000000
	.long 0                                                    // 000000065BE0: 00000000
	.long 0                                                    // 000000065BE4: 00000000
	.long 0                                                    // 000000065BE8: 00000000
	.long 0                                                    // 000000065BEC: 00000000
	.long 0x60af0100                                           // 000000065BF0: 60AF0100
	.long 0x84                                                 // 000000065BF4: 00000084
	.long 0x408                                                // 000000065BF8: 00000408
	.long 0                                                    // 000000065BFC: 00000000
	.type	add_char_get_global_id_64.kd,@object
add_char_get_global_id_64.kd:
	.long 0                                                    // 000000065C00: 00000000
	.long 0                                                    // 000000065C04: 00000000
	.long 0x110                                                // 000000065C08: 00000110
	.long 0                                                    // 000000065C0C: 00000000
	.long 0x1d200                                              // 000000065C10: 0001D200
	.long 0                                                    // 000000065C14: 00000000
	.long 0                                                    // 000000065C18: 00000000
	.long 0                                                    // 000000065C1C: 00000000
	.long 0                                                    // 000000065C20: 00000000
	.long 0                                                    // 000000065C24: 00000000
	.long 0                                                    // 000000065C28: 00000000
	.long 0                                                    // 000000065C2C: 00000000
	.long 0x60af0100                                           // 000000065C30: 60AF0100
	.long 0x84                                                 // 000000065C34: 00000084
	.long 0x408                                                // 000000065C38: 00000408
	.long 0                                                    // 000000065C3C: 00000000
	.type	add_char_get_global_size_64.kd,@object
add_char_get_global_size_64.kd:
	.long 0                                                    // 000000065C40: 00000000
	.long 0                                                    // 000000065C44: 00000000
	.long 0x110                                                // 000000065C48: 00000110
	.long 0                                                    // 000000065C4C: 00000000
	.long 0x1d2c0                                              // 000000065C50: 0001D2C0
	.long 0                                                    // 000000065C54: 00000000
	.long 0                                                    // 000000065C58: 00000000
	.long 0                                                    // 000000065C5C: 00000000
	.long 0                                                    // 000000065C60: 00000000
	.long 0                                                    // 000000065C64: 00000000
	.long 0                                                    // 000000065C68: 00000000
	.long 0                                                    // 000000065C6C: 00000000
	.long 0x60af0100                                           // 000000065C70: 60AF0100
	.long 0x84                                                 // 000000065C74: 00000084
	.long 0x408                                                // 000000065C78: 00000408
	.long 0                                                    // 000000065C7C: 00000000
	.type	add_char_get_num_groups_64.kd,@object
add_char_get_num_groups_64.kd:
	.long 0                                                    // 000000065C80: 00000000
	.long 0                                                    // 000000065C84: 00000000
	.long 0x110                                                // 000000065C88: 00000110
	.long 0                                                    // 000000065C8C: 00000000
	.long 0x1d380                                              // 000000065C90: 0001D380
	.long 0                                                    // 000000065C94: 00000000
	.long 0                                                    // 000000065C98: 00000000
	.long 0                                                    // 000000065C9C: 00000000
	.long 0                                                    // 000000065CA0: 00000000
	.long 0                                                    // 000000065CA4: 00000000
	.long 0                                                    // 000000065CA8: 00000000
	.long 0                                                    // 000000065CAC: 00000000
	.long 0x60af0100                                           // 000000065CB0: 60AF0100
	.long 0x84                                                 // 000000065CB4: 00000084
	.long 0x408                                                // 000000065CB8: 00000408
	.long 0                                                    // 000000065CBC: 00000000
	.type	add_char_get_work_dim.kd,@object
add_char_get_work_dim.kd:
	.long 0                                                    // 000000065CC0: 00000000
	.long 0                                                    // 000000065CC4: 00000000
	.long 0x110                                                // 000000065CC8: 00000110
	.long 0                                                    // 000000065CCC: 00000000
	.ascii "@"                                                 // 000000065CD0: 40
	.byte 0xd4                                                 // 000000065CD1: D4
	.short 0x1                                                 // 000000065CD2: 0001
	.long 0                                                    // 000000065CD4: 00000000
	.long 0                                                    // 000000065CD8: 00000000
	.long 0                                                    // 000000065CDC: 00000000
	.long 0                                                    // 000000065CE0: 00000000
	.long 0                                                    // 000000065CE4: 00000000
	.long 0                                                    // 000000065CE8: 00000000
	.long 0                                                    // 000000065CEC: 00000000
	.long 0x60af0100                                           // 000000065CF0: 60AF0100
	.long 0x84                                                 // 000000065CF4: 00000084
	.long 0x408                                                // 000000065CF8: 00000408
	.long 0                                                    // 000000065CFC: 00000000
	.type	add_char_x_8_8.kd,@object
add_char_x_8_8.kd:
	.long 0                                                    // 000000065D00: 00000000
	.long 0                                                    // 000000065D04: 00000000
	.long 0x110                                                // 000000065D08: 00000110
	.long 0                                                    // 000000065D0C: 00000000
	.long 0x1d500                                              // 000000065D10: 0001D500
	.long 0                                                    // 000000065D14: 00000000
	.long 0                                                    // 000000065D18: 00000000
	.long 0                                                    // 000000065D1C: 00000000
	.long 0                                                    // 000000065D20: 00000000
	.long 0                                                    // 000000065D24: 00000000
	.long 0                                                    // 000000065D28: 00000000
	.long 0                                                    // 000000065D2C: 00000000
	.long 0x60af0100                                           // 000000065D30: 60AF0100
	.long 0x984                                                // 000000065D34: 00000984
	.long 0x408                                                // 000000065D38: 00000408
	.long 0                                                    // 000000065D3C: 00000000
	.type	add_char_get_global_offset_8_8.kd,@object
add_char_get_global_offset_8_8.kd:
	.long 0                                                    // 000000065D40: 00000000
	.long 0                                                    // 000000065D44: 00000000
	.long 0x110                                                // 000000065D48: 00000110
	.long 0                                                    // 000000065D4C: 00000000
	.long 0x1d5c0                                              // 000000065D50: 0001D5C0
	.long 0                                                    // 000000065D54: 00000000
	.long 0                                                    // 000000065D58: 00000000
	.long 0                                                    // 000000065D5C: 00000000
	.long 0                                                    // 000000065D60: 00000000
	.long 0                                                    // 000000065D64: 00000000
	.long 0                                                    // 000000065D68: 00000000
	.long 0                                                    // 000000065D6C: 00000000
	.long 0x60af0100                                           // 000000065D70: 60AF0100
	.long 0x84                                                 // 000000065D74: 00000084
	.long 0x408                                                // 000000065D78: 00000408
	.long 0                                                    // 000000065D7C: 00000000
	.type	add_char_get_local_id_8_8.kd,@object
add_char_get_local_id_8_8.kd:
	.long 0                                                    // 000000065D80: 00000000
	.long 0                                                    // 000000065D84: 00000000
	.long 0x110                                                // 000000065D88: 00000110
	.long 0                                                    // 000000065D8C: 00000000
	.long 0x1d680                                              // 000000065D90: 0001D680
	.long 0                                                    // 000000065D94: 00000000
	.long 0                                                    // 000000065D98: 00000000
	.long 0                                                    // 000000065D9C: 00000000
	.long 0                                                    // 000000065DA0: 00000000
	.long 0                                                    // 000000065DA4: 00000000
	.long 0                                                    // 000000065DA8: 00000000
	.long 0                                                    // 000000065DAC: 00000000
	.long 0x60af0100                                           // 000000065DB0: 60AF0100
	.long 0x884                                                // 000000065DB4: 00000884
	.long 0x408                                                // 000000065DB8: 00000408
	.long 0                                                    // 000000065DBC: 00000000
	.type	add_char_get_group_id_8_8.kd,@object
add_char_get_group_id_8_8.kd:
	.long 0                                                    // 000000065DC0: 00000000
	.long 0                                                    // 000000065DC4: 00000000
	.long 0x110                                                // 000000065DC8: 00000110
	.long 0                                                    // 000000065DCC: 00000000
	.ascii "@"                                                 // 000000065DD0: 40
	.byte 0xd7                                                 // 000000065DD1: D7
	.short 0x1                                                 // 000000065DD2: 0001
	.long 0                                                    // 000000065DD4: 00000000
	.long 0                                                    // 000000065DD8: 00000000
	.long 0                                                    // 000000065DDC: 00000000
	.long 0                                                    // 000000065DE0: 00000000
	.long 0                                                    // 000000065DE4: 00000000
	.long 0                                                    // 000000065DE8: 00000000
	.long 0                                                    // 000000065DEC: 00000000
	.long 0x60af0100                                           // 000000065DF0: 60AF0100
	.long 0x184                                                // 000000065DF4: 00000184
	.long 0x408                                                // 000000065DF8: 00000408
	.long 0                                                    // 000000065DFC: 00000000
	.type	add_char_get_local_size_8_8.kd,@object
add_char_get_local_size_8_8.kd:
	.long 0                                                    // 000000065E00: 00000000
	.long 0                                                    // 000000065E04: 00000000
	.long 0x110                                                // 000000065E08: 00000110
	.long 0                                                    // 000000065E0C: 00000000
	.long 0x1d800                                              // 000000065E10: 0001D800
	.long 0                                                    // 000000065E14: 00000000
	.long 0                                                    // 000000065E18: 00000000
	.long 0                                                    // 000000065E1C: 00000000
	.long 0                                                    // 000000065E20: 00000000
	.long 0                                                    // 000000065E24: 00000000
	.long 0                                                    // 000000065E28: 00000000
	.long 0                                                    // 000000065E2C: 00000000
	.long 0x60af0100                                           // 000000065E30: 60AF0100
	.long 0x84                                                 // 000000065E34: 00000084
	.long 0x408                                                // 000000065E38: 00000408
	.long 0                                                    // 000000065E3C: 00000000
	.type	add_char_get_global_id_8_8.kd,@object
add_char_get_global_id_8_8.kd:
	.long 0                                                    // 000000065E40: 00000000
	.long 0                                                    // 000000065E44: 00000000
	.long 0x110                                                // 000000065E48: 00000110
	.long 0                                                    // 000000065E4C: 00000000
	.long 0x1d8c0                                              // 000000065E50: 0001D8C0
	.long 0                                                    // 000000065E54: 00000000
	.long 0                                                    // 000000065E58: 00000000
	.long 0                                                    // 000000065E5C: 00000000
	.long 0                                                    // 000000065E60: 00000000
	.long 0                                                    // 000000065E64: 00000000
	.long 0                                                    // 000000065E68: 00000000
	.long 0                                                    // 000000065E6C: 00000000
	.long 0x60af0100                                           // 000000065E70: 60AF0100
	.long 0x984                                                // 000000065E74: 00000984
	.long 0x408                                                // 000000065E78: 00000408
	.long 0                                                    // 000000065E7C: 00000000
	.type	add_char_get_global_size_8_8.kd,@object
add_char_get_global_size_8_8.kd:
	.long 0                                                    // 000000065E80: 00000000
	.long 0                                                    // 000000065E84: 00000000
	.long 0x110                                                // 000000065E88: 00000110
	.long 0                                                    // 000000065E8C: 00000000
	.long 0x1d980                                              // 000000065E90: 0001D980
	.long 0                                                    // 000000065E94: 00000000
	.long 0                                                    // 000000065E98: 00000000
	.long 0                                                    // 000000065E9C: 00000000
	.long 0                                                    // 000000065EA0: 00000000
	.long 0                                                    // 000000065EA4: 00000000
	.long 0                                                    // 000000065EA8: 00000000
	.long 0                                                    // 000000065EAC: 00000000
	.long 0x60af0100                                           // 000000065EB0: 60AF0100
	.long 0x84                                                 // 000000065EB4: 00000084
	.long 0x408                                                // 000000065EB8: 00000408
	.long 0                                                    // 000000065EBC: 00000000
	.type	add_char_get_num_groups_8_8.kd,@object
add_char_get_num_groups_8_8.kd:
	.long 0                                                    // 000000065EC0: 00000000
	.long 0                                                    // 000000065EC4: 00000000
	.long 0x110                                                // 000000065EC8: 00000110
	.long 0                                                    // 000000065ECC: 00000000
	.ascii "@"                                                 // 000000065ED0: 40
	.byte 0xda                                                 // 000000065ED1: DA
	.short 0x1                                                 // 000000065ED2: 0001
	.long 0                                                    // 000000065ED4: 00000000
	.long 0                                                    // 000000065ED8: 00000000
	.long 0                                                    // 000000065EDC: 00000000
	.long 0                                                    // 000000065EE0: 00000000
	.long 0                                                    // 000000065EE4: 00000000
	.long 0                                                    // 000000065EE8: 00000000
	.long 0                                                    // 000000065EEC: 00000000
	.long 0x60af0100                                           // 000000065EF0: 60AF0100
	.long 0x84                                                 // 000000065EF4: 00000084
	.long 0x408                                                // 000000065EF8: 00000408
	.long 0                                                    // 000000065EFC: 00000000
	.type	add_char_get_work_dim_8_8.kd,@object
add_char_get_work_dim_8_8.kd:
	.long 0                                                    // 000000065F00: 00000000
	.long 0                                                    // 000000065F04: 00000000
	.long 0x110                                                // 000000065F08: 00000110
	.long 0                                                    // 000000065F0C: 00000000
	.long 0x1db00                                              // 000000065F10: 0001DB00
	.long 0                                                    // 000000065F14: 00000000
	.long 0                                                    // 000000065F18: 00000000
	.long 0                                                    // 000000065F1C: 00000000
	.long 0                                                    // 000000065F20: 00000000
	.long 0                                                    // 000000065F24: 00000000
	.long 0                                                    // 000000065F28: 00000000
	.long 0                                                    // 000000065F2C: 00000000
	.long 0x60af0100                                           // 000000065F30: 60AF0100
	.long 0x984                                                // 000000065F34: 00000984
	.long 0x408                                                // 000000065F38: 00000408
	.long 0                                                    // 000000065F3C: 00000000

	.text

	.p2align	8
	.type	add_x_x,@function
	.size	add_x_x, add_x_x_symend-add_x_x
add_x_x:
	s_clause 0x2                                               // 000000067000: BF850002
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000067004: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x8                                 // 00000006700C: F40000C0 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 000000067014: F4040000 F8000000
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000006701C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000067024: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067028: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006702C: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000067030: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000067038: D5207C01 00090005
	s_lshl_b32 s2, s3, 1                                       // 000000067040: 84028103
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000067044: BF870119
	v_mov_b32_e32 v2, s2                                       // 000000067048: 7E040202
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006704C: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000067054: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000067058: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067060: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000067064: DC6A0000 007C0200
	s_nop 0                                                    // 00000006706C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067070: BFB60003
	s_endpgm                                                   // 000000067074: BFB00000
add_x_x_symend:
	.long 0xbf800000                                           // 000000067078: BF800000
	.long 0xbf800000                                           // 00000006707C: BF800000
	.long 0xbf800000                                           // 000000067080: BF800000
	.long 0xbf800000                                           // 000000067084: BF800000
	.long 0xbf800000                                           // 000000067088: BF800000
	.long 0xbf800000                                           // 00000006708C: BF800000
	.long 0xbf800000                                           // 000000067090: BF800000
	.long 0xbf800000                                           // 000000067094: BF800000
	.long 0xbf800000                                           // 000000067098: BF800000
	.long 0xbf800000                                           // 00000006709C: BF800000
	.long 0xbf800000                                           // 0000000670A0: BF800000
	.long 0xbf800000                                           // 0000000670A4: BF800000
	.long 0xbf800000                                           // 0000000670A8: BF800000
	.long 0xbf800000                                           // 0000000670AC: BF800000
	.long 0xbf800000                                           // 0000000670B0: BF800000
	.long 0xbf800000                                           // 0000000670B4: BF800000
	.long 0xbf800000                                           // 0000000670B8: BF800000
	.long 0xbf800000                                           // 0000000670BC: BF800000
	.long 0xbf800000                                           // 0000000670C0: BF800000
	.long 0xbf800000                                           // 0000000670C4: BF800000
	.long 0xbf800000                                           // 0000000670C8: BF800000
	.long 0xbf800000                                           // 0000000670CC: BF800000
	.long 0xbf800000                                           // 0000000670D0: BF800000
	.long 0xbf800000                                           // 0000000670D4: BF800000
	.long 0xbf800000                                           // 0000000670D8: BF800000
	.long 0xbf800000                                           // 0000000670DC: BF800000
	.long 0xbf800000                                           // 0000000670E0: BF800000
	.long 0xbf800000                                           // 0000000670E4: BF800000
	.long 0xbf800000                                           // 0000000670E8: BF800000
	.long 0xbf800000                                           // 0000000670EC: BF800000
	.long 0xbf800000                                           // 0000000670F0: BF800000
	.long 0xbf800000                                           // 0000000670F4: BF800000
	.long 0xbf800000                                           // 0000000670F8: BF800000
	.long 0xbf800000                                           // 0000000670FC: BF800000

	.p2align	8
	.type	add_get_global_offset_x,@function
	.size	add_get_global_offset_x, add_get_global_offset_x_symend-add_get_global_offset_x
add_get_global_offset_x:
	s_clause 0x2                                               // 000000067100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067104: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000006710C: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000067114: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006711C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000067124: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006712C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006713C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000067140: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000067148: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000067150: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000067154: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006715C: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 000000067160: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000067168: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006716C: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000067174: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006717C: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 000000067184: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006718C: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067190: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000067198: D5207C05 000D0007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000671A0: D73C0002 00020482
	s_add_i32 s2, s8, s5                                       // 0000000671A8: 81020508
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000671AC: BF870219
	v_mov_b32_e32 v6, s2                                       // 0000000671B0: 7E0C0202
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000671B4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000671BC: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000671C4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000671C8: D7006A02 00020400
	s_add_i32 s2, s10, s5                                      // 0000000671D0: 8102050A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000671D4: 40060601
	v_mov_b32_e32 v7, s2                                       // 0000000671D8: 7E0E0202
	s_add_i32 s2, s6, s5                                       // 0000000671DC: 81020506
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000671E0: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 0000000671E8: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000671EC: 400A0A01
	s_clause 0x2                                               // 0000000671F0: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000671F4: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 0000000671FC: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 000000067204: DC6A0000 007C0804
	s_nop 0                                                    // 00000006720C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067210: BFB60003
	s_endpgm                                                   // 000000067214: BFB00000
add_get_global_offset_x_symend:
	.long 0xbf800000                                           // 000000067218: BF800000
	.long 0xbf800000                                           // 00000006721C: BF800000
	.long 0xbf800000                                           // 000000067220: BF800000
	.long 0xbf800000                                           // 000000067224: BF800000
	.long 0xbf800000                                           // 000000067228: BF800000
	.long 0xbf800000                                           // 00000006722C: BF800000
	.long 0xbf800000                                           // 000000067230: BF800000
	.long 0xbf800000                                           // 000000067234: BF800000
	.long 0xbf800000                                           // 000000067238: BF800000
	.long 0xbf800000                                           // 00000006723C: BF800000
	.long 0xbf800000                                           // 000000067240: BF800000
	.long 0xbf800000                                           // 000000067244: BF800000
	.long 0xbf800000                                           // 000000067248: BF800000
	.long 0xbf800000                                           // 00000006724C: BF800000
	.long 0xbf800000                                           // 000000067250: BF800000
	.long 0xbf800000                                           // 000000067254: BF800000
	.long 0xbf800000                                           // 000000067258: BF800000
	.long 0xbf800000                                           // 00000006725C: BF800000
	.long 0xbf800000                                           // 000000067260: BF800000
	.long 0xbf800000                                           // 000000067264: BF800000
	.long 0xbf800000                                           // 000000067268: BF800000
	.long 0xbf800000                                           // 00000006726C: BF800000
	.long 0xbf800000                                           // 000000067270: BF800000
	.long 0xbf800000                                           // 000000067274: BF800000
	.long 0xbf800000                                           // 000000067278: BF800000
	.long 0xbf800000                                           // 00000006727C: BF800000
	.long 0xbf800000                                           // 000000067280: BF800000
	.long 0xbf800000                                           // 000000067284: BF800000
	.long 0xbf800000                                           // 000000067288: BF800000
	.long 0xbf800000                                           // 00000006728C: BF800000
	.long 0xbf800000                                           // 000000067290: BF800000
	.long 0xbf800000                                           // 000000067294: BF800000
	.long 0xbf800000                                           // 000000067298: BF800000
	.long 0xbf800000                                           // 00000006729C: BF800000
	.long 0xbf800000                                           // 0000000672A0: BF800000
	.long 0xbf800000                                           // 0000000672A4: BF800000
	.long 0xbf800000                                           // 0000000672A8: BF800000
	.long 0xbf800000                                           // 0000000672AC: BF800000
	.long 0xbf800000                                           // 0000000672B0: BF800000
	.long 0xbf800000                                           // 0000000672B4: BF800000
	.long 0xbf800000                                           // 0000000672B8: BF800000
	.long 0xbf800000                                           // 0000000672BC: BF800000
	.long 0xbf800000                                           // 0000000672C0: BF800000
	.long 0xbf800000                                           // 0000000672C4: BF800000
	.long 0xbf800000                                           // 0000000672C8: BF800000
	.long 0xbf800000                                           // 0000000672CC: BF800000
	.long 0xbf800000                                           // 0000000672D0: BF800000
	.long 0xbf800000                                           // 0000000672D4: BF800000
	.long 0xbf800000                                           // 0000000672D8: BF800000
	.long 0xbf800000                                           // 0000000672DC: BF800000
	.long 0xbf800000                                           // 0000000672E0: BF800000
	.long 0xbf800000                                           // 0000000672E4: BF800000
	.long 0xbf800000                                           // 0000000672E8: BF800000
	.long 0xbf800000                                           // 0000000672EC: BF800000
	.long 0xbf800000                                           // 0000000672F0: BF800000
	.long 0xbf800000                                           // 0000000672F4: BF800000
	.long 0xbf800000                                           // 0000000672F8: BF800000
	.long 0xbf800000                                           // 0000000672FC: BF800000

	.p2align	8
	.type	add_get_local_id_x,@function
	.size	add_get_local_id_x, add_get_local_id_x_symend-add_get_local_id_x
add_get_local_id_x:
	s_clause 0x2                                               // 000000067300: BF850002
	s_load_b32 s5, s[0:1], null                                // 000000067304: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006730C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000067314: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006731C: 360200FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000067324: D6100006 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006732C: F4040000 F8000008
	v_bfe_u32 v7, v0, 20, 10                                   // 000000067334: D6100007 02292900
	s_mov_b32 s33, 0                                           // 00000006733C: BEA10080
	v_lshl_or_b32 v0, s2, 3, v1                                // 000000067340: D6560000 04050602
	v_lshl_or_b32 v2, s3, 2, v6                                // 000000067348: D6560002 04190403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000067350: BF8700C3
	v_lshl_or_b32 v4, s4, 1, v7                                // 000000067354: D6560004 041D0204
	s_waitcnt lgkmcnt(0)                                       // 00000006735C: BF89FC07
	v_add_nc_u32_e32 v8, s5, v1                                // 000000067360: 4A100205
	v_add_co_u32 v0, s2, s8, v0                                // 000000067364: D7000200 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006736C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000067374: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006737C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000067380: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000067388: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067390: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000067398: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000673A0: BF870004
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000673A4: D73C0002 00020482
	v_add_nc_u32_e32 v6, s5, v6                                // 0000000673AC: 4A0C0C05
	v_add_nc_u32_e32 v7, s5, v7                                // 0000000673B0: 4A0E0E05
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000673B4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000673BC: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000673C4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000673C8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000673D0: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000673D4: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000673D8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000673E0: 400A0A01
	s_clause 0x2                                               // 0000000673E4: BF850002
	global_store_b32 v[0:1], v8, off                           // 0000000673E8: DC6A0000 007C0800
	global_store_b32 v[2:3], v6, off                           // 0000000673F0: DC6A0000 007C0602
	global_store_b32 v[4:5], v7, off                           // 0000000673F8: DC6A0000 007C0704
	s_nop 0                                                    // 000000067400: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067404: BFB60003
	s_endpgm                                                   // 000000067408: BFB00000
add_get_local_id_x_symend:
	.long 0xbf800000                                           // 00000006740C: BF800000
	.long 0xbf800000                                           // 000000067410: BF800000
	.long 0xbf800000                                           // 000000067414: BF800000
	.long 0xbf800000                                           // 000000067418: BF800000
	.long 0xbf800000                                           // 00000006741C: BF800000
	.long 0xbf800000                                           // 000000067420: BF800000
	.long 0xbf800000                                           // 000000067424: BF800000
	.long 0xbf800000                                           // 000000067428: BF800000
	.long 0xbf800000                                           // 00000006742C: BF800000
	.long 0xbf800000                                           // 000000067430: BF800000
	.long 0xbf800000                                           // 000000067434: BF800000
	.long 0xbf800000                                           // 000000067438: BF800000
	.long 0xbf800000                                           // 00000006743C: BF800000
	.long 0xbf800000                                           // 000000067440: BF800000
	.long 0xbf800000                                           // 000000067444: BF800000
	.long 0xbf800000                                           // 000000067448: BF800000
	.long 0xbf800000                                           // 00000006744C: BF800000
	.long 0xbf800000                                           // 000000067450: BF800000
	.long 0xbf800000                                           // 000000067454: BF800000
	.long 0xbf800000                                           // 000000067458: BF800000
	.long 0xbf800000                                           // 00000006745C: BF800000
	.long 0xbf800000                                           // 000000067460: BF800000
	.long 0xbf800000                                           // 000000067464: BF800000
	.long 0xbf800000                                           // 000000067468: BF800000
	.long 0xbf800000                                           // 00000006746C: BF800000
	.long 0xbf800000                                           // 000000067470: BF800000
	.long 0xbf800000                                           // 000000067474: BF800000
	.long 0xbf800000                                           // 000000067478: BF800000
	.long 0xbf800000                                           // 00000006747C: BF800000
	.long 0xbf800000                                           // 000000067480: BF800000
	.long 0xbf800000                                           // 000000067484: BF800000
	.long 0xbf800000                                           // 000000067488: BF800000
	.long 0xbf800000                                           // 00000006748C: BF800000
	.long 0xbf800000                                           // 000000067490: BF800000
	.long 0xbf800000                                           // 000000067494: BF800000
	.long 0xbf800000                                           // 000000067498: BF800000
	.long 0xbf800000                                           // 00000006749C: BF800000
	.long 0xbf800000                                           // 0000000674A0: BF800000
	.long 0xbf800000                                           // 0000000674A4: BF800000
	.long 0xbf800000                                           // 0000000674A8: BF800000
	.long 0xbf800000                                           // 0000000674AC: BF800000
	.long 0xbf800000                                           // 0000000674B0: BF800000
	.long 0xbf800000                                           // 0000000674B4: BF800000
	.long 0xbf800000                                           // 0000000674B8: BF800000
	.long 0xbf800000                                           // 0000000674BC: BF800000
	.long 0xbf800000                                           // 0000000674C0: BF800000
	.long 0xbf800000                                           // 0000000674C4: BF800000
	.long 0xbf800000                                           // 0000000674C8: BF800000
	.long 0xbf800000                                           // 0000000674CC: BF800000
	.long 0xbf800000                                           // 0000000674D0: BF800000
	.long 0xbf800000                                           // 0000000674D4: BF800000
	.long 0xbf800000                                           // 0000000674D8: BF800000
	.long 0xbf800000                                           // 0000000674DC: BF800000
	.long 0xbf800000                                           // 0000000674E0: BF800000
	.long 0xbf800000                                           // 0000000674E4: BF800000
	.long 0xbf800000                                           // 0000000674E8: BF800000
	.long 0xbf800000                                           // 0000000674EC: BF800000
	.long 0xbf800000                                           // 0000000674F0: BF800000
	.long 0xbf800000                                           // 0000000674F4: BF800000
	.long 0xbf800000                                           // 0000000674F8: BF800000
	.long 0xbf800000                                           // 0000000674FC: BF800000

	.p2align	8
	.type	add_get_group_id_x,@function
	.size	add_get_group_id_x, add_get_group_id_x_symend-add_get_group_id_x
add_get_group_id_x:
	s_clause 0x2                                               // 000000067500: BF850002
	s_load_b32 s5, s[0:1], null                                // 000000067504: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006750C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000067514: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006751C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000067524: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006752C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067534: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006753C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000067540: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000067548: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 000000067550: BF870003
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000067554: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006755C: BF89FC07
	s_add_i32 s2, s2, s5                                       // 000000067560: 81020502
	v_add_co_u32 v0, s8, s8, v1                                // 000000067564: D7000800 00020208
	v_mov_b32_e32 v6, s2                                       // 00000006756C: 7E0C0202
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 000000067570: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 000000067578: D7000802 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000067580: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 000000067584: D5207C03 0021000B
	v_add_co_u32 v4, s6, s6, v4                                // 00000006758C: D7000604 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067594: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s6                    // 00000006759C: D5207C05 00190007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000675A4: BF8701A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000675A8: D73C0002 00020482
	s_add_i32 s2, s3, s5                                       // 0000000675B0: 81020503
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000675B4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000675BC: BF870223
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000675C0: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000675C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000675CC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000675D4: 40060601
	v_mov_b32_e32 v7, s2                                       // 0000000675D8: 7E0E0202
	s_add_i32 s2, s4, s5                                       // 0000000675DC: 81020504
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000675E0: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 0000000675E8: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000675EC: 400A0A01
	s_clause 0x2                                               // 0000000675F0: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000675F4: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 0000000675FC: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 000000067604: DC6A0000 007C0804
	s_nop 0                                                    // 00000006760C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067610: BFB60003
	s_endpgm                                                   // 000000067614: BFB00000
add_get_group_id_x_symend:
	.long 0xbf800000                                           // 000000067618: BF800000
	.long 0xbf800000                                           // 00000006761C: BF800000
	.long 0xbf800000                                           // 000000067620: BF800000
	.long 0xbf800000                                           // 000000067624: BF800000
	.long 0xbf800000                                           // 000000067628: BF800000
	.long 0xbf800000                                           // 00000006762C: BF800000
	.long 0xbf800000                                           // 000000067630: BF800000
	.long 0xbf800000                                           // 000000067634: BF800000
	.long 0xbf800000                                           // 000000067638: BF800000
	.long 0xbf800000                                           // 00000006763C: BF800000
	.long 0xbf800000                                           // 000000067640: BF800000
	.long 0xbf800000                                           // 000000067644: BF800000
	.long 0xbf800000                                           // 000000067648: BF800000
	.long 0xbf800000                                           // 00000006764C: BF800000
	.long 0xbf800000                                           // 000000067650: BF800000
	.long 0xbf800000                                           // 000000067654: BF800000
	.long 0xbf800000                                           // 000000067658: BF800000
	.long 0xbf800000                                           // 00000006765C: BF800000
	.long 0xbf800000                                           // 000000067660: BF800000
	.long 0xbf800000                                           // 000000067664: BF800000
	.long 0xbf800000                                           // 000000067668: BF800000
	.long 0xbf800000                                           // 00000006766C: BF800000
	.long 0xbf800000                                           // 000000067670: BF800000
	.long 0xbf800000                                           // 000000067674: BF800000
	.long 0xbf800000                                           // 000000067678: BF800000
	.long 0xbf800000                                           // 00000006767C: BF800000
	.long 0xbf800000                                           // 000000067680: BF800000
	.long 0xbf800000                                           // 000000067684: BF800000
	.long 0xbf800000                                           // 000000067688: BF800000
	.long 0xbf800000                                           // 00000006768C: BF800000
	.long 0xbf800000                                           // 000000067690: BF800000
	.long 0xbf800000                                           // 000000067694: BF800000
	.long 0xbf800000                                           // 000000067698: BF800000
	.long 0xbf800000                                           // 00000006769C: BF800000
	.long 0xbf800000                                           // 0000000676A0: BF800000
	.long 0xbf800000                                           // 0000000676A4: BF800000
	.long 0xbf800000                                           // 0000000676A8: BF800000
	.long 0xbf800000                                           // 0000000676AC: BF800000
	.long 0xbf800000                                           // 0000000676B0: BF800000
	.long 0xbf800000                                           // 0000000676B4: BF800000
	.long 0xbf800000                                           // 0000000676B8: BF800000
	.long 0xbf800000                                           // 0000000676BC: BF800000
	.long 0xbf800000                                           // 0000000676C0: BF800000
	.long 0xbf800000                                           // 0000000676C4: BF800000
	.long 0xbf800000                                           // 0000000676C8: BF800000
	.long 0xbf800000                                           // 0000000676CC: BF800000
	.long 0xbf800000                                           // 0000000676D0: BF800000
	.long 0xbf800000                                           // 0000000676D4: BF800000
	.long 0xbf800000                                           // 0000000676D8: BF800000
	.long 0xbf800000                                           // 0000000676DC: BF800000
	.long 0xbf800000                                           // 0000000676E0: BF800000
	.long 0xbf800000                                           // 0000000676E4: BF800000
	.long 0xbf800000                                           // 0000000676E8: BF800000
	.long 0xbf800000                                           // 0000000676EC: BF800000
	.long 0xbf800000                                           // 0000000676F0: BF800000
	.long 0xbf800000                                           // 0000000676F4: BF800000
	.long 0xbf800000                                           // 0000000676F8: BF800000
	.long 0xbf800000                                           // 0000000676FC: BF800000

	.p2align	8
	.type	add_get_local_size_x,@function
	.size	add_get_local_size_x, add_get_local_size_x_symend-add_get_local_size_x
add_get_local_size_x:
	s_clause 0x2                                               // 000000067700: BF850002
	s_load_b32 s5, s[0:1], null                                // 000000067704: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006770C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000067714: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006771C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000067724: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006772C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067734: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006773C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000067740: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000067748: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 000000067750: BF870003
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000067754: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006775C: BF89FC07
	s_add_i32 s2, s5, 2                                        // 000000067760: 81028205
	v_add_co_u32 v0, s3, s8, v1                                // 000000067764: D7000300 00020208
	v_mov_b32_e32 v6, s2                                       // 00000006776C: 7E0C0202
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000067770: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000067778: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000067780: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000067784: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006778C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067794: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006779C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000677A4: BF8701A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000677A8: D73C0002 00020482
	s_add_i32 s2, s5, 4                                        // 0000000677B0: 81028405
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000677B4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000677BC: BF870223
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000677C0: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000677C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000677CC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000677D4: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000677D8: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000677DC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000677E4: 400A0A01
	v_mov_b32_e32 v7, s2                                       // 0000000677E8: 7E0E0202
	s_clause 0x2                                               // 0000000677EC: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000677F0: DC6A0000 007C0600
	global_store_b32 v[2:3], v6, off                           // 0000000677F8: DC6A0000 007C0602
	global_store_b32 v[4:5], v7, off                           // 000000067800: DC6A0000 007C0704
	s_nop 0                                                    // 000000067808: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006780C: BFB60003
	s_endpgm                                                   // 000000067810: BFB00000
add_get_local_size_x_symend:
	.long 0xbf800000                                           // 000000067814: BF800000
	.long 0xbf800000                                           // 000000067818: BF800000
	.long 0xbf800000                                           // 00000006781C: BF800000
	.long 0xbf800000                                           // 000000067820: BF800000
	.long 0xbf800000                                           // 000000067824: BF800000
	.long 0xbf800000                                           // 000000067828: BF800000
	.long 0xbf800000                                           // 00000006782C: BF800000
	.long 0xbf800000                                           // 000000067830: BF800000
	.long 0xbf800000                                           // 000000067834: BF800000
	.long 0xbf800000                                           // 000000067838: BF800000
	.long 0xbf800000                                           // 00000006783C: BF800000
	.long 0xbf800000                                           // 000000067840: BF800000
	.long 0xbf800000                                           // 000000067844: BF800000
	.long 0xbf800000                                           // 000000067848: BF800000
	.long 0xbf800000                                           // 00000006784C: BF800000
	.long 0xbf800000                                           // 000000067850: BF800000
	.long 0xbf800000                                           // 000000067854: BF800000
	.long 0xbf800000                                           // 000000067858: BF800000
	.long 0xbf800000                                           // 00000006785C: BF800000
	.long 0xbf800000                                           // 000000067860: BF800000
	.long 0xbf800000                                           // 000000067864: BF800000
	.long 0xbf800000                                           // 000000067868: BF800000
	.long 0xbf800000                                           // 00000006786C: BF800000
	.long 0xbf800000                                           // 000000067870: BF800000
	.long 0xbf800000                                           // 000000067874: BF800000
	.long 0xbf800000                                           // 000000067878: BF800000
	.long 0xbf800000                                           // 00000006787C: BF800000
	.long 0xbf800000                                           // 000000067880: BF800000
	.long 0xbf800000                                           // 000000067884: BF800000
	.long 0xbf800000                                           // 000000067888: BF800000
	.long 0xbf800000                                           // 00000006788C: BF800000
	.long 0xbf800000                                           // 000000067890: BF800000
	.long 0xbf800000                                           // 000000067894: BF800000
	.long 0xbf800000                                           // 000000067898: BF800000
	.long 0xbf800000                                           // 00000006789C: BF800000
	.long 0xbf800000                                           // 0000000678A0: BF800000
	.long 0xbf800000                                           // 0000000678A4: BF800000
	.long 0xbf800000                                           // 0000000678A8: BF800000
	.long 0xbf800000                                           // 0000000678AC: BF800000
	.long 0xbf800000                                           // 0000000678B0: BF800000
	.long 0xbf800000                                           // 0000000678B4: BF800000
	.long 0xbf800000                                           // 0000000678B8: BF800000
	.long 0xbf800000                                           // 0000000678BC: BF800000
	.long 0xbf800000                                           // 0000000678C0: BF800000
	.long 0xbf800000                                           // 0000000678C4: BF800000
	.long 0xbf800000                                           // 0000000678C8: BF800000
	.long 0xbf800000                                           // 0000000678CC: BF800000
	.long 0xbf800000                                           // 0000000678D0: BF800000
	.long 0xbf800000                                           // 0000000678D4: BF800000
	.long 0xbf800000                                           // 0000000678D8: BF800000
	.long 0xbf800000                                           // 0000000678DC: BF800000
	.long 0xbf800000                                           // 0000000678E0: BF800000
	.long 0xbf800000                                           // 0000000678E4: BF800000
	.long 0xbf800000                                           // 0000000678E8: BF800000
	.long 0xbf800000                                           // 0000000678EC: BF800000
	.long 0xbf800000                                           // 0000000678F0: BF800000
	.long 0xbf800000                                           // 0000000678F4: BF800000
	.long 0xbf800000                                           // 0000000678F8: BF800000
	.long 0xbf800000                                           // 0000000678FC: BF800000

	.p2align	8
	.type	add_get_global_id_x,@function
	.size	add_get_global_id_x, add_get_global_id_x_symend-add_get_global_id_x
add_get_global_id_x:
	s_clause 0x3                                               // 000000067900: BF850003
	s_load_b32 s5, s[0:1], null                                // 000000067904: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006790C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000067914: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006791C: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 000000067924: D6100003 02291500
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006792C: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 000000067938: D6100004 02292900
	s_mov_b32 s33, 0                                           // 000000067940: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000067944: BF870193
	v_lshl_or_b32 v3, s3, 1, v3                                // 000000067948: D6560003 040D0203
	v_lshl_or_b32 v0, s2, 1, v2                                // 000000067950: D6560000 04090202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000067958: BF870113
	v_lshl_or_b32 v5, s4, 2, v4                                // 00000006795C: D6560005 04110404
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000067964: D73C0001 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006796C: BF89FC07
	v_add_co_u32 v3, s2, s10, v3                               // 000000067970: D7000203 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000067978: BF8700A1
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 00000006797C: D5207C04 0009000B
	v_add_co_u32 v5, s2, s6, v5                                // 000000067984: D7000205 00020A06
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 00000006798C: D5207C06 00090007
	s_delay_alu instid0(VALU_DEP_3)                            // 000000067994: BF870003
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 000000067998: D73C0007 00020682
	v_add3_u32 v9, s5, s8, v0                                  // 0000000679A0: D6550009 04001005
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 0000000679A8: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 0000000679B0: 40020401
	v_add_nc_u32_e32 v4, s5, v3                                // 0000000679B4: 4A080605
	v_lshlrev_b64 v[2:3], 2, v[5:6]                            // 0000000679B8: D73C0002 00020A82
	v_add_co_u32 v6, vcc_lo, s0, v7                            // 0000000679C0: D7006A06 00020E00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v8, vcc_lo             // 0000000679C8: 400E1001
	v_add_nc_u32_e32 v5, s5, v5                                // 0000000679CC: 4A0A0A05
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000679D0: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000679D4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000679DC: 40060601
	s_clause 0x2                                               // 0000000679E0: BF850002
	global_store_b32 v[0:1], v9, off                           // 0000000679E4: DC6A0000 007C0900
	global_store_b32 v[6:7], v4, off                           // 0000000679EC: DC6A0000 007C0406
	global_store_b32 v[2:3], v5, off                           // 0000000679F4: DC6A0000 007C0502
	s_nop 0                                                    // 0000000679FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067A00: BFB60003
	s_endpgm                                                   // 000000067A04: BFB00000
add_get_global_id_x_symend:
	.long 0xbf800000                                           // 000000067A08: BF800000
	.long 0xbf800000                                           // 000000067A0C: BF800000
	.long 0xbf800000                                           // 000000067A10: BF800000
	.long 0xbf800000                                           // 000000067A14: BF800000
	.long 0xbf800000                                           // 000000067A18: BF800000
	.long 0xbf800000                                           // 000000067A1C: BF800000
	.long 0xbf800000                                           // 000000067A20: BF800000
	.long 0xbf800000                                           // 000000067A24: BF800000
	.long 0xbf800000                                           // 000000067A28: BF800000
	.long 0xbf800000                                           // 000000067A2C: BF800000
	.long 0xbf800000                                           // 000000067A30: BF800000
	.long 0xbf800000                                           // 000000067A34: BF800000
	.long 0xbf800000                                           // 000000067A38: BF800000
	.long 0xbf800000                                           // 000000067A3C: BF800000
	.long 0xbf800000                                           // 000000067A40: BF800000
	.long 0xbf800000                                           // 000000067A44: BF800000
	.long 0xbf800000                                           // 000000067A48: BF800000
	.long 0xbf800000                                           // 000000067A4C: BF800000
	.long 0xbf800000                                           // 000000067A50: BF800000
	.long 0xbf800000                                           // 000000067A54: BF800000
	.long 0xbf800000                                           // 000000067A58: BF800000
	.long 0xbf800000                                           // 000000067A5C: BF800000
	.long 0xbf800000                                           // 000000067A60: BF800000
	.long 0xbf800000                                           // 000000067A64: BF800000
	.long 0xbf800000                                           // 000000067A68: BF800000
	.long 0xbf800000                                           // 000000067A6C: BF800000
	.long 0xbf800000                                           // 000000067A70: BF800000
	.long 0xbf800000                                           // 000000067A74: BF800000
	.long 0xbf800000                                           // 000000067A78: BF800000
	.long 0xbf800000                                           // 000000067A7C: BF800000
	.long 0xbf800000                                           // 000000067A80: BF800000
	.long 0xbf800000                                           // 000000067A84: BF800000
	.long 0xbf800000                                           // 000000067A88: BF800000
	.long 0xbf800000                                           // 000000067A8C: BF800000
	.long 0xbf800000                                           // 000000067A90: BF800000
	.long 0xbf800000                                           // 000000067A94: BF800000
	.long 0xbf800000                                           // 000000067A98: BF800000
	.long 0xbf800000                                           // 000000067A9C: BF800000
	.long 0xbf800000                                           // 000000067AA0: BF800000
	.long 0xbf800000                                           // 000000067AA4: BF800000
	.long 0xbf800000                                           // 000000067AA8: BF800000
	.long 0xbf800000                                           // 000000067AAC: BF800000
	.long 0xbf800000                                           // 000000067AB0: BF800000
	.long 0xbf800000                                           // 000000067AB4: BF800000
	.long 0xbf800000                                           // 000000067AB8: BF800000
	.long 0xbf800000                                           // 000000067ABC: BF800000
	.long 0xbf800000                                           // 000000067AC0: BF800000
	.long 0xbf800000                                           // 000000067AC4: BF800000
	.long 0xbf800000                                           // 000000067AC8: BF800000
	.long 0xbf800000                                           // 000000067ACC: BF800000
	.long 0xbf800000                                           // 000000067AD0: BF800000
	.long 0xbf800000                                           // 000000067AD4: BF800000
	.long 0xbf800000                                           // 000000067AD8: BF800000
	.long 0xbf800000                                           // 000000067ADC: BF800000
	.long 0xbf800000                                           // 000000067AE0: BF800000
	.long 0xbf800000                                           // 000000067AE4: BF800000
	.long 0xbf800000                                           // 000000067AE8: BF800000
	.long 0xbf800000                                           // 000000067AEC: BF800000
	.long 0xbf800000                                           // 000000067AF0: BF800000
	.long 0xbf800000                                           // 000000067AF4: BF800000
	.long 0xbf800000                                           // 000000067AF8: BF800000
	.long 0xbf800000                                           // 000000067AFC: BF800000

	.p2align	8
	.type	add_get_global_size_x,@function
	.size	add_get_global_size_x, add_get_global_size_x_symend-add_get_global_size_x
add_get_global_size_x:
	v_mov_b32_e32 v1, 0                                        // 000000067B00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000067B04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000067B0C: BEA10080
	s_clause 0x1                                               // 000000067B10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000067B14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000067B1C: DC4A0026 07000001
	s_clause 0x3                                               // 000000067B24: BF850003
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000067B28: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067B30: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000067B38: F4000140 F8000018
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000067B40: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000067B48: 360200FF 000003FF
	s_clause 0x1                                               // 000000067B50: BF850001
	s_load_b32 s14, s[0:1], 0x8                                // 000000067B54: F4000380 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 000000067B5C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067B64: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000067B6C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000067B74: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000067B7C: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000067B80: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000067B88: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 000000067B8C: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 000000067B90: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000067B98: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000067B9C: D5207C01 000D0009
	v_add_co_u32 v2, s4, s10, v2                               // 000000067BA4: D7000402 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s4                   // 000000067BAC: D5207C03 0011000B
	s_lshl_b32 s4, s5, 1                                       // 000000067BB4: 84048105
	v_add_co_u32 v4, s5, s12, v4                               // 000000067BB8: D7000504 0002080C
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067BC0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s5                   // 000000067BC8: D5207C05 0015000D
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000067BD0: D73C0002 00020482
	s_lshl_b32 s3, s7, 1                                       // 000000067BD8: 84038107
	s_add_i32 s2, s2, s14                                      // 000000067BDC: 81020E02
	s_delay_alu instid0(VALU_DEP_2)                            // 000000067BE0: BF870002
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000067BE4: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000067BEC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067BF4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000067BF8: D7006A02 00020400
	s_add_i32 s3, s3, s14                                      // 000000067C00: 81030E03
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000067C04: 40060601
	s_add_i32 s4, s4, s14                                      // 000000067C08: 81040E04
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000067C0C: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000067C14: 400A0A01
	s_waitcnt vmcnt(1)                                         // 000000067C18: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 000000067C1C: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 000000067C20: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000067C28: BF8903F7
	v_add_nc_u32_e32 v7, s4, v7                                // 000000067C2C: 4A0E0E04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000067C30: BF870193
	v_add_nc_u32_e32 v8, s3, v8                                // 000000067C34: 4A101003
	v_add_nc_u32_e32 v6, s2, v6                                // 000000067C38: 4A0C0C02
	s_clause 0x2                                               // 000000067C3C: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000067C40: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 000000067C48: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 000000067C50: DC6A0000 007C0704
	s_nop 0                                                    // 000000067C58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067C5C: BFB60003
	s_endpgm                                                   // 000000067C60: BFB00000
add_get_global_size_x_symend:
	.long 0xbf800000                                           // 000000067C64: BF800000
	.long 0xbf800000                                           // 000000067C68: BF800000
	.long 0xbf800000                                           // 000000067C6C: BF800000
	.long 0xbf800000                                           // 000000067C70: BF800000
	.long 0xbf800000                                           // 000000067C74: BF800000
	.long 0xbf800000                                           // 000000067C78: BF800000
	.long 0xbf800000                                           // 000000067C7C: BF800000
	.long 0xbf800000                                           // 000000067C80: BF800000
	.long 0xbf800000                                           // 000000067C84: BF800000
	.long 0xbf800000                                           // 000000067C88: BF800000
	.long 0xbf800000                                           // 000000067C8C: BF800000
	.long 0xbf800000                                           // 000000067C90: BF800000
	.long 0xbf800000                                           // 000000067C94: BF800000
	.long 0xbf800000                                           // 000000067C98: BF800000
	.long 0xbf800000                                           // 000000067C9C: BF800000
	.long 0xbf800000                                           // 000000067CA0: BF800000
	.long 0xbf800000                                           // 000000067CA4: BF800000
	.long 0xbf800000                                           // 000000067CA8: BF800000
	.long 0xbf800000                                           // 000000067CAC: BF800000
	.long 0xbf800000                                           // 000000067CB0: BF800000
	.long 0xbf800000                                           // 000000067CB4: BF800000
	.long 0xbf800000                                           // 000000067CB8: BF800000
	.long 0xbf800000                                           // 000000067CBC: BF800000
	.long 0xbf800000                                           // 000000067CC0: BF800000
	.long 0xbf800000                                           // 000000067CC4: BF800000
	.long 0xbf800000                                           // 000000067CC8: BF800000
	.long 0xbf800000                                           // 000000067CCC: BF800000
	.long 0xbf800000                                           // 000000067CD0: BF800000
	.long 0xbf800000                                           // 000000067CD4: BF800000
	.long 0xbf800000                                           // 000000067CD8: BF800000
	.long 0xbf800000                                           // 000000067CDC: BF800000
	.long 0xbf800000                                           // 000000067CE0: BF800000
	.long 0xbf800000                                           // 000000067CE4: BF800000
	.long 0xbf800000                                           // 000000067CE8: BF800000
	.long 0xbf800000                                           // 000000067CEC: BF800000
	.long 0xbf800000                                           // 000000067CF0: BF800000
	.long 0xbf800000                                           // 000000067CF4: BF800000
	.long 0xbf800000                                           // 000000067CF8: BF800000
	.long 0xbf800000                                           // 000000067CFC: BF800000

	.p2align	8
	.type	add_get_num_groups_x,@function
	.size	add_get_num_groups_x, add_get_num_groups_x_symend-add_get_num_groups_x
add_get_num_groups_x:
	v_mov_b32_e32 v1, 0                                        // 000000067D00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000067D04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000067D0C: BEA10080
	s_clause 0x1                                               // 000000067D10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000067D14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000067D1C: DC4A0026 07000001
	s_clause 0x1                                               // 000000067D24: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067D28: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000067D30: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000067D38: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067D40: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000067D48: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 000000067D50: BF870003
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000067D54: D6560001 04050202
	s_clause 0x1                                               // 000000067D5C: BF850001
	s_load_b32 s2, s[0:1], null                                // 000000067D60: F4000080 F8000000
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000067D68: F4080300 F8000008
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000067D70: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000067D78: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 000000067D7C: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000067D84: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000067D88: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000067D90: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000067D98: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 000000067DA0: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000067DA8: BF8701C4
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067DAC: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000067DB4: D5207C05 000D0007
	s_load_b32 s3, s[0:1], 0x18                                // 000000067DBC: F40000C0 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000067DC4: D73C0002 00020482
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 000000067DCC: D7006A00 0002000C
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000067DD4: BF870194
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 000000067DD8: 4002020D
	v_add_co_u32 v2, s1, s12, v2                               // 000000067DDC: D7000102 0002040C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000067DE4: BF870151
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 000000067DE8: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000067DF0: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 000000067DF8: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 000000067DFC: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000067E00: 7C7A0C80
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000067E04: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000067E0C: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000067E10: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000067E14: 7C7A0E80
	s_addc_u32 s1, s14, s2                                     // 000000067E18: 8201020E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000067E1C: BF870009
	v_mov_b32_e32 v6, s1                                       // 000000067E20: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 000000067E24: BF078000
	s_addc_u32 s0, s15, s2                                     // 000000067E28: 8200020F
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000067E2C: BF07806A
	v_mov_b32_e32 v7, s0                                       // 000000067E30: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 000000067E34: BF89FC07
	s_addc_u32 s0, s3, s2                                      // 000000067E38: 82000203
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000067E3C: D7006A04 0002080C
	v_mov_b32_e32 v8, s0                                       // 000000067E44: 7E100200
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000067E48: 400A0A0D
	s_clause 0x2                                               // 000000067E4C: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000067E50: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 000000067E58: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 000000067E60: DC6A0000 007C0804
	s_nop 0                                                    // 000000067E68: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067E6C: BFB60003
	s_endpgm                                                   // 000000067E70: BFB00000
add_get_num_groups_x_symend:
	.long 0xbf800000                                           // 000000067E74: BF800000
	.long 0xbf800000                                           // 000000067E78: BF800000
	.long 0xbf800000                                           // 000000067E7C: BF800000
	.long 0xbf800000                                           // 000000067E80: BF800000
	.long 0xbf800000                                           // 000000067E84: BF800000
	.long 0xbf800000                                           // 000000067E88: BF800000
	.long 0xbf800000                                           // 000000067E8C: BF800000
	.long 0xbf800000                                           // 000000067E90: BF800000
	.long 0xbf800000                                           // 000000067E94: BF800000
	.long 0xbf800000                                           // 000000067E98: BF800000
	.long 0xbf800000                                           // 000000067E9C: BF800000
	.long 0xbf800000                                           // 000000067EA0: BF800000
	.long 0xbf800000                                           // 000000067EA4: BF800000
	.long 0xbf800000                                           // 000000067EA8: BF800000
	.long 0xbf800000                                           // 000000067EAC: BF800000
	.long 0xbf800000                                           // 000000067EB0: BF800000
	.long 0xbf800000                                           // 000000067EB4: BF800000
	.long 0xbf800000                                           // 000000067EB8: BF800000
	.long 0xbf800000                                           // 000000067EBC: BF800000
	.long 0xbf800000                                           // 000000067EC0: BF800000
	.long 0xbf800000                                           // 000000067EC4: BF800000
	.long 0xbf800000                                           // 000000067EC8: BF800000
	.long 0xbf800000                                           // 000000067ECC: BF800000
	.long 0xbf800000                                           // 000000067ED0: BF800000
	.long 0xbf800000                                           // 000000067ED4: BF800000
	.long 0xbf800000                                           // 000000067ED8: BF800000
	.long 0xbf800000                                           // 000000067EDC: BF800000
	.long 0xbf800000                                           // 000000067EE0: BF800000
	.long 0xbf800000                                           // 000000067EE4: BF800000
	.long 0xbf800000                                           // 000000067EE8: BF800000
	.long 0xbf800000                                           // 000000067EEC: BF800000
	.long 0xbf800000                                           // 000000067EF0: BF800000
	.long 0xbf800000                                           // 000000067EF4: BF800000
	.long 0xbf800000                                           // 000000067EF8: BF800000
	.long 0xbf800000                                           // 000000067EFC: BF800000

	.p2align	8
	.type	add_get_work_dim_x,@function
	.size	add_get_work_dim_x, add_get_work_dim_x_symend-add_get_work_dim_x
add_get_work_dim_x:
	s_clause 0x3                                               // 000000067F00: BF850003
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000067F04: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x50                                // 000000067F0C: F40000C0 F8000050
	s_load_b32 s6, s[0:1], null                                // 000000067F14: F4000180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000067F1C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 1, v0                                // 000000067F24: D6560000 04010202
	s_mov_b32 s33, 0                                           // 000000067F2C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067F30: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000067F34: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000067F38: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000067F40: D5207C01 00090005
	s_and_b32 s2, s3, 0xffff                                   // 000000067F48: 8B02FF03 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000067F50: BF870099
	s_add_i32 s2, s2, s6                                       // 000000067F54: 81020602
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067F58: D73C0000 00020082
	v_mov_b32_e32 v2, s2                                       // 000000067F60: 7E040202
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000067F64: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000067F68: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067F70: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000067F74: DC6A0000 007C0200
	s_nop 0                                                    // 000000067F7C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067F80: BFB60003
	s_endpgm                                                   // 000000067F84: BFB00000
add_get_work_dim_x_symend:
	.long 0xbf800000                                           // 000000067F88: BF800000
	.long 0xbf800000                                           // 000000067F8C: BF800000
	.long 0xbf800000                                           // 000000067F90: BF800000
	.long 0xbf800000                                           // 000000067F94: BF800000
	.long 0xbf800000                                           // 000000067F98: BF800000
	.long 0xbf800000                                           // 000000067F9C: BF800000
	.long 0xbf800000                                           // 000000067FA0: BF800000
	.long 0xbf800000                                           // 000000067FA4: BF800000
	.long 0xbf800000                                           // 000000067FA8: BF800000
	.long 0xbf800000                                           // 000000067FAC: BF800000
	.long 0xbf800000                                           // 000000067FB0: BF800000
	.long 0xbf800000                                           // 000000067FB4: BF800000
	.long 0xbf800000                                           // 000000067FB8: BF800000
	.long 0xbf800000                                           // 000000067FBC: BF800000
	.long 0xbf800000                                           // 000000067FC0: BF800000
	.long 0xbf800000                                           // 000000067FC4: BF800000
	.long 0xbf800000                                           // 000000067FC8: BF800000
	.long 0xbf800000                                           // 000000067FCC: BF800000
	.long 0xbf800000                                           // 000000067FD0: BF800000
	.long 0xbf800000                                           // 000000067FD4: BF800000
	.long 0xbf800000                                           // 000000067FD8: BF800000
	.long 0xbf800000                                           // 000000067FDC: BF800000
	.long 0xbf800000                                           // 000000067FE0: BF800000
	.long 0xbf800000                                           // 000000067FE4: BF800000
	.long 0xbf800000                                           // 000000067FE8: BF800000
	.long 0xbf800000                                           // 000000067FEC: BF800000
	.long 0xbf800000                                           // 000000067FF0: BF800000
	.long 0xbf800000                                           // 000000067FF4: BF800000
	.long 0xbf800000                                           // 000000067FF8: BF800000
	.long 0xbf800000                                           // 000000067FFC: BF800000

	.p2align	8
	.type	add_x_get_global_offset,@function
	.size	add_x_get_global_offset, add_x_get_global_offset_symend-add_x_get_global_offset
add_x_get_global_offset:
	s_clause 0x2                                               // 000000068000: BF850002
	s_load_b32 s5, s[0:1], 0x8                                 // 000000068004: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006800C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000068014: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006801C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000068024: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], null                            // 00000006802C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006803C: BEA10080
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000068040: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000068048: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000068050: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000068054: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006805C: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 000000068060: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000068068: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006806C: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000068074: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006807C: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 000000068084: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006808C: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000068090: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000068098: D5207C05 000D0007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000680A0: D73C0002 00020482
	s_add_i32 s2, s8, s5                                       // 0000000680A8: 81020508
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000680AC: BF870219
	v_mov_b32_e32 v6, s2                                       // 0000000680B0: 7E0C0202
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000680B4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000680BC: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000680C4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000680C8: D7006A02 00020400
	s_add_i32 s2, s10, s5                                      // 0000000680D0: 8102050A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000680D4: 40060601
	v_mov_b32_e32 v7, s2                                       // 0000000680D8: 7E0E0202
	s_add_i32 s2, s6, s5                                       // 0000000680DC: 81020506
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000680E0: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 0000000680E8: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000680EC: 400A0A01
	s_clause 0x2                                               // 0000000680F0: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000680F4: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 0000000680FC: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 000000068104: DC6A0000 007C0804
	s_nop 0                                                    // 00000006810C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068110: BFB60003
	s_endpgm                                                   // 000000068114: BFB00000
add_x_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068118: BF800000
	.long 0xbf800000                                           // 00000006811C: BF800000
	.long 0xbf800000                                           // 000000068120: BF800000
	.long 0xbf800000                                           // 000000068124: BF800000
	.long 0xbf800000                                           // 000000068128: BF800000
	.long 0xbf800000                                           // 00000006812C: BF800000
	.long 0xbf800000                                           // 000000068130: BF800000
	.long 0xbf800000                                           // 000000068134: BF800000
	.long 0xbf800000                                           // 000000068138: BF800000
	.long 0xbf800000                                           // 00000006813C: BF800000
	.long 0xbf800000                                           // 000000068140: BF800000
	.long 0xbf800000                                           // 000000068144: BF800000
	.long 0xbf800000                                           // 000000068148: BF800000
	.long 0xbf800000                                           // 00000006814C: BF800000
	.long 0xbf800000                                           // 000000068150: BF800000
	.long 0xbf800000                                           // 000000068154: BF800000
	.long 0xbf800000                                           // 000000068158: BF800000
	.long 0xbf800000                                           // 00000006815C: BF800000
	.long 0xbf800000                                           // 000000068160: BF800000
	.long 0xbf800000                                           // 000000068164: BF800000
	.long 0xbf800000                                           // 000000068168: BF800000
	.long 0xbf800000                                           // 00000006816C: BF800000
	.long 0xbf800000                                           // 000000068170: BF800000
	.long 0xbf800000                                           // 000000068174: BF800000
	.long 0xbf800000                                           // 000000068178: BF800000
	.long 0xbf800000                                           // 00000006817C: BF800000
	.long 0xbf800000                                           // 000000068180: BF800000
	.long 0xbf800000                                           // 000000068184: BF800000
	.long 0xbf800000                                           // 000000068188: BF800000
	.long 0xbf800000                                           // 00000006818C: BF800000
	.long 0xbf800000                                           // 000000068190: BF800000
	.long 0xbf800000                                           // 000000068194: BF800000
	.long 0xbf800000                                           // 000000068198: BF800000
	.long 0xbf800000                                           // 00000006819C: BF800000
	.long 0xbf800000                                           // 0000000681A0: BF800000
	.long 0xbf800000                                           // 0000000681A4: BF800000
	.long 0xbf800000                                           // 0000000681A8: BF800000
	.long 0xbf800000                                           // 0000000681AC: BF800000
	.long 0xbf800000                                           // 0000000681B0: BF800000
	.long 0xbf800000                                           // 0000000681B4: BF800000
	.long 0xbf800000                                           // 0000000681B8: BF800000
	.long 0xbf800000                                           // 0000000681BC: BF800000
	.long 0xbf800000                                           // 0000000681C0: BF800000
	.long 0xbf800000                                           // 0000000681C4: BF800000
	.long 0xbf800000                                           // 0000000681C8: BF800000
	.long 0xbf800000                                           // 0000000681CC: BF800000
	.long 0xbf800000                                           // 0000000681D0: BF800000
	.long 0xbf800000                                           // 0000000681D4: BF800000
	.long 0xbf800000                                           // 0000000681D8: BF800000
	.long 0xbf800000                                           // 0000000681DC: BF800000
	.long 0xbf800000                                           // 0000000681E0: BF800000
	.long 0xbf800000                                           // 0000000681E4: BF800000
	.long 0xbf800000                                           // 0000000681E8: BF800000
	.long 0xbf800000                                           // 0000000681EC: BF800000
	.long 0xbf800000                                           // 0000000681F0: BF800000
	.long 0xbf800000                                           // 0000000681F4: BF800000
	.long 0xbf800000                                           // 0000000681F8: BF800000
	.long 0xbf800000                                           // 0000000681FC: BF800000

	.p2align	8
	.type	add_get_global_offset_get_global_offset,@function
	.size	add_get_global_offset_get_global_offset, add_get_global_offset_get_global_offset_symend-add_get_global_offset_get_global_offset
add_get_global_offset_get_global_offset:
	s_clause 0x1                                               // 000000068200: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068204: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006820C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000068214: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006821C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068224: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006822C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068234: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000068238: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000068240: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000068248: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006824C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000068254: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 000000068258: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000068260: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000068264: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006826C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000068274: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006827C: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068284: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000068288: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000068290: D5207C05 000D0007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000068298: D73C0002 00020482
	s_lshl_b32 s2, s8, 1                                       // 0000000682A0: 84028108
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000682A4: BF870219
	v_mov_b32_e32 v6, s2                                       // 0000000682A8: 7E0C0202
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000682AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000682B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000682BC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000682C0: D7006A02 00020400
	s_lshl_b32 s2, s10, 1                                      // 0000000682C8: 8402810A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000682CC: 40060601
	v_mov_b32_e32 v7, s2                                       // 0000000682D0: 7E0E0202
	s_lshl_b32 s2, s6, 1                                       // 0000000682D4: 84028106
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000682D8: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 0000000682E0: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000682E4: 400A0A01
	s_clause 0x2                                               // 0000000682E8: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000682EC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 0000000682F4: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 0000000682FC: DC6A0000 007C0804
	s_nop 0                                                    // 000000068304: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068308: BFB60003
	s_endpgm                                                   // 00000006830C: BFB00000
add_get_global_offset_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068310: BF800000
	.long 0xbf800000                                           // 000000068314: BF800000
	.long 0xbf800000                                           // 000000068318: BF800000
	.long 0xbf800000                                           // 00000006831C: BF800000
	.long 0xbf800000                                           // 000000068320: BF800000
	.long 0xbf800000                                           // 000000068324: BF800000
	.long 0xbf800000                                           // 000000068328: BF800000
	.long 0xbf800000                                           // 00000006832C: BF800000
	.long 0xbf800000                                           // 000000068330: BF800000
	.long 0xbf800000                                           // 000000068334: BF800000
	.long 0xbf800000                                           // 000000068338: BF800000
	.long 0xbf800000                                           // 00000006833C: BF800000
	.long 0xbf800000                                           // 000000068340: BF800000
	.long 0xbf800000                                           // 000000068344: BF800000
	.long 0xbf800000                                           // 000000068348: BF800000
	.long 0xbf800000                                           // 00000006834C: BF800000
	.long 0xbf800000                                           // 000000068350: BF800000
	.long 0xbf800000                                           // 000000068354: BF800000
	.long 0xbf800000                                           // 000000068358: BF800000
	.long 0xbf800000                                           // 00000006835C: BF800000
	.long 0xbf800000                                           // 000000068360: BF800000
	.long 0xbf800000                                           // 000000068364: BF800000
	.long 0xbf800000                                           // 000000068368: BF800000
	.long 0xbf800000                                           // 00000006836C: BF800000
	.long 0xbf800000                                           // 000000068370: BF800000
	.long 0xbf800000                                           // 000000068374: BF800000
	.long 0xbf800000                                           // 000000068378: BF800000
	.long 0xbf800000                                           // 00000006837C: BF800000
	.long 0xbf800000                                           // 000000068380: BF800000
	.long 0xbf800000                                           // 000000068384: BF800000
	.long 0xbf800000                                           // 000000068388: BF800000
	.long 0xbf800000                                           // 00000006838C: BF800000
	.long 0xbf800000                                           // 000000068390: BF800000
	.long 0xbf800000                                           // 000000068394: BF800000
	.long 0xbf800000                                           // 000000068398: BF800000
	.long 0xbf800000                                           // 00000006839C: BF800000
	.long 0xbf800000                                           // 0000000683A0: BF800000
	.long 0xbf800000                                           // 0000000683A4: BF800000
	.long 0xbf800000                                           // 0000000683A8: BF800000
	.long 0xbf800000                                           // 0000000683AC: BF800000
	.long 0xbf800000                                           // 0000000683B0: BF800000
	.long 0xbf800000                                           // 0000000683B4: BF800000
	.long 0xbf800000                                           // 0000000683B8: BF800000
	.long 0xbf800000                                           // 0000000683BC: BF800000
	.long 0xbf800000                                           // 0000000683C0: BF800000
	.long 0xbf800000                                           // 0000000683C4: BF800000
	.long 0xbf800000                                           // 0000000683C8: BF800000
	.long 0xbf800000                                           // 0000000683CC: BF800000
	.long 0xbf800000                                           // 0000000683D0: BF800000
	.long 0xbf800000                                           // 0000000683D4: BF800000
	.long 0xbf800000                                           // 0000000683D8: BF800000
	.long 0xbf800000                                           // 0000000683DC: BF800000
	.long 0xbf800000                                           // 0000000683E0: BF800000
	.long 0xbf800000                                           // 0000000683E4: BF800000
	.long 0xbf800000                                           // 0000000683E8: BF800000
	.long 0xbf800000                                           // 0000000683EC: BF800000
	.long 0xbf800000                                           // 0000000683F0: BF800000
	.long 0xbf800000                                           // 0000000683F4: BF800000
	.long 0xbf800000                                           // 0000000683F8: BF800000
	.long 0xbf800000                                           // 0000000683FC: BF800000

	.p2align	8
	.type	add_get_local_id_get_global_offset,@function
	.size	add_get_local_id_get_global_offset, add_get_local_id_get_global_offset_symend-add_get_local_id_get_global_offset
add_get_local_id_get_global_offset:
	s_clause 0x1                                               // 000000068400: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068404: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006840C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000068414: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006841C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068424: F4040000 F8000008
	v_bfe_u32 v6, v0, 20, 10                                   // 00000006842C: D6100006 02292900
	s_mov_b32 s33, 0                                           // 000000068434: BEA10080
	v_lshl_or_b32 v0, s2, 3, v1                                // 000000068438: D6560000 04050602
	v_lshl_or_b32 v3, s3, 2, v2                                // 000000068440: D6560003 04090403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000068448: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v6                                // 00000006844C: D6560004 04190204
	s_waitcnt lgkmcnt(0)                                       // 000000068454: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000068458: D7000200 00020008
	v_add_nc_u32_e32 v7, s8, v1                                // 000000068460: 4A0E0208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000068464: D5207C01 00090009
	v_add_nc_u32_e32 v8, s10, v2                               // 00000006846C: 4A10040A
	v_add_co_u32 v2, s2, s10, v3                               // 000000068470: D7000202 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 000000068478: BF870241
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006847C: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000068484: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006848C: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000068494: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006849C: D73C0002 00020482
	v_add_nc_u32_e32 v6, s6, v6                                // 0000000684A4: 4A0C0C06
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000684A8: BF870214
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000684AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000684B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000684BC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000684C0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000684C8: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000684CC: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000684D0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000684D8: 400A0A01
	s_clause 0x2                                               // 0000000684DC: BF850002
	global_store_b32 v[0:1], v7, off                           // 0000000684E0: DC6A0000 007C0700
	global_store_b32 v[2:3], v8, off                           // 0000000684E8: DC6A0000 007C0802
	global_store_b32 v[4:5], v6, off                           // 0000000684F0: DC6A0000 007C0604
	s_nop 0                                                    // 0000000684F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000684FC: BFB60003
	s_endpgm                                                   // 000000068500: BFB00000
add_get_local_id_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068504: BF800000
	.long 0xbf800000                                           // 000000068508: BF800000
	.long 0xbf800000                                           // 00000006850C: BF800000
	.long 0xbf800000                                           // 000000068510: BF800000
	.long 0xbf800000                                           // 000000068514: BF800000
	.long 0xbf800000                                           // 000000068518: BF800000
	.long 0xbf800000                                           // 00000006851C: BF800000
	.long 0xbf800000                                           // 000000068520: BF800000
	.long 0xbf800000                                           // 000000068524: BF800000
	.long 0xbf800000                                           // 000000068528: BF800000
	.long 0xbf800000                                           // 00000006852C: BF800000
	.long 0xbf800000                                           // 000000068530: BF800000
	.long 0xbf800000                                           // 000000068534: BF800000
	.long 0xbf800000                                           // 000000068538: BF800000
	.long 0xbf800000                                           // 00000006853C: BF800000
	.long 0xbf800000                                           // 000000068540: BF800000
	.long 0xbf800000                                           // 000000068544: BF800000
	.long 0xbf800000                                           // 000000068548: BF800000
	.long 0xbf800000                                           // 00000006854C: BF800000
	.long 0xbf800000                                           // 000000068550: BF800000
	.long 0xbf800000                                           // 000000068554: BF800000
	.long 0xbf800000                                           // 000000068558: BF800000
	.long 0xbf800000                                           // 00000006855C: BF800000
	.long 0xbf800000                                           // 000000068560: BF800000
	.long 0xbf800000                                           // 000000068564: BF800000
	.long 0xbf800000                                           // 000000068568: BF800000
	.long 0xbf800000                                           // 00000006856C: BF800000
	.long 0xbf800000                                           // 000000068570: BF800000
	.long 0xbf800000                                           // 000000068574: BF800000
	.long 0xbf800000                                           // 000000068578: BF800000
	.long 0xbf800000                                           // 00000006857C: BF800000
	.long 0xbf800000                                           // 000000068580: BF800000
	.long 0xbf800000                                           // 000000068584: BF800000
	.long 0xbf800000                                           // 000000068588: BF800000
	.long 0xbf800000                                           // 00000006858C: BF800000
	.long 0xbf800000                                           // 000000068590: BF800000
	.long 0xbf800000                                           // 000000068594: BF800000
	.long 0xbf800000                                           // 000000068598: BF800000
	.long 0xbf800000                                           // 00000006859C: BF800000
	.long 0xbf800000                                           // 0000000685A0: BF800000
	.long 0xbf800000                                           // 0000000685A4: BF800000
	.long 0xbf800000                                           // 0000000685A8: BF800000
	.long 0xbf800000                                           // 0000000685AC: BF800000
	.long 0xbf800000                                           // 0000000685B0: BF800000
	.long 0xbf800000                                           // 0000000685B4: BF800000
	.long 0xbf800000                                           // 0000000685B8: BF800000
	.long 0xbf800000                                           // 0000000685BC: BF800000
	.long 0xbf800000                                           // 0000000685C0: BF800000
	.long 0xbf800000                                           // 0000000685C4: BF800000
	.long 0xbf800000                                           // 0000000685C8: BF800000
	.long 0xbf800000                                           // 0000000685CC: BF800000
	.long 0xbf800000                                           // 0000000685D0: BF800000
	.long 0xbf800000                                           // 0000000685D4: BF800000
	.long 0xbf800000                                           // 0000000685D8: BF800000
	.long 0xbf800000                                           // 0000000685DC: BF800000
	.long 0xbf800000                                           // 0000000685E0: BF800000
	.long 0xbf800000                                           // 0000000685E4: BF800000
	.long 0xbf800000                                           // 0000000685E8: BF800000
	.long 0xbf800000                                           // 0000000685EC: BF800000
	.long 0xbf800000                                           // 0000000685F0: BF800000
	.long 0xbf800000                                           // 0000000685F4: BF800000
	.long 0xbf800000                                           // 0000000685F8: BF800000
	.long 0xbf800000                                           // 0000000685FC: BF800000

	.p2align	8
	.type	add_get_group_id_get_global_offset,@function
	.size	add_get_group_id_get_global_offset, add_get_group_id_get_global_offset_symend-add_get_group_id_get_global_offset
add_get_group_id_get_global_offset:
	s_clause 0x1                                               // 000000068600: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068604: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006860C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000068614: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006861C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068624: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006862C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068634: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000068638: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000068640: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000068648: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006864C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000068654: BF89FC07
	v_add_co_u32 v0, s5, s8, v1                                // 000000068658: D7000500 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000068660: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 000000068664: D5207C01 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 00000006866C: D7000502 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s5                   // 000000068674: D5207C03 0015000B
	v_add_co_u32 v4, s5, s6, v4                                // 00000006867C: D7000504 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068684: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000068688: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s5                    // 000000068690: D5207C05 00150007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000068698: D73C0002 00020482
	s_add_i32 s2, s2, s8                                       // 0000000686A0: 81020802
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000686A4: BF870219
	v_mov_b32_e32 v6, s2                                       // 0000000686A8: 7E0C0202
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000686AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000686B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000686BC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000686C0: D7006A02 00020400
	s_add_i32 s2, s3, s10                                      // 0000000686C8: 81020A03
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000686CC: 40060601
	v_mov_b32_e32 v7, s2                                       // 0000000686D0: 7E0E0202
	s_add_i32 s2, s4, s6                                       // 0000000686D4: 81020604
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000686D8: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 0000000686E0: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000686E4: 400A0A01
	s_clause 0x2                                               // 0000000686E8: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000686EC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 0000000686F4: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 0000000686FC: DC6A0000 007C0804
	s_nop 0                                                    // 000000068704: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068708: BFB60003
	s_endpgm                                                   // 00000006870C: BFB00000
add_get_group_id_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068710: BF800000
	.long 0xbf800000                                           // 000000068714: BF800000
	.long 0xbf800000                                           // 000000068718: BF800000
	.long 0xbf800000                                           // 00000006871C: BF800000
	.long 0xbf800000                                           // 000000068720: BF800000
	.long 0xbf800000                                           // 000000068724: BF800000
	.long 0xbf800000                                           // 000000068728: BF800000
	.long 0xbf800000                                           // 00000006872C: BF800000
	.long 0xbf800000                                           // 000000068730: BF800000
	.long 0xbf800000                                           // 000000068734: BF800000
	.long 0xbf800000                                           // 000000068738: BF800000
	.long 0xbf800000                                           // 00000006873C: BF800000
	.long 0xbf800000                                           // 000000068740: BF800000
	.long 0xbf800000                                           // 000000068744: BF800000
	.long 0xbf800000                                           // 000000068748: BF800000
	.long 0xbf800000                                           // 00000006874C: BF800000
	.long 0xbf800000                                           // 000000068750: BF800000
	.long 0xbf800000                                           // 000000068754: BF800000
	.long 0xbf800000                                           // 000000068758: BF800000
	.long 0xbf800000                                           // 00000006875C: BF800000
	.long 0xbf800000                                           // 000000068760: BF800000
	.long 0xbf800000                                           // 000000068764: BF800000
	.long 0xbf800000                                           // 000000068768: BF800000
	.long 0xbf800000                                           // 00000006876C: BF800000
	.long 0xbf800000                                           // 000000068770: BF800000
	.long 0xbf800000                                           // 000000068774: BF800000
	.long 0xbf800000                                           // 000000068778: BF800000
	.long 0xbf800000                                           // 00000006877C: BF800000
	.long 0xbf800000                                           // 000000068780: BF800000
	.long 0xbf800000                                           // 000000068784: BF800000
	.long 0xbf800000                                           // 000000068788: BF800000
	.long 0xbf800000                                           // 00000006878C: BF800000
	.long 0xbf800000                                           // 000000068790: BF800000
	.long 0xbf800000                                           // 000000068794: BF800000
	.long 0xbf800000                                           // 000000068798: BF800000
	.long 0xbf800000                                           // 00000006879C: BF800000
	.long 0xbf800000                                           // 0000000687A0: BF800000
	.long 0xbf800000                                           // 0000000687A4: BF800000
	.long 0xbf800000                                           // 0000000687A8: BF800000
	.long 0xbf800000                                           // 0000000687AC: BF800000
	.long 0xbf800000                                           // 0000000687B0: BF800000
	.long 0xbf800000                                           // 0000000687B4: BF800000
	.long 0xbf800000                                           // 0000000687B8: BF800000
	.long 0xbf800000                                           // 0000000687BC: BF800000
	.long 0xbf800000                                           // 0000000687C0: BF800000
	.long 0xbf800000                                           // 0000000687C4: BF800000
	.long 0xbf800000                                           // 0000000687C8: BF800000
	.long 0xbf800000                                           // 0000000687CC: BF800000
	.long 0xbf800000                                           // 0000000687D0: BF800000
	.long 0xbf800000                                           // 0000000687D4: BF800000
	.long 0xbf800000                                           // 0000000687D8: BF800000
	.long 0xbf800000                                           // 0000000687DC: BF800000
	.long 0xbf800000                                           // 0000000687E0: BF800000
	.long 0xbf800000                                           // 0000000687E4: BF800000
	.long 0xbf800000                                           // 0000000687E8: BF800000
	.long 0xbf800000                                           // 0000000687EC: BF800000
	.long 0xbf800000                                           // 0000000687F0: BF800000
	.long 0xbf800000                                           // 0000000687F4: BF800000
	.long 0xbf800000                                           // 0000000687F8: BF800000
	.long 0xbf800000                                           // 0000000687FC: BF800000

	.p2align	8
	.type	add_get_local_size_get_global_offset,@function
	.size	add_get_local_size_get_global_offset, add_get_local_size_get_global_offset_symend-add_get_local_size_get_global_offset
add_get_local_size_get_global_offset:
	s_clause 0x1                                               // 000000068800: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068804: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006880C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000068814: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006881C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068824: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006882C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068834: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000068838: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000068840: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000068848: BF8701A3
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006884C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000068854: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 000000068858: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000068860: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000068864: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006886C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000068874: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006887C: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068884: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000068888: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000068890: D5207C05 000D0007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000068898: D73C0002 00020482
	s_add_i32 s2, s8, 2                                        // 0000000688A0: 81028208
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000688A4: BF870219
	v_mov_b32_e32 v6, s2                                       // 0000000688A8: 7E0C0202
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000688AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000688B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000688BC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000688C0: D7006A02 00020400
	s_add_i32 s2, s10, 2                                       // 0000000688C8: 8102820A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000688CC: 40060601
	v_mov_b32_e32 v7, s2                                       // 0000000688D0: 7E0E0202
	s_add_i32 s2, s6, 4                                        // 0000000688D4: 81028406
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000688D8: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 0000000688E0: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000688E4: 400A0A01
	s_clause 0x2                                               // 0000000688E8: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000688EC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 0000000688F4: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 0000000688FC: DC6A0000 007C0804
	s_nop 0                                                    // 000000068904: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068908: BFB60003
	s_endpgm                                                   // 00000006890C: BFB00000
add_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068910: BF800000
	.long 0xbf800000                                           // 000000068914: BF800000
	.long 0xbf800000                                           // 000000068918: BF800000
	.long 0xbf800000                                           // 00000006891C: BF800000
	.long 0xbf800000                                           // 000000068920: BF800000
	.long 0xbf800000                                           // 000000068924: BF800000
	.long 0xbf800000                                           // 000000068928: BF800000
	.long 0xbf800000                                           // 00000006892C: BF800000
	.long 0xbf800000                                           // 000000068930: BF800000
	.long 0xbf800000                                           // 000000068934: BF800000
	.long 0xbf800000                                           // 000000068938: BF800000
	.long 0xbf800000                                           // 00000006893C: BF800000
	.long 0xbf800000                                           // 000000068940: BF800000
	.long 0xbf800000                                           // 000000068944: BF800000
	.long 0xbf800000                                           // 000000068948: BF800000
	.long 0xbf800000                                           // 00000006894C: BF800000
	.long 0xbf800000                                           // 000000068950: BF800000
	.long 0xbf800000                                           // 000000068954: BF800000
	.long 0xbf800000                                           // 000000068958: BF800000
	.long 0xbf800000                                           // 00000006895C: BF800000
	.long 0xbf800000                                           // 000000068960: BF800000
	.long 0xbf800000                                           // 000000068964: BF800000
	.long 0xbf800000                                           // 000000068968: BF800000
	.long 0xbf800000                                           // 00000006896C: BF800000
	.long 0xbf800000                                           // 000000068970: BF800000
	.long 0xbf800000                                           // 000000068974: BF800000
	.long 0xbf800000                                           // 000000068978: BF800000
	.long 0xbf800000                                           // 00000006897C: BF800000
	.long 0xbf800000                                           // 000000068980: BF800000
	.long 0xbf800000                                           // 000000068984: BF800000
	.long 0xbf800000                                           // 000000068988: BF800000
	.long 0xbf800000                                           // 00000006898C: BF800000
	.long 0xbf800000                                           // 000000068990: BF800000
	.long 0xbf800000                                           // 000000068994: BF800000
	.long 0xbf800000                                           // 000000068998: BF800000
	.long 0xbf800000                                           // 00000006899C: BF800000
	.long 0xbf800000                                           // 0000000689A0: BF800000
	.long 0xbf800000                                           // 0000000689A4: BF800000
	.long 0xbf800000                                           // 0000000689A8: BF800000
	.long 0xbf800000                                           // 0000000689AC: BF800000
	.long 0xbf800000                                           // 0000000689B0: BF800000
	.long 0xbf800000                                           // 0000000689B4: BF800000
	.long 0xbf800000                                           // 0000000689B8: BF800000
	.long 0xbf800000                                           // 0000000689BC: BF800000
	.long 0xbf800000                                           // 0000000689C0: BF800000
	.long 0xbf800000                                           // 0000000689C4: BF800000
	.long 0xbf800000                                           // 0000000689C8: BF800000
	.long 0xbf800000                                           // 0000000689CC: BF800000
	.long 0xbf800000                                           // 0000000689D0: BF800000
	.long 0xbf800000                                           // 0000000689D4: BF800000
	.long 0xbf800000                                           // 0000000689D8: BF800000
	.long 0xbf800000                                           // 0000000689DC: BF800000
	.long 0xbf800000                                           // 0000000689E0: BF800000
	.long 0xbf800000                                           // 0000000689E4: BF800000
	.long 0xbf800000                                           // 0000000689E8: BF800000
	.long 0xbf800000                                           // 0000000689EC: BF800000
	.long 0xbf800000                                           // 0000000689F0: BF800000
	.long 0xbf800000                                           // 0000000689F4: BF800000
	.long 0xbf800000                                           // 0000000689F8: BF800000
	.long 0xbf800000                                           // 0000000689FC: BF800000

	.p2align	8
	.type	add_get_global_id_get_global_offset,@function
	.size	add_get_global_id_get_global_offset, add_get_global_id_get_global_offset_symend-add_get_global_id_get_global_offset
add_get_global_id_get_global_offset:
	s_clause 0x2                                               // 000000068A00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068A04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000068A0C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068A14: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000068A1C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000068A24: D6100003 02292900
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v6, 0x3ff, v0       // 000000068A2C: CA240080 010600FF 000003FF
	s_mov_b32 s33, 0                                           // 000000068A38: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000068A3C: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000068A40: D6560002 04090203
	v_lshl_or_b32 v4, s4, 2, v3                                // 000000068A48: D6560004 040D0404
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000068A50: BF870093
	v_lshl_or_b32 v0, s2, 1, v6                                // 000000068A54: D6560000 04190202
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000068A5C: D73C0000 00020082
	s_waitcnt lgkmcnt(0)                                       // 000000068A64: BF89FC07
	v_add_co_u32 v2, s3, s10, v2                               // 000000068A68: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000068A70: BF870001
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000068A74: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 000000068A7C: D7000304 00020806
	s_add_i32 s2, s2, s8                                       // 000000068A84: 81020802
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000068A88: D5207C05 000D0007
	v_lshl_or_b32 v8, s2, 1, v6                                // 000000068A90: D6560008 04190202
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 000000068A98: D73C0006 00020482
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068AA0: D7006A00 00020000
	v_add_nc_u32_e32 v9, s10, v2                               // 000000068AA8: 4A12040A
	v_lshlrev_b64 v[2:3], 2, v[4:5]                            // 000000068AAC: D73C0002 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068AB4: 40020201
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 000000068AB8: D7006A05 00020C00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 000000068AC0: 400C0E01
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068AC4: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000068AC8: D7006A02 00020400
	v_add_nc_u32_e32 v4, s6, v4                                // 000000068AD0: 4A080806
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000068AD4: 40060601
	s_clause 0x2                                               // 000000068AD8: BF850002
	global_store_b32 v[0:1], v8, off                           // 000000068ADC: DC6A0000 007C0800
	global_store_b32 v[5:6], v9, off                           // 000000068AE4: DC6A0000 007C0905
	global_store_b32 v[2:3], v4, off                           // 000000068AEC: DC6A0000 007C0402
	s_nop 0                                                    // 000000068AF4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068AF8: BFB60003
	s_endpgm                                                   // 000000068AFC: BFB00000
add_get_global_id_get_global_offset_symend:

	.p2align	8
	.type	add_get_global_size_get_global_offset,@function
	.size	add_get_global_size_get_global_offset, add_get_global_size_get_global_offset_symend-add_get_global_size_get_global_offset
add_get_global_size_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 000000068B00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000068B04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000068B0C: BEA10080
	s_clause 0x1                                               // 000000068B10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000068B14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000068B1C: DC4A0026 07000001
	s_clause 0x2                                               // 000000068B24: BF850002
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000068B28: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068B30: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000068B38: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000068B40: 360200FF 000003FF
	s_clause 0x1                                               // 000000068B48: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 000000068B4C: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 000000068B54: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068B5C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000068B64: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000068B6C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000068B74: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000068B78: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000068B80: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 000000068B84: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 000000068B88: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000068B90: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000068B94: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000068B9C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000068BA4: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 000000068BAC: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068BB4: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000068BB8: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 000000068BC0: D5207C05 000D000D
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000068BC8: D73C0002 00020482
	s_lshl_b32 s3, s7, 1                                       // 000000068BD0: 84038107
	s_lshl_b32 s4, s5, 1                                       // 000000068BD4: 84048105
	s_delay_alu instid0(VALU_DEP_2)                            // 000000068BD8: BF870002
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000068BDC: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068BE4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068BEC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000068BF0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000068BF8: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000068BFC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000068C04: 400A0A01
	s_waitcnt vmcnt(1)                                         // 000000068C08: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 000000068C0C: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 000000068C10: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000068C18: BF8903F7
	v_add_nc_u32_e32 v7, s4, v7                                // 000000068C1C: 4A0E0E04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000068C20: BF870193
	v_add_nc_u32_e32 v8, s3, v8                                // 000000068C24: 4A101003
	v_add_nc_u32_e32 v6, s2, v6                                // 000000068C28: 4A0C0C02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000068C2C: BF870193
	v_add_nc_u32_e32 v7, s12, v7                               // 000000068C30: 4A0E0E0C
	v_add_nc_u32_e32 v8, s10, v8                               // 000000068C34: 4A10100A
	s_delay_alu instid0(VALU_DEP_3)                            // 000000068C38: BF870003
	v_add_nc_u32_e32 v6, s8, v6                                // 000000068C3C: 4A0C0C08
	s_clause 0x2                                               // 000000068C40: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000068C44: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 000000068C4C: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 000000068C54: DC6A0000 007C0704
	s_nop 0                                                    // 000000068C5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068C60: BFB60003
	s_endpgm                                                   // 000000068C64: BFB00000
add_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068C68: BF800000
	.long 0xbf800000                                           // 000000068C6C: BF800000
	.long 0xbf800000                                           // 000000068C70: BF800000
	.long 0xbf800000                                           // 000000068C74: BF800000
	.long 0xbf800000                                           // 000000068C78: BF800000
	.long 0xbf800000                                           // 000000068C7C: BF800000
	.long 0xbf800000                                           // 000000068C80: BF800000
	.long 0xbf800000                                           // 000000068C84: BF800000
	.long 0xbf800000                                           // 000000068C88: BF800000
	.long 0xbf800000                                           // 000000068C8C: BF800000
	.long 0xbf800000                                           // 000000068C90: BF800000
	.long 0xbf800000                                           // 000000068C94: BF800000
	.long 0xbf800000                                           // 000000068C98: BF800000
	.long 0xbf800000                                           // 000000068C9C: BF800000
	.long 0xbf800000                                           // 000000068CA0: BF800000
	.long 0xbf800000                                           // 000000068CA4: BF800000
	.long 0xbf800000                                           // 000000068CA8: BF800000
	.long 0xbf800000                                           // 000000068CAC: BF800000
	.long 0xbf800000                                           // 000000068CB0: BF800000
	.long 0xbf800000                                           // 000000068CB4: BF800000
	.long 0xbf800000                                           // 000000068CB8: BF800000
	.long 0xbf800000                                           // 000000068CBC: BF800000
	.long 0xbf800000                                           // 000000068CC0: BF800000
	.long 0xbf800000                                           // 000000068CC4: BF800000
	.long 0xbf800000                                           // 000000068CC8: BF800000
	.long 0xbf800000                                           // 000000068CCC: BF800000
	.long 0xbf800000                                           // 000000068CD0: BF800000
	.long 0xbf800000                                           // 000000068CD4: BF800000
	.long 0xbf800000                                           // 000000068CD8: BF800000
	.long 0xbf800000                                           // 000000068CDC: BF800000
	.long 0xbf800000                                           // 000000068CE0: BF800000
	.long 0xbf800000                                           // 000000068CE4: BF800000
	.long 0xbf800000                                           // 000000068CE8: BF800000
	.long 0xbf800000                                           // 000000068CEC: BF800000
	.long 0xbf800000                                           // 000000068CF0: BF800000
	.long 0xbf800000                                           // 000000068CF4: BF800000
	.long 0xbf800000                                           // 000000068CF8: BF800000
	.long 0xbf800000                                           // 000000068CFC: BF800000

	.p2align	8
	.type	add_get_num_groups_get_global_offset,@function
	.size	add_get_num_groups_get_global_offset, add_get_num_groups_get_global_offset_symend-add_get_num_groups_get_global_offset
add_get_num_groups_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 000000068D00: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000068D04: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000068D0C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000068D14: BEA10080
	s_clause 0x1                                               // 000000068D18: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000068D1C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000068D24: DC4A0026 07000001
	s_clause 0x1                                               // 000000068D2C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068D30: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000068D38: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000068D40: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068D48: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000068D50: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000068D58: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000068D5C: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000068D64: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000068D6C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000068D70: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 000000068D74: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000068D7C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000068D84: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068D8C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000068D90: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000068D98: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000068DA0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000068DA8: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 000000068DB0: F4000080 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000068DB8: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000068DC0: BF870213
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 000000068DC4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 000000068DCC: 4002020D
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000068DD0: BF870093
	v_add_co_u32 v2, s1, s12, v2                               // 000000068DD4: D7000102 0002040C
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 000000068DDC: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000068DE4: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 000000068DEC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 000000068DF0: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000068DF4: 7C7A0C80
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000068DF8: BF8704D2
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000068DFC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000068E04: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000068E08: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000068E0C: 7C7A0E80
	s_addc_u32 s1, s8, s14                                     // 000000068E10: 82010E08
	v_mov_b32_e32 v6, s1                                       // 000000068E14: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 000000068E18: BF078000
	s_addc_u32 s0, s10, s15                                    // 000000068E1C: 82000F0A
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000068E20: BF07806A
	v_mov_b32_e32 v7, s0                                       // 000000068E24: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 000000068E28: BF89FC07
	s_addc_u32 s0, s6, s2                                      // 000000068E2C: 82000206
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000068E30: D7006A04 0002080C
	v_mov_b32_e32 v8, s0                                       // 000000068E38: 7E100200
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000068E3C: 400A0A0D
	s_clause 0x2                                               // 000000068E40: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000068E44: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 000000068E4C: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 000000068E54: DC6A0000 007C0804
	s_nop 0                                                    // 000000068E5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068E60: BFB60003
	s_endpgm                                                   // 000000068E64: BFB00000
add_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068E68: BF800000
	.long 0xbf800000                                           // 000000068E6C: BF800000
	.long 0xbf800000                                           // 000000068E70: BF800000
	.long 0xbf800000                                           // 000000068E74: BF800000
	.long 0xbf800000                                           // 000000068E78: BF800000
	.long 0xbf800000                                           // 000000068E7C: BF800000
	.long 0xbf800000                                           // 000000068E80: BF800000
	.long 0xbf800000                                           // 000000068E84: BF800000
	.long 0xbf800000                                           // 000000068E88: BF800000
	.long 0xbf800000                                           // 000000068E8C: BF800000
	.long 0xbf800000                                           // 000000068E90: BF800000
	.long 0xbf800000                                           // 000000068E94: BF800000
	.long 0xbf800000                                           // 000000068E98: BF800000
	.long 0xbf800000                                           // 000000068E9C: BF800000
	.long 0xbf800000                                           // 000000068EA0: BF800000
	.long 0xbf800000                                           // 000000068EA4: BF800000
	.long 0xbf800000                                           // 000000068EA8: BF800000
	.long 0xbf800000                                           // 000000068EAC: BF800000
	.long 0xbf800000                                           // 000000068EB0: BF800000
	.long 0xbf800000                                           // 000000068EB4: BF800000
	.long 0xbf800000                                           // 000000068EB8: BF800000
	.long 0xbf800000                                           // 000000068EBC: BF800000
	.long 0xbf800000                                           // 000000068EC0: BF800000
	.long 0xbf800000                                           // 000000068EC4: BF800000
	.long 0xbf800000                                           // 000000068EC8: BF800000
	.long 0xbf800000                                           // 000000068ECC: BF800000
	.long 0xbf800000                                           // 000000068ED0: BF800000
	.long 0xbf800000                                           // 000000068ED4: BF800000
	.long 0xbf800000                                           // 000000068ED8: BF800000
	.long 0xbf800000                                           // 000000068EDC: BF800000
	.long 0xbf800000                                           // 000000068EE0: BF800000
	.long 0xbf800000                                           // 000000068EE4: BF800000
	.long 0xbf800000                                           // 000000068EE8: BF800000
	.long 0xbf800000                                           // 000000068EEC: BF800000
	.long 0xbf800000                                           // 000000068EF0: BF800000
	.long 0xbf800000                                           // 000000068EF4: BF800000
	.long 0xbf800000                                           // 000000068EF8: BF800000
	.long 0xbf800000                                           // 000000068EFC: BF800000

	.p2align	8
	.type	add_get_work_dim_get_global_offset,@function
	.size	add_get_work_dim_get_global_offset, add_get_work_dim_get_global_offset_symend-add_get_work_dim_get_global_offset
add_get_work_dim_get_global_offset:
	s_clause 0x2                                               // 000000068F00: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000068F04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068F0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000068F14: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000068F1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000068F24: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068F2C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068F34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068F3C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000068F40: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000068F48: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000068F50: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000068F54: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000068F5C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 000000068F60: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 000000068F68: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000068F70: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000068F78: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068F80: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000068F84: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 000000068F8C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000068F94: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000068F9C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000068FA4: BF8704A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000068FA8: D73C0002 00020482
	s_add_i32 s3, s8, s2                                       // 000000068FB0: 81030208
	v_mov_b32_e32 v6, s3                                       // 000000068FB4: 7E0C0203
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068FB8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068FBC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000068FC4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068FCC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000068FD0: D7006A02 00020400
	s_add_i32 s3, s10, s2                                      // 000000068FD8: 8103020A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000068FDC: 40060601
	s_add_i32 s2, s6, s2                                       // 000000068FE0: 81020206
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000068FE4: D7006A04 00020800
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v8, s2             // 000000068FEC: CA100003 07080002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000068FF4: 400A0A01
	s_clause 0x2                                               // 000000068FF8: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000068FFC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 000000069004: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006900C: DC6A0000 007C0804
	s_nop 0                                                    // 000000069014: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069018: BFB60003
	s_endpgm                                                   // 00000006901C: BFB00000
add_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 000000069020: BF800000
	.long 0xbf800000                                           // 000000069024: BF800000
	.long 0xbf800000                                           // 000000069028: BF800000
	.long 0xbf800000                                           // 00000006902C: BF800000
	.long 0xbf800000                                           // 000000069030: BF800000
	.long 0xbf800000                                           // 000000069034: BF800000
	.long 0xbf800000                                           // 000000069038: BF800000
	.long 0xbf800000                                           // 00000006903C: BF800000
	.long 0xbf800000                                           // 000000069040: BF800000
	.long 0xbf800000                                           // 000000069044: BF800000
	.long 0xbf800000                                           // 000000069048: BF800000
	.long 0xbf800000                                           // 00000006904C: BF800000
	.long 0xbf800000                                           // 000000069050: BF800000
	.long 0xbf800000                                           // 000000069054: BF800000
	.long 0xbf800000                                           // 000000069058: BF800000
	.long 0xbf800000                                           // 00000006905C: BF800000
	.long 0xbf800000                                           // 000000069060: BF800000
	.long 0xbf800000                                           // 000000069064: BF800000
	.long 0xbf800000                                           // 000000069068: BF800000
	.long 0xbf800000                                           // 00000006906C: BF800000
	.long 0xbf800000                                           // 000000069070: BF800000
	.long 0xbf800000                                           // 000000069074: BF800000
	.long 0xbf800000                                           // 000000069078: BF800000
	.long 0xbf800000                                           // 00000006907C: BF800000
	.long 0xbf800000                                           // 000000069080: BF800000
	.long 0xbf800000                                           // 000000069084: BF800000
	.long 0xbf800000                                           // 000000069088: BF800000
	.long 0xbf800000                                           // 00000006908C: BF800000
	.long 0xbf800000                                           // 000000069090: BF800000
	.long 0xbf800000                                           // 000000069094: BF800000
	.long 0xbf800000                                           // 000000069098: BF800000
	.long 0xbf800000                                           // 00000006909C: BF800000
	.long 0xbf800000                                           // 0000000690A0: BF800000
	.long 0xbf800000                                           // 0000000690A4: BF800000
	.long 0xbf800000                                           // 0000000690A8: BF800000
	.long 0xbf800000                                           // 0000000690AC: BF800000
	.long 0xbf800000                                           // 0000000690B0: BF800000
	.long 0xbf800000                                           // 0000000690B4: BF800000
	.long 0xbf800000                                           // 0000000690B8: BF800000
	.long 0xbf800000                                           // 0000000690BC: BF800000
	.long 0xbf800000                                           // 0000000690C0: BF800000
	.long 0xbf800000                                           // 0000000690C4: BF800000
	.long 0xbf800000                                           // 0000000690C8: BF800000
	.long 0xbf800000                                           // 0000000690CC: BF800000
	.long 0xbf800000                                           // 0000000690D0: BF800000
	.long 0xbf800000                                           // 0000000690D4: BF800000
	.long 0xbf800000                                           // 0000000690D8: BF800000
	.long 0xbf800000                                           // 0000000690DC: BF800000
	.long 0xbf800000                                           // 0000000690E0: BF800000
	.long 0xbf800000                                           // 0000000690E4: BF800000
	.long 0xbf800000                                           // 0000000690E8: BF800000
	.long 0xbf800000                                           // 0000000690EC: BF800000
	.long 0xbf800000                                           // 0000000690F0: BF800000
	.long 0xbf800000                                           // 0000000690F4: BF800000
	.long 0xbf800000                                           // 0000000690F8: BF800000
	.long 0xbf800000                                           // 0000000690FC: BF800000

	.p2align	8
	.type	add_x_get_local_id,@function
	.size	add_x_get_local_id, add_x_get_local_id_symend-add_x_get_local_id
add_x_get_local_id:
	s_clause 0x2                                               // 000000069100: BF850002
	s_load_b32 s5, s[0:1], 0x8                                 // 000000069104: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006910C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000069114: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006911C: 360200FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000069124: D6100006 02291500
	s_load_b64 s[0:1], s[0:1], null                            // 00000006912C: F4040000 F8000000
	v_bfe_u32 v7, v0, 20, 10                                   // 000000069134: D6100007 02292900
	s_mov_b32 s33, 0                                           // 00000006913C: BEA10080
	v_lshl_or_b32 v0, s2, 4, v1                                // 000000069140: D6560000 04050802
	v_lshl_or_b32 v2, s3, 1, v6                                // 000000069148: D6560002 04190203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000069150: BF8700C3
	v_lshl_or_b32 v4, s4, 1, v7                                // 000000069154: D6560004 041D0204
	s_waitcnt lgkmcnt(0)                                       // 00000006915C: BF89FC07
	v_add_nc_u32_e32 v8, s5, v1                                // 000000069160: 4A100205
	v_add_co_u32 v0, s2, s8, v0                                // 000000069164: D7000200 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006916C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000069174: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006917C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000069180: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000069188: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000069190: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000069198: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000691A0: BF870004
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000691A4: D73C0002 00020482
	v_add_nc_u32_e32 v6, s5, v6                                // 0000000691AC: 4A0C0C05
	v_add_nc_u32_e32 v7, s5, v7                                // 0000000691B0: 4A0E0E05
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000691B4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000691BC: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000691C4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000691C8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000691D0: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000691D4: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000691D8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000691E0: 400A0A01
	s_clause 0x2                                               // 0000000691E4: BF850002
	global_store_b32 v[0:1], v8, off                           // 0000000691E8: DC6A0000 007C0800
	global_store_b32 v[2:3], v6, off                           // 0000000691F0: DC6A0000 007C0602
	global_store_b32 v[4:5], v7, off                           // 0000000691F8: DC6A0000 007C0704
	s_nop 0                                                    // 000000069200: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069204: BFB60003
	s_endpgm                                                   // 000000069208: BFB00000
add_x_get_local_id_symend:
	.long 0xbf800000                                           // 00000006920C: BF800000
	.long 0xbf800000                                           // 000000069210: BF800000
	.long 0xbf800000                                           // 000000069214: BF800000
	.long 0xbf800000                                           // 000000069218: BF800000
	.long 0xbf800000                                           // 00000006921C: BF800000
	.long 0xbf800000                                           // 000000069220: BF800000
	.long 0xbf800000                                           // 000000069224: BF800000
	.long 0xbf800000                                           // 000000069228: BF800000
	.long 0xbf800000                                           // 00000006922C: BF800000
	.long 0xbf800000                                           // 000000069230: BF800000
	.long 0xbf800000                                           // 000000069234: BF800000
	.long 0xbf800000                                           // 000000069238: BF800000
	.long 0xbf800000                                           // 00000006923C: BF800000
	.long 0xbf800000                                           // 000000069240: BF800000
	.long 0xbf800000                                           // 000000069244: BF800000
	.long 0xbf800000                                           // 000000069248: BF800000
	.long 0xbf800000                                           // 00000006924C: BF800000
	.long 0xbf800000                                           // 000000069250: BF800000
	.long 0xbf800000                                           // 000000069254: BF800000
	.long 0xbf800000                                           // 000000069258: BF800000
	.long 0xbf800000                                           // 00000006925C: BF800000
	.long 0xbf800000                                           // 000000069260: BF800000
	.long 0xbf800000                                           // 000000069264: BF800000
	.long 0xbf800000                                           // 000000069268: BF800000
	.long 0xbf800000                                           // 00000006926C: BF800000
	.long 0xbf800000                                           // 000000069270: BF800000
	.long 0xbf800000                                           // 000000069274: BF800000
	.long 0xbf800000                                           // 000000069278: BF800000
	.long 0xbf800000                                           // 00000006927C: BF800000
	.long 0xbf800000                                           // 000000069280: BF800000
	.long 0xbf800000                                           // 000000069284: BF800000
	.long 0xbf800000                                           // 000000069288: BF800000
	.long 0xbf800000                                           // 00000006928C: BF800000
	.long 0xbf800000                                           // 000000069290: BF800000
	.long 0xbf800000                                           // 000000069294: BF800000
	.long 0xbf800000                                           // 000000069298: BF800000
	.long 0xbf800000                                           // 00000006929C: BF800000
	.long 0xbf800000                                           // 0000000692A0: BF800000
	.long 0xbf800000                                           // 0000000692A4: BF800000
	.long 0xbf800000                                           // 0000000692A8: BF800000
	.long 0xbf800000                                           // 0000000692AC: BF800000
	.long 0xbf800000                                           // 0000000692B0: BF800000
	.long 0xbf800000                                           // 0000000692B4: BF800000
	.long 0xbf800000                                           // 0000000692B8: BF800000
	.long 0xbf800000                                           // 0000000692BC: BF800000
	.long 0xbf800000                                           // 0000000692C0: BF800000
	.long 0xbf800000                                           // 0000000692C4: BF800000
	.long 0xbf800000                                           // 0000000692C8: BF800000
	.long 0xbf800000                                           // 0000000692CC: BF800000
	.long 0xbf800000                                           // 0000000692D0: BF800000
	.long 0xbf800000                                           // 0000000692D4: BF800000
	.long 0xbf800000                                           // 0000000692D8: BF800000
	.long 0xbf800000                                           // 0000000692DC: BF800000
	.long 0xbf800000                                           // 0000000692E0: BF800000
	.long 0xbf800000                                           // 0000000692E4: BF800000
	.long 0xbf800000                                           // 0000000692E8: BF800000
	.long 0xbf800000                                           // 0000000692EC: BF800000
	.long 0xbf800000                                           // 0000000692F0: BF800000
	.long 0xbf800000                                           // 0000000692F4: BF800000
	.long 0xbf800000                                           // 0000000692F8: BF800000
	.long 0xbf800000                                           // 0000000692FC: BF800000

	.p2align	8
	.type	add_get_global_offset_get_local_id,@function
	.size	add_get_global_offset_get_local_id, add_get_global_offset_get_local_id_symend-add_get_global_offset_get_local_id
add_get_global_offset_get_local_id:
	s_clause 0x1                                               // 000000069300: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069304: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006930C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000069314: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006931C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069324: F4040000 F8000008
	v_bfe_u32 v6, v0, 20, 10                                   // 00000006932C: D6100006 02292900
	s_mov_b32 s33, 0                                           // 000000069334: BEA10080
	v_lshl_or_b32 v0, s2, 1, v1                                // 000000069338: D6560000 04050202
	v_lshl_or_b32 v3, s3, 4, v2                                // 000000069340: D6560003 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000069348: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v6                                // 00000006934C: D6560004 04190204
	s_waitcnt lgkmcnt(0)                                       // 000000069354: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000069358: D7000200 00020008
	v_add_nc_u32_e32 v7, s8, v1                                // 000000069360: 4A0E0208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000069364: D5207C01 00090009
	v_add_nc_u32_e32 v8, s10, v2                               // 00000006936C: 4A10040A
	v_add_co_u32 v2, s2, s10, v3                               // 000000069370: D7000202 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 000000069378: BF870241
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006937C: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000069384: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006938C: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000069394: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006939C: D73C0002 00020482
	v_add_nc_u32_e32 v6, s6, v6                                // 0000000693A4: 4A0C0C06
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000693A8: BF870214
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000693AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000693B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000693BC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000693C0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000693C8: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000693CC: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000693D0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000693D8: 400A0A01
	s_clause 0x2                                               // 0000000693DC: BF850002
	global_store_b32 v[0:1], v7, off                           // 0000000693E0: DC6A0000 007C0700
	global_store_b32 v[2:3], v8, off                           // 0000000693E8: DC6A0000 007C0802
	global_store_b32 v[4:5], v6, off                           // 0000000693F0: DC6A0000 007C0604
	s_nop 0                                                    // 0000000693F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000693FC: BFB60003
	s_endpgm                                                   // 000000069400: BFB00000
add_get_global_offset_get_local_id_symend:
	.long 0xbf800000                                           // 000000069404: BF800000
	.long 0xbf800000                                           // 000000069408: BF800000
	.long 0xbf800000                                           // 00000006940C: BF800000
	.long 0xbf800000                                           // 000000069410: BF800000
	.long 0xbf800000                                           // 000000069414: BF800000
	.long 0xbf800000                                           // 000000069418: BF800000
	.long 0xbf800000                                           // 00000006941C: BF800000
	.long 0xbf800000                                           // 000000069420: BF800000
	.long 0xbf800000                                           // 000000069424: BF800000
	.long 0xbf800000                                           // 000000069428: BF800000
	.long 0xbf800000                                           // 00000006942C: BF800000
	.long 0xbf800000                                           // 000000069430: BF800000
	.long 0xbf800000                                           // 000000069434: BF800000
	.long 0xbf800000                                           // 000000069438: BF800000
	.long 0xbf800000                                           // 00000006943C: BF800000
	.long 0xbf800000                                           // 000000069440: BF800000
	.long 0xbf800000                                           // 000000069444: BF800000
	.long 0xbf800000                                           // 000000069448: BF800000
	.long 0xbf800000                                           // 00000006944C: BF800000
	.long 0xbf800000                                           // 000000069450: BF800000
	.long 0xbf800000                                           // 000000069454: BF800000
	.long 0xbf800000                                           // 000000069458: BF800000
	.long 0xbf800000                                           // 00000006945C: BF800000
	.long 0xbf800000                                           // 000000069460: BF800000
	.long 0xbf800000                                           // 000000069464: BF800000
	.long 0xbf800000                                           // 000000069468: BF800000
	.long 0xbf800000                                           // 00000006946C: BF800000
	.long 0xbf800000                                           // 000000069470: BF800000
	.long 0xbf800000                                           // 000000069474: BF800000
	.long 0xbf800000                                           // 000000069478: BF800000
	.long 0xbf800000                                           // 00000006947C: BF800000
	.long 0xbf800000                                           // 000000069480: BF800000
	.long 0xbf800000                                           // 000000069484: BF800000
	.long 0xbf800000                                           // 000000069488: BF800000
	.long 0xbf800000                                           // 00000006948C: BF800000
	.long 0xbf800000                                           // 000000069490: BF800000
	.long 0xbf800000                                           // 000000069494: BF800000
	.long 0xbf800000                                           // 000000069498: BF800000
	.long 0xbf800000                                           // 00000006949C: BF800000
	.long 0xbf800000                                           // 0000000694A0: BF800000
	.long 0xbf800000                                           // 0000000694A4: BF800000
	.long 0xbf800000                                           // 0000000694A8: BF800000
	.long 0xbf800000                                           // 0000000694AC: BF800000
	.long 0xbf800000                                           // 0000000694B0: BF800000
	.long 0xbf800000                                           // 0000000694B4: BF800000
	.long 0xbf800000                                           // 0000000694B8: BF800000
	.long 0xbf800000                                           // 0000000694BC: BF800000
	.long 0xbf800000                                           // 0000000694C0: BF800000
	.long 0xbf800000                                           // 0000000694C4: BF800000
	.long 0xbf800000                                           // 0000000694C8: BF800000
	.long 0xbf800000                                           // 0000000694CC: BF800000
	.long 0xbf800000                                           // 0000000694D0: BF800000
	.long 0xbf800000                                           // 0000000694D4: BF800000
	.long 0xbf800000                                           // 0000000694D8: BF800000
	.long 0xbf800000                                           // 0000000694DC: BF800000
	.long 0xbf800000                                           // 0000000694E0: BF800000
	.long 0xbf800000                                           // 0000000694E4: BF800000
	.long 0xbf800000                                           // 0000000694E8: BF800000
	.long 0xbf800000                                           // 0000000694EC: BF800000
	.long 0xbf800000                                           // 0000000694F0: BF800000
	.long 0xbf800000                                           // 0000000694F4: BF800000
	.long 0xbf800000                                           // 0000000694F8: BF800000
	.long 0xbf800000                                           // 0000000694FC: BF800000

	.p2align	8
	.type	add_get_local_id_get_local_id,@function
	.size	add_get_local_id_get_local_id, add_get_local_id_get_local_id_symend-add_get_local_id_get_local_id
add_get_local_id_get_local_id:
	s_clause 0x1                                               // 000000069500: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069504: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006950C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000069514: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006951C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069524: F4040000 F8000008
	v_bfe_u32 v6, v0, 20, 10                                   // 00000006952C: D6100006 02292900
	s_mov_b32 s33, 0                                           // 000000069534: BEA10080
	v_lshl_or_b32 v0, s2, 3, v1                                // 000000069538: D6560000 04050602
	v_lshlrev_b32_e32 v8, 1, v2                                // 000000069540: 30100481
	v_lshl_or_b32 v2, s3, 2, v2                                // 000000069544: D6560002 04090403
	v_lshl_or_b32 v4, s4, 1, v6                                // 00000006954C: D6560004 04190204
	v_lshlrev_b32_e32 v7, 1, v1                                // 000000069554: 300E0281
	v_lshlrev_b32_e32 v6, 1, v6                                // 000000069558: 300C0C81
	s_waitcnt lgkmcnt(0)                                       // 00000006955C: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000069560: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000069568: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006956C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000069574: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006957C: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000069584: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006958C: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000069590: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000069598: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000695A0: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000695A8: BF870193
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000695AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000695B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000695BC: 40020201
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000695C0: BF870224
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000695C4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000695CC: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000695D0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000695D8: 400A0A01
	s_clause 0x2                                               // 0000000695DC: BF850002
	global_store_b32 v[0:1], v7, off                           // 0000000695E0: DC6A0000 007C0700
	global_store_b32 v[2:3], v8, off                           // 0000000695E8: DC6A0000 007C0802
	global_store_b32 v[4:5], v6, off                           // 0000000695F0: DC6A0000 007C0604
	s_nop 0                                                    // 0000000695F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000695FC: BFB60003
	s_endpgm                                                   // 000000069600: BFB00000
add_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000069604: BF800000
	.long 0xbf800000                                           // 000000069608: BF800000
	.long 0xbf800000                                           // 00000006960C: BF800000
	.long 0xbf800000                                           // 000000069610: BF800000
	.long 0xbf800000                                           // 000000069614: BF800000
	.long 0xbf800000                                           // 000000069618: BF800000
	.long 0xbf800000                                           // 00000006961C: BF800000
	.long 0xbf800000                                           // 000000069620: BF800000
	.long 0xbf800000                                           // 000000069624: BF800000
	.long 0xbf800000                                           // 000000069628: BF800000
	.long 0xbf800000                                           // 00000006962C: BF800000
	.long 0xbf800000                                           // 000000069630: BF800000
	.long 0xbf800000                                           // 000000069634: BF800000
	.long 0xbf800000                                           // 000000069638: BF800000
	.long 0xbf800000                                           // 00000006963C: BF800000
	.long 0xbf800000                                           // 000000069640: BF800000
	.long 0xbf800000                                           // 000000069644: BF800000
	.long 0xbf800000                                           // 000000069648: BF800000
	.long 0xbf800000                                           // 00000006964C: BF800000
	.long 0xbf800000                                           // 000000069650: BF800000
	.long 0xbf800000                                           // 000000069654: BF800000
	.long 0xbf800000                                           // 000000069658: BF800000
	.long 0xbf800000                                           // 00000006965C: BF800000
	.long 0xbf800000                                           // 000000069660: BF800000
	.long 0xbf800000                                           // 000000069664: BF800000
	.long 0xbf800000                                           // 000000069668: BF800000
	.long 0xbf800000                                           // 00000006966C: BF800000
	.long 0xbf800000                                           // 000000069670: BF800000
	.long 0xbf800000                                           // 000000069674: BF800000
	.long 0xbf800000                                           // 000000069678: BF800000
	.long 0xbf800000                                           // 00000006967C: BF800000
	.long 0xbf800000                                           // 000000069680: BF800000
	.long 0xbf800000                                           // 000000069684: BF800000
	.long 0xbf800000                                           // 000000069688: BF800000
	.long 0xbf800000                                           // 00000006968C: BF800000
	.long 0xbf800000                                           // 000000069690: BF800000
	.long 0xbf800000                                           // 000000069694: BF800000
	.long 0xbf800000                                           // 000000069698: BF800000
	.long 0xbf800000                                           // 00000006969C: BF800000
	.long 0xbf800000                                           // 0000000696A0: BF800000
	.long 0xbf800000                                           // 0000000696A4: BF800000
	.long 0xbf800000                                           // 0000000696A8: BF800000
	.long 0xbf800000                                           // 0000000696AC: BF800000
	.long 0xbf800000                                           // 0000000696B0: BF800000
	.long 0xbf800000                                           // 0000000696B4: BF800000
	.long 0xbf800000                                           // 0000000696B8: BF800000
	.long 0xbf800000                                           // 0000000696BC: BF800000
	.long 0xbf800000                                           // 0000000696C0: BF800000
	.long 0xbf800000                                           // 0000000696C4: BF800000
	.long 0xbf800000                                           // 0000000696C8: BF800000
	.long 0xbf800000                                           // 0000000696CC: BF800000
	.long 0xbf800000                                           // 0000000696D0: BF800000
	.long 0xbf800000                                           // 0000000696D4: BF800000
	.long 0xbf800000                                           // 0000000696D8: BF800000
	.long 0xbf800000                                           // 0000000696DC: BF800000
	.long 0xbf800000                                           // 0000000696E0: BF800000
	.long 0xbf800000                                           // 0000000696E4: BF800000
	.long 0xbf800000                                           // 0000000696E8: BF800000
	.long 0xbf800000                                           // 0000000696EC: BF800000
	.long 0xbf800000                                           // 0000000696F0: BF800000
	.long 0xbf800000                                           // 0000000696F4: BF800000
	.long 0xbf800000                                           // 0000000696F8: BF800000
	.long 0xbf800000                                           // 0000000696FC: BF800000

	.p2align	8
	.type	add_get_group_id_get_local_id,@function
	.size	add_get_group_id_get_local_id, add_get_group_id_get_local_id_symend-add_get_group_id_get_local_id
add_get_group_id_get_local_id:
	s_clause 0x1                                               // 000000069700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006970C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000069714: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006971C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000069724: D6100003 02292900
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006972C: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000069734: BEA10080
	v_add_nc_u32_e32 v8, s2, v1                                // 000000069738: 4A100202
	v_add_nc_u32_e32 v0, s3, v2                                // 00000006973C: 4A000403
	v_add_nc_u32_e32 v9, s4, v3                                // 000000069740: 4A120604
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000069744: BF870193
	v_add_nc_u32_e32 v3, s2, v8                                // 000000069748: 4A061002
	v_mad_u64_u32 v[1:2], null, s3, 15, v[0:1]                 // 00000006974C: D6FE7C01 04011E03
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000069754: BF8701A3
	v_add_nc_u32_e32 v6, s4, v9                                // 000000069758: 4A0C1204
	s_waitcnt lgkmcnt(0)                                       // 00000006975C: BF89FC07
	v_add_co_u32 v2, s2, s8, v3                                // 000000069760: D7000202 00020608
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000069768: BF870211
	v_add_co_ci_u32_e64 v3, null, s9, 0, s2                    // 00000006976C: D5207C03 00090009
	v_add_co_u32 v4, s2, s10, v1                               // 000000069774: D7000204 0002020A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006977C: BF870221
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 000000069780: D5207C05 0009000B
	v_add_co_u32 v6, s2, s6, v6                                // 000000069788: D7000206 00020C06
	v_lshlrev_b64 v[1:2], 2, v[2:3]                            // 000000069790: D73C0001 00020482
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 000000069798: D5207C07 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000697A0: BF870194
	v_lshlrev_b64 v[3:4], 2, v[4:5]                            // 0000000697A4: D73C0003 00020882
	v_add_co_u32 v1, vcc_lo, s0, v1                            // 0000000697AC: D7006A01 00020200
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000697B4: BF870223
	v_lshlrev_b64 v[5:6], 2, v[6:7]                            // 0000000697B8: D73C0005 00020C82
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo             // 0000000697C0: 40040401
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000697C4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000697CC: 40080801
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000697D0: BF870004
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000697D4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000697DC: 400C0C01
	s_clause 0x2                                               // 0000000697E0: BF850002
	global_store_b32 v[1:2], v8, off                           // 0000000697E4: DC6A0000 007C0801
	global_store_b32 v[3:4], v0, off                           // 0000000697EC: DC6A0000 007C0003
	global_store_b32 v[5:6], v9, off                           // 0000000697F4: DC6A0000 007C0905
	s_nop 0                                                    // 0000000697FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069800: BFB60003
	s_endpgm                                                   // 000000069804: BFB00000
add_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000069808: BF800000
	.long 0xbf800000                                           // 00000006980C: BF800000
	.long 0xbf800000                                           // 000000069810: BF800000
	.long 0xbf800000                                           // 000000069814: BF800000
	.long 0xbf800000                                           // 000000069818: BF800000
	.long 0xbf800000                                           // 00000006981C: BF800000
	.long 0xbf800000                                           // 000000069820: BF800000
	.long 0xbf800000                                           // 000000069824: BF800000
	.long 0xbf800000                                           // 000000069828: BF800000
	.long 0xbf800000                                           // 00000006982C: BF800000
	.long 0xbf800000                                           // 000000069830: BF800000
	.long 0xbf800000                                           // 000000069834: BF800000
	.long 0xbf800000                                           // 000000069838: BF800000
	.long 0xbf800000                                           // 00000006983C: BF800000
	.long 0xbf800000                                           // 000000069840: BF800000
	.long 0xbf800000                                           // 000000069844: BF800000
	.long 0xbf800000                                           // 000000069848: BF800000
	.long 0xbf800000                                           // 00000006984C: BF800000
	.long 0xbf800000                                           // 000000069850: BF800000
	.long 0xbf800000                                           // 000000069854: BF800000
	.long 0xbf800000                                           // 000000069858: BF800000
	.long 0xbf800000                                           // 00000006985C: BF800000
	.long 0xbf800000                                           // 000000069860: BF800000
	.long 0xbf800000                                           // 000000069864: BF800000
	.long 0xbf800000                                           // 000000069868: BF800000
	.long 0xbf800000                                           // 00000006986C: BF800000
	.long 0xbf800000                                           // 000000069870: BF800000
	.long 0xbf800000                                           // 000000069874: BF800000
	.long 0xbf800000                                           // 000000069878: BF800000
	.long 0xbf800000                                           // 00000006987C: BF800000
	.long 0xbf800000                                           // 000000069880: BF800000
	.long 0xbf800000                                           // 000000069884: BF800000
	.long 0xbf800000                                           // 000000069888: BF800000
	.long 0xbf800000                                           // 00000006988C: BF800000
	.long 0xbf800000                                           // 000000069890: BF800000
	.long 0xbf800000                                           // 000000069894: BF800000
	.long 0xbf800000                                           // 000000069898: BF800000
	.long 0xbf800000                                           // 00000006989C: BF800000
	.long 0xbf800000                                           // 0000000698A0: BF800000
	.long 0xbf800000                                           // 0000000698A4: BF800000
	.long 0xbf800000                                           // 0000000698A8: BF800000
	.long 0xbf800000                                           // 0000000698AC: BF800000
	.long 0xbf800000                                           // 0000000698B0: BF800000
	.long 0xbf800000                                           // 0000000698B4: BF800000
	.long 0xbf800000                                           // 0000000698B8: BF800000
	.long 0xbf800000                                           // 0000000698BC: BF800000
	.long 0xbf800000                                           // 0000000698C0: BF800000
	.long 0xbf800000                                           // 0000000698C4: BF800000
	.long 0xbf800000                                           // 0000000698C8: BF800000
	.long 0xbf800000                                           // 0000000698CC: BF800000
	.long 0xbf800000                                           // 0000000698D0: BF800000
	.long 0xbf800000                                           // 0000000698D4: BF800000
	.long 0xbf800000                                           // 0000000698D8: BF800000
	.long 0xbf800000                                           // 0000000698DC: BF800000
	.long 0xbf800000                                           // 0000000698E0: BF800000
	.long 0xbf800000                                           // 0000000698E4: BF800000
	.long 0xbf800000                                           // 0000000698E8: BF800000
	.long 0xbf800000                                           // 0000000698EC: BF800000
	.long 0xbf800000                                           // 0000000698F0: BF800000
	.long 0xbf800000                                           // 0000000698F4: BF800000
	.long 0xbf800000                                           // 0000000698F8: BF800000
	.long 0xbf800000                                           // 0000000698FC: BF800000

	.p2align	8
	.type	add_get_local_size_get_local_id,@function
	.size	add_get_local_size_get_local_id, add_get_local_size_get_local_id_symend-add_get_local_size_get_local_id
add_get_local_size_get_local_id:
	s_clause 0x1                                               // 000000069900: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069904: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006990C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000069914: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006991C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069924: F4040000 F8000008
	v_bfe_u32 v6, v0, 20, 10                                   // 00000006992C: D6100006 02292900
	s_mov_b32 s33, 0                                           // 000000069934: BEA10080
	v_lshl_or_b32 v0, s2, 1, v1                                // 000000069938: D6560000 04050202
	v_or_b32_e32 v8, 2, v2                                     // 000000069940: 38100482
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000069944: D6560002 04090203
	v_lshl_or_b32 v4, s4, 2, v6                                // 00000006994C: D6560004 04190404
	v_or_b32_e32 v7, 2, v1                                     // 000000069954: 380E0282
	v_or_b32_e32 v6, 4, v6                                     // 000000069958: 380C0C84
	s_waitcnt lgkmcnt(0)                                       // 00000006995C: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000069960: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000069968: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006996C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000069974: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006997C: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000069984: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006998C: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000069990: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000069998: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000699A0: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000699A8: BF870193
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000699AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000699B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000699BC: 40020201
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000699C0: BF870224
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000699C4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000699CC: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000699D0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000699D8: 400A0A01
	s_clause 0x2                                               // 0000000699DC: BF850002
	global_store_b32 v[0:1], v7, off                           // 0000000699E0: DC6A0000 007C0700
	global_store_b32 v[2:3], v8, off                           // 0000000699E8: DC6A0000 007C0802
	global_store_b32 v[4:5], v6, off                           // 0000000699F0: DC6A0000 007C0604
	s_nop 0                                                    // 0000000699F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000699FC: BFB60003
	s_endpgm                                                   // 000000069A00: BFB00000
add_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000069A04: BF800000
	.long 0xbf800000                                           // 000000069A08: BF800000
	.long 0xbf800000                                           // 000000069A0C: BF800000
	.long 0xbf800000                                           // 000000069A10: BF800000
	.long 0xbf800000                                           // 000000069A14: BF800000
	.long 0xbf800000                                           // 000000069A18: BF800000
	.long 0xbf800000                                           // 000000069A1C: BF800000
	.long 0xbf800000                                           // 000000069A20: BF800000
	.long 0xbf800000                                           // 000000069A24: BF800000
	.long 0xbf800000                                           // 000000069A28: BF800000
	.long 0xbf800000                                           // 000000069A2C: BF800000
	.long 0xbf800000                                           // 000000069A30: BF800000
	.long 0xbf800000                                           // 000000069A34: BF800000
	.long 0xbf800000                                           // 000000069A38: BF800000
	.long 0xbf800000                                           // 000000069A3C: BF800000
	.long 0xbf800000                                           // 000000069A40: BF800000
	.long 0xbf800000                                           // 000000069A44: BF800000
	.long 0xbf800000                                           // 000000069A48: BF800000
	.long 0xbf800000                                           // 000000069A4C: BF800000
	.long 0xbf800000                                           // 000000069A50: BF800000
	.long 0xbf800000                                           // 000000069A54: BF800000
	.long 0xbf800000                                           // 000000069A58: BF800000
	.long 0xbf800000                                           // 000000069A5C: BF800000
	.long 0xbf800000                                           // 000000069A60: BF800000
	.long 0xbf800000                                           // 000000069A64: BF800000
	.long 0xbf800000                                           // 000000069A68: BF800000
	.long 0xbf800000                                           // 000000069A6C: BF800000
	.long 0xbf800000                                           // 000000069A70: BF800000
	.long 0xbf800000                                           // 000000069A74: BF800000
	.long 0xbf800000                                           // 000000069A78: BF800000
	.long 0xbf800000                                           // 000000069A7C: BF800000
	.long 0xbf800000                                           // 000000069A80: BF800000
	.long 0xbf800000                                           // 000000069A84: BF800000
	.long 0xbf800000                                           // 000000069A88: BF800000
	.long 0xbf800000                                           // 000000069A8C: BF800000
	.long 0xbf800000                                           // 000000069A90: BF800000
	.long 0xbf800000                                           // 000000069A94: BF800000
	.long 0xbf800000                                           // 000000069A98: BF800000
	.long 0xbf800000                                           // 000000069A9C: BF800000
	.long 0xbf800000                                           // 000000069AA0: BF800000
	.long 0xbf800000                                           // 000000069AA4: BF800000
	.long 0xbf800000                                           // 000000069AA8: BF800000
	.long 0xbf800000                                           // 000000069AAC: BF800000
	.long 0xbf800000                                           // 000000069AB0: BF800000
	.long 0xbf800000                                           // 000000069AB4: BF800000
	.long 0xbf800000                                           // 000000069AB8: BF800000
	.long 0xbf800000                                           // 000000069ABC: BF800000
	.long 0xbf800000                                           // 000000069AC0: BF800000
	.long 0xbf800000                                           // 000000069AC4: BF800000
	.long 0xbf800000                                           // 000000069AC8: BF800000
	.long 0xbf800000                                           // 000000069ACC: BF800000
	.long 0xbf800000                                           // 000000069AD0: BF800000
	.long 0xbf800000                                           // 000000069AD4: BF800000
	.long 0xbf800000                                           // 000000069AD8: BF800000
	.long 0xbf800000                                           // 000000069ADC: BF800000
	.long 0xbf800000                                           // 000000069AE0: BF800000
	.long 0xbf800000                                           // 000000069AE4: BF800000
	.long 0xbf800000                                           // 000000069AE8: BF800000
	.long 0xbf800000                                           // 000000069AEC: BF800000
	.long 0xbf800000                                           // 000000069AF0: BF800000
	.long 0xbf800000                                           // 000000069AF4: BF800000
	.long 0xbf800000                                           // 000000069AF8: BF800000
	.long 0xbf800000                                           // 000000069AFC: BF800000

	.p2align	8
	.type	add_get_global_id_get_local_id,@function
	.size	add_get_global_id_get_local_id, add_get_global_id_get_local_id_symend-add_get_global_id_get_local_id
add_get_global_id_get_local_id:
	s_clause 0x1                                               // 000000069B00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069B04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000069B0C: F4040180 F8000048
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000069B14: 360600FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 000000069B1C: D6100009 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069B24: F4040000 F8000008
	v_bfe_u32 v10, v0, 20, 10                                  // 000000069B2C: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000069B34: BEA10080
	v_lshl_or_b32 v0, s2, 1, v3                                // 000000069B38: D6560000 040D0202
	v_lshl_or_b32 v4, s3, 1, v9                                // 000000069B40: D6560004 04250203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000069B48: BF8701A3
	v_lshl_or_b32 v5, s4, 2, v10                               // 000000069B4C: D6560005 04290404
	s_waitcnt lgkmcnt(0)                                       // 000000069B54: BF89FC07
	v_add3_u32 v11, v0, s8, v3                                 // 000000069B58: D655000B 040C1100
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000069B60: BF8700C3
	v_add_co_u32 v3, s2, s10, v4                               // 000000069B64: D7000203 0002080A
	v_mov_b32_e32 v1, 0                                        // 000000069B6C: 7E020280
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 000000069B70: D5207C04 0009000B
	v_add_co_u32 v5, s2, s6, v5                                // 000000069B78: D7000205 00020A06
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 000000069B80: D5207C06 00090007
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000069B88: BF8700B3
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 000000069B8C: D73C0007 00020682
	v_add_nc_u32_e32 v4, v9, v3                                // 000000069B94: 4A080709
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000069B98: D73C0001 00020082
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 000000069BA0: D7006A00 00020200
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 000000069BA8: BF870252
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000069BAC: 40020401
	v_lshlrev_b64 v[2:3], 2, v[5:6]                            // 000000069BB0: D73C0002 00020A82
	v_add_co_u32 v6, vcc_lo, s0, v7                            // 000000069BB8: D7006A06 00020E00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v8, vcc_lo             // 000000069BC0: 400E1001
	v_add_nc_u32_e32 v5, v10, v5                               // 000000069BC4: 4A0A0B0A
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000069BC8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000069BD0: 40060601
	s_clause 0x2                                               // 000000069BD4: BF850002
	global_store_b32 v[0:1], v11, off                          // 000000069BD8: DC6A0000 007C0B00
	global_store_b32 v[6:7], v4, off                           // 000000069BE0: DC6A0000 007C0406
	global_store_b32 v[2:3], v5, off                           // 000000069BE8: DC6A0000 007C0502
	s_nop 0                                                    // 000000069BF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069BF4: BFB60003
	s_endpgm                                                   // 000000069BF8: BFB00000
add_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000069BFC: BF800000

	.p2align	8
	.type	add_get_global_size_get_local_id,@function
	.size	add_get_global_size_get_local_id, add_get_global_size_get_local_id_symend-add_get_global_size_get_local_id
add_get_global_size_get_local_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000069C00: CA240080 010800FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 000000069C0C: D6100009 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000069C14: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000069C1C: BEA10080
	s_clause 0x1                                               // 000000069C20: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000069C24: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000069C2C: DC4A0026 07000001
	s_clause 0x4                                               // 000000069C34: BF850004
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000069C38: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069C40: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000069C48: F4040300 F8000048
	s_load_b32 s5, s[0:1], 0x18                                // 000000069C50: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 000000069C58: F4040000 F8000000
	v_lshl_or_b32 v0, s2, 4, v8                                // 000000069C60: D6560000 04210802
	v_lshl_or_b32 v2, s3, 1, v9                                // 000000069C68: D6560002 04250203
	v_lshl_or_b32 v4, s4, 1, v10                               // 000000069C70: D6560004 04290204
	s_waitcnt lgkmcnt(0)                                       // 000000069C78: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 000000069C7C: 84028406
	v_add_co_u32 v0, s3, s8, v0                                // 000000069C80: D7000300 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000069C88: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000069C8C: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000069C94: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000069C9C: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 000000069CA4: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000069CAC: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000069CB0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 000000069CB8: D5207C05 000D000D
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000069CC0: D73C0002 00020482
	s_lshl_b32 s3, s7, 1                                       // 000000069CC8: 84038107
	s_lshl_b32 s4, s5, 1                                       // 000000069CCC: 84048105
	s_delay_alu instid0(VALU_DEP_2)                            // 000000069CD0: BF870002
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000069CD4: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069CDC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069CE4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000069CE8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000069CF0: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000069CF4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000069CFC: 400A0A01
	s_waitcnt vmcnt(1)                                         // 000000069D00: BF8907F7
	v_lshrrev_b32_e32 v11, 16, v6                              // 000000069D04: 32160C90
	v_and_b32_e32 v6, 0xffff, v6                               // 000000069D08: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000069D10: BF8903F7
	v_add3_u32 v7, v7, s4, v10                                 // 000000069D14: D6550007 04280907
	s_delay_alu instid0(VALU_DEP_2)                            // 000000069D1C: BF870002
	v_add3_u32 v6, v6, s2, v8                                  // 000000069D20: D6550006 04200506
	v_add3_u32 v8, v11, s3, v9                                 // 000000069D28: D6550008 0424070B
	s_clause 0x2                                               // 000000069D30: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000069D34: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 000000069D3C: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 000000069D44: DC6A0000 007C0704
	s_nop 0                                                    // 000000069D4C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069D50: BFB60003
	s_endpgm                                                   // 000000069D54: BFB00000
add_get_global_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000069D58: BF800000
	.long 0xbf800000                                           // 000000069D5C: BF800000
	.long 0xbf800000                                           // 000000069D60: BF800000
	.long 0xbf800000                                           // 000000069D64: BF800000
	.long 0xbf800000                                           // 000000069D68: BF800000
	.long 0xbf800000                                           // 000000069D6C: BF800000
	.long 0xbf800000                                           // 000000069D70: BF800000
	.long 0xbf800000                                           // 000000069D74: BF800000
	.long 0xbf800000                                           // 000000069D78: BF800000
	.long 0xbf800000                                           // 000000069D7C: BF800000
	.long 0xbf800000                                           // 000000069D80: BF800000
	.long 0xbf800000                                           // 000000069D84: BF800000
	.long 0xbf800000                                           // 000000069D88: BF800000
	.long 0xbf800000                                           // 000000069D8C: BF800000
	.long 0xbf800000                                           // 000000069D90: BF800000
	.long 0xbf800000                                           // 000000069D94: BF800000
	.long 0xbf800000                                           // 000000069D98: BF800000
	.long 0xbf800000                                           // 000000069D9C: BF800000
	.long 0xbf800000                                           // 000000069DA0: BF800000
	.long 0xbf800000                                           // 000000069DA4: BF800000
	.long 0xbf800000                                           // 000000069DA8: BF800000
	.long 0xbf800000                                           // 000000069DAC: BF800000
	.long 0xbf800000                                           // 000000069DB0: BF800000
	.long 0xbf800000                                           // 000000069DB4: BF800000
	.long 0xbf800000                                           // 000000069DB8: BF800000
	.long 0xbf800000                                           // 000000069DBC: BF800000
	.long 0xbf800000                                           // 000000069DC0: BF800000
	.long 0xbf800000                                           // 000000069DC4: BF800000
	.long 0xbf800000                                           // 000000069DC8: BF800000
	.long 0xbf800000                                           // 000000069DCC: BF800000
	.long 0xbf800000                                           // 000000069DD0: BF800000
	.long 0xbf800000                                           // 000000069DD4: BF800000
	.long 0xbf800000                                           // 000000069DD8: BF800000
	.long 0xbf800000                                           // 000000069DDC: BF800000
	.long 0xbf800000                                           // 000000069DE0: BF800000
	.long 0xbf800000                                           // 000000069DE4: BF800000
	.long 0xbf800000                                           // 000000069DE8: BF800000
	.long 0xbf800000                                           // 000000069DEC: BF800000
	.long 0xbf800000                                           // 000000069DF0: BF800000
	.long 0xbf800000                                           // 000000069DF4: BF800000
	.long 0xbf800000                                           // 000000069DF8: BF800000
	.long 0xbf800000                                           // 000000069DFC: BF800000

	.p2align	8
	.type	add_get_num_groups_get_local_id,@function
	.size	add_get_num_groups_get_local_id, add_get_num_groups_get_local_id_symend-add_get_num_groups_get_local_id
add_get_num_groups_get_local_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000069E00: CA240080 010800FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 000000069E0C: D6100009 02291500
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000069E14: F4080300 F8000008
	v_bfe_u32 v10, v0, 20, 10                                  // 000000069E1C: D610000A 02292900
	s_clause 0x1                                               // 000000069E24: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000069E28: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000069E30: DC4A0026 07000001
	s_clause 0x1                                               // 000000069E38: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069E3C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000069E44: F4040180 F8000048
	v_lshl_or_b32 v0, s2, 1, v8                                // 000000069E4C: D6560000 04210202
	v_lshl_or_b32 v2, s3, 1, v9                                // 000000069E54: D6560002 04250203
	v_lshl_or_b32 v4, s4, 2, v10                               // 000000069E5C: D6560004 04290404
	s_load_b32 s0, s[0:1], 0x18                                // 000000069E64: F4000000 F8000018
	s_mov_b32 s33, 0                                           // 000000069E6C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069E70: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000069E74: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000069E7C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000069E80: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000069E88: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000069E90: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000069E98: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000069EA0: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000069EA4: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000069EAC: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000069EB4: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000069EBC: BF870212
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000069EC0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 000000069EC8: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 000000069ED0: 4002020D
	s_delay_alu instid0(VALU_DEP_4)                            // 000000069ED4: BF870004
	v_add_co_u32 v2, vcc_lo, s12, v2                           // 000000069ED8: D7006A02 0002040C
	v_add_co_ci_u32_e32 v3, vcc_lo, s13, v3, vcc_lo            // 000000069EE0: 4006060D
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000069EE4: D7006A04 0002080C
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000069EEC: 400A0A0D
	s_waitcnt vmcnt(1)                                         // 000000069EF0: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000069EF4: 7C7A0C80
	v_lshrrev_b32_e32 v11, 16, v6                              // 000000069EF8: 32160C90
	v_add_co_ci_u32_e32 v6, vcc_lo, s14, v8, vcc_lo            // 000000069EFC: 400C100E
	s_delay_alu instid0(VALU_DEP_2)                            // 000000069F00: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v11.l                          // 000000069F04: 7C7A1680
	v_add_co_ci_u32_e32 v8, vcc_lo, s15, v9, vcc_lo            // 000000069F08: 4010120F
	s_waitcnt vmcnt(0)                                         // 000000069F0C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000069F10: 7C7A0E80
	v_add_co_ci_u32_e32 v7, vcc_lo, s0, v10, vcc_lo            // 000000069F14: 400E1400
	s_clause 0x2                                               // 000000069F18: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000069F1C: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 000000069F24: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 000000069F2C: DC6A0000 007C0704
	s_nop 0                                                    // 000000069F34: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069F38: BFB60003
	s_endpgm                                                   // 000000069F3C: BFB00000
add_get_num_groups_get_local_id_symend:
	.long 0xbf800000                                           // 000000069F40: BF800000
	.long 0xbf800000                                           // 000000069F44: BF800000
	.long 0xbf800000                                           // 000000069F48: BF800000
	.long 0xbf800000                                           // 000000069F4C: BF800000
	.long 0xbf800000                                           // 000000069F50: BF800000
	.long 0xbf800000                                           // 000000069F54: BF800000
	.long 0xbf800000                                           // 000000069F58: BF800000
	.long 0xbf800000                                           // 000000069F5C: BF800000
	.long 0xbf800000                                           // 000000069F60: BF800000
	.long 0xbf800000                                           // 000000069F64: BF800000
	.long 0xbf800000                                           // 000000069F68: BF800000
	.long 0xbf800000                                           // 000000069F6C: BF800000
	.long 0xbf800000                                           // 000000069F70: BF800000
	.long 0xbf800000                                           // 000000069F74: BF800000
	.long 0xbf800000                                           // 000000069F78: BF800000
	.long 0xbf800000                                           // 000000069F7C: BF800000
	.long 0xbf800000                                           // 000000069F80: BF800000
	.long 0xbf800000                                           // 000000069F84: BF800000
	.long 0xbf800000                                           // 000000069F88: BF800000
	.long 0xbf800000                                           // 000000069F8C: BF800000
	.long 0xbf800000                                           // 000000069F90: BF800000
	.long 0xbf800000                                           // 000000069F94: BF800000
	.long 0xbf800000                                           // 000000069F98: BF800000
	.long 0xbf800000                                           // 000000069F9C: BF800000
	.long 0xbf800000                                           // 000000069FA0: BF800000
	.long 0xbf800000                                           // 000000069FA4: BF800000
	.long 0xbf800000                                           // 000000069FA8: BF800000
	.long 0xbf800000                                           // 000000069FAC: BF800000
	.long 0xbf800000                                           // 000000069FB0: BF800000
	.long 0xbf800000                                           // 000000069FB4: BF800000
	.long 0xbf800000                                           // 000000069FB8: BF800000
	.long 0xbf800000                                           // 000000069FBC: BF800000
	.long 0xbf800000                                           // 000000069FC0: BF800000
	.long 0xbf800000                                           // 000000069FC4: BF800000
	.long 0xbf800000                                           // 000000069FC8: BF800000
	.long 0xbf800000                                           // 000000069FCC: BF800000
	.long 0xbf800000                                           // 000000069FD0: BF800000
	.long 0xbf800000                                           // 000000069FD4: BF800000
	.long 0xbf800000                                           // 000000069FD8: BF800000
	.long 0xbf800000                                           // 000000069FDC: BF800000
	.long 0xbf800000                                           // 000000069FE0: BF800000
	.long 0xbf800000                                           // 000000069FE4: BF800000
	.long 0xbf800000                                           // 000000069FE8: BF800000
	.long 0xbf800000                                           // 000000069FEC: BF800000
	.long 0xbf800000                                           // 000000069FF0: BF800000
	.long 0xbf800000                                           // 000000069FF4: BF800000
	.long 0xbf800000                                           // 000000069FF8: BF800000
	.long 0xbf800000                                           // 000000069FFC: BF800000

	.p2align	8
	.type	add_get_work_dim_get_local_id,@function
	.size	add_get_work_dim_get_local_id, add_get_work_dim_get_local_id_symend-add_get_work_dim_get_local_id
add_get_work_dim_get_local_id:
	s_clause 0x2                                               // 00000006A000: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006A004: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A00C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006A014: F4040180 F8000048
	v_and_b32_e32 v6, 0x3ff, v0                                // 00000006A01C: 360C00FF 000003FF
	v_bfe_u32 v7, v0, 10, 10                                   // 00000006A024: D6100007 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A02C: F4040000 F8000008
	v_bfe_u32 v8, v0, 20, 10                                   // 00000006A034: D6100008 02292900
	s_mov_b32 s33, 0                                           // 00000006A03C: BEA10080
	v_lshl_or_b32 v0, s2, 1, v6                                // 00000006A040: D6560000 04190202
	v_lshl_or_b32 v2, s3, 1, v7                                // 00000006A048: D6560002 041D0203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006A050: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v8                                // 00000006A054: D6560004 04210404
	s_waitcnt lgkmcnt(0)                                       // 00000006A05C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000006A060: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v0                                // 00000006A068: D7000300 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006A070: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006A078: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A080: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006A084: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006A08C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006A094: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006A09C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A0A4: BF870004
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006A0A8: D73C0002 00020482
	v_add_nc_u32_e32 v6, s2, v6                                // 00000006A0B0: 4A0C0C02
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006A0B4: 4A0E0E02
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A0B8: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006A0C0: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A0C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006A0CC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006A0D4: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A0D8: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006A0DC: D7006A04 00020800
	v_add_nc_u32_e32 v8, s2, v8                                // 00000006A0E4: 4A101002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006A0E8: 400A0A01
	s_clause 0x2                                               // 00000006A0EC: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006A0F0: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006A0F8: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006A100: DC6A0000 007C0804
	s_nop 0                                                    // 00000006A108: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A10C: BFB60003
	s_endpgm                                                   // 00000006A110: BFB00000
add_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 00000006A114: BF800000
	.long 0xbf800000                                           // 00000006A118: BF800000
	.long 0xbf800000                                           // 00000006A11C: BF800000
	.long 0xbf800000                                           // 00000006A120: BF800000
	.long 0xbf800000                                           // 00000006A124: BF800000
	.long 0xbf800000                                           // 00000006A128: BF800000
	.long 0xbf800000                                           // 00000006A12C: BF800000
	.long 0xbf800000                                           // 00000006A130: BF800000
	.long 0xbf800000                                           // 00000006A134: BF800000
	.long 0xbf800000                                           // 00000006A138: BF800000
	.long 0xbf800000                                           // 00000006A13C: BF800000
	.long 0xbf800000                                           // 00000006A140: BF800000
	.long 0xbf800000                                           // 00000006A144: BF800000
	.long 0xbf800000                                           // 00000006A148: BF800000
	.long 0xbf800000                                           // 00000006A14C: BF800000
	.long 0xbf800000                                           // 00000006A150: BF800000
	.long 0xbf800000                                           // 00000006A154: BF800000
	.long 0xbf800000                                           // 00000006A158: BF800000
	.long 0xbf800000                                           // 00000006A15C: BF800000
	.long 0xbf800000                                           // 00000006A160: BF800000
	.long 0xbf800000                                           // 00000006A164: BF800000
	.long 0xbf800000                                           // 00000006A168: BF800000
	.long 0xbf800000                                           // 00000006A16C: BF800000
	.long 0xbf800000                                           // 00000006A170: BF800000
	.long 0xbf800000                                           // 00000006A174: BF800000
	.long 0xbf800000                                           // 00000006A178: BF800000
	.long 0xbf800000                                           // 00000006A17C: BF800000
	.long 0xbf800000                                           // 00000006A180: BF800000
	.long 0xbf800000                                           // 00000006A184: BF800000
	.long 0xbf800000                                           // 00000006A188: BF800000
	.long 0xbf800000                                           // 00000006A18C: BF800000
	.long 0xbf800000                                           // 00000006A190: BF800000
	.long 0xbf800000                                           // 00000006A194: BF800000
	.long 0xbf800000                                           // 00000006A198: BF800000
	.long 0xbf800000                                           // 00000006A19C: BF800000
	.long 0xbf800000                                           // 00000006A1A0: BF800000
	.long 0xbf800000                                           // 00000006A1A4: BF800000
	.long 0xbf800000                                           // 00000006A1A8: BF800000
	.long 0xbf800000                                           // 00000006A1AC: BF800000
	.long 0xbf800000                                           // 00000006A1B0: BF800000
	.long 0xbf800000                                           // 00000006A1B4: BF800000
	.long 0xbf800000                                           // 00000006A1B8: BF800000
	.long 0xbf800000                                           // 00000006A1BC: BF800000
	.long 0xbf800000                                           // 00000006A1C0: BF800000
	.long 0xbf800000                                           // 00000006A1C4: BF800000
	.long 0xbf800000                                           // 00000006A1C8: BF800000
	.long 0xbf800000                                           // 00000006A1CC: BF800000
	.long 0xbf800000                                           // 00000006A1D0: BF800000
	.long 0xbf800000                                           // 00000006A1D4: BF800000
	.long 0xbf800000                                           // 00000006A1D8: BF800000
	.long 0xbf800000                                           // 00000006A1DC: BF800000
	.long 0xbf800000                                           // 00000006A1E0: BF800000
	.long 0xbf800000                                           // 00000006A1E4: BF800000
	.long 0xbf800000                                           // 00000006A1E8: BF800000
	.long 0xbf800000                                           // 00000006A1EC: BF800000
	.long 0xbf800000                                           // 00000006A1F0: BF800000
	.long 0xbf800000                                           // 00000006A1F4: BF800000
	.long 0xbf800000                                           // 00000006A1F8: BF800000
	.long 0xbf800000                                           // 00000006A1FC: BF800000

	.p2align	8
	.type	add_x_get_group_id,@function
	.size	add_x_get_group_id, add_x_get_group_id_symend-add_x_get_group_id
add_x_get_group_id:
	s_clause 0x2                                               // 00000006A200: BF850002
	s_load_b32 s5, s[0:1], 0x8                                 // 00000006A204: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A20C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006A214: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006A21C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006A224: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], null                            // 00000006A22C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A234: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006A23C: BEA10080
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006A240: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006A248: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006A250: BF870003
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006A254: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006A25C: BF89FC07
	s_add_i32 s2, s2, s5                                       // 00000006A260: 81020502
	v_add_co_u32 v0, s8, s8, v1                                // 00000006A264: D7000800 00020208
	v_mov_b32_e32 v6, s2                                       // 00000006A26C: 7E0C0202
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 00000006A270: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 00000006A278: D7000802 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A280: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 00000006A284: D5207C03 0021000B
	v_add_co_u32 v4, s6, s6, v4                                // 00000006A28C: D7000604 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006A294: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s6                    // 00000006A29C: D5207C05 00190007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A2A4: BF8701A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006A2A8: D73C0002 00020482
	s_add_i32 s2, s3, s5                                       // 00000006A2B0: 81020503
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A2B4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A2BC: BF870223
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006A2C0: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A2C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006A2CC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006A2D4: 40060601
	v_mov_b32_e32 v7, s2                                       // 00000006A2D8: 7E0E0202
	s_add_i32 s2, s4, s5                                       // 00000006A2DC: 81020504
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006A2E0: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 00000006A2E8: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006A2EC: 400A0A01
	s_clause 0x2                                               // 00000006A2F0: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006A2F4: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006A2FC: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006A304: DC6A0000 007C0804
	s_nop 0                                                    // 00000006A30C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A310: BFB60003
	s_endpgm                                                   // 00000006A314: BFB00000
add_x_get_group_id_symend:
	.long 0xbf800000                                           // 00000006A318: BF800000
	.long 0xbf800000                                           // 00000006A31C: BF800000
	.long 0xbf800000                                           // 00000006A320: BF800000
	.long 0xbf800000                                           // 00000006A324: BF800000
	.long 0xbf800000                                           // 00000006A328: BF800000
	.long 0xbf800000                                           // 00000006A32C: BF800000
	.long 0xbf800000                                           // 00000006A330: BF800000
	.long 0xbf800000                                           // 00000006A334: BF800000
	.long 0xbf800000                                           // 00000006A338: BF800000
	.long 0xbf800000                                           // 00000006A33C: BF800000
	.long 0xbf800000                                           // 00000006A340: BF800000
	.long 0xbf800000                                           // 00000006A344: BF800000
	.long 0xbf800000                                           // 00000006A348: BF800000
	.long 0xbf800000                                           // 00000006A34C: BF800000
	.long 0xbf800000                                           // 00000006A350: BF800000
	.long 0xbf800000                                           // 00000006A354: BF800000
	.long 0xbf800000                                           // 00000006A358: BF800000
	.long 0xbf800000                                           // 00000006A35C: BF800000
	.long 0xbf800000                                           // 00000006A360: BF800000
	.long 0xbf800000                                           // 00000006A364: BF800000
	.long 0xbf800000                                           // 00000006A368: BF800000
	.long 0xbf800000                                           // 00000006A36C: BF800000
	.long 0xbf800000                                           // 00000006A370: BF800000
	.long 0xbf800000                                           // 00000006A374: BF800000
	.long 0xbf800000                                           // 00000006A378: BF800000
	.long 0xbf800000                                           // 00000006A37C: BF800000
	.long 0xbf800000                                           // 00000006A380: BF800000
	.long 0xbf800000                                           // 00000006A384: BF800000
	.long 0xbf800000                                           // 00000006A388: BF800000
	.long 0xbf800000                                           // 00000006A38C: BF800000
	.long 0xbf800000                                           // 00000006A390: BF800000
	.long 0xbf800000                                           // 00000006A394: BF800000
	.long 0xbf800000                                           // 00000006A398: BF800000
	.long 0xbf800000                                           // 00000006A39C: BF800000
	.long 0xbf800000                                           // 00000006A3A0: BF800000
	.long 0xbf800000                                           // 00000006A3A4: BF800000
	.long 0xbf800000                                           // 00000006A3A8: BF800000
	.long 0xbf800000                                           // 00000006A3AC: BF800000
	.long 0xbf800000                                           // 00000006A3B0: BF800000
	.long 0xbf800000                                           // 00000006A3B4: BF800000
	.long 0xbf800000                                           // 00000006A3B8: BF800000
	.long 0xbf800000                                           // 00000006A3BC: BF800000
	.long 0xbf800000                                           // 00000006A3C0: BF800000
	.long 0xbf800000                                           // 00000006A3C4: BF800000
	.long 0xbf800000                                           // 00000006A3C8: BF800000
	.long 0xbf800000                                           // 00000006A3CC: BF800000
	.long 0xbf800000                                           // 00000006A3D0: BF800000
	.long 0xbf800000                                           // 00000006A3D4: BF800000
	.long 0xbf800000                                           // 00000006A3D8: BF800000
	.long 0xbf800000                                           // 00000006A3DC: BF800000
	.long 0xbf800000                                           // 00000006A3E0: BF800000
	.long 0xbf800000                                           // 00000006A3E4: BF800000
	.long 0xbf800000                                           // 00000006A3E8: BF800000
	.long 0xbf800000                                           // 00000006A3EC: BF800000
	.long 0xbf800000                                           // 00000006A3F0: BF800000
	.long 0xbf800000                                           // 00000006A3F4: BF800000
	.long 0xbf800000                                           // 00000006A3F8: BF800000
	.long 0xbf800000                                           // 00000006A3FC: BF800000

	.p2align	8
	.type	add_get_global_offset_get_group_id,@function
	.size	add_get_global_offset_get_group_id, add_get_global_offset_get_group_id_symend-add_get_global_offset_get_group_id
add_get_global_offset_get_group_id:
	s_clause 0x1                                               // 00000006A400: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A404: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006A40C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006A414: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006A41C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A424: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A42C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006A434: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006A438: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006A440: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A448: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006A44C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006A454: BF89FC07
	v_add_co_u32 v0, s5, s8, v1                                // 00000006A458: D7000500 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006A460: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 00000006A464: D5207C01 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 00000006A46C: D7000502 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s5                   // 00000006A474: D5207C03 0015000B
	v_add_co_u32 v4, s5, s6, v4                                // 00000006A47C: D7000504 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A484: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006A488: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s5                    // 00000006A490: D5207C05 00150007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006A498: D73C0002 00020482
	s_add_i32 s2, s2, s8                                       // 00000006A4A0: 81020802
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006A4A4: BF870219
	v_mov_b32_e32 v6, s2                                       // 00000006A4A8: 7E0C0202
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A4AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006A4B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A4BC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006A4C0: D7006A02 00020400
	s_add_i32 s2, s3, s10                                      // 00000006A4C8: 81020A03
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006A4CC: 40060601
	v_mov_b32_e32 v7, s2                                       // 00000006A4D0: 7E0E0202
	s_add_i32 s2, s4, s6                                       // 00000006A4D4: 81020604
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006A4D8: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 00000006A4E0: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006A4E4: 400A0A01
	s_clause 0x2                                               // 00000006A4E8: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006A4EC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006A4F4: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006A4FC: DC6A0000 007C0804
	s_nop 0                                                    // 00000006A504: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A508: BFB60003
	s_endpgm                                                   // 00000006A50C: BFB00000
add_get_global_offset_get_group_id_symend:
	.long 0xbf800000                                           // 00000006A510: BF800000
	.long 0xbf800000                                           // 00000006A514: BF800000
	.long 0xbf800000                                           // 00000006A518: BF800000
	.long 0xbf800000                                           // 00000006A51C: BF800000
	.long 0xbf800000                                           // 00000006A520: BF800000
	.long 0xbf800000                                           // 00000006A524: BF800000
	.long 0xbf800000                                           // 00000006A528: BF800000
	.long 0xbf800000                                           // 00000006A52C: BF800000
	.long 0xbf800000                                           // 00000006A530: BF800000
	.long 0xbf800000                                           // 00000006A534: BF800000
	.long 0xbf800000                                           // 00000006A538: BF800000
	.long 0xbf800000                                           // 00000006A53C: BF800000
	.long 0xbf800000                                           // 00000006A540: BF800000
	.long 0xbf800000                                           // 00000006A544: BF800000
	.long 0xbf800000                                           // 00000006A548: BF800000
	.long 0xbf800000                                           // 00000006A54C: BF800000
	.long 0xbf800000                                           // 00000006A550: BF800000
	.long 0xbf800000                                           // 00000006A554: BF800000
	.long 0xbf800000                                           // 00000006A558: BF800000
	.long 0xbf800000                                           // 00000006A55C: BF800000
	.long 0xbf800000                                           // 00000006A560: BF800000
	.long 0xbf800000                                           // 00000006A564: BF800000
	.long 0xbf800000                                           // 00000006A568: BF800000
	.long 0xbf800000                                           // 00000006A56C: BF800000
	.long 0xbf800000                                           // 00000006A570: BF800000
	.long 0xbf800000                                           // 00000006A574: BF800000
	.long 0xbf800000                                           // 00000006A578: BF800000
	.long 0xbf800000                                           // 00000006A57C: BF800000
	.long 0xbf800000                                           // 00000006A580: BF800000
	.long 0xbf800000                                           // 00000006A584: BF800000
	.long 0xbf800000                                           // 00000006A588: BF800000
	.long 0xbf800000                                           // 00000006A58C: BF800000
	.long 0xbf800000                                           // 00000006A590: BF800000
	.long 0xbf800000                                           // 00000006A594: BF800000
	.long 0xbf800000                                           // 00000006A598: BF800000
	.long 0xbf800000                                           // 00000006A59C: BF800000
	.long 0xbf800000                                           // 00000006A5A0: BF800000
	.long 0xbf800000                                           // 00000006A5A4: BF800000
	.long 0xbf800000                                           // 00000006A5A8: BF800000
	.long 0xbf800000                                           // 00000006A5AC: BF800000
	.long 0xbf800000                                           // 00000006A5B0: BF800000
	.long 0xbf800000                                           // 00000006A5B4: BF800000
	.long 0xbf800000                                           // 00000006A5B8: BF800000
	.long 0xbf800000                                           // 00000006A5BC: BF800000
	.long 0xbf800000                                           // 00000006A5C0: BF800000
	.long 0xbf800000                                           // 00000006A5C4: BF800000
	.long 0xbf800000                                           // 00000006A5C8: BF800000
	.long 0xbf800000                                           // 00000006A5CC: BF800000
	.long 0xbf800000                                           // 00000006A5D0: BF800000
	.long 0xbf800000                                           // 00000006A5D4: BF800000
	.long 0xbf800000                                           // 00000006A5D8: BF800000
	.long 0xbf800000                                           // 00000006A5DC: BF800000
	.long 0xbf800000                                           // 00000006A5E0: BF800000
	.long 0xbf800000                                           // 00000006A5E4: BF800000
	.long 0xbf800000                                           // 00000006A5E8: BF800000
	.long 0xbf800000                                           // 00000006A5EC: BF800000
	.long 0xbf800000                                           // 00000006A5F0: BF800000
	.long 0xbf800000                                           // 00000006A5F4: BF800000
	.long 0xbf800000                                           // 00000006A5F8: BF800000
	.long 0xbf800000                                           // 00000006A5FC: BF800000

	.p2align	8
	.type	add_get_local_id_get_group_id,@function
	.size	add_get_local_id_get_group_id, add_get_local_id_get_group_id_symend-add_get_local_id_get_group_id
add_get_local_id_get_group_id:
	s_clause 0x1                                               // 00000006A600: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A604: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006A60C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006A614: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006A61C: D6100002 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006A624: D6100004 02292900
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A62C: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006A634: BEA10080
	v_add_nc_u32_e32 v1, s2, v1                                // 00000006A638: 4A020202
	v_add_nc_u32_e32 v0, s3, v2                                // 00000006A63C: 4A000403
	v_add_nc_u32_e32 v8, s4, v4                                // 00000006A640: 4A100804
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006A644: BF870193
	v_mad_u64_u32 v[2:3], null, s2, 7, v[1:2]                  // 00000006A648: D6FE7C02 04050E02
	v_mad_u64_u32 v[3:4], null, s3, 3, v[0:1]                  // 00000006A650: D6FE7C03 04010603
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A658: BF8701A3
	v_add_nc_u32_e32 v6, s4, v8                                // 00000006A65C: 4A0C1004
	s_waitcnt lgkmcnt(0)                                       // 00000006A660: BF89FC07
	v_add_co_u32 v4, s2, s8, v2                                // 00000006A664: D7000204 00020408
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006A66C: BF870211
	v_add_co_ci_u32_e64 v5, null, s9, 0, s2                    // 00000006A670: D5207C05 00090009
	v_add_co_u32 v2, s2, s10, v3                               // 00000006A678: D7000202 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A680: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006A684: D5207C03 0009000B
	v_add_co_u32 v6, s2, s6, v6                                // 00000006A68C: D7000206 00020C06
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006A694: D73C0004 00020882
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 00000006A69C: D5207C07 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006A6A4: BF870194
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006A6A8: D73C0002 00020482
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006A6B0: D7006A04 00020800
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A6B8: BF870223
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 00000006A6BC: D73C0006 00020C82
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006A6C4: 400A0A01
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006A6C8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006A6D0: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A6D4: BF870004
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 00000006A6D8: D7006A06 00020C00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 00000006A6E0: 400E0E01
	s_clause 0x2                                               // 00000006A6E4: BF850002
	global_store_b32 v[4:5], v1, off                           // 00000006A6E8: DC6A0000 007C0104
	global_store_b32 v[2:3], v0, off                           // 00000006A6F0: DC6A0000 007C0002
	global_store_b32 v[6:7], v8, off                           // 00000006A6F8: DC6A0000 007C0806
	s_nop 0                                                    // 00000006A700: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A704: BFB60003
	s_endpgm                                                   // 00000006A708: BFB00000
add_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000006A70C: BF800000
	.long 0xbf800000                                           // 00000006A710: BF800000
	.long 0xbf800000                                           // 00000006A714: BF800000
	.long 0xbf800000                                           // 00000006A718: BF800000
	.long 0xbf800000                                           // 00000006A71C: BF800000
	.long 0xbf800000                                           // 00000006A720: BF800000
	.long 0xbf800000                                           // 00000006A724: BF800000
	.long 0xbf800000                                           // 00000006A728: BF800000
	.long 0xbf800000                                           // 00000006A72C: BF800000
	.long 0xbf800000                                           // 00000006A730: BF800000
	.long 0xbf800000                                           // 00000006A734: BF800000
	.long 0xbf800000                                           // 00000006A738: BF800000
	.long 0xbf800000                                           // 00000006A73C: BF800000
	.long 0xbf800000                                           // 00000006A740: BF800000
	.long 0xbf800000                                           // 00000006A744: BF800000
	.long 0xbf800000                                           // 00000006A748: BF800000
	.long 0xbf800000                                           // 00000006A74C: BF800000
	.long 0xbf800000                                           // 00000006A750: BF800000
	.long 0xbf800000                                           // 00000006A754: BF800000
	.long 0xbf800000                                           // 00000006A758: BF800000
	.long 0xbf800000                                           // 00000006A75C: BF800000
	.long 0xbf800000                                           // 00000006A760: BF800000
	.long 0xbf800000                                           // 00000006A764: BF800000
	.long 0xbf800000                                           // 00000006A768: BF800000
	.long 0xbf800000                                           // 00000006A76C: BF800000
	.long 0xbf800000                                           // 00000006A770: BF800000
	.long 0xbf800000                                           // 00000006A774: BF800000
	.long 0xbf800000                                           // 00000006A778: BF800000
	.long 0xbf800000                                           // 00000006A77C: BF800000
	.long 0xbf800000                                           // 00000006A780: BF800000
	.long 0xbf800000                                           // 00000006A784: BF800000
	.long 0xbf800000                                           // 00000006A788: BF800000
	.long 0xbf800000                                           // 00000006A78C: BF800000
	.long 0xbf800000                                           // 00000006A790: BF800000
	.long 0xbf800000                                           // 00000006A794: BF800000
	.long 0xbf800000                                           // 00000006A798: BF800000
	.long 0xbf800000                                           // 00000006A79C: BF800000
	.long 0xbf800000                                           // 00000006A7A0: BF800000
	.long 0xbf800000                                           // 00000006A7A4: BF800000
	.long 0xbf800000                                           // 00000006A7A8: BF800000
	.long 0xbf800000                                           // 00000006A7AC: BF800000
	.long 0xbf800000                                           // 00000006A7B0: BF800000
	.long 0xbf800000                                           // 00000006A7B4: BF800000
	.long 0xbf800000                                           // 00000006A7B8: BF800000
	.long 0xbf800000                                           // 00000006A7BC: BF800000
	.long 0xbf800000                                           // 00000006A7C0: BF800000
	.long 0xbf800000                                           // 00000006A7C4: BF800000
	.long 0xbf800000                                           // 00000006A7C8: BF800000
	.long 0xbf800000                                           // 00000006A7CC: BF800000
	.long 0xbf800000                                           // 00000006A7D0: BF800000
	.long 0xbf800000                                           // 00000006A7D4: BF800000
	.long 0xbf800000                                           // 00000006A7D8: BF800000
	.long 0xbf800000                                           // 00000006A7DC: BF800000
	.long 0xbf800000                                           // 00000006A7E0: BF800000
	.long 0xbf800000                                           // 00000006A7E4: BF800000
	.long 0xbf800000                                           // 00000006A7E8: BF800000
	.long 0xbf800000                                           // 00000006A7EC: BF800000
	.long 0xbf800000                                           // 00000006A7F0: BF800000
	.long 0xbf800000                                           // 00000006A7F4: BF800000
	.long 0xbf800000                                           // 00000006A7F8: BF800000
	.long 0xbf800000                                           // 00000006A7FC: BF800000

	.p2align	8
	.type	add_get_group_id_get_group_id,@function
	.size	add_get_group_id_get_group_id, add_get_group_id_get_group_id_symend-add_get_group_id_get_group_id
add_get_group_id_get_group_id:
	s_clause 0x1                                               // 00000006A800: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A804: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006A80C: F4040180 F8000048
	s_lshl_b32 s2, s2, 1                                       // 00000006A814: 84028102
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006A818: BF8701C9
	v_dual_mov_b32 v6, s2 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000006A81C: CA240002 060000FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006A828: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A830: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A838: D6100000 02292900
	v_or_b32_e32 v1, s2, v1                                    // 00000006A840: 38020202
	s_lshl_b32 s4, s4, 1                                       // 00000006A844: 84048104
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006A848: D6560002 04090803
	s_lshl_b32 s2, s3, 1                                       // 00000006A850: 84028103
	v_or_b32_e32 v4, s4, v0                                    // 00000006A854: 38080004
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s4             // 00000006A858: CA100002 07080004
	s_mov_b32 s33, 0                                           // 00000006A860: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006A864: BF89FC07
	v_add_co_u32 v0, s5, s8, v1                                // 00000006A868: D7000500 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006A870: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 00000006A874: D5207C01 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 00000006A87C: D7000502 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s5                   // 00000006A884: D5207C03 0015000B
	v_add_co_u32 v4, s5, s6, v4                                // 00000006A88C: D7000504 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A894: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006A898: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s5                    // 00000006A8A0: D5207C05 00150007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006A8A8: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006A8B0: BF870193
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A8B4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006A8BC: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A8C4: 40020201
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A8C8: BF870224
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006A8CC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006A8D4: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006A8D8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006A8E0: 400A0A01
	s_clause 0x2                                               // 00000006A8E4: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006A8E8: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006A8F0: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006A8F8: DC6A0000 007C0804
	s_nop 0                                                    // 00000006A900: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A904: BFB60003
	s_endpgm                                                   // 00000006A908: BFB00000
add_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000006A90C: BF800000
	.long 0xbf800000                                           // 00000006A910: BF800000
	.long 0xbf800000                                           // 00000006A914: BF800000
	.long 0xbf800000                                           // 00000006A918: BF800000
	.long 0xbf800000                                           // 00000006A91C: BF800000
	.long 0xbf800000                                           // 00000006A920: BF800000
	.long 0xbf800000                                           // 00000006A924: BF800000
	.long 0xbf800000                                           // 00000006A928: BF800000
	.long 0xbf800000                                           // 00000006A92C: BF800000
	.long 0xbf800000                                           // 00000006A930: BF800000
	.long 0xbf800000                                           // 00000006A934: BF800000
	.long 0xbf800000                                           // 00000006A938: BF800000
	.long 0xbf800000                                           // 00000006A93C: BF800000
	.long 0xbf800000                                           // 00000006A940: BF800000
	.long 0xbf800000                                           // 00000006A944: BF800000
	.long 0xbf800000                                           // 00000006A948: BF800000
	.long 0xbf800000                                           // 00000006A94C: BF800000
	.long 0xbf800000                                           // 00000006A950: BF800000
	.long 0xbf800000                                           // 00000006A954: BF800000
	.long 0xbf800000                                           // 00000006A958: BF800000
	.long 0xbf800000                                           // 00000006A95C: BF800000
	.long 0xbf800000                                           // 00000006A960: BF800000
	.long 0xbf800000                                           // 00000006A964: BF800000
	.long 0xbf800000                                           // 00000006A968: BF800000
	.long 0xbf800000                                           // 00000006A96C: BF800000
	.long 0xbf800000                                           // 00000006A970: BF800000
	.long 0xbf800000                                           // 00000006A974: BF800000
	.long 0xbf800000                                           // 00000006A978: BF800000
	.long 0xbf800000                                           // 00000006A97C: BF800000
	.long 0xbf800000                                           // 00000006A980: BF800000
	.long 0xbf800000                                           // 00000006A984: BF800000
	.long 0xbf800000                                           // 00000006A988: BF800000
	.long 0xbf800000                                           // 00000006A98C: BF800000
	.long 0xbf800000                                           // 00000006A990: BF800000
	.long 0xbf800000                                           // 00000006A994: BF800000
	.long 0xbf800000                                           // 00000006A998: BF800000
	.long 0xbf800000                                           // 00000006A99C: BF800000
	.long 0xbf800000                                           // 00000006A9A0: BF800000
	.long 0xbf800000                                           // 00000006A9A4: BF800000
	.long 0xbf800000                                           // 00000006A9A8: BF800000
	.long 0xbf800000                                           // 00000006A9AC: BF800000
	.long 0xbf800000                                           // 00000006A9B0: BF800000
	.long 0xbf800000                                           // 00000006A9B4: BF800000
	.long 0xbf800000                                           // 00000006A9B8: BF800000
	.long 0xbf800000                                           // 00000006A9BC: BF800000
	.long 0xbf800000                                           // 00000006A9C0: BF800000
	.long 0xbf800000                                           // 00000006A9C4: BF800000
	.long 0xbf800000                                           // 00000006A9C8: BF800000
	.long 0xbf800000                                           // 00000006A9CC: BF800000
	.long 0xbf800000                                           // 00000006A9D0: BF800000
	.long 0xbf800000                                           // 00000006A9D4: BF800000
	.long 0xbf800000                                           // 00000006A9D8: BF800000
	.long 0xbf800000                                           // 00000006A9DC: BF800000
	.long 0xbf800000                                           // 00000006A9E0: BF800000
	.long 0xbf800000                                           // 00000006A9E4: BF800000
	.long 0xbf800000                                           // 00000006A9E8: BF800000
	.long 0xbf800000                                           // 00000006A9EC: BF800000
	.long 0xbf800000                                           // 00000006A9F0: BF800000
	.long 0xbf800000                                           // 00000006A9F4: BF800000
	.long 0xbf800000                                           // 00000006A9F8: BF800000
	.long 0xbf800000                                           // 00000006A9FC: BF800000

	.p2align	8
	.type	add_get_local_size_get_group_id,@function
	.size	add_get_local_size_get_group_id, add_get_local_size_get_group_id_symend-add_get_local_size_get_group_id
add_get_local_size_get_group_id:
	s_clause 0x1                                               // 00000006AA00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AA04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006AA0C: F4040180 F8000048
	s_add_i32 s5, s2, 2                                        // 00000006AA14: 81058202
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006AA18: BF8701C9
	v_dual_mov_b32 v6, s5 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000006AA1C: CA240005 060000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AA28: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006AA30: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AA38: D6100000 02292900
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006AA40: D6560001 04050202
	s_mov_b32 s33, 0                                           // 00000006AA48: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006AA4C: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006AA50: D6560002 04090203
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006AA58: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006AA60: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 00000006AA64: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006AA6C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006AA70: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006AA78: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006AA80: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006AA88: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006AA90: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006AA94: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006AA9C: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006AAA4: D73C0002 00020482
	s_add_i32 s2, s3, 2                                        // 00000006AAAC: 81028203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006AAB0: BF870193
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006AAB4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006AABC: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006AAC4: 40020201
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006AAC8: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006AACC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006AAD4: 40060601
	v_mov_b32_e32 v7, s2                                       // 00000006AAD8: 7E0E0202
	s_add_i32 s2, s4, 4                                        // 00000006AADC: 81028404
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006AAE0: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 00000006AAE8: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006AAEC: 400A0A01
	s_clause 0x2                                               // 00000006AAF0: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006AAF4: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006AAFC: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006AB04: DC6A0000 007C0804
	s_nop 0                                                    // 00000006AB0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006AB10: BFB60003
	s_endpgm                                                   // 00000006AB14: BFB00000
add_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000006AB18: BF800000
	.long 0xbf800000                                           // 00000006AB1C: BF800000
	.long 0xbf800000                                           // 00000006AB20: BF800000
	.long 0xbf800000                                           // 00000006AB24: BF800000
	.long 0xbf800000                                           // 00000006AB28: BF800000
	.long 0xbf800000                                           // 00000006AB2C: BF800000
	.long 0xbf800000                                           // 00000006AB30: BF800000
	.long 0xbf800000                                           // 00000006AB34: BF800000
	.long 0xbf800000                                           // 00000006AB38: BF800000
	.long 0xbf800000                                           // 00000006AB3C: BF800000
	.long 0xbf800000                                           // 00000006AB40: BF800000
	.long 0xbf800000                                           // 00000006AB44: BF800000
	.long 0xbf800000                                           // 00000006AB48: BF800000
	.long 0xbf800000                                           // 00000006AB4C: BF800000
	.long 0xbf800000                                           // 00000006AB50: BF800000
	.long 0xbf800000                                           // 00000006AB54: BF800000
	.long 0xbf800000                                           // 00000006AB58: BF800000
	.long 0xbf800000                                           // 00000006AB5C: BF800000
	.long 0xbf800000                                           // 00000006AB60: BF800000
	.long 0xbf800000                                           // 00000006AB64: BF800000
	.long 0xbf800000                                           // 00000006AB68: BF800000
	.long 0xbf800000                                           // 00000006AB6C: BF800000
	.long 0xbf800000                                           // 00000006AB70: BF800000
	.long 0xbf800000                                           // 00000006AB74: BF800000
	.long 0xbf800000                                           // 00000006AB78: BF800000
	.long 0xbf800000                                           // 00000006AB7C: BF800000
	.long 0xbf800000                                           // 00000006AB80: BF800000
	.long 0xbf800000                                           // 00000006AB84: BF800000
	.long 0xbf800000                                           // 00000006AB88: BF800000
	.long 0xbf800000                                           // 00000006AB8C: BF800000
	.long 0xbf800000                                           // 00000006AB90: BF800000
	.long 0xbf800000                                           // 00000006AB94: BF800000
	.long 0xbf800000                                           // 00000006AB98: BF800000
	.long 0xbf800000                                           // 00000006AB9C: BF800000
	.long 0xbf800000                                           // 00000006ABA0: BF800000
	.long 0xbf800000                                           // 00000006ABA4: BF800000
	.long 0xbf800000                                           // 00000006ABA8: BF800000
	.long 0xbf800000                                           // 00000006ABAC: BF800000
	.long 0xbf800000                                           // 00000006ABB0: BF800000
	.long 0xbf800000                                           // 00000006ABB4: BF800000
	.long 0xbf800000                                           // 00000006ABB8: BF800000
	.long 0xbf800000                                           // 00000006ABBC: BF800000
	.long 0xbf800000                                           // 00000006ABC0: BF800000
	.long 0xbf800000                                           // 00000006ABC4: BF800000
	.long 0xbf800000                                           // 00000006ABC8: BF800000
	.long 0xbf800000                                           // 00000006ABCC: BF800000
	.long 0xbf800000                                           // 00000006ABD0: BF800000
	.long 0xbf800000                                           // 00000006ABD4: BF800000
	.long 0xbf800000                                           // 00000006ABD8: BF800000
	.long 0xbf800000                                           // 00000006ABDC: BF800000
	.long 0xbf800000                                           // 00000006ABE0: BF800000
	.long 0xbf800000                                           // 00000006ABE4: BF800000
	.long 0xbf800000                                           // 00000006ABE8: BF800000
	.long 0xbf800000                                           // 00000006ABEC: BF800000
	.long 0xbf800000                                           // 00000006ABF0: BF800000
	.long 0xbf800000                                           // 00000006ABF4: BF800000
	.long 0xbf800000                                           // 00000006ABF8: BF800000
	.long 0xbf800000                                           // 00000006ABFC: BF800000

	.p2align	8
	.type	add_get_global_id_get_group_id,@function
	.size	add_get_global_id_get_group_id, add_get_global_id_get_group_id_symend-add_get_global_id_get_group_id
add_get_global_id_get_group_id:
	s_clause 0x2                                               // 00000006AC00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AC04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006AC0C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AC14: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006AC1C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006AC28: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006AC30: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006AC38: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006AC3C: BF870193
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006AC40: D6560000 04090202
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000006AC48: D6560003 040D0203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006AC50: BF870193
	v_lshl_or_b32 v5, s4, 2, v4                                // 00000006AC54: D6560005 04110404
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 00000006AC5C: D73C0001 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006AC64: BF89FC07
	v_add3_u32 v9, s2, s8, v0                                  // 00000006AC68: D6550009 04001002
	v_add_co_u32 v3, s2, s10, v3                               // 00000006AC70: D7000203 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006AC78: BF8700A1
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 00000006AC7C: D5207C04 0009000B
	v_add_co_u32 v5, s2, s6, v5                                // 00000006AC84: D7000205 00020A06
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 00000006AC8C: D5207C06 00090007
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006AC94: BF870003
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 00000006AC98: D73C0007 00020682
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000006ACA0: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000006ACA8: 40020401
	v_add_nc_u32_e32 v4, s3, v3                                // 00000006ACAC: 4A080603
	v_lshlrev_b64 v[2:3], 2, v[5:6]                            // 00000006ACB0: D73C0002 00020A82
	v_add_co_u32 v6, vcc_lo, s0, v7                            // 00000006ACB8: D7006A06 00020E00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v8, vcc_lo             // 00000006ACC0: 400E1001
	v_add_nc_u32_e32 v5, s4, v5                                // 00000006ACC4: 4A0A0A04
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006ACC8: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006ACCC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006ACD4: 40060601
	s_clause 0x2                                               // 00000006ACD8: BF850002
	global_store_b32 v[0:1], v9, off                           // 00000006ACDC: DC6A0000 007C0900
	global_store_b32 v[6:7], v4, off                           // 00000006ACE4: DC6A0000 007C0406
	global_store_b32 v[2:3], v5, off                           // 00000006ACEC: DC6A0000 007C0502
	s_nop 0                                                    // 00000006ACF4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006ACF8: BFB60003
	s_endpgm                                                   // 00000006ACFC: BFB00000
add_get_global_id_get_group_id_symend:

	.p2align	8
	.type	add_get_global_size_get_group_id,@function
	.size	add_get_global_size_get_group_id, add_get_global_size_get_group_id_symend-add_get_global_size_get_group_id
add_get_global_size_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 00000006AD00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006AD04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006AD0C: BEA10080
	s_clause 0x1                                               // 00000006AD10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006AD14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006AD1C: DC4A0026 07000001
	s_clause 0x3                                               // 00000006AD24: BF850003
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000006AD28: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AD30: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000006AD38: F4000140 F8000018
	s_load_b64 s[12:13], s[0:1], 0x48                          // 00000006AD40: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006AD48: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], null                            // 00000006AD50: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AD58: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006AD60: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006AD68: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006AD6C: D6560001 04050802
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006AD74: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006AD7C: BF89FC07
	s_lshl_b32 s6, s6, 4                                       // 00000006AD80: 84068406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006AD84: BF870092
	v_add_co_u32 v0, s8, s8, v1                                // 00000006AD88: D7000800 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 00000006AD90: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 00000006AD98: D7000802 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006ADA0: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 00000006ADA4: D5207C03 0021000B
	v_add_co_u32 v4, s8, s12, v4                               // 00000006ADAC: D7000804 0002080C
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006ADB4: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s8                   // 00000006ADBC: D5207C05 0021000D
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006ADC4: BF870134
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006ADC8: D73C0002 00020482
	s_lshl_b32 s7, s7, 1                                       // 00000006ADD0: 84078107
	s_lshl_b32 s5, s5, 1                                       // 00000006ADD4: 84058105
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006ADD8: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006ADE0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006ADE8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006ADEC: D7006A02 00020400
	s_add_i32 s6, s6, s2                                       // 00000006ADF4: 81060206
	s_add_i32 s7, s7, s3                                       // 00000006ADF8: 81070307
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006ADFC: 40060601
	s_add_i32 s5, s5, s4                                       // 00000006AE00: 81050405
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006AE04: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006AE0C: 400A0A01
	s_waitcnt vmcnt(1)                                         // 00000006AE10: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006AE14: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 00000006AE18: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006AE20: BF8903F7
	v_add_nc_u32_e32 v7, s5, v7                                // 00000006AE24: 4A0E0E05
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006AE28: BF870193
	v_add_nc_u32_e32 v8, s7, v8                                // 00000006AE2C: 4A101007
	v_add_nc_u32_e32 v6, s6, v6                                // 00000006AE30: 4A0C0C06
	s_clause 0x2                                               // 00000006AE34: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006AE38: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006AE40: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006AE48: DC6A0000 007C0704
	s_nop 0                                                    // 00000006AE50: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006AE54: BFB60003
	s_endpgm                                                   // 00000006AE58: BFB00000
add_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000006AE5C: BF800000
	.long 0xbf800000                                           // 00000006AE60: BF800000
	.long 0xbf800000                                           // 00000006AE64: BF800000
	.long 0xbf800000                                           // 00000006AE68: BF800000
	.long 0xbf800000                                           // 00000006AE6C: BF800000
	.long 0xbf800000                                           // 00000006AE70: BF800000
	.long 0xbf800000                                           // 00000006AE74: BF800000
	.long 0xbf800000                                           // 00000006AE78: BF800000
	.long 0xbf800000                                           // 00000006AE7C: BF800000
	.long 0xbf800000                                           // 00000006AE80: BF800000
	.long 0xbf800000                                           // 00000006AE84: BF800000
	.long 0xbf800000                                           // 00000006AE88: BF800000
	.long 0xbf800000                                           // 00000006AE8C: BF800000
	.long 0xbf800000                                           // 00000006AE90: BF800000
	.long 0xbf800000                                           // 00000006AE94: BF800000
	.long 0xbf800000                                           // 00000006AE98: BF800000
	.long 0xbf800000                                           // 00000006AE9C: BF800000
	.long 0xbf800000                                           // 00000006AEA0: BF800000
	.long 0xbf800000                                           // 00000006AEA4: BF800000
	.long 0xbf800000                                           // 00000006AEA8: BF800000
	.long 0xbf800000                                           // 00000006AEAC: BF800000
	.long 0xbf800000                                           // 00000006AEB0: BF800000
	.long 0xbf800000                                           // 00000006AEB4: BF800000
	.long 0xbf800000                                           // 00000006AEB8: BF800000
	.long 0xbf800000                                           // 00000006AEBC: BF800000
	.long 0xbf800000                                           // 00000006AEC0: BF800000
	.long 0xbf800000                                           // 00000006AEC4: BF800000
	.long 0xbf800000                                           // 00000006AEC8: BF800000
	.long 0xbf800000                                           // 00000006AECC: BF800000
	.long 0xbf800000                                           // 00000006AED0: BF800000
	.long 0xbf800000                                           // 00000006AED4: BF800000
	.long 0xbf800000                                           // 00000006AED8: BF800000
	.long 0xbf800000                                           // 00000006AEDC: BF800000
	.long 0xbf800000                                           // 00000006AEE0: BF800000
	.long 0xbf800000                                           // 00000006AEE4: BF800000
	.long 0xbf800000                                           // 00000006AEE8: BF800000
	.long 0xbf800000                                           // 00000006AEEC: BF800000
	.long 0xbf800000                                           // 00000006AEF0: BF800000
	.long 0xbf800000                                           // 00000006AEF4: BF800000
	.long 0xbf800000                                           // 00000006AEF8: BF800000
	.long 0xbf800000                                           // 00000006AEFC: BF800000

	.p2align	8
	.type	add_get_num_groups_get_group_id,@function
	.size	add_get_num_groups_get_group_id, add_get_num_groups_get_group_id_symend-add_get_num_groups_get_group_id
add_get_num_groups_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 00000006AF00: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006AF04: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006AF0C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006AF14: BEA10080
	s_clause 0x1                                               // 00000006AF18: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006AF1C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006AF24: DC4A0026 07000001
	s_clause 0x1                                               // 00000006AF2C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AF30: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006AF38: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006AF40: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AF48: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006AF50: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006AF58: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006AF5C: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006AF64: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006AF6C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006AF70: BF870092
	v_add_co_u32 v0, s5, s8, v1                                // 00000006AF74: D7000500 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 00000006AF7C: D5207C01 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 00000006AF84: D7000502 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006AF8C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s5                   // 00000006AF90: D5207C03 0015000B
	v_add_co_u32 v4, s5, s6, v4                                // 00000006AF98: D7000504 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006AFA0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s5                    // 00000006AFA8: D5207C05 00150007
	s_load_b32 s5, s[0:1], 0x18                                // 00000006AFB0: F4000140 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006AFB8: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006AFC0: BF870213
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006AFC4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006AFCC: 4002020D
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006AFD0: BF870093
	v_add_co_u32 v2, s1, s12, v2                               // 00000006AFD4: D7000102 0002040C
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 00000006AFDC: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006AFE4: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 00000006AFEC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006AFF0: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006AFF4: 7C7A0C80
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000006AFF8: BF8704D2
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006AFFC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006B004: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006B008: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006B00C: 7C7A0E80
	s_addc_u32 s1, s14, s2                                     // 00000006B010: 8201020E
	v_mov_b32_e32 v6, s1                                       // 00000006B014: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 00000006B018: BF078000
	s_addc_u32 s0, s15, s3                                     // 00000006B01C: 8200030F
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006B020: BF07806A
	v_mov_b32_e32 v7, s0                                       // 00000006B024: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 00000006B028: BF89FC07
	s_addc_u32 s0, s5, s4                                      // 00000006B02C: 82000405
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006B030: D7006A04 0002080C
	v_mov_b32_e32 v8, s0                                       // 00000006B038: 7E100200
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006B03C: 400A0A0D
	s_clause 0x2                                               // 00000006B040: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006B044: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006B04C: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006B054: DC6A0000 007C0804
	s_nop 0                                                    // 00000006B05C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B060: BFB60003
	s_endpgm                                                   // 00000006B064: BFB00000
add_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 00000006B068: BF800000
	.long 0xbf800000                                           // 00000006B06C: BF800000
	.long 0xbf800000                                           // 00000006B070: BF800000
	.long 0xbf800000                                           // 00000006B074: BF800000
	.long 0xbf800000                                           // 00000006B078: BF800000
	.long 0xbf800000                                           // 00000006B07C: BF800000
	.long 0xbf800000                                           // 00000006B080: BF800000
	.long 0xbf800000                                           // 00000006B084: BF800000
	.long 0xbf800000                                           // 00000006B088: BF800000
	.long 0xbf800000                                           // 00000006B08C: BF800000
	.long 0xbf800000                                           // 00000006B090: BF800000
	.long 0xbf800000                                           // 00000006B094: BF800000
	.long 0xbf800000                                           // 00000006B098: BF800000
	.long 0xbf800000                                           // 00000006B09C: BF800000
	.long 0xbf800000                                           // 00000006B0A0: BF800000
	.long 0xbf800000                                           // 00000006B0A4: BF800000
	.long 0xbf800000                                           // 00000006B0A8: BF800000
	.long 0xbf800000                                           // 00000006B0AC: BF800000
	.long 0xbf800000                                           // 00000006B0B0: BF800000
	.long 0xbf800000                                           // 00000006B0B4: BF800000
	.long 0xbf800000                                           // 00000006B0B8: BF800000
	.long 0xbf800000                                           // 00000006B0BC: BF800000
	.long 0xbf800000                                           // 00000006B0C0: BF800000
	.long 0xbf800000                                           // 00000006B0C4: BF800000
	.long 0xbf800000                                           // 00000006B0C8: BF800000
	.long 0xbf800000                                           // 00000006B0CC: BF800000
	.long 0xbf800000                                           // 00000006B0D0: BF800000
	.long 0xbf800000                                           // 00000006B0D4: BF800000
	.long 0xbf800000                                           // 00000006B0D8: BF800000
	.long 0xbf800000                                           // 00000006B0DC: BF800000
	.long 0xbf800000                                           // 00000006B0E0: BF800000
	.long 0xbf800000                                           // 00000006B0E4: BF800000
	.long 0xbf800000                                           // 00000006B0E8: BF800000
	.long 0xbf800000                                           // 00000006B0EC: BF800000
	.long 0xbf800000                                           // 00000006B0F0: BF800000
	.long 0xbf800000                                           // 00000006B0F4: BF800000
	.long 0xbf800000                                           // 00000006B0F8: BF800000
	.long 0xbf800000                                           // 00000006B0FC: BF800000

	.p2align	8
	.type	add_get_work_dim_get_group_id,@function
	.size	add_get_work_dim_get_group_id, add_get_work_dim_get_group_id_symend-add_get_work_dim_get_group_id
add_get_work_dim_get_group_id:
	s_clause 0x2                                               // 00000006B100: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006B104: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B10C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006B114: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006B11C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006B124: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B12C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B13C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006B140: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006B148: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006B150: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006B154: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006B15C: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 00000006B160: 8B05FF05 0000FFFF
	v_add_co_u32 v0, s8, s8, v1                                // 00000006B168: D7000800 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 00000006B170: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 00000006B178: D7000802 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B180: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 00000006B184: D5207C03 0021000B
	v_add_co_u32 v4, s6, s6, v4                                // 00000006B18C: D7000604 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006B194: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s6                    // 00000006B19C: D5207C05 00190007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006B1A4: BF8704A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006B1A8: D73C0002 00020482
	s_add_i32 s2, s2, s5                                       // 00000006B1B0: 81020502
	v_mov_b32_e32 v6, s2                                       // 00000006B1B4: 7E0C0202
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B1B8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B1BC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006B1C4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B1CC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B1D0: D7006A02 00020400
	s_add_i32 s2, s3, s5                                       // 00000006B1D8: 81020503
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B1DC: 40060601
	v_mov_b32_e32 v7, s2                                       // 00000006B1E0: 7E0E0202
	s_add_i32 s2, s4, s5                                       // 00000006B1E4: 81020504
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006B1E8: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 00000006B1F0: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006B1F4: 400A0A01
	s_clause 0x2                                               // 00000006B1F8: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006B1FC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006B204: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006B20C: DC6A0000 007C0804
	s_nop 0                                                    // 00000006B214: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B218: BFB60003
	s_endpgm                                                   // 00000006B21C: BFB00000
add_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 00000006B220: BF800000
	.long 0xbf800000                                           // 00000006B224: BF800000
	.long 0xbf800000                                           // 00000006B228: BF800000
	.long 0xbf800000                                           // 00000006B22C: BF800000
	.long 0xbf800000                                           // 00000006B230: BF800000
	.long 0xbf800000                                           // 00000006B234: BF800000
	.long 0xbf800000                                           // 00000006B238: BF800000
	.long 0xbf800000                                           // 00000006B23C: BF800000
	.long 0xbf800000                                           // 00000006B240: BF800000
	.long 0xbf800000                                           // 00000006B244: BF800000
	.long 0xbf800000                                           // 00000006B248: BF800000
	.long 0xbf800000                                           // 00000006B24C: BF800000
	.long 0xbf800000                                           // 00000006B250: BF800000
	.long 0xbf800000                                           // 00000006B254: BF800000
	.long 0xbf800000                                           // 00000006B258: BF800000
	.long 0xbf800000                                           // 00000006B25C: BF800000
	.long 0xbf800000                                           // 00000006B260: BF800000
	.long 0xbf800000                                           // 00000006B264: BF800000
	.long 0xbf800000                                           // 00000006B268: BF800000
	.long 0xbf800000                                           // 00000006B26C: BF800000
	.long 0xbf800000                                           // 00000006B270: BF800000
	.long 0xbf800000                                           // 00000006B274: BF800000
	.long 0xbf800000                                           // 00000006B278: BF800000
	.long 0xbf800000                                           // 00000006B27C: BF800000
	.long 0xbf800000                                           // 00000006B280: BF800000
	.long 0xbf800000                                           // 00000006B284: BF800000
	.long 0xbf800000                                           // 00000006B288: BF800000
	.long 0xbf800000                                           // 00000006B28C: BF800000
	.long 0xbf800000                                           // 00000006B290: BF800000
	.long 0xbf800000                                           // 00000006B294: BF800000
	.long 0xbf800000                                           // 00000006B298: BF800000
	.long 0xbf800000                                           // 00000006B29C: BF800000
	.long 0xbf800000                                           // 00000006B2A0: BF800000
	.long 0xbf800000                                           // 00000006B2A4: BF800000
	.long 0xbf800000                                           // 00000006B2A8: BF800000
	.long 0xbf800000                                           // 00000006B2AC: BF800000
	.long 0xbf800000                                           // 00000006B2B0: BF800000
	.long 0xbf800000                                           // 00000006B2B4: BF800000
	.long 0xbf800000                                           // 00000006B2B8: BF800000
	.long 0xbf800000                                           // 00000006B2BC: BF800000
	.long 0xbf800000                                           // 00000006B2C0: BF800000
	.long 0xbf800000                                           // 00000006B2C4: BF800000
	.long 0xbf800000                                           // 00000006B2C8: BF800000
	.long 0xbf800000                                           // 00000006B2CC: BF800000
	.long 0xbf800000                                           // 00000006B2D0: BF800000
	.long 0xbf800000                                           // 00000006B2D4: BF800000
	.long 0xbf800000                                           // 00000006B2D8: BF800000
	.long 0xbf800000                                           // 00000006B2DC: BF800000
	.long 0xbf800000                                           // 00000006B2E0: BF800000
	.long 0xbf800000                                           // 00000006B2E4: BF800000
	.long 0xbf800000                                           // 00000006B2E8: BF800000
	.long 0xbf800000                                           // 00000006B2EC: BF800000
	.long 0xbf800000                                           // 00000006B2F0: BF800000
	.long 0xbf800000                                           // 00000006B2F4: BF800000
	.long 0xbf800000                                           // 00000006B2F8: BF800000
	.long 0xbf800000                                           // 00000006B2FC: BF800000

	.p2align	8
	.type	add_x_get_local_size,@function
	.size	add_x_get_local_size, add_x_get_local_size_symend-add_x_get_local_size
add_x_get_local_size:
	s_clause 0x2                                               // 00000006B300: BF850002
	s_load_b32 s5, s[0:1], 0x8                                 // 00000006B304: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B30C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006B314: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006B31C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006B324: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], null                            // 00000006B32C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B334: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B33C: BEA10080
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006B340: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006B348: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006B350: BF870003
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006B354: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006B35C: BF89FC07
	s_add_i32 s2, s5, 16                                       // 00000006B360: 81029005
	v_add_co_u32 v0, s3, s8, v1                                // 00000006B364: D7000300 00020208
	v_mov_b32_e32 v6, s2                                       // 00000006B36C: 7E0C0202
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006B370: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006B378: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B380: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006B384: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006B38C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006B394: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006B39C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006B3A4: BF8701A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006B3A8: D73C0002 00020482
	s_add_i32 s2, s5, 2                                        // 00000006B3B0: 81028205
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B3B4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B3BC: BF870223
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006B3C0: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B3C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B3CC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B3D4: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B3D8: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006B3DC: D7006A04 00020800
	v_mov_b32_e32 v7, s2                                       // 00000006B3E4: 7E0E0202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006B3E8: 400A0A01
	s_clause 0x2                                               // 00000006B3EC: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006B3F0: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006B3F8: DC6A0000 007C0702
	global_store_b32 v[4:5], v7, off                           // 00000006B400: DC6A0000 007C0704
	s_nop 0                                                    // 00000006B408: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B40C: BFB60003
	s_endpgm                                                   // 00000006B410: BFB00000
add_x_get_local_size_symend:
	.long 0xbf800000                                           // 00000006B414: BF800000
	.long 0xbf800000                                           // 00000006B418: BF800000
	.long 0xbf800000                                           // 00000006B41C: BF800000
	.long 0xbf800000                                           // 00000006B420: BF800000
	.long 0xbf800000                                           // 00000006B424: BF800000
	.long 0xbf800000                                           // 00000006B428: BF800000
	.long 0xbf800000                                           // 00000006B42C: BF800000
	.long 0xbf800000                                           // 00000006B430: BF800000
	.long 0xbf800000                                           // 00000006B434: BF800000
	.long 0xbf800000                                           // 00000006B438: BF800000
	.long 0xbf800000                                           // 00000006B43C: BF800000
	.long 0xbf800000                                           // 00000006B440: BF800000
	.long 0xbf800000                                           // 00000006B444: BF800000
	.long 0xbf800000                                           // 00000006B448: BF800000
	.long 0xbf800000                                           // 00000006B44C: BF800000
	.long 0xbf800000                                           // 00000006B450: BF800000
	.long 0xbf800000                                           // 00000006B454: BF800000
	.long 0xbf800000                                           // 00000006B458: BF800000
	.long 0xbf800000                                           // 00000006B45C: BF800000
	.long 0xbf800000                                           // 00000006B460: BF800000
	.long 0xbf800000                                           // 00000006B464: BF800000
	.long 0xbf800000                                           // 00000006B468: BF800000
	.long 0xbf800000                                           // 00000006B46C: BF800000
	.long 0xbf800000                                           // 00000006B470: BF800000
	.long 0xbf800000                                           // 00000006B474: BF800000
	.long 0xbf800000                                           // 00000006B478: BF800000
	.long 0xbf800000                                           // 00000006B47C: BF800000
	.long 0xbf800000                                           // 00000006B480: BF800000
	.long 0xbf800000                                           // 00000006B484: BF800000
	.long 0xbf800000                                           // 00000006B488: BF800000
	.long 0xbf800000                                           // 00000006B48C: BF800000
	.long 0xbf800000                                           // 00000006B490: BF800000
	.long 0xbf800000                                           // 00000006B494: BF800000
	.long 0xbf800000                                           // 00000006B498: BF800000
	.long 0xbf800000                                           // 00000006B49C: BF800000
	.long 0xbf800000                                           // 00000006B4A0: BF800000
	.long 0xbf800000                                           // 00000006B4A4: BF800000
	.long 0xbf800000                                           // 00000006B4A8: BF800000
	.long 0xbf800000                                           // 00000006B4AC: BF800000
	.long 0xbf800000                                           // 00000006B4B0: BF800000
	.long 0xbf800000                                           // 00000006B4B4: BF800000
	.long 0xbf800000                                           // 00000006B4B8: BF800000
	.long 0xbf800000                                           // 00000006B4BC: BF800000
	.long 0xbf800000                                           // 00000006B4C0: BF800000
	.long 0xbf800000                                           // 00000006B4C4: BF800000
	.long 0xbf800000                                           // 00000006B4C8: BF800000
	.long 0xbf800000                                           // 00000006B4CC: BF800000
	.long 0xbf800000                                           // 00000006B4D0: BF800000
	.long 0xbf800000                                           // 00000006B4D4: BF800000
	.long 0xbf800000                                           // 00000006B4D8: BF800000
	.long 0xbf800000                                           // 00000006B4DC: BF800000
	.long 0xbf800000                                           // 00000006B4E0: BF800000
	.long 0xbf800000                                           // 00000006B4E4: BF800000
	.long 0xbf800000                                           // 00000006B4E8: BF800000
	.long 0xbf800000                                           // 00000006B4EC: BF800000
	.long 0xbf800000                                           // 00000006B4F0: BF800000
	.long 0xbf800000                                           // 00000006B4F4: BF800000
	.long 0xbf800000                                           // 00000006B4F8: BF800000
	.long 0xbf800000                                           // 00000006B4FC: BF800000

	.p2align	8
	.type	add_get_global_offset_get_local_size,@function
	.size	add_get_global_offset_get_local_size, add_get_global_offset_get_local_size_symend-add_get_global_offset_get_local_size
add_get_global_offset_get_local_size:
	s_clause 0x1                                               // 00000006B500: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B504: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006B50C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006B514: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006B51C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B524: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B52C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B534: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006B538: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006B540: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006B548: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006B54C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006B554: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 00000006B558: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006B560: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006B564: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006B56C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006B574: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006B57C: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B584: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006B588: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006B590: D5207C05 000D0007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006B598: D73C0002 00020482
	s_add_i32 s2, s8, 2                                        // 00000006B5A0: 81028208
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006B5A4: BF870219
	v_mov_b32_e32 v6, s2                                       // 00000006B5A8: 7E0C0202
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B5AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006B5B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B5BC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B5C0: D7006A02 00020400
	s_add_i32 s2, s10, 16                                      // 00000006B5C8: 8102900A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B5CC: 40060601
	v_mov_b32_e32 v7, s2                                       // 00000006B5D0: 7E0E0202
	s_add_i32 s2, s6, 2                                        // 00000006B5D4: 81028206
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006B5D8: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 00000006B5E0: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006B5E4: 400A0A01
	s_clause 0x2                                               // 00000006B5E8: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006B5EC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006B5F4: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006B5FC: DC6A0000 007C0804
	s_nop 0                                                    // 00000006B604: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B608: BFB60003
	s_endpgm                                                   // 00000006B60C: BFB00000
add_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 00000006B610: BF800000
	.long 0xbf800000                                           // 00000006B614: BF800000
	.long 0xbf800000                                           // 00000006B618: BF800000
	.long 0xbf800000                                           // 00000006B61C: BF800000
	.long 0xbf800000                                           // 00000006B620: BF800000
	.long 0xbf800000                                           // 00000006B624: BF800000
	.long 0xbf800000                                           // 00000006B628: BF800000
	.long 0xbf800000                                           // 00000006B62C: BF800000
	.long 0xbf800000                                           // 00000006B630: BF800000
	.long 0xbf800000                                           // 00000006B634: BF800000
	.long 0xbf800000                                           // 00000006B638: BF800000
	.long 0xbf800000                                           // 00000006B63C: BF800000
	.long 0xbf800000                                           // 00000006B640: BF800000
	.long 0xbf800000                                           // 00000006B644: BF800000
	.long 0xbf800000                                           // 00000006B648: BF800000
	.long 0xbf800000                                           // 00000006B64C: BF800000
	.long 0xbf800000                                           // 00000006B650: BF800000
	.long 0xbf800000                                           // 00000006B654: BF800000
	.long 0xbf800000                                           // 00000006B658: BF800000
	.long 0xbf800000                                           // 00000006B65C: BF800000
	.long 0xbf800000                                           // 00000006B660: BF800000
	.long 0xbf800000                                           // 00000006B664: BF800000
	.long 0xbf800000                                           // 00000006B668: BF800000
	.long 0xbf800000                                           // 00000006B66C: BF800000
	.long 0xbf800000                                           // 00000006B670: BF800000
	.long 0xbf800000                                           // 00000006B674: BF800000
	.long 0xbf800000                                           // 00000006B678: BF800000
	.long 0xbf800000                                           // 00000006B67C: BF800000
	.long 0xbf800000                                           // 00000006B680: BF800000
	.long 0xbf800000                                           // 00000006B684: BF800000
	.long 0xbf800000                                           // 00000006B688: BF800000
	.long 0xbf800000                                           // 00000006B68C: BF800000
	.long 0xbf800000                                           // 00000006B690: BF800000
	.long 0xbf800000                                           // 00000006B694: BF800000
	.long 0xbf800000                                           // 00000006B698: BF800000
	.long 0xbf800000                                           // 00000006B69C: BF800000
	.long 0xbf800000                                           // 00000006B6A0: BF800000
	.long 0xbf800000                                           // 00000006B6A4: BF800000
	.long 0xbf800000                                           // 00000006B6A8: BF800000
	.long 0xbf800000                                           // 00000006B6AC: BF800000
	.long 0xbf800000                                           // 00000006B6B0: BF800000
	.long 0xbf800000                                           // 00000006B6B4: BF800000
	.long 0xbf800000                                           // 00000006B6B8: BF800000
	.long 0xbf800000                                           // 00000006B6BC: BF800000
	.long 0xbf800000                                           // 00000006B6C0: BF800000
	.long 0xbf800000                                           // 00000006B6C4: BF800000
	.long 0xbf800000                                           // 00000006B6C8: BF800000
	.long 0xbf800000                                           // 00000006B6CC: BF800000
	.long 0xbf800000                                           // 00000006B6D0: BF800000
	.long 0xbf800000                                           // 00000006B6D4: BF800000
	.long 0xbf800000                                           // 00000006B6D8: BF800000
	.long 0xbf800000                                           // 00000006B6DC: BF800000
	.long 0xbf800000                                           // 00000006B6E0: BF800000
	.long 0xbf800000                                           // 00000006B6E4: BF800000
	.long 0xbf800000                                           // 00000006B6E8: BF800000
	.long 0xbf800000                                           // 00000006B6EC: BF800000
	.long 0xbf800000                                           // 00000006B6F0: BF800000
	.long 0xbf800000                                           // 00000006B6F4: BF800000
	.long 0xbf800000                                           // 00000006B6F8: BF800000
	.long 0xbf800000                                           // 00000006B6FC: BF800000

	.p2align	8
	.type	add_get_local_id_get_local_size,@function
	.size	add_get_local_id_get_local_size, add_get_local_id_get_local_size_symend-add_get_local_id_get_local_size
add_get_local_id_get_local_size:
	s_clause 0x1                                               // 00000006B700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006B70C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006B714: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006B71C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B724: F4040000 F8000008
	v_bfe_u32 v6, v0, 20, 10                                   // 00000006B72C: D6100006 02292900
	s_mov_b32 s33, 0                                           // 00000006B734: BEA10080
	v_lshl_or_b32 v0, s2, 3, v1                                // 00000006B738: D6560000 04050602
	v_or_b32_e32 v8, 4, v2                                     // 00000006B740: 38100484
	v_lshl_or_b32 v2, s3, 2, v2                                // 00000006B744: D6560002 04090403
	v_lshl_or_b32 v4, s4, 1, v6                                // 00000006B74C: D6560004 04190204
	v_or_b32_e32 v7, 8, v1                                     // 00000006B754: 380E0288
	v_or_b32_e32 v6, 2, v6                                     // 00000006B758: 380C0C82
	s_waitcnt lgkmcnt(0)                                       // 00000006B75C: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 00000006B760: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006B768: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006B76C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006B774: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006B77C: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006B784: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B78C: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006B790: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006B798: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006B7A0: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B7A8: BF870193
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B7AC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006B7B4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B7BC: 40020201
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B7C0: BF870224
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B7C4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B7CC: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006B7D0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006B7D8: 400A0A01
	s_clause 0x2                                               // 00000006B7DC: BF850002
	global_store_b32 v[0:1], v7, off                           // 00000006B7E0: DC6A0000 007C0700
	global_store_b32 v[2:3], v8, off                           // 00000006B7E8: DC6A0000 007C0802
	global_store_b32 v[4:5], v6, off                           // 00000006B7F0: DC6A0000 007C0604
	s_nop 0                                                    // 00000006B7F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B7FC: BFB60003
	s_endpgm                                                   // 00000006B800: BFB00000
add_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000006B804: BF800000
	.long 0xbf800000                                           // 00000006B808: BF800000
	.long 0xbf800000                                           // 00000006B80C: BF800000
	.long 0xbf800000                                           // 00000006B810: BF800000
	.long 0xbf800000                                           // 00000006B814: BF800000
	.long 0xbf800000                                           // 00000006B818: BF800000
	.long 0xbf800000                                           // 00000006B81C: BF800000
	.long 0xbf800000                                           // 00000006B820: BF800000
	.long 0xbf800000                                           // 00000006B824: BF800000
	.long 0xbf800000                                           // 00000006B828: BF800000
	.long 0xbf800000                                           // 00000006B82C: BF800000
	.long 0xbf800000                                           // 00000006B830: BF800000
	.long 0xbf800000                                           // 00000006B834: BF800000
	.long 0xbf800000                                           // 00000006B838: BF800000
	.long 0xbf800000                                           // 00000006B83C: BF800000
	.long 0xbf800000                                           // 00000006B840: BF800000
	.long 0xbf800000                                           // 00000006B844: BF800000
	.long 0xbf800000                                           // 00000006B848: BF800000
	.long 0xbf800000                                           // 00000006B84C: BF800000
	.long 0xbf800000                                           // 00000006B850: BF800000
	.long 0xbf800000                                           // 00000006B854: BF800000
	.long 0xbf800000                                           // 00000006B858: BF800000
	.long 0xbf800000                                           // 00000006B85C: BF800000
	.long 0xbf800000                                           // 00000006B860: BF800000
	.long 0xbf800000                                           // 00000006B864: BF800000
	.long 0xbf800000                                           // 00000006B868: BF800000
	.long 0xbf800000                                           // 00000006B86C: BF800000
	.long 0xbf800000                                           // 00000006B870: BF800000
	.long 0xbf800000                                           // 00000006B874: BF800000
	.long 0xbf800000                                           // 00000006B878: BF800000
	.long 0xbf800000                                           // 00000006B87C: BF800000
	.long 0xbf800000                                           // 00000006B880: BF800000
	.long 0xbf800000                                           // 00000006B884: BF800000
	.long 0xbf800000                                           // 00000006B888: BF800000
	.long 0xbf800000                                           // 00000006B88C: BF800000
	.long 0xbf800000                                           // 00000006B890: BF800000
	.long 0xbf800000                                           // 00000006B894: BF800000
	.long 0xbf800000                                           // 00000006B898: BF800000
	.long 0xbf800000                                           // 00000006B89C: BF800000
	.long 0xbf800000                                           // 00000006B8A0: BF800000
	.long 0xbf800000                                           // 00000006B8A4: BF800000
	.long 0xbf800000                                           // 00000006B8A8: BF800000
	.long 0xbf800000                                           // 00000006B8AC: BF800000
	.long 0xbf800000                                           // 00000006B8B0: BF800000
	.long 0xbf800000                                           // 00000006B8B4: BF800000
	.long 0xbf800000                                           // 00000006B8B8: BF800000
	.long 0xbf800000                                           // 00000006B8BC: BF800000
	.long 0xbf800000                                           // 00000006B8C0: BF800000
	.long 0xbf800000                                           // 00000006B8C4: BF800000
	.long 0xbf800000                                           // 00000006B8C8: BF800000
	.long 0xbf800000                                           // 00000006B8CC: BF800000
	.long 0xbf800000                                           // 00000006B8D0: BF800000
	.long 0xbf800000                                           // 00000006B8D4: BF800000
	.long 0xbf800000                                           // 00000006B8D8: BF800000
	.long 0xbf800000                                           // 00000006B8DC: BF800000
	.long 0xbf800000                                           // 00000006B8E0: BF800000
	.long 0xbf800000                                           // 00000006B8E4: BF800000
	.long 0xbf800000                                           // 00000006B8E8: BF800000
	.long 0xbf800000                                           // 00000006B8EC: BF800000
	.long 0xbf800000                                           // 00000006B8F0: BF800000
	.long 0xbf800000                                           // 00000006B8F4: BF800000
	.long 0xbf800000                                           // 00000006B8F8: BF800000
	.long 0xbf800000                                           // 00000006B8FC: BF800000

	.p2align	8
	.type	add_get_group_id_get_local_size,@function
	.size	add_get_group_id_get_local_size, add_get_group_id_get_local_size_symend-add_get_group_id_get_local_size
add_get_group_id_get_local_size:
	s_clause 0x1                                               // 00000006B900: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B904: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006B90C: F4040180 F8000048
	s_add_i32 s5, s2, 2                                        // 00000006B914: 81058202
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006B918: BF8701C9
	v_dual_mov_b32 v6, s5 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000006B91C: CA240005 060000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B928: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006B930: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B938: D6100000 02292900
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006B940: D6560001 04050202
	s_mov_b32 s33, 0                                           // 00000006B948: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B94C: BF870193
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006B950: D6560002 04090803
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006B958: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006B960: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 00000006B964: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006B96C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006B970: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006B978: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006B980: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006B988: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B990: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006B994: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006B99C: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006B9A4: D73C0002 00020482
	s_add_i32 s2, s3, 16                                       // 00000006B9AC: 81029003
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B9B0: BF870193
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B9B4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006B9BC: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B9C4: 40020201
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B9C8: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B9CC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B9D4: 40060601
	v_mov_b32_e32 v7, s2                                       // 00000006B9D8: 7E0E0202
	s_add_i32 s2, s4, 2                                        // 00000006B9DC: 81028204
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006B9E0: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 00000006B9E8: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006B9EC: 400A0A01
	s_clause 0x2                                               // 00000006B9F0: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006B9F4: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006B9FC: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006BA04: DC6A0000 007C0804
	s_nop 0                                                    // 00000006BA0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BA10: BFB60003
	s_endpgm                                                   // 00000006BA14: BFB00000
add_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000006BA18: BF800000
	.long 0xbf800000                                           // 00000006BA1C: BF800000
	.long 0xbf800000                                           // 00000006BA20: BF800000
	.long 0xbf800000                                           // 00000006BA24: BF800000
	.long 0xbf800000                                           // 00000006BA28: BF800000
	.long 0xbf800000                                           // 00000006BA2C: BF800000
	.long 0xbf800000                                           // 00000006BA30: BF800000
	.long 0xbf800000                                           // 00000006BA34: BF800000
	.long 0xbf800000                                           // 00000006BA38: BF800000
	.long 0xbf800000                                           // 00000006BA3C: BF800000
	.long 0xbf800000                                           // 00000006BA40: BF800000
	.long 0xbf800000                                           // 00000006BA44: BF800000
	.long 0xbf800000                                           // 00000006BA48: BF800000
	.long 0xbf800000                                           // 00000006BA4C: BF800000
	.long 0xbf800000                                           // 00000006BA50: BF800000
	.long 0xbf800000                                           // 00000006BA54: BF800000
	.long 0xbf800000                                           // 00000006BA58: BF800000
	.long 0xbf800000                                           // 00000006BA5C: BF800000
	.long 0xbf800000                                           // 00000006BA60: BF800000
	.long 0xbf800000                                           // 00000006BA64: BF800000
	.long 0xbf800000                                           // 00000006BA68: BF800000
	.long 0xbf800000                                           // 00000006BA6C: BF800000
	.long 0xbf800000                                           // 00000006BA70: BF800000
	.long 0xbf800000                                           // 00000006BA74: BF800000
	.long 0xbf800000                                           // 00000006BA78: BF800000
	.long 0xbf800000                                           // 00000006BA7C: BF800000
	.long 0xbf800000                                           // 00000006BA80: BF800000
	.long 0xbf800000                                           // 00000006BA84: BF800000
	.long 0xbf800000                                           // 00000006BA88: BF800000
	.long 0xbf800000                                           // 00000006BA8C: BF800000
	.long 0xbf800000                                           // 00000006BA90: BF800000
	.long 0xbf800000                                           // 00000006BA94: BF800000
	.long 0xbf800000                                           // 00000006BA98: BF800000
	.long 0xbf800000                                           // 00000006BA9C: BF800000
	.long 0xbf800000                                           // 00000006BAA0: BF800000
	.long 0xbf800000                                           // 00000006BAA4: BF800000
	.long 0xbf800000                                           // 00000006BAA8: BF800000
	.long 0xbf800000                                           // 00000006BAAC: BF800000
	.long 0xbf800000                                           // 00000006BAB0: BF800000
	.long 0xbf800000                                           // 00000006BAB4: BF800000
	.long 0xbf800000                                           // 00000006BAB8: BF800000
	.long 0xbf800000                                           // 00000006BABC: BF800000
	.long 0xbf800000                                           // 00000006BAC0: BF800000
	.long 0xbf800000                                           // 00000006BAC4: BF800000
	.long 0xbf800000                                           // 00000006BAC8: BF800000
	.long 0xbf800000                                           // 00000006BACC: BF800000
	.long 0xbf800000                                           // 00000006BAD0: BF800000
	.long 0xbf800000                                           // 00000006BAD4: BF800000
	.long 0xbf800000                                           // 00000006BAD8: BF800000
	.long 0xbf800000                                           // 00000006BADC: BF800000
	.long 0xbf800000                                           // 00000006BAE0: BF800000
	.long 0xbf800000                                           // 00000006BAE4: BF800000
	.long 0xbf800000                                           // 00000006BAE8: BF800000
	.long 0xbf800000                                           // 00000006BAEC: BF800000
	.long 0xbf800000                                           // 00000006BAF0: BF800000
	.long 0xbf800000                                           // 00000006BAF4: BF800000
	.long 0xbf800000                                           // 00000006BAF8: BF800000
	.long 0xbf800000                                           // 00000006BAFC: BF800000

	.p2align	8
	.type	add_get_local_size_get_local_size,@function
	.size	add_get_local_size_get_local_size, add_get_local_size_get_local_size_symend-add_get_local_size_get_local_size
add_get_local_size_get_local_size:
	s_clause 0x1                                               // 00000006BB00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006BB04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006BB0C: F4040180 F8000048
	v_dual_mov_b32 v6, 4 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006BB14: CA240084 060000FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006BB20: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006BB28: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006BB30: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006BB38: BF870003
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006BB3C: D6560001 04050202
	v_mov_b32_e32 v7, 8                                        // 00000006BB44: 7E0E0288
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006BB48: D6560002 04090203
	s_mov_b32 s33, 0                                           // 00000006BB50: BEA10080
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006BB54: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006BB5C: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 00000006BB60: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006BB68: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006BB6C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006BB74: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006BB7C: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006BB84: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006BB8C: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006BB90: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006BB98: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006BBA0: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006BBA8: BF870212
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006BBAC: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006BBB4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006BBBC: 40020201
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006BBC0: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006BBC4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006BBCC: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006BBD0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006BBD8: 400A0A01
	s_clause 0x2                                               // 00000006BBDC: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006BBE0: DC6A0000 007C0600
	global_store_b32 v[2:3], v6, off                           // 00000006BBE8: DC6A0000 007C0602
	global_store_b32 v[4:5], v7, off                           // 00000006BBF0: DC6A0000 007C0704
	s_nop 0                                                    // 00000006BBF8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BBFC: BFB60003
	s_endpgm                                                   // 00000006BC00: BFB00000
add_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000006BC04: BF800000
	.long 0xbf800000                                           // 00000006BC08: BF800000
	.long 0xbf800000                                           // 00000006BC0C: BF800000
	.long 0xbf800000                                           // 00000006BC10: BF800000
	.long 0xbf800000                                           // 00000006BC14: BF800000
	.long 0xbf800000                                           // 00000006BC18: BF800000
	.long 0xbf800000                                           // 00000006BC1C: BF800000
	.long 0xbf800000                                           // 00000006BC20: BF800000
	.long 0xbf800000                                           // 00000006BC24: BF800000
	.long 0xbf800000                                           // 00000006BC28: BF800000
	.long 0xbf800000                                           // 00000006BC2C: BF800000
	.long 0xbf800000                                           // 00000006BC30: BF800000
	.long 0xbf800000                                           // 00000006BC34: BF800000
	.long 0xbf800000                                           // 00000006BC38: BF800000
	.long 0xbf800000                                           // 00000006BC3C: BF800000
	.long 0xbf800000                                           // 00000006BC40: BF800000
	.long 0xbf800000                                           // 00000006BC44: BF800000
	.long 0xbf800000                                           // 00000006BC48: BF800000
	.long 0xbf800000                                           // 00000006BC4C: BF800000
	.long 0xbf800000                                           // 00000006BC50: BF800000
	.long 0xbf800000                                           // 00000006BC54: BF800000
	.long 0xbf800000                                           // 00000006BC58: BF800000
	.long 0xbf800000                                           // 00000006BC5C: BF800000
	.long 0xbf800000                                           // 00000006BC60: BF800000
	.long 0xbf800000                                           // 00000006BC64: BF800000
	.long 0xbf800000                                           // 00000006BC68: BF800000
	.long 0xbf800000                                           // 00000006BC6C: BF800000
	.long 0xbf800000                                           // 00000006BC70: BF800000
	.long 0xbf800000                                           // 00000006BC74: BF800000
	.long 0xbf800000                                           // 00000006BC78: BF800000
	.long 0xbf800000                                           // 00000006BC7C: BF800000
	.long 0xbf800000                                           // 00000006BC80: BF800000
	.long 0xbf800000                                           // 00000006BC84: BF800000
	.long 0xbf800000                                           // 00000006BC88: BF800000
	.long 0xbf800000                                           // 00000006BC8C: BF800000
	.long 0xbf800000                                           // 00000006BC90: BF800000
	.long 0xbf800000                                           // 00000006BC94: BF800000
	.long 0xbf800000                                           // 00000006BC98: BF800000
	.long 0xbf800000                                           // 00000006BC9C: BF800000
	.long 0xbf800000                                           // 00000006BCA0: BF800000
	.long 0xbf800000                                           // 00000006BCA4: BF800000
	.long 0xbf800000                                           // 00000006BCA8: BF800000
	.long 0xbf800000                                           // 00000006BCAC: BF800000
	.long 0xbf800000                                           // 00000006BCB0: BF800000
	.long 0xbf800000                                           // 00000006BCB4: BF800000
	.long 0xbf800000                                           // 00000006BCB8: BF800000
	.long 0xbf800000                                           // 00000006BCBC: BF800000
	.long 0xbf800000                                           // 00000006BCC0: BF800000
	.long 0xbf800000                                           // 00000006BCC4: BF800000
	.long 0xbf800000                                           // 00000006BCC8: BF800000
	.long 0xbf800000                                           // 00000006BCCC: BF800000
	.long 0xbf800000                                           // 00000006BCD0: BF800000
	.long 0xbf800000                                           // 00000006BCD4: BF800000
	.long 0xbf800000                                           // 00000006BCD8: BF800000
	.long 0xbf800000                                           // 00000006BCDC: BF800000
	.long 0xbf800000                                           // 00000006BCE0: BF800000
	.long 0xbf800000                                           // 00000006BCE4: BF800000
	.long 0xbf800000                                           // 00000006BCE8: BF800000
	.long 0xbf800000                                           // 00000006BCEC: BF800000
	.long 0xbf800000                                           // 00000006BCF0: BF800000
	.long 0xbf800000                                           // 00000006BCF4: BF800000
	.long 0xbf800000                                           // 00000006BCF8: BF800000
	.long 0xbf800000                                           // 00000006BCFC: BF800000

	.p2align	8
	.type	add_get_global_id_get_local_size,@function
	.size	add_get_global_id_get_local_size, add_get_global_id_get_local_size_symend-add_get_global_id_get_local_size
add_get_global_id_get_local_size:
	s_clause 0x2                                               // 00000006BD00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006BD04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006BD0C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006BD14: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006BD1C: D6100003 02291500
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006BD24: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006BD30: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006BD38: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006BD3C: BF870193
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000006BD40: D6560003 040D0203
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006BD48: D6560000 04090202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006BD50: BF870113
	v_lshl_or_b32 v5, s4, 2, v4                                // 00000006BD54: D6560005 04110404
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 00000006BD5C: D73C0001 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006BD64: BF89FC07
	v_add_co_u32 v3, s2, s10, v3                               // 00000006BD68: D7000203 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006BD70: BF8700A1
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 00000006BD74: D5207C04 0009000B
	v_add_co_u32 v5, s2, s6, v5                                // 00000006BD7C: D7000205 00020A06
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 00000006BD84: D5207C06 00090007
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006BD8C: BF870003
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 00000006BD90: D73C0007 00020682
	v_add3_u32 v9, v0, s8, 2                                   // 00000006BD98: D6550009 02081100
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000006BDA0: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000006BDA8: 40020401
	v_add_nc_u32_e32 v4, 2, v3                                 // 00000006BDAC: 4A080682
	v_lshlrev_b64 v[2:3], 2, v[5:6]                            // 00000006BDB0: D73C0002 00020A82
	v_add_co_u32 v6, vcc_lo, s0, v7                            // 00000006BDB8: D7006A06 00020E00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v8, vcc_lo             // 00000006BDC0: 400E1001
	v_add_nc_u32_e32 v5, 4, v5                                 // 00000006BDC4: 4A0A0A84
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006BDC8: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006BDCC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006BDD4: 40060601
	s_clause 0x2                                               // 00000006BDD8: BF850002
	global_store_b32 v[0:1], v9, off                           // 00000006BDDC: DC6A0000 007C0900
	global_store_b32 v[6:7], v4, off                           // 00000006BDE4: DC6A0000 007C0406
	global_store_b32 v[2:3], v5, off                           // 00000006BDEC: DC6A0000 007C0502
	s_nop 0                                                    // 00000006BDF4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BDF8: BFB60003
	s_endpgm                                                   // 00000006BDFC: BFB00000
add_get_global_id_get_local_size_symend:

	.p2align	8
	.type	add_get_global_size_get_local_size,@function
	.size	add_get_global_size_get_local_size, add_get_global_size_get_local_size_symend-add_get_global_size_get_local_size
add_get_global_size_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 00000006BE00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006BE04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006BE0C: BEA10080
	s_clause 0x1                                               // 00000006BE10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006BE14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006BE1C: DC4A0026 07000001
	s_clause 0x2                                               // 00000006BE24: BF850002
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000006BE28: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006BE30: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 00000006BE38: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006BE40: 360200FF 000003FF
	s_clause 0x1                                               // 00000006BE48: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 00000006BE4C: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 00000006BE54: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006BE5C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006BE64: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006BE6C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006BE74: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006BE78: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006BE80: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 00000006BE84: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 00000006BE88: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006BE90: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006BE94: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006BE9C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006BEA4: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 00000006BEAC: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006BEB4: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006BEB8: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 00000006BEC0: D5207C05 000D000D
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006BEC8: D73C0002 00020482
	s_lshl_b32 s3, s7, 1                                       // 00000006BED0: 84038107
	s_lshl_b32 s4, s5, 1                                       // 00000006BED4: 84048105
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006BED8: BF870002
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006BEDC: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006BEE4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006BEEC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006BEF0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006BEF8: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006BEFC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006BF04: 400A0A01
	s_waitcnt vmcnt(1)                                         // 00000006BF08: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006BF0C: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 00000006BF10: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006BF18: BF8903F7
	v_add_nc_u32_e32 v7, s4, v7                                // 00000006BF1C: 4A0E0E04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006BF20: BF870193
	v_add_nc_u32_e32 v8, s3, v8                                // 00000006BF24: 4A101003
	v_add_nc_u32_e32 v6, s2, v6                                // 00000006BF28: 4A0C0C02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006BF2C: BF870193
	v_add_nc_u32_e32 v7, 2, v7                                 // 00000006BF30: 4A0E0E82
	v_add_nc_u32_e32 v8, 2, v8                                 // 00000006BF34: 4A101082
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006BF38: BF870003
	v_add_nc_u32_e32 v6, 16, v6                                // 00000006BF3C: 4A0C0C90
	s_clause 0x2                                               // 00000006BF40: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006BF44: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006BF4C: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006BF54: DC6A0000 007C0704
	s_nop 0                                                    // 00000006BF5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BF60: BFB60003
	s_endpgm                                                   // 00000006BF64: BFB00000
add_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000006BF68: BF800000
	.long 0xbf800000                                           // 00000006BF6C: BF800000
	.long 0xbf800000                                           // 00000006BF70: BF800000
	.long 0xbf800000                                           // 00000006BF74: BF800000
	.long 0xbf800000                                           // 00000006BF78: BF800000
	.long 0xbf800000                                           // 00000006BF7C: BF800000
	.long 0xbf800000                                           // 00000006BF80: BF800000
	.long 0xbf800000                                           // 00000006BF84: BF800000
	.long 0xbf800000                                           // 00000006BF88: BF800000
	.long 0xbf800000                                           // 00000006BF8C: BF800000
	.long 0xbf800000                                           // 00000006BF90: BF800000
	.long 0xbf800000                                           // 00000006BF94: BF800000
	.long 0xbf800000                                           // 00000006BF98: BF800000
	.long 0xbf800000                                           // 00000006BF9C: BF800000
	.long 0xbf800000                                           // 00000006BFA0: BF800000
	.long 0xbf800000                                           // 00000006BFA4: BF800000
	.long 0xbf800000                                           // 00000006BFA8: BF800000
	.long 0xbf800000                                           // 00000006BFAC: BF800000
	.long 0xbf800000                                           // 00000006BFB0: BF800000
	.long 0xbf800000                                           // 00000006BFB4: BF800000
	.long 0xbf800000                                           // 00000006BFB8: BF800000
	.long 0xbf800000                                           // 00000006BFBC: BF800000
	.long 0xbf800000                                           // 00000006BFC0: BF800000
	.long 0xbf800000                                           // 00000006BFC4: BF800000
	.long 0xbf800000                                           // 00000006BFC8: BF800000
	.long 0xbf800000                                           // 00000006BFCC: BF800000
	.long 0xbf800000                                           // 00000006BFD0: BF800000
	.long 0xbf800000                                           // 00000006BFD4: BF800000
	.long 0xbf800000                                           // 00000006BFD8: BF800000
	.long 0xbf800000                                           // 00000006BFDC: BF800000
	.long 0xbf800000                                           // 00000006BFE0: BF800000
	.long 0xbf800000                                           // 00000006BFE4: BF800000
	.long 0xbf800000                                           // 00000006BFE8: BF800000
	.long 0xbf800000                                           // 00000006BFEC: BF800000
	.long 0xbf800000                                           // 00000006BFF0: BF800000
	.long 0xbf800000                                           // 00000006BFF4: BF800000
	.long 0xbf800000                                           // 00000006BFF8: BF800000
	.long 0xbf800000                                           // 00000006BFFC: BF800000

	.p2align	8
	.type	add_get_num_groups_get_local_size,@function
	.size	add_get_num_groups_get_local_size, add_get_num_groups_get_local_size_symend-add_get_num_groups_get_local_size
add_get_num_groups_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 00000006C000: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006C004: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006C00C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006C014: BEA10080
	s_clause 0x1                                               // 00000006C018: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006C01C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006C024: DC4A0026 07000001
	s_clause 0x1                                               // 00000006C02C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C030: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006C038: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006C040: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C048: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006C050: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C058: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006C05C: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006C064: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006C06C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006C070: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000006C074: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006C07C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006C084: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006C08C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006C090: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006C098: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006C0A0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006C0A8: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 00000006C0B0: F4000080 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006C0B8: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006C0C0: BF870213
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006C0C4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006C0CC: 4002020D
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006C0D0: BF870093
	v_add_co_u32 v2, s1, s12, v2                               // 00000006C0D4: D7000102 0002040C
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 00000006C0DC: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006C0E4: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 00000006C0EC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006C0F0: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006C0F4: 7C7A0C80
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000006C0F8: BF8704D2
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006C0FC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006C104: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006C108: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006C10C: 7C7A0E80
	s_addc_u32 s1, s14, 2                                      // 00000006C110: 8201820E
	v_mov_b32_e32 v6, s1                                       // 00000006C114: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 00000006C118: BF078000
	s_addc_u32 s0, s15, 2                                      // 00000006C11C: 8200820F
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006C120: BF07806A
	v_mov_b32_e32 v7, s0                                       // 00000006C124: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 00000006C128: BF89FC07
	s_addc_u32 s0, s2, 4                                       // 00000006C12C: 82008402
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006C130: D7006A04 0002080C
	v_mov_b32_e32 v8, s0                                       // 00000006C138: 7E100200
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006C13C: 400A0A0D
	s_clause 0x2                                               // 00000006C140: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006C144: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006C14C: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006C154: DC6A0000 007C0804
	s_nop 0                                                    // 00000006C15C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C160: BFB60003
	s_endpgm                                                   // 00000006C164: BFB00000
add_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 00000006C168: BF800000
	.long 0xbf800000                                           // 00000006C16C: BF800000
	.long 0xbf800000                                           // 00000006C170: BF800000
	.long 0xbf800000                                           // 00000006C174: BF800000
	.long 0xbf800000                                           // 00000006C178: BF800000
	.long 0xbf800000                                           // 00000006C17C: BF800000
	.long 0xbf800000                                           // 00000006C180: BF800000
	.long 0xbf800000                                           // 00000006C184: BF800000
	.long 0xbf800000                                           // 00000006C188: BF800000
	.long 0xbf800000                                           // 00000006C18C: BF800000
	.long 0xbf800000                                           // 00000006C190: BF800000
	.long 0xbf800000                                           // 00000006C194: BF800000
	.long 0xbf800000                                           // 00000006C198: BF800000
	.long 0xbf800000                                           // 00000006C19C: BF800000
	.long 0xbf800000                                           // 00000006C1A0: BF800000
	.long 0xbf800000                                           // 00000006C1A4: BF800000
	.long 0xbf800000                                           // 00000006C1A8: BF800000
	.long 0xbf800000                                           // 00000006C1AC: BF800000
	.long 0xbf800000                                           // 00000006C1B0: BF800000
	.long 0xbf800000                                           // 00000006C1B4: BF800000
	.long 0xbf800000                                           // 00000006C1B8: BF800000
	.long 0xbf800000                                           // 00000006C1BC: BF800000
	.long 0xbf800000                                           // 00000006C1C0: BF800000
	.long 0xbf800000                                           // 00000006C1C4: BF800000
	.long 0xbf800000                                           // 00000006C1C8: BF800000
	.long 0xbf800000                                           // 00000006C1CC: BF800000
	.long 0xbf800000                                           // 00000006C1D0: BF800000
	.long 0xbf800000                                           // 00000006C1D4: BF800000
	.long 0xbf800000                                           // 00000006C1D8: BF800000
	.long 0xbf800000                                           // 00000006C1DC: BF800000
	.long 0xbf800000                                           // 00000006C1E0: BF800000
	.long 0xbf800000                                           // 00000006C1E4: BF800000
	.long 0xbf800000                                           // 00000006C1E8: BF800000
	.long 0xbf800000                                           // 00000006C1EC: BF800000
	.long 0xbf800000                                           // 00000006C1F0: BF800000
	.long 0xbf800000                                           // 00000006C1F4: BF800000
	.long 0xbf800000                                           // 00000006C1F8: BF800000
	.long 0xbf800000                                           // 00000006C1FC: BF800000

	.p2align	8
	.type	add_get_work_dim_get_local_size,@function
	.size	add_get_work_dim_get_local_size, add_get_work_dim_get_local_size_symend-add_get_work_dim_get_local_size
add_get_work_dim_get_local_size:
	s_clause 0x2                                               // 00000006C200: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006C204: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C20C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006C214: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006C21C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006C224: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C22C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C234: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006C23C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006C240: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006C248: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006C250: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006C254: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006C25C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000006C260: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 00000006C268: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006C270: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006C278: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006C280: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006C284: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006C28C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006C294: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006C29C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C2A4: BF870004
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006C2A8: D73C0002 00020482
	s_add_i32 s3, s2, 2                                        // 00000006C2B0: 81038202
	s_add_i32 s2, s2, 4                                        // 00000006C2B4: 81028402
	v_mov_b32_e32 v6, s3                                       // 00000006C2B8: 7E0C0203
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C2BC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006C2C4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C2CC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006C2D0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006C2D8: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C2DC: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006C2E0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006C2E8: 400A0A01
	v_mov_b32_e32 v7, s2                                       // 00000006C2EC: 7E0E0202
	s_clause 0x2                                               // 00000006C2F0: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006C2F4: DC6A0000 007C0600
	global_store_b32 v[2:3], v6, off                           // 00000006C2FC: DC6A0000 007C0602
	global_store_b32 v[4:5], v7, off                           // 00000006C304: DC6A0000 007C0704
	s_nop 0                                                    // 00000006C30C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C310: BFB60003
	s_endpgm                                                   // 00000006C314: BFB00000
add_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 00000006C318: BF800000
	.long 0xbf800000                                           // 00000006C31C: BF800000
	.long 0xbf800000                                           // 00000006C320: BF800000
	.long 0xbf800000                                           // 00000006C324: BF800000
	.long 0xbf800000                                           // 00000006C328: BF800000
	.long 0xbf800000                                           // 00000006C32C: BF800000
	.long 0xbf800000                                           // 00000006C330: BF800000
	.long 0xbf800000                                           // 00000006C334: BF800000
	.long 0xbf800000                                           // 00000006C338: BF800000
	.long 0xbf800000                                           // 00000006C33C: BF800000
	.long 0xbf800000                                           // 00000006C340: BF800000
	.long 0xbf800000                                           // 00000006C344: BF800000
	.long 0xbf800000                                           // 00000006C348: BF800000
	.long 0xbf800000                                           // 00000006C34C: BF800000
	.long 0xbf800000                                           // 00000006C350: BF800000
	.long 0xbf800000                                           // 00000006C354: BF800000
	.long 0xbf800000                                           // 00000006C358: BF800000
	.long 0xbf800000                                           // 00000006C35C: BF800000
	.long 0xbf800000                                           // 00000006C360: BF800000
	.long 0xbf800000                                           // 00000006C364: BF800000
	.long 0xbf800000                                           // 00000006C368: BF800000
	.long 0xbf800000                                           // 00000006C36C: BF800000
	.long 0xbf800000                                           // 00000006C370: BF800000
	.long 0xbf800000                                           // 00000006C374: BF800000
	.long 0xbf800000                                           // 00000006C378: BF800000
	.long 0xbf800000                                           // 00000006C37C: BF800000
	.long 0xbf800000                                           // 00000006C380: BF800000
	.long 0xbf800000                                           // 00000006C384: BF800000
	.long 0xbf800000                                           // 00000006C388: BF800000
	.long 0xbf800000                                           // 00000006C38C: BF800000
	.long 0xbf800000                                           // 00000006C390: BF800000
	.long 0xbf800000                                           // 00000006C394: BF800000
	.long 0xbf800000                                           // 00000006C398: BF800000
	.long 0xbf800000                                           // 00000006C39C: BF800000
	.long 0xbf800000                                           // 00000006C3A0: BF800000
	.long 0xbf800000                                           // 00000006C3A4: BF800000
	.long 0xbf800000                                           // 00000006C3A8: BF800000
	.long 0xbf800000                                           // 00000006C3AC: BF800000
	.long 0xbf800000                                           // 00000006C3B0: BF800000
	.long 0xbf800000                                           // 00000006C3B4: BF800000
	.long 0xbf800000                                           // 00000006C3B8: BF800000
	.long 0xbf800000                                           // 00000006C3BC: BF800000
	.long 0xbf800000                                           // 00000006C3C0: BF800000
	.long 0xbf800000                                           // 00000006C3C4: BF800000
	.long 0xbf800000                                           // 00000006C3C8: BF800000
	.long 0xbf800000                                           // 00000006C3CC: BF800000
	.long 0xbf800000                                           // 00000006C3D0: BF800000
	.long 0xbf800000                                           // 00000006C3D4: BF800000
	.long 0xbf800000                                           // 00000006C3D8: BF800000
	.long 0xbf800000                                           // 00000006C3DC: BF800000
	.long 0xbf800000                                           // 00000006C3E0: BF800000
	.long 0xbf800000                                           // 00000006C3E4: BF800000
	.long 0xbf800000                                           // 00000006C3E8: BF800000
	.long 0xbf800000                                           // 00000006C3EC: BF800000
	.long 0xbf800000                                           // 00000006C3F0: BF800000
	.long 0xbf800000                                           // 00000006C3F4: BF800000
	.long 0xbf800000                                           // 00000006C3F8: BF800000
	.long 0xbf800000                                           // 00000006C3FC: BF800000

	.p2align	8
	.type	add_x_get_global_id,@function
	.size	add_x_get_global_id, add_x_get_global_id_symend-add_x_get_global_id
add_x_get_global_id:
	s_clause 0x1                                               // 00000006C400: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C404: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006C40C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006C414: 360200FF 000003FF
	s_load_b32 s5, s[0:1], 0x8                                 // 00000006C41C: F4000140 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006C424: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], null                            // 00000006C42C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C434: D6100000 02292900
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006C43C: D6560001 04050802
	s_mov_b32 s33, 0                                           // 00000006C444: BEA10080
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006C448: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006C450: BF8700B3
	v_lshl_or_b32 v6, s4, 1, v0                                // 00000006C454: D6560006 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006C45C: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 00000006C460: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006C468: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006C470: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006C478: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006C47C: D5207C03 0009000B
	v_add_co_u32 v6, s2, s6, v6                                // 00000006C484: D7000206 00020C06
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006C48C: D73C0004 00020082
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 00000006C494: D5207C07 00090007
	v_add_nc_u32_e32 v9, s5, v0                                // 00000006C49C: 4A120005
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006C4A0: D73C0000 00020482
	v_add_nc_u32_e32 v2, s5, v2                                // 00000006C4A8: 4A040405
	v_add_co_u32 v3, vcc_lo, s0, v4                            // 00000006C4AC: D7006A03 00020800
	v_lshlrev_b64 v[7:8], 2, v[6:7]                            // 00000006C4B4: D73C0007 00020C82
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v5, vcc_lo             // 00000006C4BC: 40080A01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C4C0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C4C8: 40020201
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C4CC: BF870004
	v_add_co_u32 v5, vcc_lo, s0, v7                            // 00000006C4D0: D7006A05 00020E00
	v_add_nc_u32_e32 v10, s5, v6                               // 00000006C4D8: 4A140C05
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v8, vcc_lo             // 00000006C4DC: 400C1001
	s_clause 0x2                                               // 00000006C4E0: BF850002
	global_store_b32 v[3:4], v9, off                           // 00000006C4E4: DC6A0000 007C0903
	global_store_b32 v[0:1], v2, off                           // 00000006C4EC: DC6A0000 007C0200
	global_store_b32 v[5:6], v10, off                          // 00000006C4F4: DC6A0000 007C0A05
	s_nop 0                                                    // 00000006C4FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C500: BFB60003
	s_endpgm                                                   // 00000006C504: BFB00000
add_x_get_global_id_symend:
	.long 0xbf800000                                           // 00000006C508: BF800000
	.long 0xbf800000                                           // 00000006C50C: BF800000
	.long 0xbf800000                                           // 00000006C510: BF800000
	.long 0xbf800000                                           // 00000006C514: BF800000
	.long 0xbf800000                                           // 00000006C518: BF800000
	.long 0xbf800000                                           // 00000006C51C: BF800000
	.long 0xbf800000                                           // 00000006C520: BF800000
	.long 0xbf800000                                           // 00000006C524: BF800000
	.long 0xbf800000                                           // 00000006C528: BF800000
	.long 0xbf800000                                           // 00000006C52C: BF800000
	.long 0xbf800000                                           // 00000006C530: BF800000
	.long 0xbf800000                                           // 00000006C534: BF800000
	.long 0xbf800000                                           // 00000006C538: BF800000
	.long 0xbf800000                                           // 00000006C53C: BF800000
	.long 0xbf800000                                           // 00000006C540: BF800000
	.long 0xbf800000                                           // 00000006C544: BF800000
	.long 0xbf800000                                           // 00000006C548: BF800000
	.long 0xbf800000                                           // 00000006C54C: BF800000
	.long 0xbf800000                                           // 00000006C550: BF800000
	.long 0xbf800000                                           // 00000006C554: BF800000
	.long 0xbf800000                                           // 00000006C558: BF800000
	.long 0xbf800000                                           // 00000006C55C: BF800000
	.long 0xbf800000                                           // 00000006C560: BF800000
	.long 0xbf800000                                           // 00000006C564: BF800000
	.long 0xbf800000                                           // 00000006C568: BF800000
	.long 0xbf800000                                           // 00000006C56C: BF800000
	.long 0xbf800000                                           // 00000006C570: BF800000
	.long 0xbf800000                                           // 00000006C574: BF800000
	.long 0xbf800000                                           // 00000006C578: BF800000
	.long 0xbf800000                                           // 00000006C57C: BF800000
	.long 0xbf800000                                           // 00000006C580: BF800000
	.long 0xbf800000                                           // 00000006C584: BF800000
	.long 0xbf800000                                           // 00000006C588: BF800000
	.long 0xbf800000                                           // 00000006C58C: BF800000
	.long 0xbf800000                                           // 00000006C590: BF800000
	.long 0xbf800000                                           // 00000006C594: BF800000
	.long 0xbf800000                                           // 00000006C598: BF800000
	.long 0xbf800000                                           // 00000006C59C: BF800000
	.long 0xbf800000                                           // 00000006C5A0: BF800000
	.long 0xbf800000                                           // 00000006C5A4: BF800000
	.long 0xbf800000                                           // 00000006C5A8: BF800000
	.long 0xbf800000                                           // 00000006C5AC: BF800000
	.long 0xbf800000                                           // 00000006C5B0: BF800000
	.long 0xbf800000                                           // 00000006C5B4: BF800000
	.long 0xbf800000                                           // 00000006C5B8: BF800000
	.long 0xbf800000                                           // 00000006C5BC: BF800000
	.long 0xbf800000                                           // 00000006C5C0: BF800000
	.long 0xbf800000                                           // 00000006C5C4: BF800000
	.long 0xbf800000                                           // 00000006C5C8: BF800000
	.long 0xbf800000                                           // 00000006C5CC: BF800000
	.long 0xbf800000                                           // 00000006C5D0: BF800000
	.long 0xbf800000                                           // 00000006C5D4: BF800000
	.long 0xbf800000                                           // 00000006C5D8: BF800000
	.long 0xbf800000                                           // 00000006C5DC: BF800000
	.long 0xbf800000                                           // 00000006C5E0: BF800000
	.long 0xbf800000                                           // 00000006C5E4: BF800000
	.long 0xbf800000                                           // 00000006C5E8: BF800000
	.long 0xbf800000                                           // 00000006C5EC: BF800000
	.long 0xbf800000                                           // 00000006C5F0: BF800000
	.long 0xbf800000                                           // 00000006C5F4: BF800000
	.long 0xbf800000                                           // 00000006C5F8: BF800000
	.long 0xbf800000                                           // 00000006C5FC: BF800000

	.p2align	8
	.type	add_get_global_offset_get_global_id,@function
	.size	add_get_global_offset_get_global_id, add_get_global_offset_get_global_id_symend-add_get_global_offset_get_global_id
add_get_global_offset_get_global_id:
	s_clause 0x1                                               // 00000006C600: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C604: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006C60C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006C614: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C61C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006C624: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C62C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006C634: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006C638: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C640: BF870193
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006C644: D6560002 04090803
	v_lshl_or_b32 v6, s4, 1, v0                                // 00000006C64C: D6560006 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006C654: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006C658: BF870093
	v_add_co_u32 v0, s2, s8, v1                                // 00000006C65C: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006C664: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006C66C: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C674: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006C678: D5207C03 0009000B
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006C680: D73C0004 00020082
	v_add_co_u32 v6, s2, s6, v6                                // 00000006C688: D7000206 00020C06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006C690: BF870001
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 00000006C694: D5207C07 00090007
	v_add_nc_u32_e32 v8, s8, v0                                // 00000006C69C: 4A100008
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006C6A0: D73C0000 00020482
	v_add_nc_u32_e32 v9, s10, v2                               // 00000006C6A8: 4A12040A
	v_add_co_u32 v2, vcc_lo, s0, v4                            // 00000006C6AC: D7006A02 00020800
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v5, vcc_lo             // 00000006C6B4: 40060A01
	v_lshlrev_b64 v[4:5], 2, v[6:7]                            // 00000006C6B8: D73C0004 00020C82
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C6C0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C6C8: 40020201
	v_add_nc_u32_e32 v6, s6, v6                                // 00000006C6CC: 4A0C0C06
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C6D0: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006C6D4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006C6DC: 400A0A01
	s_clause 0x2                                               // 00000006C6E0: BF850002
	global_store_b32 v[2:3], v8, off                           // 00000006C6E4: DC6A0000 007C0802
	global_store_b32 v[0:1], v9, off                           // 00000006C6EC: DC6A0000 007C0900
	global_store_b32 v[4:5], v6, off                           // 00000006C6F4: DC6A0000 007C0604
	s_nop 0                                                    // 00000006C6FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C700: BFB60003
	s_endpgm                                                   // 00000006C704: BFB00000
add_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 00000006C708: BF800000
	.long 0xbf800000                                           // 00000006C70C: BF800000
	.long 0xbf800000                                           // 00000006C710: BF800000
	.long 0xbf800000                                           // 00000006C714: BF800000
	.long 0xbf800000                                           // 00000006C718: BF800000
	.long 0xbf800000                                           // 00000006C71C: BF800000
	.long 0xbf800000                                           // 00000006C720: BF800000
	.long 0xbf800000                                           // 00000006C724: BF800000
	.long 0xbf800000                                           // 00000006C728: BF800000
	.long 0xbf800000                                           // 00000006C72C: BF800000
	.long 0xbf800000                                           // 00000006C730: BF800000
	.long 0xbf800000                                           // 00000006C734: BF800000
	.long 0xbf800000                                           // 00000006C738: BF800000
	.long 0xbf800000                                           // 00000006C73C: BF800000
	.long 0xbf800000                                           // 00000006C740: BF800000
	.long 0xbf800000                                           // 00000006C744: BF800000
	.long 0xbf800000                                           // 00000006C748: BF800000
	.long 0xbf800000                                           // 00000006C74C: BF800000
	.long 0xbf800000                                           // 00000006C750: BF800000
	.long 0xbf800000                                           // 00000006C754: BF800000
	.long 0xbf800000                                           // 00000006C758: BF800000
	.long 0xbf800000                                           // 00000006C75C: BF800000
	.long 0xbf800000                                           // 00000006C760: BF800000
	.long 0xbf800000                                           // 00000006C764: BF800000
	.long 0xbf800000                                           // 00000006C768: BF800000
	.long 0xbf800000                                           // 00000006C76C: BF800000
	.long 0xbf800000                                           // 00000006C770: BF800000
	.long 0xbf800000                                           // 00000006C774: BF800000
	.long 0xbf800000                                           // 00000006C778: BF800000
	.long 0xbf800000                                           // 00000006C77C: BF800000
	.long 0xbf800000                                           // 00000006C780: BF800000
	.long 0xbf800000                                           // 00000006C784: BF800000
	.long 0xbf800000                                           // 00000006C788: BF800000
	.long 0xbf800000                                           // 00000006C78C: BF800000
	.long 0xbf800000                                           // 00000006C790: BF800000
	.long 0xbf800000                                           // 00000006C794: BF800000
	.long 0xbf800000                                           // 00000006C798: BF800000
	.long 0xbf800000                                           // 00000006C79C: BF800000
	.long 0xbf800000                                           // 00000006C7A0: BF800000
	.long 0xbf800000                                           // 00000006C7A4: BF800000
	.long 0xbf800000                                           // 00000006C7A8: BF800000
	.long 0xbf800000                                           // 00000006C7AC: BF800000
	.long 0xbf800000                                           // 00000006C7B0: BF800000
	.long 0xbf800000                                           // 00000006C7B4: BF800000
	.long 0xbf800000                                           // 00000006C7B8: BF800000
	.long 0xbf800000                                           // 00000006C7BC: BF800000
	.long 0xbf800000                                           // 00000006C7C0: BF800000
	.long 0xbf800000                                           // 00000006C7C4: BF800000
	.long 0xbf800000                                           // 00000006C7C8: BF800000
	.long 0xbf800000                                           // 00000006C7CC: BF800000
	.long 0xbf800000                                           // 00000006C7D0: BF800000
	.long 0xbf800000                                           // 00000006C7D4: BF800000
	.long 0xbf800000                                           // 00000006C7D8: BF800000
	.long 0xbf800000                                           // 00000006C7DC: BF800000
	.long 0xbf800000                                           // 00000006C7E0: BF800000
	.long 0xbf800000                                           // 00000006C7E4: BF800000
	.long 0xbf800000                                           // 00000006C7E8: BF800000
	.long 0xbf800000                                           // 00000006C7EC: BF800000
	.long 0xbf800000                                           // 00000006C7F0: BF800000
	.long 0xbf800000                                           // 00000006C7F4: BF800000
	.long 0xbf800000                                           // 00000006C7F8: BF800000
	.long 0xbf800000                                           // 00000006C7FC: BF800000

	.p2align	8
	.type	add_get_local_id_get_global_id,@function
	.size	add_get_local_id_get_global_id, add_get_local_id_get_global_id_symend-add_get_local_id_get_global_id
add_get_local_id_get_global_id:
	s_clause 0x1                                               // 00000006C800: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C804: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006C80C: F4040180 F8000048
	v_and_b32_e32 v8, 0x3ff, v0                                // 00000006C814: 361000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C81C: F4040000 F8000008
	v_bfe_u32 v9, v0, 10, 10                                   // 00000006C824: D6100009 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000006C82C: D610000A 02292900
	s_mov_b32 s33, 0                                           // 00000006C834: BEA10080
	v_lshl_or_b32 v0, s2, 3, v8                                // 00000006C838: D6560000 04210602
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C840: BF870193
	v_lshl_or_b32 v2, s3, 2, v9                                // 00000006C844: D6560002 04250403
	v_lshl_or_b32 v6, s4, 1, v10                               // 00000006C84C: D6560006 04290204
	s_waitcnt lgkmcnt(0)                                       // 00000006C854: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006C858: BF870093
	v_add_co_u32 v0, s2, s8, v0                                // 00000006C85C: D7000200 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006C864: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006C86C: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C874: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006C878: D5207C03 0009000B
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006C880: D73C0004 00020082
	v_add_co_u32 v6, s2, s6, v6                                // 00000006C888: D7000206 00020C06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006C890: BF870001
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 00000006C894: D5207C07 00090007
	v_add_nc_u32_e32 v8, v8, v0                                // 00000006C89C: 4A100108
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006C8A0: D73C0000 00020482
	v_add_nc_u32_e32 v9, v9, v2                                // 00000006C8A8: 4A120509
	v_add_co_u32 v2, vcc_lo, s0, v4                            // 00000006C8AC: D7006A02 00020800
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v5, vcc_lo             // 00000006C8B4: 40060A01
	v_lshlrev_b64 v[4:5], 2, v[6:7]                            // 00000006C8B8: D73C0004 00020C82
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C8C0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C8C8: 40020201
	v_add_nc_u32_e32 v6, v10, v6                               // 00000006C8CC: 4A0C0D0A
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C8D0: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006C8D4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006C8DC: 400A0A01
	s_clause 0x2                                               // 00000006C8E0: BF850002
	global_store_b32 v[2:3], v8, off                           // 00000006C8E4: DC6A0000 007C0802
	global_store_b32 v[0:1], v9, off                           // 00000006C8EC: DC6A0000 007C0900
	global_store_b32 v[4:5], v6, off                           // 00000006C8F4: DC6A0000 007C0604
	s_nop 0                                                    // 00000006C8FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C900: BFB60003
	s_endpgm                                                   // 00000006C904: BFB00000
add_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000006C908: BF800000
	.long 0xbf800000                                           // 00000006C90C: BF800000
	.long 0xbf800000                                           // 00000006C910: BF800000
	.long 0xbf800000                                           // 00000006C914: BF800000
	.long 0xbf800000                                           // 00000006C918: BF800000
	.long 0xbf800000                                           // 00000006C91C: BF800000
	.long 0xbf800000                                           // 00000006C920: BF800000
	.long 0xbf800000                                           // 00000006C924: BF800000
	.long 0xbf800000                                           // 00000006C928: BF800000
	.long 0xbf800000                                           // 00000006C92C: BF800000
	.long 0xbf800000                                           // 00000006C930: BF800000
	.long 0xbf800000                                           // 00000006C934: BF800000
	.long 0xbf800000                                           // 00000006C938: BF800000
	.long 0xbf800000                                           // 00000006C93C: BF800000
	.long 0xbf800000                                           // 00000006C940: BF800000
	.long 0xbf800000                                           // 00000006C944: BF800000
	.long 0xbf800000                                           // 00000006C948: BF800000
	.long 0xbf800000                                           // 00000006C94C: BF800000
	.long 0xbf800000                                           // 00000006C950: BF800000
	.long 0xbf800000                                           // 00000006C954: BF800000
	.long 0xbf800000                                           // 00000006C958: BF800000
	.long 0xbf800000                                           // 00000006C95C: BF800000
	.long 0xbf800000                                           // 00000006C960: BF800000
	.long 0xbf800000                                           // 00000006C964: BF800000
	.long 0xbf800000                                           // 00000006C968: BF800000
	.long 0xbf800000                                           // 00000006C96C: BF800000
	.long 0xbf800000                                           // 00000006C970: BF800000
	.long 0xbf800000                                           // 00000006C974: BF800000
	.long 0xbf800000                                           // 00000006C978: BF800000
	.long 0xbf800000                                           // 00000006C97C: BF800000
	.long 0xbf800000                                           // 00000006C980: BF800000
	.long 0xbf800000                                           // 00000006C984: BF800000
	.long 0xbf800000                                           // 00000006C988: BF800000
	.long 0xbf800000                                           // 00000006C98C: BF800000
	.long 0xbf800000                                           // 00000006C990: BF800000
	.long 0xbf800000                                           // 00000006C994: BF800000
	.long 0xbf800000                                           // 00000006C998: BF800000
	.long 0xbf800000                                           // 00000006C99C: BF800000
	.long 0xbf800000                                           // 00000006C9A0: BF800000
	.long 0xbf800000                                           // 00000006C9A4: BF800000
	.long 0xbf800000                                           // 00000006C9A8: BF800000
	.long 0xbf800000                                           // 00000006C9AC: BF800000
	.long 0xbf800000                                           // 00000006C9B0: BF800000
	.long 0xbf800000                                           // 00000006C9B4: BF800000
	.long 0xbf800000                                           // 00000006C9B8: BF800000
	.long 0xbf800000                                           // 00000006C9BC: BF800000
	.long 0xbf800000                                           // 00000006C9C0: BF800000
	.long 0xbf800000                                           // 00000006C9C4: BF800000
	.long 0xbf800000                                           // 00000006C9C8: BF800000
	.long 0xbf800000                                           // 00000006C9CC: BF800000
	.long 0xbf800000                                           // 00000006C9D0: BF800000
	.long 0xbf800000                                           // 00000006C9D4: BF800000
	.long 0xbf800000                                           // 00000006C9D8: BF800000
	.long 0xbf800000                                           // 00000006C9DC: BF800000
	.long 0xbf800000                                           // 00000006C9E0: BF800000
	.long 0xbf800000                                           // 00000006C9E4: BF800000
	.long 0xbf800000                                           // 00000006C9E8: BF800000
	.long 0xbf800000                                           // 00000006C9EC: BF800000
	.long 0xbf800000                                           // 00000006C9F0: BF800000
	.long 0xbf800000                                           // 00000006C9F4: BF800000
	.long 0xbf800000                                           // 00000006C9F8: BF800000
	.long 0xbf800000                                           // 00000006C9FC: BF800000

	.p2align	8
	.type	add_get_group_id_get_global_id,@function
	.size	add_get_group_id_get_global_id, add_get_group_id_get_global_id_symend-add_get_group_id_get_global_id
add_get_group_id_get_global_id:
	s_clause 0x1                                               // 00000006CA00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CA04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006CA0C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006CA14: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006CA1C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006CA24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006CA2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006CA34: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006CA38: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CA40: BF870193
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006CA44: D6560002 04090803
	v_lshl_or_b32 v6, s4, 1, v0                                // 00000006CA4C: D6560006 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006CA54: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006CA58: BF870093
	v_add_co_u32 v0, s5, s8, v1                                // 00000006CA5C: D7000500 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 00000006CA64: D5207C01 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 00000006CA6C: D7000502 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CA74: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s5                   // 00000006CA78: D5207C03 0015000B
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006CA80: D73C0004 00020082
	v_add_co_u32 v6, s5, s6, v6                                // 00000006CA88: D7000506 00020C06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006CA90: BF870001
	v_add_co_ci_u32_e64 v7, null, s7, 0, s5                    // 00000006CA94: D5207C07 00150007
	v_add_nc_u32_e32 v8, s2, v0                                // 00000006CA9C: 4A100002
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006CAA0: D73C0000 00020482
	v_add_nc_u32_e32 v9, s3, v2                                // 00000006CAA8: 4A120403
	v_add_co_u32 v2, vcc_lo, s0, v4                            // 00000006CAAC: D7006A02 00020800
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v5, vcc_lo             // 00000006CAB4: 40060A01
	v_lshlrev_b64 v[4:5], 2, v[6:7]                            // 00000006CAB8: D73C0004 00020C82
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006CAC0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006CAC8: 40020201
	v_add_nc_u32_e32 v6, s4, v6                                // 00000006CACC: 4A0C0C04
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006CAD0: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006CAD4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006CADC: 400A0A01
	s_clause 0x2                                               // 00000006CAE0: BF850002
	global_store_b32 v[2:3], v8, off                           // 00000006CAE4: DC6A0000 007C0802
	global_store_b32 v[0:1], v9, off                           // 00000006CAEC: DC6A0000 007C0900
	global_store_b32 v[4:5], v6, off                           // 00000006CAF4: DC6A0000 007C0604
	s_nop 0                                                    // 00000006CAFC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CB00: BFB60003
	s_endpgm                                                   // 00000006CB04: BFB00000
add_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000006CB08: BF800000
	.long 0xbf800000                                           // 00000006CB0C: BF800000
	.long 0xbf800000                                           // 00000006CB10: BF800000
	.long 0xbf800000                                           // 00000006CB14: BF800000
	.long 0xbf800000                                           // 00000006CB18: BF800000
	.long 0xbf800000                                           // 00000006CB1C: BF800000
	.long 0xbf800000                                           // 00000006CB20: BF800000
	.long 0xbf800000                                           // 00000006CB24: BF800000
	.long 0xbf800000                                           // 00000006CB28: BF800000
	.long 0xbf800000                                           // 00000006CB2C: BF800000
	.long 0xbf800000                                           // 00000006CB30: BF800000
	.long 0xbf800000                                           // 00000006CB34: BF800000
	.long 0xbf800000                                           // 00000006CB38: BF800000
	.long 0xbf800000                                           // 00000006CB3C: BF800000
	.long 0xbf800000                                           // 00000006CB40: BF800000
	.long 0xbf800000                                           // 00000006CB44: BF800000
	.long 0xbf800000                                           // 00000006CB48: BF800000
	.long 0xbf800000                                           // 00000006CB4C: BF800000
	.long 0xbf800000                                           // 00000006CB50: BF800000
	.long 0xbf800000                                           // 00000006CB54: BF800000
	.long 0xbf800000                                           // 00000006CB58: BF800000
	.long 0xbf800000                                           // 00000006CB5C: BF800000
	.long 0xbf800000                                           // 00000006CB60: BF800000
	.long 0xbf800000                                           // 00000006CB64: BF800000
	.long 0xbf800000                                           // 00000006CB68: BF800000
	.long 0xbf800000                                           // 00000006CB6C: BF800000
	.long 0xbf800000                                           // 00000006CB70: BF800000
	.long 0xbf800000                                           // 00000006CB74: BF800000
	.long 0xbf800000                                           // 00000006CB78: BF800000
	.long 0xbf800000                                           // 00000006CB7C: BF800000
	.long 0xbf800000                                           // 00000006CB80: BF800000
	.long 0xbf800000                                           // 00000006CB84: BF800000
	.long 0xbf800000                                           // 00000006CB88: BF800000
	.long 0xbf800000                                           // 00000006CB8C: BF800000
	.long 0xbf800000                                           // 00000006CB90: BF800000
	.long 0xbf800000                                           // 00000006CB94: BF800000
	.long 0xbf800000                                           // 00000006CB98: BF800000
	.long 0xbf800000                                           // 00000006CB9C: BF800000
	.long 0xbf800000                                           // 00000006CBA0: BF800000
	.long 0xbf800000                                           // 00000006CBA4: BF800000
	.long 0xbf800000                                           // 00000006CBA8: BF800000
	.long 0xbf800000                                           // 00000006CBAC: BF800000
	.long 0xbf800000                                           // 00000006CBB0: BF800000
	.long 0xbf800000                                           // 00000006CBB4: BF800000
	.long 0xbf800000                                           // 00000006CBB8: BF800000
	.long 0xbf800000                                           // 00000006CBBC: BF800000
	.long 0xbf800000                                           // 00000006CBC0: BF800000
	.long 0xbf800000                                           // 00000006CBC4: BF800000
	.long 0xbf800000                                           // 00000006CBC8: BF800000
	.long 0xbf800000                                           // 00000006CBCC: BF800000
	.long 0xbf800000                                           // 00000006CBD0: BF800000
	.long 0xbf800000                                           // 00000006CBD4: BF800000
	.long 0xbf800000                                           // 00000006CBD8: BF800000
	.long 0xbf800000                                           // 00000006CBDC: BF800000
	.long 0xbf800000                                           // 00000006CBE0: BF800000
	.long 0xbf800000                                           // 00000006CBE4: BF800000
	.long 0xbf800000                                           // 00000006CBE8: BF800000
	.long 0xbf800000                                           // 00000006CBEC: BF800000
	.long 0xbf800000                                           // 00000006CBF0: BF800000
	.long 0xbf800000                                           // 00000006CBF4: BF800000
	.long 0xbf800000                                           // 00000006CBF8: BF800000
	.long 0xbf800000                                           // 00000006CBFC: BF800000

	.p2align	8
	.type	add_get_local_size_get_global_id,@function
	.size	add_get_local_size_get_global_id, add_get_local_size_get_global_id_symend-add_get_local_size_get_global_id
add_get_local_size_get_global_id:
	s_clause 0x1                                               // 00000006CC00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CC04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006CC0C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006CC14: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006CC1C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006CC24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006CC2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006CC34: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006CC38: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CC40: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006CC44: D6560002 04090203
	v_lshl_or_b32 v6, s4, 2, v0                                // 00000006CC4C: D6560006 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006CC54: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006CC58: BF870093
	v_add_co_u32 v0, s2, s8, v1                                // 00000006CC5C: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006CC64: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006CC6C: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CC74: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006CC78: D5207C03 0009000B
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006CC80: D73C0004 00020082
	v_add_co_u32 v6, s2, s6, v6                                // 00000006CC88: D7000206 00020C06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006CC90: BF870001
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 00000006CC94: D5207C07 00090007
	v_add_nc_u32_e32 v8, 2, v0                                 // 00000006CC9C: 4A100082
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006CCA0: D73C0000 00020482
	v_add_nc_u32_e32 v9, 2, v2                                 // 00000006CCA8: 4A120482
	v_add_co_u32 v2, vcc_lo, s0, v4                            // 00000006CCAC: D7006A02 00020800
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v5, vcc_lo             // 00000006CCB4: 40060A01
	v_lshlrev_b64 v[4:5], 2, v[6:7]                            // 00000006CCB8: D73C0004 00020C82
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006CCC0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006CCC8: 40020201
	v_add_nc_u32_e32 v6, 4, v6                                 // 00000006CCCC: 4A0C0C84
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006CCD0: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006CCD4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006CCDC: 400A0A01
	s_clause 0x2                                               // 00000006CCE0: BF850002
	global_store_b32 v[2:3], v8, off                           // 00000006CCE4: DC6A0000 007C0802
	global_store_b32 v[0:1], v9, off                           // 00000006CCEC: DC6A0000 007C0900
	global_store_b32 v[4:5], v6, off                           // 00000006CCF4: DC6A0000 007C0604
	s_nop 0                                                    // 00000006CCFC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CD00: BFB60003
	s_endpgm                                                   // 00000006CD04: BFB00000
add_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000006CD08: BF800000
	.long 0xbf800000                                           // 00000006CD0C: BF800000
	.long 0xbf800000                                           // 00000006CD10: BF800000
	.long 0xbf800000                                           // 00000006CD14: BF800000
	.long 0xbf800000                                           // 00000006CD18: BF800000
	.long 0xbf800000                                           // 00000006CD1C: BF800000
	.long 0xbf800000                                           // 00000006CD20: BF800000
	.long 0xbf800000                                           // 00000006CD24: BF800000
	.long 0xbf800000                                           // 00000006CD28: BF800000
	.long 0xbf800000                                           // 00000006CD2C: BF800000
	.long 0xbf800000                                           // 00000006CD30: BF800000
	.long 0xbf800000                                           // 00000006CD34: BF800000
	.long 0xbf800000                                           // 00000006CD38: BF800000
	.long 0xbf800000                                           // 00000006CD3C: BF800000
	.long 0xbf800000                                           // 00000006CD40: BF800000
	.long 0xbf800000                                           // 00000006CD44: BF800000
	.long 0xbf800000                                           // 00000006CD48: BF800000
	.long 0xbf800000                                           // 00000006CD4C: BF800000
	.long 0xbf800000                                           // 00000006CD50: BF800000
	.long 0xbf800000                                           // 00000006CD54: BF800000
	.long 0xbf800000                                           // 00000006CD58: BF800000
	.long 0xbf800000                                           // 00000006CD5C: BF800000
	.long 0xbf800000                                           // 00000006CD60: BF800000
	.long 0xbf800000                                           // 00000006CD64: BF800000
	.long 0xbf800000                                           // 00000006CD68: BF800000
	.long 0xbf800000                                           // 00000006CD6C: BF800000
	.long 0xbf800000                                           // 00000006CD70: BF800000
	.long 0xbf800000                                           // 00000006CD74: BF800000
	.long 0xbf800000                                           // 00000006CD78: BF800000
	.long 0xbf800000                                           // 00000006CD7C: BF800000
	.long 0xbf800000                                           // 00000006CD80: BF800000
	.long 0xbf800000                                           // 00000006CD84: BF800000
	.long 0xbf800000                                           // 00000006CD88: BF800000
	.long 0xbf800000                                           // 00000006CD8C: BF800000
	.long 0xbf800000                                           // 00000006CD90: BF800000
	.long 0xbf800000                                           // 00000006CD94: BF800000
	.long 0xbf800000                                           // 00000006CD98: BF800000
	.long 0xbf800000                                           // 00000006CD9C: BF800000
	.long 0xbf800000                                           // 00000006CDA0: BF800000
	.long 0xbf800000                                           // 00000006CDA4: BF800000
	.long 0xbf800000                                           // 00000006CDA8: BF800000
	.long 0xbf800000                                           // 00000006CDAC: BF800000
	.long 0xbf800000                                           // 00000006CDB0: BF800000
	.long 0xbf800000                                           // 00000006CDB4: BF800000
	.long 0xbf800000                                           // 00000006CDB8: BF800000
	.long 0xbf800000                                           // 00000006CDBC: BF800000
	.long 0xbf800000                                           // 00000006CDC0: BF800000
	.long 0xbf800000                                           // 00000006CDC4: BF800000
	.long 0xbf800000                                           // 00000006CDC8: BF800000
	.long 0xbf800000                                           // 00000006CDCC: BF800000
	.long 0xbf800000                                           // 00000006CDD0: BF800000
	.long 0xbf800000                                           // 00000006CDD4: BF800000
	.long 0xbf800000                                           // 00000006CDD8: BF800000
	.long 0xbf800000                                           // 00000006CDDC: BF800000
	.long 0xbf800000                                           // 00000006CDE0: BF800000
	.long 0xbf800000                                           // 00000006CDE4: BF800000
	.long 0xbf800000                                           // 00000006CDE8: BF800000
	.long 0xbf800000                                           // 00000006CDEC: BF800000
	.long 0xbf800000                                           // 00000006CDF0: BF800000
	.long 0xbf800000                                           // 00000006CDF4: BF800000
	.long 0xbf800000                                           // 00000006CDF8: BF800000
	.long 0xbf800000                                           // 00000006CDFC: BF800000

	.p2align	8
	.type	add_get_global_id_get_global_id,@function
	.size	add_get_global_id_get_global_id, add_get_global_id_get_global_id_symend-add_get_global_id_get_global_id
add_get_global_id_get_global_id:
	s_clause 0x2                                               // 00000006CE00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CE04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006CE0C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006CE14: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006CE1C: D6100003 02291500
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006CE24: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006CE30: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006CE38: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CE3C: BF870193
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000006CE40: D6560003 040D0203
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006CE48: D6560000 04090202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006CE50: BF870113
	v_lshl_or_b32 v5, s4, 2, v4                                // 00000006CE54: D6560005 04110404
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 00000006CE5C: D73C0001 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006CE64: BF89FC07
	v_add_co_u32 v3, s2, s10, v3                               // 00000006CE68: D7000203 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006CE70: BF8700A1
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 00000006CE74: D5207C04 0009000B
	v_add_co_u32 v5, s2, s6, v5                                // 00000006CE7C: D7000205 00020A06
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 00000006CE84: D5207C06 00090007
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006CE8C: BF870003
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 00000006CE90: D73C0007 00020682
	v_add_lshl_u32 v9, v0, s8, 1                               // 00000006CE98: D6470009 02041100
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000006CEA0: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000006CEA8: 40020401
	v_lshlrev_b32_e32 v4, 1, v3                                // 00000006CEAC: 30080681
	v_lshlrev_b64 v[2:3], 2, v[5:6]                            // 00000006CEB0: D73C0002 00020A82
	v_add_co_u32 v6, vcc_lo, s0, v7                            // 00000006CEB8: D7006A06 00020E00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v8, vcc_lo             // 00000006CEC0: 400E1001
	v_lshlrev_b32_e32 v5, 1, v5                                // 00000006CEC4: 300A0A81
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006CEC8: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006CECC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006CED4: 40060601
	s_clause 0x2                                               // 00000006CED8: BF850002
	global_store_b32 v[0:1], v9, off                           // 00000006CEDC: DC6A0000 007C0900
	global_store_b32 v[6:7], v4, off                           // 00000006CEE4: DC6A0000 007C0406
	global_store_b32 v[2:3], v5, off                           // 00000006CEEC: DC6A0000 007C0502
	s_nop 0                                                    // 00000006CEF4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CEF8: BFB60003
	s_endpgm                                                   // 00000006CEFC: BFB00000
add_get_global_id_get_global_id_symend:

	.p2align	8
	.type	add_get_global_size_get_global_id,@function
	.size	add_get_global_size_get_global_id, add_get_global_size_get_global_id_symend-add_get_global_size_get_global_id
add_get_global_size_get_global_id:
	v_mov_b32_e32 v1, 0                                        // 00000006CF00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006CF04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006CF0C: BEA10080
	s_clause 0x1                                               // 00000006CF10: BF850001
	global_load_b32 v12, v1, s[0:1] offset:34                  // 00000006CF14: DC520022 0C000001
	global_load_u16 v13, v1, s[0:1] offset:38                  // 00000006CF1C: DC4A0026 0D000001
	s_clause 0x2                                               // 00000006CF24: BF850002
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000006CF28: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CF30: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 00000006CF38: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006CF40: 360200FF 000003FF
	s_clause 0x1                                               // 00000006CF48: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 00000006CF4C: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 00000006CF54: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006CF5C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006CF64: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006CF6C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006CF74: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006CF78: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006CF80: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 00000006CF84: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 00000006CF88: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006CF90: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006CF94: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006CF9C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006CFA4: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 00000006CFAC: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006CFB4: BF870224
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006CFB8: D73C0006 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 00000006CFC0: D5207C05 000D000D
	v_lshlrev_b64 v[8:9], 2, v[2:3]                            // 00000006CFC8: D73C0008 00020482
	s_lshl_b32 s3, s7, 1                                       // 00000006CFD0: 84038107
	s_lshl_b32 s4, s5, 1                                       // 00000006CFD4: 84048105
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006CFD8: BF870002
	v_lshlrev_b64 v[10:11], 2, v[4:5]                          // 00000006CFDC: D73C000A 00020882
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000006CFE4: D7006A05 00020C00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 00000006CFEC: 400C0E01
	v_add_co_u32 v7, vcc_lo, s0, v8                            // 00000006CFF0: D7006A07 00021000
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v9, vcc_lo             // 00000006CFF8: 40101201
	v_add_co_u32 v9, vcc_lo, s0, v10                           // 00000006CFFC: D7006A09 00021400
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v11, vcc_lo           // 00000006D004: 40141601
	s_waitcnt vmcnt(1)                                         // 00000006D008: BF8907F7
	v_and_b32_e32 v3, 0xffff, v12                              // 00000006D00C: 360618FF 0000FFFF
	v_lshrrev_b32_e32 v1, 16, v12                              // 00000006D014: 32021890
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006D018: BF870112
	v_add3_u32 v0, s2, v3, v0                                  // 00000006D01C: D6550000 04020602
	v_add3_u32 v1, s3, v1, v2                                  // 00000006D024: D6550001 040A0203
	s_waitcnt vmcnt(0)                                         // 00000006D02C: BF8903F7
	v_add3_u32 v2, s4, v13, v4                                 // 00000006D030: D6550002 04121A04
	s_clause 0x2                                               // 00000006D038: BF850002
	global_store_b32 v[5:6], v0, off                           // 00000006D03C: DC6A0000 007C0005
	global_store_b32 v[7:8], v1, off                           // 00000006D044: DC6A0000 007C0107
	global_store_b32 v[9:10], v2, off                          // 00000006D04C: DC6A0000 007C0209
	s_nop 0                                                    // 00000006D054: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D058: BFB60003
	s_endpgm                                                   // 00000006D05C: BFB00000
add_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000006D060: BF800000
	.long 0xbf800000                                           // 00000006D064: BF800000
	.long 0xbf800000                                           // 00000006D068: BF800000
	.long 0xbf800000                                           // 00000006D06C: BF800000
	.long 0xbf800000                                           // 00000006D070: BF800000
	.long 0xbf800000                                           // 00000006D074: BF800000
	.long 0xbf800000                                           // 00000006D078: BF800000
	.long 0xbf800000                                           // 00000006D07C: BF800000
	.long 0xbf800000                                           // 00000006D080: BF800000
	.long 0xbf800000                                           // 00000006D084: BF800000
	.long 0xbf800000                                           // 00000006D088: BF800000
	.long 0xbf800000                                           // 00000006D08C: BF800000
	.long 0xbf800000                                           // 00000006D090: BF800000
	.long 0xbf800000                                           // 00000006D094: BF800000
	.long 0xbf800000                                           // 00000006D098: BF800000
	.long 0xbf800000                                           // 00000006D09C: BF800000
	.long 0xbf800000                                           // 00000006D0A0: BF800000
	.long 0xbf800000                                           // 00000006D0A4: BF800000
	.long 0xbf800000                                           // 00000006D0A8: BF800000
	.long 0xbf800000                                           // 00000006D0AC: BF800000
	.long 0xbf800000                                           // 00000006D0B0: BF800000
	.long 0xbf800000                                           // 00000006D0B4: BF800000
	.long 0xbf800000                                           // 00000006D0B8: BF800000
	.long 0xbf800000                                           // 00000006D0BC: BF800000
	.long 0xbf800000                                           // 00000006D0C0: BF800000
	.long 0xbf800000                                           // 00000006D0C4: BF800000
	.long 0xbf800000                                           // 00000006D0C8: BF800000
	.long 0xbf800000                                           // 00000006D0CC: BF800000
	.long 0xbf800000                                           // 00000006D0D0: BF800000
	.long 0xbf800000                                           // 00000006D0D4: BF800000
	.long 0xbf800000                                           // 00000006D0D8: BF800000
	.long 0xbf800000                                           // 00000006D0DC: BF800000
	.long 0xbf800000                                           // 00000006D0E0: BF800000
	.long 0xbf800000                                           // 00000006D0E4: BF800000
	.long 0xbf800000                                           // 00000006D0E8: BF800000
	.long 0xbf800000                                           // 00000006D0EC: BF800000
	.long 0xbf800000                                           // 00000006D0F0: BF800000
	.long 0xbf800000                                           // 00000006D0F4: BF800000
	.long 0xbf800000                                           // 00000006D0F8: BF800000
	.long 0xbf800000                                           // 00000006D0FC: BF800000

	.p2align	8
	.type	add_get_num_groups_get_global_id,@function
	.size	add_get_num_groups_get_global_id, add_get_num_groups_get_global_id_symend-add_get_num_groups_get_global_id
add_get_num_groups_get_global_id:
	v_mov_b32_e32 v1, 0                                        // 00000006D100: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006D104: D6100002 02291500
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006D10C: F4080300 F8000008
	s_mov_b32 s33, 0                                           // 00000006D114: BEA10080
	s_clause 0x1                                               // 00000006D118: BF850001
	global_load_b32 v12, v1, s[0:1] offset:34                  // 00000006D11C: DC520022 0C000001
	global_load_u16 v13, v1, s[0:1] offset:38                  // 00000006D124: DC4A0026 0D000001
	s_clause 0x1                                               // 00000006D12C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D130: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006D138: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006D140: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D148: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006D150: D6560002 04090203
	s_load_b32 s0, s[0:1], 0x18                                // 00000006D158: F4000000 F8000018
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D160: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006D164: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006D16C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006D174: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D178: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000006D17C: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006D184: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006D18C: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006D194: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006D198: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006D1A0: D7000204 00020806
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006D1A8: D73C0006 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006D1B0: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006D1B8: BF870114
	v_lshlrev_b64 v[8:9], 2, v[2:3]                            // 00000006D1BC: D73C0008 00020482
	v_lshlrev_b64 v[10:11], 2, v[4:5]                          // 00000006D1C4: D73C000A 00020882
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006D1CC: BF870224
	v_add_co_u32 v5, vcc_lo, s12, v6                           // 00000006D1D0: D7006A05 00020C0C
	v_add_co_ci_u32_e32 v6, vcc_lo, s13, v7, vcc_lo            // 00000006D1D8: 400C0E0D
	v_add_co_u32 v7, vcc_lo, s12, v8                           // 00000006D1DC: D7006A07 0002100C
	v_add_co_ci_u32_e32 v8, vcc_lo, s13, v9, vcc_lo            // 00000006D1E4: 4010120D
	v_add_co_u32 v9, vcc_lo, s12, v10                          // 00000006D1E8: D7006A09 0002140C
	v_add_co_ci_u32_e32 v10, vcc_lo, s13, v11, vcc_lo          // 00000006D1F0: 4014160D
	s_waitcnt vmcnt(1)                                         // 00000006D1F4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v12.l                          // 00000006D1F8: 7C7A1880
	v_lshrrev_b32_e32 v1, 16, v12                              // 00000006D1FC: 32021890
	v_add_co_ci_u32_e32 v0, vcc_lo, s14, v0, vcc_lo            // 00000006D200: 4000000E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006D204: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000006D208: 7C7A0280
	v_add_co_ci_u32_e32 v1, vcc_lo, s15, v2, vcc_lo            // 00000006D20C: 4002040F
	s_waitcnt vmcnt(0)                                         // 00000006D210: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v13.l                          // 00000006D214: 7C7A1A80
	v_add_co_ci_u32_e32 v2, vcc_lo, s0, v4, vcc_lo             // 00000006D218: 40040800
	s_clause 0x2                                               // 00000006D21C: BF850002
	global_store_b32 v[5:6], v0, off                           // 00000006D220: DC6A0000 007C0005
	global_store_b32 v[7:8], v1, off                           // 00000006D228: DC6A0000 007C0107
	global_store_b32 v[9:10], v2, off                          // 00000006D230: DC6A0000 007C0209
	s_nop 0                                                    // 00000006D238: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D23C: BFB60003
	s_endpgm                                                   // 00000006D240: BFB00000
add_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 00000006D244: BF800000
	.long 0xbf800000                                           // 00000006D248: BF800000
	.long 0xbf800000                                           // 00000006D24C: BF800000
	.long 0xbf800000                                           // 00000006D250: BF800000
	.long 0xbf800000                                           // 00000006D254: BF800000
	.long 0xbf800000                                           // 00000006D258: BF800000
	.long 0xbf800000                                           // 00000006D25C: BF800000
	.long 0xbf800000                                           // 00000006D260: BF800000
	.long 0xbf800000                                           // 00000006D264: BF800000
	.long 0xbf800000                                           // 00000006D268: BF800000
	.long 0xbf800000                                           // 00000006D26C: BF800000
	.long 0xbf800000                                           // 00000006D270: BF800000
	.long 0xbf800000                                           // 00000006D274: BF800000
	.long 0xbf800000                                           // 00000006D278: BF800000
	.long 0xbf800000                                           // 00000006D27C: BF800000
	.long 0xbf800000                                           // 00000006D280: BF800000
	.long 0xbf800000                                           // 00000006D284: BF800000
	.long 0xbf800000                                           // 00000006D288: BF800000
	.long 0xbf800000                                           // 00000006D28C: BF800000
	.long 0xbf800000                                           // 00000006D290: BF800000
	.long 0xbf800000                                           // 00000006D294: BF800000
	.long 0xbf800000                                           // 00000006D298: BF800000
	.long 0xbf800000                                           // 00000006D29C: BF800000
	.long 0xbf800000                                           // 00000006D2A0: BF800000
	.long 0xbf800000                                           // 00000006D2A4: BF800000
	.long 0xbf800000                                           // 00000006D2A8: BF800000
	.long 0xbf800000                                           // 00000006D2AC: BF800000
	.long 0xbf800000                                           // 00000006D2B0: BF800000
	.long 0xbf800000                                           // 00000006D2B4: BF800000
	.long 0xbf800000                                           // 00000006D2B8: BF800000
	.long 0xbf800000                                           // 00000006D2BC: BF800000
	.long 0xbf800000                                           // 00000006D2C0: BF800000
	.long 0xbf800000                                           // 00000006D2C4: BF800000
	.long 0xbf800000                                           // 00000006D2C8: BF800000
	.long 0xbf800000                                           // 00000006D2CC: BF800000
	.long 0xbf800000                                           // 00000006D2D0: BF800000
	.long 0xbf800000                                           // 00000006D2D4: BF800000
	.long 0xbf800000                                           // 00000006D2D8: BF800000
	.long 0xbf800000                                           // 00000006D2DC: BF800000
	.long 0xbf800000                                           // 00000006D2E0: BF800000
	.long 0xbf800000                                           // 00000006D2E4: BF800000
	.long 0xbf800000                                           // 00000006D2E8: BF800000
	.long 0xbf800000                                           // 00000006D2EC: BF800000
	.long 0xbf800000                                           // 00000006D2F0: BF800000
	.long 0xbf800000                                           // 00000006D2F4: BF800000
	.long 0xbf800000                                           // 00000006D2F8: BF800000
	.long 0xbf800000                                           // 00000006D2FC: BF800000

	.p2align	8
	.type	add_get_work_dim_get_global_id,@function
	.size	add_get_work_dim_get_global_id, add_get_work_dim_get_global_id_symend-add_get_work_dim_get_global_id
add_get_work_dim_get_global_id:
	s_clause 0x2                                               // 00000006D300: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006D304: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D30C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006D314: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006D31C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006D324: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006D32C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D334: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006D33C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006D340: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006D348: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006D350: BF8700C3
	v_lshl_or_b32 v6, s4, 2, v0                                // 00000006D354: D6560006 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006D35C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000006D360: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 00000006D368: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006D370: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006D378: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006D380: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006D384: D5207C03 000D000B
	v_add_co_u32 v6, s3, s6, v6                                // 00000006D38C: D7000306 00020C06
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006D394: D73C0004 00020082
	v_add_co_ci_u32_e64 v7, null, s7, 0, s3                    // 00000006D39C: D5207C07 000D0007
	v_add_nc_u32_e32 v9, s2, v0                                // 00000006D3A4: 4A120002
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006D3A8: D73C0000 00020482
	v_add_nc_u32_e32 v2, s2, v2                                // 00000006D3B0: 4A040402
	v_add_co_u32 v3, vcc_lo, s0, v4                            // 00000006D3B4: D7006A03 00020800
	v_lshlrev_b64 v[7:8], 2, v[6:7]                            // 00000006D3BC: D73C0007 00020C82
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v5, vcc_lo             // 00000006D3C4: 40080A01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006D3C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006D3D0: 40020201
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006D3D4: BF870004
	v_add_co_u32 v5, vcc_lo, s0, v7                            // 00000006D3D8: D7006A05 00020E00
	v_add_nc_u32_e32 v10, s2, v6                               // 00000006D3E0: 4A140C02
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v8, vcc_lo             // 00000006D3E4: 400C1001
	s_clause 0x2                                               // 00000006D3E8: BF850002
	global_store_b32 v[3:4], v9, off                           // 00000006D3EC: DC6A0000 007C0903
	global_store_b32 v[0:1], v2, off                           // 00000006D3F4: DC6A0000 007C0200
	global_store_b32 v[5:6], v10, off                          // 00000006D3FC: DC6A0000 007C0A05
	s_nop 0                                                    // 00000006D404: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D408: BFB60003
	s_endpgm                                                   // 00000006D40C: BFB00000
add_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 00000006D410: BF800000
	.long 0xbf800000                                           // 00000006D414: BF800000
	.long 0xbf800000                                           // 00000006D418: BF800000
	.long 0xbf800000                                           // 00000006D41C: BF800000
	.long 0xbf800000                                           // 00000006D420: BF800000
	.long 0xbf800000                                           // 00000006D424: BF800000
	.long 0xbf800000                                           // 00000006D428: BF800000
	.long 0xbf800000                                           // 00000006D42C: BF800000
	.long 0xbf800000                                           // 00000006D430: BF800000
	.long 0xbf800000                                           // 00000006D434: BF800000
	.long 0xbf800000                                           // 00000006D438: BF800000
	.long 0xbf800000                                           // 00000006D43C: BF800000
	.long 0xbf800000                                           // 00000006D440: BF800000
	.long 0xbf800000                                           // 00000006D444: BF800000
	.long 0xbf800000                                           // 00000006D448: BF800000
	.long 0xbf800000                                           // 00000006D44C: BF800000
	.long 0xbf800000                                           // 00000006D450: BF800000
	.long 0xbf800000                                           // 00000006D454: BF800000
	.long 0xbf800000                                           // 00000006D458: BF800000
	.long 0xbf800000                                           // 00000006D45C: BF800000
	.long 0xbf800000                                           // 00000006D460: BF800000
	.long 0xbf800000                                           // 00000006D464: BF800000
	.long 0xbf800000                                           // 00000006D468: BF800000
	.long 0xbf800000                                           // 00000006D46C: BF800000
	.long 0xbf800000                                           // 00000006D470: BF800000
	.long 0xbf800000                                           // 00000006D474: BF800000
	.long 0xbf800000                                           // 00000006D478: BF800000
	.long 0xbf800000                                           // 00000006D47C: BF800000
	.long 0xbf800000                                           // 00000006D480: BF800000
	.long 0xbf800000                                           // 00000006D484: BF800000
	.long 0xbf800000                                           // 00000006D488: BF800000
	.long 0xbf800000                                           // 00000006D48C: BF800000
	.long 0xbf800000                                           // 00000006D490: BF800000
	.long 0xbf800000                                           // 00000006D494: BF800000
	.long 0xbf800000                                           // 00000006D498: BF800000
	.long 0xbf800000                                           // 00000006D49C: BF800000
	.long 0xbf800000                                           // 00000006D4A0: BF800000
	.long 0xbf800000                                           // 00000006D4A4: BF800000
	.long 0xbf800000                                           // 00000006D4A8: BF800000
	.long 0xbf800000                                           // 00000006D4AC: BF800000
	.long 0xbf800000                                           // 00000006D4B0: BF800000
	.long 0xbf800000                                           // 00000006D4B4: BF800000
	.long 0xbf800000                                           // 00000006D4B8: BF800000
	.long 0xbf800000                                           // 00000006D4BC: BF800000
	.long 0xbf800000                                           // 00000006D4C0: BF800000
	.long 0xbf800000                                           // 00000006D4C4: BF800000
	.long 0xbf800000                                           // 00000006D4C8: BF800000
	.long 0xbf800000                                           // 00000006D4CC: BF800000
	.long 0xbf800000                                           // 00000006D4D0: BF800000
	.long 0xbf800000                                           // 00000006D4D4: BF800000
	.long 0xbf800000                                           // 00000006D4D8: BF800000
	.long 0xbf800000                                           // 00000006D4DC: BF800000
	.long 0xbf800000                                           // 00000006D4E0: BF800000
	.long 0xbf800000                                           // 00000006D4E4: BF800000
	.long 0xbf800000                                           // 00000006D4E8: BF800000
	.long 0xbf800000                                           // 00000006D4EC: BF800000
	.long 0xbf800000                                           // 00000006D4F0: BF800000
	.long 0xbf800000                                           // 00000006D4F4: BF800000
	.long 0xbf800000                                           // 00000006D4F8: BF800000
	.long 0xbf800000                                           // 00000006D4FC: BF800000

	.p2align	8
	.type	add_x_get_global_size,@function
	.size	add_x_get_global_size, add_x_get_global_size_symend-add_x_get_global_size
add_x_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000006D500: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006D504: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006D50C: BEA10080
	s_clause 0x1                                               // 00000006D510: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006D514: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006D51C: DC4A0026 07000001
	s_clause 0x3                                               // 00000006D524: BF850003
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000006D528: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D530: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000006D538: F4000140 F8000018
	s_load_b64 s[12:13], s[0:1], 0x48                          // 00000006D540: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006D548: 360200FF 000003FF
	s_clause 0x1                                               // 00000006D550: BF850001
	s_load_b32 s14, s[0:1], 0x8                                // 00000006D554: F4000380 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 00000006D55C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D564: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006D56C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006D574: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006D57C: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006D580: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006D588: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 00000006D58C: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 00000006D590: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006D598: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006D59C: D5207C01 000D0009
	v_add_co_u32 v2, s4, s10, v2                               // 00000006D5A4: D7000402 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s4                   // 00000006D5AC: D5207C03 0011000B
	s_lshl_b32 s4, s5, 1                                       // 00000006D5B4: 84048105
	v_add_co_u32 v4, s5, s12, v4                               // 00000006D5B8: D7000504 0002080C
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006D5C0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s5                   // 00000006D5C8: D5207C05 0015000D
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006D5D0: D73C0002 00020482
	s_lshl_b32 s3, s7, 1                                       // 00000006D5D8: 84038107
	s_add_i32 s2, s2, s14                                      // 00000006D5DC: 81020E02
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006D5E0: BF870002
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006D5E4: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006D5EC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006D5F4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006D5F8: D7006A02 00020400
	s_add_i32 s3, s3, s14                                      // 00000006D600: 81030E03
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006D604: 40060601
	s_add_i32 s4, s4, s14                                      // 00000006D608: 81040E04
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006D60C: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006D614: 400A0A01
	s_waitcnt vmcnt(1)                                         // 00000006D618: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006D61C: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 00000006D620: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006D628: BF8903F7
	v_add_nc_u32_e32 v7, s4, v7                                // 00000006D62C: 4A0E0E04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D630: BF870193
	v_add_nc_u32_e32 v8, s3, v8                                // 00000006D634: 4A101003
	v_add_nc_u32_e32 v6, s2, v6                                // 00000006D638: 4A0C0C02
	s_clause 0x2                                               // 00000006D63C: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006D640: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006D648: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006D650: DC6A0000 007C0704
	s_nop 0                                                    // 00000006D658: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D65C: BFB60003
	s_endpgm                                                   // 00000006D660: BFB00000
add_x_get_global_size_symend:
	.long 0xbf800000                                           // 00000006D664: BF800000
	.long 0xbf800000                                           // 00000006D668: BF800000
	.long 0xbf800000                                           // 00000006D66C: BF800000
	.long 0xbf800000                                           // 00000006D670: BF800000
	.long 0xbf800000                                           // 00000006D674: BF800000
	.long 0xbf800000                                           // 00000006D678: BF800000
	.long 0xbf800000                                           // 00000006D67C: BF800000
	.long 0xbf800000                                           // 00000006D680: BF800000
	.long 0xbf800000                                           // 00000006D684: BF800000
	.long 0xbf800000                                           // 00000006D688: BF800000
	.long 0xbf800000                                           // 00000006D68C: BF800000
	.long 0xbf800000                                           // 00000006D690: BF800000
	.long 0xbf800000                                           // 00000006D694: BF800000
	.long 0xbf800000                                           // 00000006D698: BF800000
	.long 0xbf800000                                           // 00000006D69C: BF800000
	.long 0xbf800000                                           // 00000006D6A0: BF800000
	.long 0xbf800000                                           // 00000006D6A4: BF800000
	.long 0xbf800000                                           // 00000006D6A8: BF800000
	.long 0xbf800000                                           // 00000006D6AC: BF800000
	.long 0xbf800000                                           // 00000006D6B0: BF800000
	.long 0xbf800000                                           // 00000006D6B4: BF800000
	.long 0xbf800000                                           // 00000006D6B8: BF800000
	.long 0xbf800000                                           // 00000006D6BC: BF800000
	.long 0xbf800000                                           // 00000006D6C0: BF800000
	.long 0xbf800000                                           // 00000006D6C4: BF800000
	.long 0xbf800000                                           // 00000006D6C8: BF800000
	.long 0xbf800000                                           // 00000006D6CC: BF800000
	.long 0xbf800000                                           // 00000006D6D0: BF800000
	.long 0xbf800000                                           // 00000006D6D4: BF800000
	.long 0xbf800000                                           // 00000006D6D8: BF800000
	.long 0xbf800000                                           // 00000006D6DC: BF800000
	.long 0xbf800000                                           // 00000006D6E0: BF800000
	.long 0xbf800000                                           // 00000006D6E4: BF800000
	.long 0xbf800000                                           // 00000006D6E8: BF800000
	.long 0xbf800000                                           // 00000006D6EC: BF800000
	.long 0xbf800000                                           // 00000006D6F0: BF800000
	.long 0xbf800000                                           // 00000006D6F4: BF800000
	.long 0xbf800000                                           // 00000006D6F8: BF800000
	.long 0xbf800000                                           // 00000006D6FC: BF800000

	.p2align	8
	.type	add_get_global_offset_get_global_size,@function
	.size	add_get_global_offset_get_global_size, add_get_global_offset_get_global_size_symend-add_get_global_offset_get_global_size
add_get_global_offset_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000006D700: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006D704: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006D70C: BEA10080
	s_clause 0x1                                               // 00000006D710: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006D714: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006D71C: DC4A0026 07000001
	s_clause 0x2                                               // 00000006D724: BF850002
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006D728: F4080300 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D730: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006D738: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006D740: 360200FF 000003FF
	s_load_b32 s0, s[0:1], 0x18                                // 00000006D748: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D750: D6100000 02292900
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006D758: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D760: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006D764: D6560001 04050202
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006D76C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006D774: BF89FC07
	s_lshl_b32 s1, s14, 1                                      // 00000006D778: 8401810E
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D77C: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000006D780: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006D788: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006D790: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006D798: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006D79C: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006D7A4: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006D7AC: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006D7B4: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006D7BC: BF870134
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006D7C0: D73C0002 00020482
	s_lshl_b32 s2, s15, 4                                      // 00000006D7C8: 8402840F
	s_lshl_b32 s0, s0, 1                                       // 00000006D7CC: 84008100
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006D7D0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006D7D8: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006D7E0: 4002020D
	v_add_co_u32 v2, vcc_lo, s12, v2                           // 00000006D7E4: D7006A02 0002040C
	v_add_co_ci_u32_e32 v3, vcc_lo, s13, v3, vcc_lo            // 00000006D7EC: 4006060D
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006D7F0: D7006A04 0002080C
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006D7F8: 400A0A0D
	s_waitcnt vmcnt(1)                                         // 00000006D7FC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006D800: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 00000006D804: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006D80C: BF8903F7
	v_add_nc_u32_e32 v7, s0, v7                                // 00000006D810: 4A0E0E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D814: BF870193
	v_add_nc_u32_e32 v8, s2, v8                                // 00000006D818: 4A101002
	v_add_nc_u32_e32 v6, s1, v6                                // 00000006D81C: 4A0C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D820: BF870193
	v_add_nc_u32_e32 v7, s6, v7                                // 00000006D824: 4A0E0E06
	v_add_nc_u32_e32 v8, s10, v8                               // 00000006D828: 4A10100A
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006D82C: BF870003
	v_add_nc_u32_e32 v6, s8, v6                                // 00000006D830: 4A0C0C08
	s_clause 0x2                                               // 00000006D834: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006D838: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006D840: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006D848: DC6A0000 007C0704
	s_nop 0                                                    // 00000006D850: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D854: BFB60003
	s_endpgm                                                   // 00000006D858: BFB00000
add_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 00000006D85C: BF800000
	.long 0xbf800000                                           // 00000006D860: BF800000
	.long 0xbf800000                                           // 00000006D864: BF800000
	.long 0xbf800000                                           // 00000006D868: BF800000
	.long 0xbf800000                                           // 00000006D86C: BF800000
	.long 0xbf800000                                           // 00000006D870: BF800000
	.long 0xbf800000                                           // 00000006D874: BF800000
	.long 0xbf800000                                           // 00000006D878: BF800000
	.long 0xbf800000                                           // 00000006D87C: BF800000
	.long 0xbf800000                                           // 00000006D880: BF800000
	.long 0xbf800000                                           // 00000006D884: BF800000
	.long 0xbf800000                                           // 00000006D888: BF800000
	.long 0xbf800000                                           // 00000006D88C: BF800000
	.long 0xbf800000                                           // 00000006D890: BF800000
	.long 0xbf800000                                           // 00000006D894: BF800000
	.long 0xbf800000                                           // 00000006D898: BF800000
	.long 0xbf800000                                           // 00000006D89C: BF800000
	.long 0xbf800000                                           // 00000006D8A0: BF800000
	.long 0xbf800000                                           // 00000006D8A4: BF800000
	.long 0xbf800000                                           // 00000006D8A8: BF800000
	.long 0xbf800000                                           // 00000006D8AC: BF800000
	.long 0xbf800000                                           // 00000006D8B0: BF800000
	.long 0xbf800000                                           // 00000006D8B4: BF800000
	.long 0xbf800000                                           // 00000006D8B8: BF800000
	.long 0xbf800000                                           // 00000006D8BC: BF800000
	.long 0xbf800000                                           // 00000006D8C0: BF800000
	.long 0xbf800000                                           // 00000006D8C4: BF800000
	.long 0xbf800000                                           // 00000006D8C8: BF800000
	.long 0xbf800000                                           // 00000006D8CC: BF800000
	.long 0xbf800000                                           // 00000006D8D0: BF800000
	.long 0xbf800000                                           // 00000006D8D4: BF800000
	.long 0xbf800000                                           // 00000006D8D8: BF800000
	.long 0xbf800000                                           // 00000006D8DC: BF800000
	.long 0xbf800000                                           // 00000006D8E0: BF800000
	.long 0xbf800000                                           // 00000006D8E4: BF800000
	.long 0xbf800000                                           // 00000006D8E8: BF800000
	.long 0xbf800000                                           // 00000006D8EC: BF800000
	.long 0xbf800000                                           // 00000006D8F0: BF800000
	.long 0xbf800000                                           // 00000006D8F4: BF800000
	.long 0xbf800000                                           // 00000006D8F8: BF800000
	.long 0xbf800000                                           // 00000006D8FC: BF800000

	.p2align	8
	.type	add_get_local_id_get_global_size,@function
	.size	add_get_local_id_get_global_size, add_get_local_id_get_global_size_symend-add_get_local_id_get_global_size
add_get_local_id_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 00000006D900: CA240080 010800FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 00000006D90C: D6100009 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000006D914: D610000A 02292900
	s_mov_b32 s33, 0                                           // 00000006D91C: BEA10080
	s_clause 0x1                                               // 00000006D920: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006D924: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006D92C: DC4A0026 07000001
	s_clause 0x2                                               // 00000006D934: BF850002
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000006D938: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006D940: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006D948: F4040180 F8000048
	v_lshl_or_b32 v0, s2, 3, v8                                // 00000006D950: D6560000 04210602
	v_lshl_or_b32 v2, s3, 2, v9                                // 00000006D958: D6560002 04250403
	s_load_b32 s0, s[0:1], 0x18                                // 00000006D960: F4000000 F8000018
	v_lshl_or_b32 v4, s4, 1, v10                               // 00000006D968: D6560004 04290204
	s_waitcnt lgkmcnt(0)                                       // 00000006D970: BF89FC07
	s_lshl_b32 s1, s10, 3                                      // 00000006D974: 8401830A
	v_add_co_u32 v0, s2, s12, v0                               // 00000006D978: D7000200 0002000C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006D980: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s13, 0, s2                   // 00000006D984: D5207C01 0009000D
	v_add_co_u32 v2, s2, s14, v2                               // 00000006D98C: D7000202 0002040E
	v_add_co_ci_u32_e64 v3, null, s15, 0, s2                   // 00000006D994: D5207C03 0009000F
	v_add_co_u32 v4, s2, s6, v4                                // 00000006D99C: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006D9A4: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006D9A8: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006D9B0: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006D9B8: D73C0002 00020482
	s_lshl_b32 s2, s11, 2                                      // 00000006D9C0: 8402820B
	s_lshl_b32 s0, s0, 1                                       // 00000006D9C4: 84008100
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006D9C8: BF870002
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006D9CC: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 00000006D9D4: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 00000006D9DC: 40020209
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 00000006D9E0: D7006A02 00020408
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 00000006D9E8: 40060609
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 00000006D9EC: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 00000006D9F4: 400A0A09
	s_waitcnt vmcnt(1)                                         // 00000006D9F8: BF8907F7
	v_lshrrev_b32_e32 v11, 16, v6                              // 00000006D9FC: 32160C90
	v_and_b32_e32 v6, 0xffff, v6                               // 00000006DA00: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006DA08: BF8903F7
	v_add3_u32 v7, v7, s0, v10                                 // 00000006DA0C: D6550007 04280107
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006DA14: BF870002
	v_add3_u32 v6, v6, s1, v8                                  // 00000006DA18: D6550006 04200306
	v_add3_u32 v8, v11, s2, v9                                 // 00000006DA20: D6550008 0424050B
	s_clause 0x2                                               // 00000006DA28: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006DA2C: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006DA34: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006DA3C: DC6A0000 007C0704
	s_nop 0                                                    // 00000006DA44: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DA48: BFB60003
	s_endpgm                                                   // 00000006DA4C: BFB00000
add_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006DA50: BF800000
	.long 0xbf800000                                           // 00000006DA54: BF800000
	.long 0xbf800000                                           // 00000006DA58: BF800000
	.long 0xbf800000                                           // 00000006DA5C: BF800000
	.long 0xbf800000                                           // 00000006DA60: BF800000
	.long 0xbf800000                                           // 00000006DA64: BF800000
	.long 0xbf800000                                           // 00000006DA68: BF800000
	.long 0xbf800000                                           // 00000006DA6C: BF800000
	.long 0xbf800000                                           // 00000006DA70: BF800000
	.long 0xbf800000                                           // 00000006DA74: BF800000
	.long 0xbf800000                                           // 00000006DA78: BF800000
	.long 0xbf800000                                           // 00000006DA7C: BF800000
	.long 0xbf800000                                           // 00000006DA80: BF800000
	.long 0xbf800000                                           // 00000006DA84: BF800000
	.long 0xbf800000                                           // 00000006DA88: BF800000
	.long 0xbf800000                                           // 00000006DA8C: BF800000
	.long 0xbf800000                                           // 00000006DA90: BF800000
	.long 0xbf800000                                           // 00000006DA94: BF800000
	.long 0xbf800000                                           // 00000006DA98: BF800000
	.long 0xbf800000                                           // 00000006DA9C: BF800000
	.long 0xbf800000                                           // 00000006DAA0: BF800000
	.long 0xbf800000                                           // 00000006DAA4: BF800000
	.long 0xbf800000                                           // 00000006DAA8: BF800000
	.long 0xbf800000                                           // 00000006DAAC: BF800000
	.long 0xbf800000                                           // 00000006DAB0: BF800000
	.long 0xbf800000                                           // 00000006DAB4: BF800000
	.long 0xbf800000                                           // 00000006DAB8: BF800000
	.long 0xbf800000                                           // 00000006DABC: BF800000
	.long 0xbf800000                                           // 00000006DAC0: BF800000
	.long 0xbf800000                                           // 00000006DAC4: BF800000
	.long 0xbf800000                                           // 00000006DAC8: BF800000
	.long 0xbf800000                                           // 00000006DACC: BF800000
	.long 0xbf800000                                           // 00000006DAD0: BF800000
	.long 0xbf800000                                           // 00000006DAD4: BF800000
	.long 0xbf800000                                           // 00000006DAD8: BF800000
	.long 0xbf800000                                           // 00000006DADC: BF800000
	.long 0xbf800000                                           // 00000006DAE0: BF800000
	.long 0xbf800000                                           // 00000006DAE4: BF800000
	.long 0xbf800000                                           // 00000006DAE8: BF800000
	.long 0xbf800000                                           // 00000006DAEC: BF800000
	.long 0xbf800000                                           // 00000006DAF0: BF800000
	.long 0xbf800000                                           // 00000006DAF4: BF800000
	.long 0xbf800000                                           // 00000006DAF8: BF800000
	.long 0xbf800000                                           // 00000006DAFC: BF800000

	.p2align	8
	.type	add_get_group_id_get_global_size,@function
	.size	add_get_group_id_get_global_size, add_get_group_id_get_global_size_symend-add_get_group_id_get_global_size
add_get_group_id_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000006DB00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006DB04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006DB0C: BEA10080
	s_clause 0x1                                               // 00000006DB10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006DB14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006DB1C: DC4A0026 07000001
	s_clause 0x3                                               // 00000006DB24: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000006DB28: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006DB30: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000006DB38: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000006DB40: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006DB48: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006DB50: D6100000 02292900
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006DB58: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DB60: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006DB64: D6560001 04050202
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006DB6C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006DB74: BF89FC07
	s_lshl_b32 s6, s10, 1                                      // 00000006DB78: 8406810A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006DB7C: BF870092
	v_add_co_u32 v0, s7, s12, v1                               // 00000006DB80: D7000700 0002020C
	v_add_co_ci_u32_e64 v1, null, s13, 0, s7                   // 00000006DB88: D5207C01 001D000D
	v_add_co_u32 v2, s10, s14, v2                              // 00000006DB90: D7000A02 0002040E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006DB98: BF870221
	v_add_co_ci_u32_e64 v3, null, s15, 0, s10                  // 00000006DB9C: D5207C03 0029000F
	v_add_co_u32 v4, s0, s0, v4                                // 00000006DBA4: D7000004 00020800
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006DBAC: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000006DBB4: D5207C05 00010001
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006DBBC: BF870134
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006DBC0: D73C0002 00020482
	s_lshl_b32 s7, s11, 4                                      // 00000006DBC8: 8407840B
	s_lshl_b32 s5, s5, 1                                       // 00000006DBCC: 84058105
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006DBD0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 00000006DBD8: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 00000006DBE0: 40020209
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 00000006DBE4: D7006A02 00020408
	s_add_i32 s6, s6, s2                                       // 00000006DBEC: 81060206
	s_add_i32 s7, s7, s3                                       // 00000006DBF0: 81070307
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 00000006DBF4: 40060609
	s_add_i32 s5, s5, s4                                       // 00000006DBF8: 81050405
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 00000006DBFC: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 00000006DC04: 400A0A09
	s_waitcnt vmcnt(1)                                         // 00000006DC08: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006DC0C: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 00000006DC10: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006DC18: BF8903F7
	v_add_nc_u32_e32 v7, s5, v7                                // 00000006DC1C: 4A0E0E05
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DC20: BF870193
	v_add_nc_u32_e32 v8, s7, v8                                // 00000006DC24: 4A101007
	v_add_nc_u32_e32 v6, s6, v6                                // 00000006DC28: 4A0C0C06
	s_clause 0x2                                               // 00000006DC2C: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006DC30: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006DC38: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006DC40: DC6A0000 007C0704
	s_nop 0                                                    // 00000006DC48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DC4C: BFB60003
	s_endpgm                                                   // 00000006DC50: BFB00000
add_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006DC54: BF800000
	.long 0xbf800000                                           // 00000006DC58: BF800000
	.long 0xbf800000                                           // 00000006DC5C: BF800000
	.long 0xbf800000                                           // 00000006DC60: BF800000
	.long 0xbf800000                                           // 00000006DC64: BF800000
	.long 0xbf800000                                           // 00000006DC68: BF800000
	.long 0xbf800000                                           // 00000006DC6C: BF800000
	.long 0xbf800000                                           // 00000006DC70: BF800000
	.long 0xbf800000                                           // 00000006DC74: BF800000
	.long 0xbf800000                                           // 00000006DC78: BF800000
	.long 0xbf800000                                           // 00000006DC7C: BF800000
	.long 0xbf800000                                           // 00000006DC80: BF800000
	.long 0xbf800000                                           // 00000006DC84: BF800000
	.long 0xbf800000                                           // 00000006DC88: BF800000
	.long 0xbf800000                                           // 00000006DC8C: BF800000
	.long 0xbf800000                                           // 00000006DC90: BF800000
	.long 0xbf800000                                           // 00000006DC94: BF800000
	.long 0xbf800000                                           // 00000006DC98: BF800000
	.long 0xbf800000                                           // 00000006DC9C: BF800000
	.long 0xbf800000                                           // 00000006DCA0: BF800000
	.long 0xbf800000                                           // 00000006DCA4: BF800000
	.long 0xbf800000                                           // 00000006DCA8: BF800000
	.long 0xbf800000                                           // 00000006DCAC: BF800000
	.long 0xbf800000                                           // 00000006DCB0: BF800000
	.long 0xbf800000                                           // 00000006DCB4: BF800000
	.long 0xbf800000                                           // 00000006DCB8: BF800000
	.long 0xbf800000                                           // 00000006DCBC: BF800000
	.long 0xbf800000                                           // 00000006DCC0: BF800000
	.long 0xbf800000                                           // 00000006DCC4: BF800000
	.long 0xbf800000                                           // 00000006DCC8: BF800000
	.long 0xbf800000                                           // 00000006DCCC: BF800000
	.long 0xbf800000                                           // 00000006DCD0: BF800000
	.long 0xbf800000                                           // 00000006DCD4: BF800000
	.long 0xbf800000                                           // 00000006DCD8: BF800000
	.long 0xbf800000                                           // 00000006DCDC: BF800000
	.long 0xbf800000                                           // 00000006DCE0: BF800000
	.long 0xbf800000                                           // 00000006DCE4: BF800000
	.long 0xbf800000                                           // 00000006DCE8: BF800000
	.long 0xbf800000                                           // 00000006DCEC: BF800000
	.long 0xbf800000                                           // 00000006DCF0: BF800000
	.long 0xbf800000                                           // 00000006DCF4: BF800000
	.long 0xbf800000                                           // 00000006DCF8: BF800000
	.long 0xbf800000                                           // 00000006DCFC: BF800000

	.p2align	8
	.type	add_get_local_size_get_global_size,@function
	.size	add_get_local_size_get_global_size, add_get_local_size_get_global_size_symend-add_get_local_size_get_global_size
add_get_local_size_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000006DD00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006DD04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006DD0C: BEA10080
	s_clause 0x1                                               // 00000006DD10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006DD14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006DD1C: DC4A0026 07000001
	s_clause 0x2                                               // 00000006DD24: BF850002
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000006DD28: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006DD30: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006DD38: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006DD40: 360200FF 000003FF
	s_load_b32 s0, s[0:1], 0x18                                // 00000006DD48: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006DD50: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006DD58: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DD60: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006DD64: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006DD6C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006DD74: BF89FC07
	s_lshl_b32 s1, s10, 1                                      // 00000006DD78: 8401810A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006DD7C: BF870092
	v_add_co_u32 v0, s2, s12, v1                               // 00000006DD80: D7000200 0002020C
	v_add_co_ci_u32_e64 v1, null, s13, 0, s2                   // 00000006DD88: D5207C01 0009000D
	v_add_co_u32 v2, s2, s14, v2                               // 00000006DD90: D7000202 0002040E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006DD98: BF870221
	v_add_co_ci_u32_e64 v3, null, s15, 0, s2                   // 00000006DD9C: D5207C03 0009000F
	v_add_co_u32 v4, s2, s6, v4                                // 00000006DDA4: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006DDAC: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006DDB4: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006DDBC: BF870134
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006DDC0: D73C0002 00020482
	s_lshl_b32 s2, s11, 1                                      // 00000006DDC8: 8402810B
	s_lshl_b32 s0, s0, 2                                       // 00000006DDCC: 84008200
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006DDD0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 00000006DDD8: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 00000006DDE0: 40020209
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 00000006DDE4: D7006A02 00020408
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 00000006DDEC: 40060609
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 00000006DDF0: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 00000006DDF8: 400A0A09
	s_waitcnt vmcnt(1)                                         // 00000006DDFC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006DE00: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 00000006DE04: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006DE0C: BF8903F7
	v_add_nc_u32_e32 v7, s0, v7                                // 00000006DE10: 4A0E0E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DE14: BF870193
	v_add_nc_u32_e32 v8, s2, v8                                // 00000006DE18: 4A101002
	v_add_nc_u32_e32 v6, s1, v6                                // 00000006DE1C: 4A0C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DE20: BF870193
	v_add_nc_u32_e32 v7, 4, v7                                 // 00000006DE24: 4A0E0E84
	v_add_nc_u32_e32 v8, 2, v8                                 // 00000006DE28: 4A101082
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006DE2C: BF870003
	v_add_nc_u32_e32 v6, 2, v6                                 // 00000006DE30: 4A0C0C82
	s_clause 0x2                                               // 00000006DE34: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006DE38: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006DE40: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006DE48: DC6A0000 007C0704
	s_nop 0                                                    // 00000006DE50: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DE54: BFB60003
	s_endpgm                                                   // 00000006DE58: BFB00000
add_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000006DE5C: BF800000
	.long 0xbf800000                                           // 00000006DE60: BF800000
	.long 0xbf800000                                           // 00000006DE64: BF800000
	.long 0xbf800000                                           // 00000006DE68: BF800000
	.long 0xbf800000                                           // 00000006DE6C: BF800000
	.long 0xbf800000                                           // 00000006DE70: BF800000
	.long 0xbf800000                                           // 00000006DE74: BF800000
	.long 0xbf800000                                           // 00000006DE78: BF800000
	.long 0xbf800000                                           // 00000006DE7C: BF800000
	.long 0xbf800000                                           // 00000006DE80: BF800000
	.long 0xbf800000                                           // 00000006DE84: BF800000
	.long 0xbf800000                                           // 00000006DE88: BF800000
	.long 0xbf800000                                           // 00000006DE8C: BF800000
	.long 0xbf800000                                           // 00000006DE90: BF800000
	.long 0xbf800000                                           // 00000006DE94: BF800000
	.long 0xbf800000                                           // 00000006DE98: BF800000
	.long 0xbf800000                                           // 00000006DE9C: BF800000
	.long 0xbf800000                                           // 00000006DEA0: BF800000
	.long 0xbf800000                                           // 00000006DEA4: BF800000
	.long 0xbf800000                                           // 00000006DEA8: BF800000
	.long 0xbf800000                                           // 00000006DEAC: BF800000
	.long 0xbf800000                                           // 00000006DEB0: BF800000
	.long 0xbf800000                                           // 00000006DEB4: BF800000
	.long 0xbf800000                                           // 00000006DEB8: BF800000
	.long 0xbf800000                                           // 00000006DEBC: BF800000
	.long 0xbf800000                                           // 00000006DEC0: BF800000
	.long 0xbf800000                                           // 00000006DEC4: BF800000
	.long 0xbf800000                                           // 00000006DEC8: BF800000
	.long 0xbf800000                                           // 00000006DECC: BF800000
	.long 0xbf800000                                           // 00000006DED0: BF800000
	.long 0xbf800000                                           // 00000006DED4: BF800000
	.long 0xbf800000                                           // 00000006DED8: BF800000
	.long 0xbf800000                                           // 00000006DEDC: BF800000
	.long 0xbf800000                                           // 00000006DEE0: BF800000
	.long 0xbf800000                                           // 00000006DEE4: BF800000
	.long 0xbf800000                                           // 00000006DEE8: BF800000
	.long 0xbf800000                                           // 00000006DEEC: BF800000
	.long 0xbf800000                                           // 00000006DEF0: BF800000
	.long 0xbf800000                                           // 00000006DEF4: BF800000
	.long 0xbf800000                                           // 00000006DEF8: BF800000
	.long 0xbf800000                                           // 00000006DEFC: BF800000

	.p2align	8
	.type	add_get_global_id_get_global_size,@function
	.size	add_get_global_id_get_global_size, add_get_global_id_get_global_size_symend-add_get_global_id_get_global_size
add_get_global_id_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006DF00: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006DF0C: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006DF14: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006DF1C: BEA10080
	s_clause 0x1                                               // 00000006DF20: BF850001
	global_load_b32 v11, v1, s[0:1] offset:34                  // 00000006DF24: DC520022 0B000001
	global_load_u16 v12, v1, s[0:1] offset:38                  // 00000006DF2C: DC4A0026 0C000001
	s_clause 0x2                                               // 00000006DF34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000006DF38: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006DF40: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006DF48: F4040180 F8000048
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000006DF50: D6560003 040D0203
	s_load_b32 s0, s[0:1], 0x18                                // 00000006DF58: F4000000 F8000018
	v_lshl_or_b32 v5, s4, 2, v4                                // 00000006DF60: D6560005 04110404
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006DF68: D6560000 04090202
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006DF70: BF8700C1
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 00000006DF74: D73C0001 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006DF7C: BF89FC07
	s_lshl_b32 s1, s10, 1                                      // 00000006DF80: 8401810A
	v_add_co_u32 v3, s2, s14, v3                               // 00000006DF84: D7000203 0002060E
	v_add_co_ci_u32_e64 v4, null, s15, 0, s2                   // 00000006DF8C: D5207C04 0009000F
	v_add_co_u32 v5, s2, s6, v5                                // 00000006DF94: D7000205 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DF9C: BF870191
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 00000006DFA0: D5207C06 00090007
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 00000006DFA8: D73C0007 00020682
	v_add_co_u32 v1, vcc_lo, s8, v1                            // 00000006DFB0: D7006A01 00020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006DFB8: BF870223
	v_lshlrev_b64 v[9:10], 2, v[5:6]                           // 00000006DFBC: D73C0009 00020A82
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo             // 00000006DFC4: 40040409
	v_add_co_u32 v6, vcc_lo, s8, v7                            // 00000006DFC8: D7006A06 00020E08
	s_lshl_b32 s2, s11, 1                                      // 00000006DFD0: 8402810B
	v_add_co_ci_u32_e32 v7, vcc_lo, s9, v8, vcc_lo             // 00000006DFD4: 400E1009
	s_lshl_b32 s0, s0, 2                                       // 00000006DFD8: 84008200
	v_add_co_u32 v8, vcc_lo, s8, v9                            // 00000006DFDC: D7006A08 00021208
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v10, vcc_lo            // 00000006DFE4: 40121409
	s_waitcnt vmcnt(1)                                         // 00000006DFE8: BF8907F7
	v_and_b32_e32 v4, 0xffff, v11                              // 00000006DFEC: 360816FF 0000FFFF
	v_lshrrev_b32_e32 v11, 16, v11                             // 00000006DFF4: 32161690
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006DFF8: BF870112
	v_add_nc_u32_e32 v4, s1, v4                                // 00000006DFFC: 4A080801
	v_add3_u32 v3, s2, v11, v3                                 // 00000006E000: D6550003 040E1602
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006E008: BF870002
	v_add3_u32 v0, v4, s12, v0                                 // 00000006E00C: D6550000 04001904
	s_waitcnt vmcnt(0)                                         // 00000006E014: BF8903F7
	v_add3_u32 v4, s0, v12, v5                                 // 00000006E018: D6550004 04161800
	s_clause 0x2                                               // 00000006E020: BF850002
	global_store_b32 v[1:2], v0, off                           // 00000006E024: DC6A0000 007C0001
	global_store_b32 v[6:7], v3, off                           // 00000006E02C: DC6A0000 007C0306
	global_store_b32 v[8:9], v4, off                           // 00000006E034: DC6A0000 007C0408
	s_nop 0                                                    // 00000006E03C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E040: BFB60003
	s_endpgm                                                   // 00000006E044: BFB00000
add_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006E048: BF800000
	.long 0xbf800000                                           // 00000006E04C: BF800000
	.long 0xbf800000                                           // 00000006E050: BF800000
	.long 0xbf800000                                           // 00000006E054: BF800000
	.long 0xbf800000                                           // 00000006E058: BF800000
	.long 0xbf800000                                           // 00000006E05C: BF800000
	.long 0xbf800000                                           // 00000006E060: BF800000
	.long 0xbf800000                                           // 00000006E064: BF800000
	.long 0xbf800000                                           // 00000006E068: BF800000
	.long 0xbf800000                                           // 00000006E06C: BF800000
	.long 0xbf800000                                           // 00000006E070: BF800000
	.long 0xbf800000                                           // 00000006E074: BF800000
	.long 0xbf800000                                           // 00000006E078: BF800000
	.long 0xbf800000                                           // 00000006E07C: BF800000
	.long 0xbf800000                                           // 00000006E080: BF800000
	.long 0xbf800000                                           // 00000006E084: BF800000
	.long 0xbf800000                                           // 00000006E088: BF800000
	.long 0xbf800000                                           // 00000006E08C: BF800000
	.long 0xbf800000                                           // 00000006E090: BF800000
	.long 0xbf800000                                           // 00000006E094: BF800000
	.long 0xbf800000                                           // 00000006E098: BF800000
	.long 0xbf800000                                           // 00000006E09C: BF800000
	.long 0xbf800000                                           // 00000006E0A0: BF800000
	.long 0xbf800000                                           // 00000006E0A4: BF800000
	.long 0xbf800000                                           // 00000006E0A8: BF800000
	.long 0xbf800000                                           // 00000006E0AC: BF800000
	.long 0xbf800000                                           // 00000006E0B0: BF800000
	.long 0xbf800000                                           // 00000006E0B4: BF800000
	.long 0xbf800000                                           // 00000006E0B8: BF800000
	.long 0xbf800000                                           // 00000006E0BC: BF800000
	.long 0xbf800000                                           // 00000006E0C0: BF800000
	.long 0xbf800000                                           // 00000006E0C4: BF800000
	.long 0xbf800000                                           // 00000006E0C8: BF800000
	.long 0xbf800000                                           // 00000006E0CC: BF800000
	.long 0xbf800000                                           // 00000006E0D0: BF800000
	.long 0xbf800000                                           // 00000006E0D4: BF800000
	.long 0xbf800000                                           // 00000006E0D8: BF800000
	.long 0xbf800000                                           // 00000006E0DC: BF800000
	.long 0xbf800000                                           // 00000006E0E0: BF800000
	.long 0xbf800000                                           // 00000006E0E4: BF800000
	.long 0xbf800000                                           // 00000006E0E8: BF800000
	.long 0xbf800000                                           // 00000006E0EC: BF800000
	.long 0xbf800000                                           // 00000006E0F0: BF800000
	.long 0xbf800000                                           // 00000006E0F4: BF800000
	.long 0xbf800000                                           // 00000006E0F8: BF800000
	.long 0xbf800000                                           // 00000006E0FC: BF800000

	.p2align	8
	.type	add_get_global_size_get_global_size,@function
	.size	add_get_global_size_get_global_size, add_get_global_size_get_global_size_symend-add_get_global_size_get_global_size
add_get_global_size_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000006E100: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006E104: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006E10C: BEA10080
	s_clause 0x1                                               // 00000006E110: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006E114: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006E11C: DC4A0026 07000001
	s_clause 0x2                                               // 00000006E124: BF850002
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000006E128: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E130: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 00000006E138: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006E140: 360200FF 000003FF
	s_clause 0x1                                               // 00000006E148: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 00000006E14C: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 00000006E154: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E15C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006E164: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006E16C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006E174: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006E178: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006E180: BF89FC07
	s_lshl_b32 s2, s6, 5                                       // 00000006E184: 84028506
	v_add_co_u32 v0, s3, s8, v1                                // 00000006E188: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006E190: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006E194: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006E19C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006E1A4: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 00000006E1AC: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006E1B4: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006E1B8: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 00000006E1C0: D5207C05 000D000D
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006E1C8: D73C0002 00020482
	s_lshl_b32 s3, s7, 2                                       // 00000006E1D0: 84038207
	s_lshl_b32 s4, s5, 2                                       // 00000006E1D4: 84048205
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006E1D8: BF870002
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006E1DC: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E1E4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E1EC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006E1F0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006E1F8: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006E1FC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006E204: 400A0A01
	s_waitcnt vmcnt(1)                                         // 00000006E208: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 00000006E20C: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 15, v6                               // 00000006E214: 320C0C8F
	s_waitcnt vmcnt(0)                                         // 00000006E218: BF8903F7
	v_lshlrev_b32_e32 v7, 1, v7                                // 00000006E21C: 300E0E81
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E220: BF870193
	v_lshlrev_b32_e32 v8, 1, v8                                // 00000006E224: 30101081
	v_and_b32_e32 v6, 0x1fffe, v6                              // 00000006E228: 360C0CFF 0001FFFE
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E230: BF870193
	v_add_nc_u32_e32 v7, s4, v7                                // 00000006E234: 4A0E0E04
	v_add_nc_u32_e32 v8, s2, v8                                // 00000006E238: 4A101002
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006E23C: BF870003
	v_add_nc_u32_e32 v6, s3, v6                                // 00000006E240: 4A0C0C03
	s_clause 0x2                                               // 00000006E244: BF850002
	global_store_b32 v[0:1], v8, off                           // 00000006E248: DC6A0000 007C0800
	global_store_b32 v[2:3], v6, off                           // 00000006E250: DC6A0000 007C0602
	global_store_b32 v[4:5], v7, off                           // 00000006E258: DC6A0000 007C0704
	s_nop 0                                                    // 00000006E260: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E264: BFB60003
	s_endpgm                                                   // 00000006E268: BFB00000
add_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000006E26C: BF800000
	.long 0xbf800000                                           // 00000006E270: BF800000
	.long 0xbf800000                                           // 00000006E274: BF800000
	.long 0xbf800000                                           // 00000006E278: BF800000
	.long 0xbf800000                                           // 00000006E27C: BF800000
	.long 0xbf800000                                           // 00000006E280: BF800000
	.long 0xbf800000                                           // 00000006E284: BF800000
	.long 0xbf800000                                           // 00000006E288: BF800000
	.long 0xbf800000                                           // 00000006E28C: BF800000
	.long 0xbf800000                                           // 00000006E290: BF800000
	.long 0xbf800000                                           // 00000006E294: BF800000
	.long 0xbf800000                                           // 00000006E298: BF800000
	.long 0xbf800000                                           // 00000006E29C: BF800000
	.long 0xbf800000                                           // 00000006E2A0: BF800000
	.long 0xbf800000                                           // 00000006E2A4: BF800000
	.long 0xbf800000                                           // 00000006E2A8: BF800000
	.long 0xbf800000                                           // 00000006E2AC: BF800000
	.long 0xbf800000                                           // 00000006E2B0: BF800000
	.long 0xbf800000                                           // 00000006E2B4: BF800000
	.long 0xbf800000                                           // 00000006E2B8: BF800000
	.long 0xbf800000                                           // 00000006E2BC: BF800000
	.long 0xbf800000                                           // 00000006E2C0: BF800000
	.long 0xbf800000                                           // 00000006E2C4: BF800000
	.long 0xbf800000                                           // 00000006E2C8: BF800000
	.long 0xbf800000                                           // 00000006E2CC: BF800000
	.long 0xbf800000                                           // 00000006E2D0: BF800000
	.long 0xbf800000                                           // 00000006E2D4: BF800000
	.long 0xbf800000                                           // 00000006E2D8: BF800000
	.long 0xbf800000                                           // 00000006E2DC: BF800000
	.long 0xbf800000                                           // 00000006E2E0: BF800000
	.long 0xbf800000                                           // 00000006E2E4: BF800000
	.long 0xbf800000                                           // 00000006E2E8: BF800000
	.long 0xbf800000                                           // 00000006E2EC: BF800000
	.long 0xbf800000                                           // 00000006E2F0: BF800000
	.long 0xbf800000                                           // 00000006E2F4: BF800000
	.long 0xbf800000                                           // 00000006E2F8: BF800000
	.long 0xbf800000                                           // 00000006E2FC: BF800000

	.p2align	8
	.type	add_get_num_groups_get_global_size,@function
	.size	add_get_num_groups_get_global_size, add_get_num_groups_get_global_size_symend-add_get_num_groups_get_global_size
add_get_num_groups_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000006E300: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006E304: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006E30C: BEA10080
	s_clause 0x1                                               // 00000006E310: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006E314: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006E31C: DC4A0026 07000001
	s_clause 0x2                                               // 00000006E324: BF850002
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000006E328: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006E330: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006E338: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006E340: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E348: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006E350: D6560002 04090203
	s_load_b32 s0, s[0:1], 0x18                                // 00000006E358: F4000000 F8000018
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E360: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006E364: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006E36C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006E374: BF89FC07
	s_mul_i32 s1, s10, 3                                       // 00000006E378: 9601830A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006E37C: BF870092
	v_add_co_u32 v0, s2, s12, v1                               // 00000006E380: D7000200 0002020C
	v_add_co_ci_u32_e64 v1, null, s13, 0, s2                   // 00000006E388: D5207C01 0009000D
	v_add_co_u32 v2, s2, s14, v2                               // 00000006E390: D7000202 0002040E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006E398: BF870221
	v_add_co_ci_u32_e64 v3, null, s15, 0, s2                   // 00000006E39C: D5207C03 0009000F
	v_add_co_u32 v4, s2, s6, v4                                // 00000006E3A4: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006E3AC: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006E3B4: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006E3BC: BF870134
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006E3C0: D73C0002 00020482
	s_mul_i32 s2, s11, 3                                       // 00000006E3C8: 9602830B
	s_mul_i32 s0, s0, 5                                        // 00000006E3CC: 96008500
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006E3D0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 00000006E3D8: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 00000006E3E0: 40020209
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 00000006E3E4: D7006A02 00020408
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 00000006E3EC: 40060609
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 00000006E3F0: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 00000006E3F8: 400A0A09
	s_waitcnt vmcnt(1)                                         // 00000006E3FC: BF8907F7
	v_and_b32_e32 v9, 0xffff, v6                               // 00000006E400: 36120CFF 0000FFFF
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006E408: 7C7A0C80
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006E40C: 32100C90
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006E410: BF870113
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v9, vcc_lo             // 00000006E414: 400C1201
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006E418: 7C7A1080
	v_add_co_ci_u32_e32 v8, vcc_lo, s2, v8, vcc_lo             // 00000006E41C: 40101002
	s_waitcnt vmcnt(0)                                         // 00000006E420: BF8903F7
	v_cmp_ne_u32_e32 vcc_lo, 0, v7                             // 00000006E424: 7C9A0E80
	v_add_co_ci_u32_e32 v7, vcc_lo, s0, v7, vcc_lo             // 00000006E428: 400E0E00
	s_clause 0x2                                               // 00000006E42C: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006E430: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006E438: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006E440: DC6A0000 007C0704
	s_nop 0                                                    // 00000006E448: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E44C: BFB60003
	s_endpgm                                                   // 00000006E450: BFB00000
add_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 00000006E454: BF800000
	.long 0xbf800000                                           // 00000006E458: BF800000
	.long 0xbf800000                                           // 00000006E45C: BF800000
	.long 0xbf800000                                           // 00000006E460: BF800000
	.long 0xbf800000                                           // 00000006E464: BF800000
	.long 0xbf800000                                           // 00000006E468: BF800000
	.long 0xbf800000                                           // 00000006E46C: BF800000
	.long 0xbf800000                                           // 00000006E470: BF800000
	.long 0xbf800000                                           // 00000006E474: BF800000
	.long 0xbf800000                                           // 00000006E478: BF800000
	.long 0xbf800000                                           // 00000006E47C: BF800000
	.long 0xbf800000                                           // 00000006E480: BF800000
	.long 0xbf800000                                           // 00000006E484: BF800000
	.long 0xbf800000                                           // 00000006E488: BF800000
	.long 0xbf800000                                           // 00000006E48C: BF800000
	.long 0xbf800000                                           // 00000006E490: BF800000
	.long 0xbf800000                                           // 00000006E494: BF800000
	.long 0xbf800000                                           // 00000006E498: BF800000
	.long 0xbf800000                                           // 00000006E49C: BF800000
	.long 0xbf800000                                           // 00000006E4A0: BF800000
	.long 0xbf800000                                           // 00000006E4A4: BF800000
	.long 0xbf800000                                           // 00000006E4A8: BF800000
	.long 0xbf800000                                           // 00000006E4AC: BF800000
	.long 0xbf800000                                           // 00000006E4B0: BF800000
	.long 0xbf800000                                           // 00000006E4B4: BF800000
	.long 0xbf800000                                           // 00000006E4B8: BF800000
	.long 0xbf800000                                           // 00000006E4BC: BF800000
	.long 0xbf800000                                           // 00000006E4C0: BF800000
	.long 0xbf800000                                           // 00000006E4C4: BF800000
	.long 0xbf800000                                           // 00000006E4C8: BF800000
	.long 0xbf800000                                           // 00000006E4CC: BF800000
	.long 0xbf800000                                           // 00000006E4D0: BF800000
	.long 0xbf800000                                           // 00000006E4D4: BF800000
	.long 0xbf800000                                           // 00000006E4D8: BF800000
	.long 0xbf800000                                           // 00000006E4DC: BF800000
	.long 0xbf800000                                           // 00000006E4E0: BF800000
	.long 0xbf800000                                           // 00000006E4E4: BF800000
	.long 0xbf800000                                           // 00000006E4E8: BF800000
	.long 0xbf800000                                           // 00000006E4EC: BF800000
	.long 0xbf800000                                           // 00000006E4F0: BF800000
	.long 0xbf800000                                           // 00000006E4F4: BF800000
	.long 0xbf800000                                           // 00000006E4F8: BF800000
	.long 0xbf800000                                           // 00000006E4FC: BF800000

	.p2align	8
	.type	add_get_work_dim_get_global_size,@function
	.size	add_get_work_dim_get_global_size, add_get_work_dim_get_global_size_symend-add_get_work_dim_get_global_size
add_get_work_dim_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000006E500: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006E504: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006E50C: BEA10080
	s_clause 0x1                                               // 00000006E510: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006E514: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006E51C: DC4A0026 07000001
	s_clause 0x3                                               // 00000006E524: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000006E528: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006E530: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000006E538: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006E540: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006E548: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E550: D6100000 02292900
	s_load_b32 s0, s[0:1], 0x50                                // 00000006E558: F4000000 F8000050
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006E560: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E568: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006E56C: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006E574: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006E57C: BF89FC07
	s_lshl_b32 s1, s10, 1                                      // 00000006E580: 8401810A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006E584: BF870092
	v_add_co_u32 v0, s2, s12, v1                               // 00000006E588: D7000200 0002020C
	v_add_co_ci_u32_e64 v1, null, s13, 0, s2                   // 00000006E590: D5207C01 0009000D
	v_add_co_u32 v2, s3, s14, v2                               // 00000006E598: D7000302 0002040E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006E5A0: BF870221
	v_add_co_ci_u32_e64 v3, null, s15, 0, s3                   // 00000006E5A4: D5207C03 000D000F
	v_add_co_u32 v4, s4, s6, v4                                // 00000006E5AC: D7000404 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006E5B4: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s4                    // 00000006E5BC: D5207C05 00110007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006E5C4: BF870134
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006E5C8: D73C0002 00020482
	s_lshl_b32 s2, s11, 1                                      // 00000006E5D0: 8402810B
	s_and_b32 s0, s0, 0xffff                                   // 00000006E5D4: 8B00FF00 0000FFFF
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006E5DC: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 00000006E5E4: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 00000006E5EC: 40020209
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 00000006E5F0: D7006A02 00020408
	s_lshl_b32 s3, s5, 2                                       // 00000006E5F8: 84038205
	s_add_i32 s2, s2, s0                                       // 00000006E5FC: 81020002
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 00000006E600: 40060609
	s_add_i32 s3, s3, s0                                       // 00000006E604: 81030003
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 00000006E608: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 00000006E610: 400A0A09
	s_waitcnt vmcnt(1)                                         // 00000006E614: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 00000006E618: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000006E620: 320C0C90
	s_waitcnt vmcnt(0)                                         // 00000006E624: BF8903F7
	v_add_nc_u32_e32 v7, s3, v7                                // 00000006E628: 4A0E0E03
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E62C: BF870193
	v_add_nc_u32_e32 v8, s1, v8                                // 00000006E630: 4A101001
	v_add_nc_u32_e32 v6, s2, v6                                // 00000006E634: 4A0C0C02
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006E638: BF870002
	v_add_nc_u32_e32 v8, s0, v8                                // 00000006E63C: 4A101000
	s_clause 0x2                                               // 00000006E640: BF850002
	global_store_b32 v[0:1], v8, off                           // 00000006E644: DC6A0000 007C0800
	global_store_b32 v[2:3], v6, off                           // 00000006E64C: DC6A0000 007C0602
	global_store_b32 v[4:5], v7, off                           // 00000006E654: DC6A0000 007C0704
	s_nop 0                                                    // 00000006E65C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E660: BFB60003
	s_endpgm                                                   // 00000006E664: BFB00000
add_get_work_dim_get_global_size_symend:
	.long 0xbf800000                                           // 00000006E668: BF800000
	.long 0xbf800000                                           // 00000006E66C: BF800000
	.long 0xbf800000                                           // 00000006E670: BF800000
	.long 0xbf800000                                           // 00000006E674: BF800000
	.long 0xbf800000                                           // 00000006E678: BF800000
	.long 0xbf800000                                           // 00000006E67C: BF800000
	.long 0xbf800000                                           // 00000006E680: BF800000
	.long 0xbf800000                                           // 00000006E684: BF800000
	.long 0xbf800000                                           // 00000006E688: BF800000
	.long 0xbf800000                                           // 00000006E68C: BF800000
	.long 0xbf800000                                           // 00000006E690: BF800000
	.long 0xbf800000                                           // 00000006E694: BF800000
	.long 0xbf800000                                           // 00000006E698: BF800000
	.long 0xbf800000                                           // 00000006E69C: BF800000
	.long 0xbf800000                                           // 00000006E6A0: BF800000
	.long 0xbf800000                                           // 00000006E6A4: BF800000
	.long 0xbf800000                                           // 00000006E6A8: BF800000
	.long 0xbf800000                                           // 00000006E6AC: BF800000
	.long 0xbf800000                                           // 00000006E6B0: BF800000
	.long 0xbf800000                                           // 00000006E6B4: BF800000
	.long 0xbf800000                                           // 00000006E6B8: BF800000
	.long 0xbf800000                                           // 00000006E6BC: BF800000
	.long 0xbf800000                                           // 00000006E6C0: BF800000
	.long 0xbf800000                                           // 00000006E6C4: BF800000
	.long 0xbf800000                                           // 00000006E6C8: BF800000
	.long 0xbf800000                                           // 00000006E6CC: BF800000
	.long 0xbf800000                                           // 00000006E6D0: BF800000
	.long 0xbf800000                                           // 00000006E6D4: BF800000
	.long 0xbf800000                                           // 00000006E6D8: BF800000
	.long 0xbf800000                                           // 00000006E6DC: BF800000
	.long 0xbf800000                                           // 00000006E6E0: BF800000
	.long 0xbf800000                                           // 00000006E6E4: BF800000
	.long 0xbf800000                                           // 00000006E6E8: BF800000
	.long 0xbf800000                                           // 00000006E6EC: BF800000
	.long 0xbf800000                                           // 00000006E6F0: BF800000
	.long 0xbf800000                                           // 00000006E6F4: BF800000
	.long 0xbf800000                                           // 00000006E6F8: BF800000
	.long 0xbf800000                                           // 00000006E6FC: BF800000

	.p2align	8
	.type	add_x_get_num_groups,@function
	.size	add_x_get_num_groups, add_x_get_num_groups_symend-add_x_get_num_groups
add_x_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000006E700: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006E704: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006E70C: BEA10080
	s_clause 0x1                                               // 00000006E710: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006E714: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006E71C: DC4A0026 07000001
	s_clause 0x1                                               // 00000006E724: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E728: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006E730: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006E738: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E740: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006E748: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006E750: BF870003
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006E754: D6560001 04050802
	s_clause 0x2                                               // 00000006E75C: BF850002
	s_load_b64 s[12:13], s[0:1], null                          // 00000006E760: F4040300 F8000000
	s_load_b32 s2, s[0:1], 0x8                                 // 00000006E768: F4000080 F8000008
	s_load_b64 s[14:15], s[0:1], 0x10                          // 00000006E770: F4040380 F8000010
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006E778: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006E780: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 00000006E784: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006E78C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006E790: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006E798: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006E7A0: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006E7A8: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006E7B0: BF8701C4
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006E7B4: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006E7BC: D5207C05 000D0007
	s_load_b32 s3, s[0:1], 0x18                                // 00000006E7C4: F40000C0 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006E7CC: D73C0002 00020482
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006E7D4: D7006A00 0002000C
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E7DC: BF870194
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006E7E0: 4002020D
	v_add_co_u32 v2, s1, s12, v2                               // 00000006E7E4: D7000102 0002040C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000006E7EC: BF870151
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 00000006E7F0: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006E7F8: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 00000006E800: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006E804: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006E808: 7C7A0C80
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006E80C: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E814: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006E818: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006E81C: 7C7A0E80
	s_addc_u32 s1, s14, s2                                     // 00000006E820: 8201020E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006E824: BF870009
	v_mov_b32_e32 v6, s1                                       // 00000006E828: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 00000006E82C: BF078000
	s_addc_u32 s0, s15, s2                                     // 00000006E830: 8200020F
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E834: BF07806A
	v_mov_b32_e32 v7, s0                                       // 00000006E838: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 00000006E83C: BF89FC07
	s_addc_u32 s0, s3, s2                                      // 00000006E840: 82000203
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006E844: D7006A04 0002080C
	v_mov_b32_e32 v8, s0                                       // 00000006E84C: 7E100200
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006E850: 400A0A0D
	s_clause 0x2                                               // 00000006E854: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006E858: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006E860: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006E868: DC6A0000 007C0804
	s_nop 0                                                    // 00000006E870: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E874: BFB60003
	s_endpgm                                                   // 00000006E878: BFB00000
add_x_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006E87C: BF800000
	.long 0xbf800000                                           // 00000006E880: BF800000
	.long 0xbf800000                                           // 00000006E884: BF800000
	.long 0xbf800000                                           // 00000006E888: BF800000
	.long 0xbf800000                                           // 00000006E88C: BF800000
	.long 0xbf800000                                           // 00000006E890: BF800000
	.long 0xbf800000                                           // 00000006E894: BF800000
	.long 0xbf800000                                           // 00000006E898: BF800000
	.long 0xbf800000                                           // 00000006E89C: BF800000
	.long 0xbf800000                                           // 00000006E8A0: BF800000
	.long 0xbf800000                                           // 00000006E8A4: BF800000
	.long 0xbf800000                                           // 00000006E8A8: BF800000
	.long 0xbf800000                                           // 00000006E8AC: BF800000
	.long 0xbf800000                                           // 00000006E8B0: BF800000
	.long 0xbf800000                                           // 00000006E8B4: BF800000
	.long 0xbf800000                                           // 00000006E8B8: BF800000
	.long 0xbf800000                                           // 00000006E8BC: BF800000
	.long 0xbf800000                                           // 00000006E8C0: BF800000
	.long 0xbf800000                                           // 00000006E8C4: BF800000
	.long 0xbf800000                                           // 00000006E8C8: BF800000
	.long 0xbf800000                                           // 00000006E8CC: BF800000
	.long 0xbf800000                                           // 00000006E8D0: BF800000
	.long 0xbf800000                                           // 00000006E8D4: BF800000
	.long 0xbf800000                                           // 00000006E8D8: BF800000
	.long 0xbf800000                                           // 00000006E8DC: BF800000
	.long 0xbf800000                                           // 00000006E8E0: BF800000
	.long 0xbf800000                                           // 00000006E8E4: BF800000
	.long 0xbf800000                                           // 00000006E8E8: BF800000
	.long 0xbf800000                                           // 00000006E8EC: BF800000
	.long 0xbf800000                                           // 00000006E8F0: BF800000
	.long 0xbf800000                                           // 00000006E8F4: BF800000
	.long 0xbf800000                                           // 00000006E8F8: BF800000
	.long 0xbf800000                                           // 00000006E8FC: BF800000

	.p2align	8
	.type	add_get_global_offset_get_num_groups,@function
	.size	add_get_global_offset_get_num_groups, add_get_global_offset_get_num_groups_symend-add_get_global_offset_get_num_groups
add_get_global_offset_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000006E900: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006E904: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006E90C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006E914: BEA10080
	s_clause 0x1                                               // 00000006E918: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006E91C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006E924: DC4A0026 07000001
	s_clause 0x1                                               // 00000006E92C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E930: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006E938: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006E940: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E948: D6100000 02292900
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006E950: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E958: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006E95C: D6560001 04050202
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006E964: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006E96C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006E970: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000006E974: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006E97C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006E984: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006E98C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006E990: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006E998: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006E9A0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006E9A8: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 00000006E9B0: F4000080 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006E9B8: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006E9C0: BF870213
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006E9C4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006E9CC: 4002020D
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006E9D0: BF870093
	v_add_co_u32 v2, s1, s12, v2                               // 00000006E9D4: D7000102 0002040C
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 00000006E9DC: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006E9E4: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 00000006E9EC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006E9F0: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006E9F4: 7C7A0C80
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000006E9F8: BF8704D2
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006E9FC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006EA04: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006EA08: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006EA0C: 7C7A0E80
	s_addc_u32 s1, s8, s14                                     // 00000006EA10: 82010E08
	v_mov_b32_e32 v6, s1                                       // 00000006EA14: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 00000006EA18: BF078000
	s_addc_u32 s0, s10, s15                                    // 00000006EA1C: 82000F0A
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006EA20: BF07806A
	v_mov_b32_e32 v7, s0                                       // 00000006EA24: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 00000006EA28: BF89FC07
	s_addc_u32 s0, s6, s2                                      // 00000006EA2C: 82000206
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006EA30: D7006A04 0002080C
	v_mov_b32_e32 v8, s0                                       // 00000006EA38: 7E100200
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006EA3C: 400A0A0D
	s_clause 0x2                                               // 00000006EA40: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006EA44: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006EA4C: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006EA54: DC6A0000 007C0804
	s_nop 0                                                    // 00000006EA5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EA60: BFB60003
	s_endpgm                                                   // 00000006EA64: BFB00000
add_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006EA68: BF800000
	.long 0xbf800000                                           // 00000006EA6C: BF800000
	.long 0xbf800000                                           // 00000006EA70: BF800000
	.long 0xbf800000                                           // 00000006EA74: BF800000
	.long 0xbf800000                                           // 00000006EA78: BF800000
	.long 0xbf800000                                           // 00000006EA7C: BF800000
	.long 0xbf800000                                           // 00000006EA80: BF800000
	.long 0xbf800000                                           // 00000006EA84: BF800000
	.long 0xbf800000                                           // 00000006EA88: BF800000
	.long 0xbf800000                                           // 00000006EA8C: BF800000
	.long 0xbf800000                                           // 00000006EA90: BF800000
	.long 0xbf800000                                           // 00000006EA94: BF800000
	.long 0xbf800000                                           // 00000006EA98: BF800000
	.long 0xbf800000                                           // 00000006EA9C: BF800000
	.long 0xbf800000                                           // 00000006EAA0: BF800000
	.long 0xbf800000                                           // 00000006EAA4: BF800000
	.long 0xbf800000                                           // 00000006EAA8: BF800000
	.long 0xbf800000                                           // 00000006EAAC: BF800000
	.long 0xbf800000                                           // 00000006EAB0: BF800000
	.long 0xbf800000                                           // 00000006EAB4: BF800000
	.long 0xbf800000                                           // 00000006EAB8: BF800000
	.long 0xbf800000                                           // 00000006EABC: BF800000
	.long 0xbf800000                                           // 00000006EAC0: BF800000
	.long 0xbf800000                                           // 00000006EAC4: BF800000
	.long 0xbf800000                                           // 00000006EAC8: BF800000
	.long 0xbf800000                                           // 00000006EACC: BF800000
	.long 0xbf800000                                           // 00000006EAD0: BF800000
	.long 0xbf800000                                           // 00000006EAD4: BF800000
	.long 0xbf800000                                           // 00000006EAD8: BF800000
	.long 0xbf800000                                           // 00000006EADC: BF800000
	.long 0xbf800000                                           // 00000006EAE0: BF800000
	.long 0xbf800000                                           // 00000006EAE4: BF800000
	.long 0xbf800000                                           // 00000006EAE8: BF800000
	.long 0xbf800000                                           // 00000006EAEC: BF800000
	.long 0xbf800000                                           // 00000006EAF0: BF800000
	.long 0xbf800000                                           // 00000006EAF4: BF800000
	.long 0xbf800000                                           // 00000006EAF8: BF800000
	.long 0xbf800000                                           // 00000006EAFC: BF800000

	.p2align	8
	.type	add_get_local_id_get_num_groups,@function
	.size	add_get_local_id_get_num_groups, add_get_local_id_get_num_groups_symend-add_get_local_id_get_num_groups
add_get_local_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 00000006EB00: CA240080 010800FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 00000006EB0C: D6100009 02291500
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006EB14: F4080300 F8000008
	v_bfe_u32 v10, v0, 20, 10                                  // 00000006EB1C: D610000A 02292900
	s_clause 0x1                                               // 00000006EB24: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006EB28: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006EB30: DC4A0026 07000001
	s_clause 0x1                                               // 00000006EB38: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006EB3C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006EB44: F4040180 F8000048
	v_lshl_or_b32 v0, s2, 3, v8                                // 00000006EB4C: D6560000 04210602
	v_lshl_or_b32 v2, s3, 2, v9                                // 00000006EB54: D6560002 04250403
	v_lshl_or_b32 v4, s4, 1, v10                               // 00000006EB5C: D6560004 04290204
	s_load_b32 s0, s[0:1], 0x18                                // 00000006EB64: F4000000 F8000018
	s_mov_b32 s33, 0                                           // 00000006EB6C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006EB70: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 00000006EB74: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006EB7C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006EB80: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006EB88: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006EB90: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006EB98: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006EBA0: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006EBA4: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006EBAC: D5207C05 00090007
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006EBB4: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006EBBC: BF870212
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006EBC0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006EBC8: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006EBD0: 4002020D
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006EBD4: BF870004
	v_add_co_u32 v2, vcc_lo, s12, v2                           // 00000006EBD8: D7006A02 0002040C
	v_add_co_ci_u32_e32 v3, vcc_lo, s13, v3, vcc_lo            // 00000006EBE0: 4006060D
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006EBE4: D7006A04 0002080C
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006EBEC: 400A0A0D
	s_waitcnt vmcnt(1)                                         // 00000006EBF0: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006EBF4: 7C7A0C80
	v_lshrrev_b32_e32 v11, 16, v6                              // 00000006EBF8: 32160C90
	v_add_co_ci_u32_e32 v6, vcc_lo, s14, v8, vcc_lo            // 00000006EBFC: 400C100E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006EC00: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v11.l                          // 00000006EC04: 7C7A1680
	v_add_co_ci_u32_e32 v8, vcc_lo, s15, v9, vcc_lo            // 00000006EC08: 4010120F
	s_waitcnt vmcnt(0)                                         // 00000006EC0C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006EC10: 7C7A0E80
	v_add_co_ci_u32_e32 v7, vcc_lo, s0, v10, vcc_lo            // 00000006EC14: 400E1400
	s_clause 0x2                                               // 00000006EC18: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006EC1C: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006EC24: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006EC2C: DC6A0000 007C0704
	s_nop 0                                                    // 00000006EC34: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EC38: BFB60003
	s_endpgm                                                   // 00000006EC3C: BFB00000
add_get_local_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006EC40: BF800000
	.long 0xbf800000                                           // 00000006EC44: BF800000
	.long 0xbf800000                                           // 00000006EC48: BF800000
	.long 0xbf800000                                           // 00000006EC4C: BF800000
	.long 0xbf800000                                           // 00000006EC50: BF800000
	.long 0xbf800000                                           // 00000006EC54: BF800000
	.long 0xbf800000                                           // 00000006EC58: BF800000
	.long 0xbf800000                                           // 00000006EC5C: BF800000
	.long 0xbf800000                                           // 00000006EC60: BF800000
	.long 0xbf800000                                           // 00000006EC64: BF800000
	.long 0xbf800000                                           // 00000006EC68: BF800000
	.long 0xbf800000                                           // 00000006EC6C: BF800000
	.long 0xbf800000                                           // 00000006EC70: BF800000
	.long 0xbf800000                                           // 00000006EC74: BF800000
	.long 0xbf800000                                           // 00000006EC78: BF800000
	.long 0xbf800000                                           // 00000006EC7C: BF800000
	.long 0xbf800000                                           // 00000006EC80: BF800000
	.long 0xbf800000                                           // 00000006EC84: BF800000
	.long 0xbf800000                                           // 00000006EC88: BF800000
	.long 0xbf800000                                           // 00000006EC8C: BF800000
	.long 0xbf800000                                           // 00000006EC90: BF800000
	.long 0xbf800000                                           // 00000006EC94: BF800000
	.long 0xbf800000                                           // 00000006EC98: BF800000
	.long 0xbf800000                                           // 00000006EC9C: BF800000
	.long 0xbf800000                                           // 00000006ECA0: BF800000
	.long 0xbf800000                                           // 00000006ECA4: BF800000
	.long 0xbf800000                                           // 00000006ECA8: BF800000
	.long 0xbf800000                                           // 00000006ECAC: BF800000
	.long 0xbf800000                                           // 00000006ECB0: BF800000
	.long 0xbf800000                                           // 00000006ECB4: BF800000
	.long 0xbf800000                                           // 00000006ECB8: BF800000
	.long 0xbf800000                                           // 00000006ECBC: BF800000
	.long 0xbf800000                                           // 00000006ECC0: BF800000
	.long 0xbf800000                                           // 00000006ECC4: BF800000
	.long 0xbf800000                                           // 00000006ECC8: BF800000
	.long 0xbf800000                                           // 00000006ECCC: BF800000
	.long 0xbf800000                                           // 00000006ECD0: BF800000
	.long 0xbf800000                                           // 00000006ECD4: BF800000
	.long 0xbf800000                                           // 00000006ECD8: BF800000
	.long 0xbf800000                                           // 00000006ECDC: BF800000
	.long 0xbf800000                                           // 00000006ECE0: BF800000
	.long 0xbf800000                                           // 00000006ECE4: BF800000
	.long 0xbf800000                                           // 00000006ECE8: BF800000
	.long 0xbf800000                                           // 00000006ECEC: BF800000
	.long 0xbf800000                                           // 00000006ECF0: BF800000
	.long 0xbf800000                                           // 00000006ECF4: BF800000
	.long 0xbf800000                                           // 00000006ECF8: BF800000
	.long 0xbf800000                                           // 00000006ECFC: BF800000

	.p2align	8
	.type	add_get_group_id_get_num_groups,@function
	.size	add_get_group_id_get_num_groups, add_get_group_id_get_num_groups_symend-add_get_group_id_get_num_groups
add_get_group_id_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000006ED00: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006ED04: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006ED0C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006ED14: BEA10080
	s_clause 0x1                                               // 00000006ED18: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006ED1C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006ED24: DC4A0026 07000001
	s_clause 0x1                                               // 00000006ED2C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006ED30: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006ED38: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006ED40: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006ED48: D6100000 02292900
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006ED50: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006ED58: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006ED5C: D6560001 04050202
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006ED64: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006ED6C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006ED70: BF870092
	v_add_co_u32 v0, s5, s8, v1                                // 00000006ED74: D7000500 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 00000006ED7C: D5207C01 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 00000006ED84: D7000502 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006ED8C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s5                   // 00000006ED90: D5207C03 0015000B
	v_add_co_u32 v4, s5, s6, v4                                // 00000006ED98: D7000504 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006EDA0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s5                    // 00000006EDA8: D5207C05 00150007
	s_load_b32 s5, s[0:1], 0x18                                // 00000006EDB0: F4000140 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006EDB8: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006EDC0: BF870213
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006EDC4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006EDCC: 4002020D
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006EDD0: BF870093
	v_add_co_u32 v2, s1, s12, v2                               // 00000006EDD4: D7000102 0002040C
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 00000006EDDC: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006EDE4: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 00000006EDEC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006EDF0: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006EDF4: 7C7A0C80
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000006EDF8: BF8704D2
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006EDFC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006EE04: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006EE08: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006EE0C: 7C7A0E80
	s_addc_u32 s1, s14, s2                                     // 00000006EE10: 8201020E
	v_mov_b32_e32 v6, s1                                       // 00000006EE14: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 00000006EE18: BF078000
	s_addc_u32 s0, s15, s3                                     // 00000006EE1C: 8200030F
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006EE20: BF07806A
	v_mov_b32_e32 v7, s0                                       // 00000006EE24: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 00000006EE28: BF89FC07
	s_addc_u32 s0, s5, s4                                      // 00000006EE2C: 82000405
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006EE30: D7006A04 0002080C
	v_mov_b32_e32 v8, s0                                       // 00000006EE38: 7E100200
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006EE3C: 400A0A0D
	s_clause 0x2                                               // 00000006EE40: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006EE44: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006EE4C: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006EE54: DC6A0000 007C0804
	s_nop 0                                                    // 00000006EE5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EE60: BFB60003
	s_endpgm                                                   // 00000006EE64: BFB00000
add_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006EE68: BF800000
	.long 0xbf800000                                           // 00000006EE6C: BF800000
	.long 0xbf800000                                           // 00000006EE70: BF800000
	.long 0xbf800000                                           // 00000006EE74: BF800000
	.long 0xbf800000                                           // 00000006EE78: BF800000
	.long 0xbf800000                                           // 00000006EE7C: BF800000
	.long 0xbf800000                                           // 00000006EE80: BF800000
	.long 0xbf800000                                           // 00000006EE84: BF800000
	.long 0xbf800000                                           // 00000006EE88: BF800000
	.long 0xbf800000                                           // 00000006EE8C: BF800000
	.long 0xbf800000                                           // 00000006EE90: BF800000
	.long 0xbf800000                                           // 00000006EE94: BF800000
	.long 0xbf800000                                           // 00000006EE98: BF800000
	.long 0xbf800000                                           // 00000006EE9C: BF800000
	.long 0xbf800000                                           // 00000006EEA0: BF800000
	.long 0xbf800000                                           // 00000006EEA4: BF800000
	.long 0xbf800000                                           // 00000006EEA8: BF800000
	.long 0xbf800000                                           // 00000006EEAC: BF800000
	.long 0xbf800000                                           // 00000006EEB0: BF800000
	.long 0xbf800000                                           // 00000006EEB4: BF800000
	.long 0xbf800000                                           // 00000006EEB8: BF800000
	.long 0xbf800000                                           // 00000006EEBC: BF800000
	.long 0xbf800000                                           // 00000006EEC0: BF800000
	.long 0xbf800000                                           // 00000006EEC4: BF800000
	.long 0xbf800000                                           // 00000006EEC8: BF800000
	.long 0xbf800000                                           // 00000006EECC: BF800000
	.long 0xbf800000                                           // 00000006EED0: BF800000
	.long 0xbf800000                                           // 00000006EED4: BF800000
	.long 0xbf800000                                           // 00000006EED8: BF800000
	.long 0xbf800000                                           // 00000006EEDC: BF800000
	.long 0xbf800000                                           // 00000006EEE0: BF800000
	.long 0xbf800000                                           // 00000006EEE4: BF800000
	.long 0xbf800000                                           // 00000006EEE8: BF800000
	.long 0xbf800000                                           // 00000006EEEC: BF800000
	.long 0xbf800000                                           // 00000006EEF0: BF800000
	.long 0xbf800000                                           // 00000006EEF4: BF800000
	.long 0xbf800000                                           // 00000006EEF8: BF800000
	.long 0xbf800000                                           // 00000006EEFC: BF800000

	.p2align	8
	.type	add_get_local_size_get_num_groups,@function
	.size	add_get_local_size_get_num_groups, add_get_local_size_get_num_groups_symend-add_get_local_size_get_num_groups
add_get_local_size_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000006EF00: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006EF04: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006EF0C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006EF14: BEA10080
	s_clause 0x1                                               // 00000006EF18: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006EF1C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006EF24: DC4A0026 07000001
	s_clause 0x1                                               // 00000006EF2C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006EF30: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006EF38: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006EF40: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006EF48: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006EF50: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006EF58: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006EF5C: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006EF64: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006EF6C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006EF70: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000006EF74: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006EF7C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006EF84: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006EF8C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006EF90: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006EF98: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006EFA0: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006EFA8: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 00000006EFB0: F4000080 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006EFB8: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006EFC0: BF870213
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006EFC4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006EFCC: 4002020D
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006EFD0: BF870093
	v_add_co_u32 v2, s1, s12, v2                               // 00000006EFD4: D7000102 0002040C
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 00000006EFDC: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006EFE4: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 00000006EFEC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006EFF0: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006EFF4: 7C7A0C80
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000006EFF8: BF8704D2
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006EFFC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F004: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006F008: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006F00C: 7C7A0E80
	s_addc_u32 s1, s14, 2                                      // 00000006F010: 8201820E
	v_mov_b32_e32 v6, s1                                       // 00000006F014: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 00000006F018: BF078000
	s_addc_u32 s0, s15, 2                                      // 00000006F01C: 8200820F
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F020: BF07806A
	v_mov_b32_e32 v7, s0                                       // 00000006F024: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 00000006F028: BF89FC07
	s_addc_u32 s0, s2, 4                                       // 00000006F02C: 82008402
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006F030: D7006A04 0002080C
	v_mov_b32_e32 v8, s0                                       // 00000006F038: 7E100200
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006F03C: 400A0A0D
	s_clause 0x2                                               // 00000006F040: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006F044: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006F04C: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006F054: DC6A0000 007C0804
	s_nop 0                                                    // 00000006F05C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F060: BFB60003
	s_endpgm                                                   // 00000006F064: BFB00000
add_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F068: BF800000
	.long 0xbf800000                                           // 00000006F06C: BF800000
	.long 0xbf800000                                           // 00000006F070: BF800000
	.long 0xbf800000                                           // 00000006F074: BF800000
	.long 0xbf800000                                           // 00000006F078: BF800000
	.long 0xbf800000                                           // 00000006F07C: BF800000
	.long 0xbf800000                                           // 00000006F080: BF800000
	.long 0xbf800000                                           // 00000006F084: BF800000
	.long 0xbf800000                                           // 00000006F088: BF800000
	.long 0xbf800000                                           // 00000006F08C: BF800000
	.long 0xbf800000                                           // 00000006F090: BF800000
	.long 0xbf800000                                           // 00000006F094: BF800000
	.long 0xbf800000                                           // 00000006F098: BF800000
	.long 0xbf800000                                           // 00000006F09C: BF800000
	.long 0xbf800000                                           // 00000006F0A0: BF800000
	.long 0xbf800000                                           // 00000006F0A4: BF800000
	.long 0xbf800000                                           // 00000006F0A8: BF800000
	.long 0xbf800000                                           // 00000006F0AC: BF800000
	.long 0xbf800000                                           // 00000006F0B0: BF800000
	.long 0xbf800000                                           // 00000006F0B4: BF800000
	.long 0xbf800000                                           // 00000006F0B8: BF800000
	.long 0xbf800000                                           // 00000006F0BC: BF800000
	.long 0xbf800000                                           // 00000006F0C0: BF800000
	.long 0xbf800000                                           // 00000006F0C4: BF800000
	.long 0xbf800000                                           // 00000006F0C8: BF800000
	.long 0xbf800000                                           // 00000006F0CC: BF800000
	.long 0xbf800000                                           // 00000006F0D0: BF800000
	.long 0xbf800000                                           // 00000006F0D4: BF800000
	.long 0xbf800000                                           // 00000006F0D8: BF800000
	.long 0xbf800000                                           // 00000006F0DC: BF800000
	.long 0xbf800000                                           // 00000006F0E0: BF800000
	.long 0xbf800000                                           // 00000006F0E4: BF800000
	.long 0xbf800000                                           // 00000006F0E8: BF800000
	.long 0xbf800000                                           // 00000006F0EC: BF800000
	.long 0xbf800000                                           // 00000006F0F0: BF800000
	.long 0xbf800000                                           // 00000006F0F4: BF800000
	.long 0xbf800000                                           // 00000006F0F8: BF800000
	.long 0xbf800000                                           // 00000006F0FC: BF800000

	.p2align	8
	.type	add_get_global_id_get_num_groups,@function
	.size	add_get_global_id_get_num_groups, add_get_global_id_get_num_groups_symend-add_get_global_id_get_num_groups
add_get_global_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006F100: CA240080 010200FF 000003FF
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006F10C: F4080300 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006F114: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006F11C: D6100004 02292900
	s_clause 0x1                                               // 00000006F124: BF850001
	global_load_b32 v11, v1, s[0:1] offset:34                  // 00000006F128: DC520022 0B000001
	global_load_u16 v12, v1, s[0:1] offset:38                  // 00000006F130: DC4A0026 0C000001
	s_clause 0x1                                               // 00000006F138: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F13C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006F144: F4040180 F8000048
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006F14C: D6560000 04090202
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000006F154: D6560003 040D0203
	v_lshl_or_b32 v5, s4, 2, v4                                // 00000006F15C: D6560005 04110404
	s_load_b32 s1, s[0:1], 0x18                                // 00000006F164: F4000040 F8000018
	s_mov_b32 s33, 0                                           // 00000006F16C: BEA10080
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 00000006F170: D73C0001 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006F178: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F17C: BF870111
	v_add_co_u32 v1, vcc_lo, s12, v1                           // 00000006F180: D7006A01 0002020C
	v_add_co_ci_u32_e32 v2, vcc_lo, s13, v2, vcc_lo            // 00000006F188: 4004040D
	v_add_co_u32 v3, s0, s10, v3                               // 00000006F18C: D7000003 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006F194: BF8700A1
	v_add_co_ci_u32_e64 v4, null, s11, 0, s0                   // 00000006F198: D5207C04 0001000B
	v_add_co_u32 v5, s0, s6, v5                                // 00000006F1A0: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, null, s7, 0, s0                    // 00000006F1A8: D5207C06 00010007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F1B0: BF870113
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 00000006F1B4: D73C0007 00020682
	v_lshlrev_b64 v[9:10], 2, v[5:6]                           // 00000006F1BC: D73C0009 00020A82
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F1C4: BF870092
	v_add_co_u32 v6, s0, s12, v7                               // 00000006F1C8: D7000006 00020E0C
	v_add_co_ci_u32_e64 v7, s0, s13, v8, s0                    // 00000006F1D0: D5200007 0002100D
	s_waitcnt vmcnt(1)                                         // 00000006F1D8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v11.l                          // 00000006F1DC: 7C7A1680
	v_lshrrev_b32_e32 v4, 16, v11                              // 00000006F1E0: 32081690
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F1E4: BF07806A
	v_add_co_u32 v8, vcc_lo, s12, v9                           // 00000006F1E8: D7006A08 0002120C
	v_add_co_ci_u32_e32 v9, vcc_lo, s13, v10, vcc_lo           // 00000006F1F0: 4012140D
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006F1F4: BF8704A3
	v_cmp_ne_u16_e32 vcc_lo, 0, v4.l                           // 00000006F1F8: 7C7A0880
	s_addc_u32 s0, s8, s14                                     // 00000006F1FC: 82000E08
	v_add_nc_u32_e32 v0, s0, v0                                // 00000006F200: 4A000000
	v_add_co_ci_u32_e32 v3, vcc_lo, s15, v3, vcc_lo            // 00000006F204: 4006060F
	s_waitcnt vmcnt(0)                                         // 00000006F208: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v12.l                          // 00000006F20C: 7C7A1880
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v5, vcc_lo             // 00000006F210: 40080A01
	s_clause 0x2                                               // 00000006F214: BF850002
	global_store_b32 v[1:2], v0, off                           // 00000006F218: DC6A0000 007C0001
	global_store_b32 v[6:7], v3, off                           // 00000006F220: DC6A0000 007C0306
	global_store_b32 v[8:9], v4, off                           // 00000006F228: DC6A0000 007C0408
	s_nop 0                                                    // 00000006F230: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F234: BFB60003
	s_endpgm                                                   // 00000006F238: BFB00000
add_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F23C: BF800000
	.long 0xbf800000                                           // 00000006F240: BF800000
	.long 0xbf800000                                           // 00000006F244: BF800000
	.long 0xbf800000                                           // 00000006F248: BF800000
	.long 0xbf800000                                           // 00000006F24C: BF800000
	.long 0xbf800000                                           // 00000006F250: BF800000
	.long 0xbf800000                                           // 00000006F254: BF800000
	.long 0xbf800000                                           // 00000006F258: BF800000
	.long 0xbf800000                                           // 00000006F25C: BF800000
	.long 0xbf800000                                           // 00000006F260: BF800000
	.long 0xbf800000                                           // 00000006F264: BF800000
	.long 0xbf800000                                           // 00000006F268: BF800000
	.long 0xbf800000                                           // 00000006F26C: BF800000
	.long 0xbf800000                                           // 00000006F270: BF800000
	.long 0xbf800000                                           // 00000006F274: BF800000
	.long 0xbf800000                                           // 00000006F278: BF800000
	.long 0xbf800000                                           // 00000006F27C: BF800000
	.long 0xbf800000                                           // 00000006F280: BF800000
	.long 0xbf800000                                           // 00000006F284: BF800000
	.long 0xbf800000                                           // 00000006F288: BF800000
	.long 0xbf800000                                           // 00000006F28C: BF800000
	.long 0xbf800000                                           // 00000006F290: BF800000
	.long 0xbf800000                                           // 00000006F294: BF800000
	.long 0xbf800000                                           // 00000006F298: BF800000
	.long 0xbf800000                                           // 00000006F29C: BF800000
	.long 0xbf800000                                           // 00000006F2A0: BF800000
	.long 0xbf800000                                           // 00000006F2A4: BF800000
	.long 0xbf800000                                           // 00000006F2A8: BF800000
	.long 0xbf800000                                           // 00000006F2AC: BF800000
	.long 0xbf800000                                           // 00000006F2B0: BF800000
	.long 0xbf800000                                           // 00000006F2B4: BF800000
	.long 0xbf800000                                           // 00000006F2B8: BF800000
	.long 0xbf800000                                           // 00000006F2BC: BF800000
	.long 0xbf800000                                           // 00000006F2C0: BF800000
	.long 0xbf800000                                           // 00000006F2C4: BF800000
	.long 0xbf800000                                           // 00000006F2C8: BF800000
	.long 0xbf800000                                           // 00000006F2CC: BF800000
	.long 0xbf800000                                           // 00000006F2D0: BF800000
	.long 0xbf800000                                           // 00000006F2D4: BF800000
	.long 0xbf800000                                           // 00000006F2D8: BF800000
	.long 0xbf800000                                           // 00000006F2DC: BF800000
	.long 0xbf800000                                           // 00000006F2E0: BF800000
	.long 0xbf800000                                           // 00000006F2E4: BF800000
	.long 0xbf800000                                           // 00000006F2E8: BF800000
	.long 0xbf800000                                           // 00000006F2EC: BF800000
	.long 0xbf800000                                           // 00000006F2F0: BF800000
	.long 0xbf800000                                           // 00000006F2F4: BF800000
	.long 0xbf800000                                           // 00000006F2F8: BF800000
	.long 0xbf800000                                           // 00000006F2FC: BF800000

	.p2align	8
	.type	add_get_global_size_get_num_groups,@function
	.size	add_get_global_size_get_num_groups, add_get_global_size_get_num_groups_symend-add_get_global_size_get_num_groups
add_get_global_size_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000006F300: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006F304: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006F30C: BEA10080
	s_clause 0x1                                               // 00000006F310: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006F314: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006F31C: DC4A0026 07000001
	s_clause 0x2                                               // 00000006F324: BF850002
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000006F328: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F330: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 00000006F338: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006F340: 360200FF 000003FF
	s_clause 0x1                                               // 00000006F348: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 00000006F34C: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 00000006F354: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F35C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006F364: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006F36C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006F374: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006F378: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006F380: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 00000006F384: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 00000006F388: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006F390: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006F394: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006F39C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006F3A4: D5207C03 000D000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006F3AC: BF8701A3
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F3B0: D73C0000 00020082
	v_add_co_u32 v4, s3, s12, v4                               // 00000006F3B8: D7000304 0002080C
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006F3C0: D73C0002 00020482
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 00000006F3C8: D5207C05 000D000D
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006F3D0: BF870224
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F3D4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F3DC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006F3E0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006F3E8: 40060601
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006F3EC: D73C0004 00020882
	s_lshl_b32 s3, s7, 1                                       // 00000006F3F4: 84038107
	s_lshl_b32 s4, s5, 1                                       // 00000006F3F8: 84048105
	s_waitcnt vmcnt(1)                                         // 00000006F3FC: BF8907F7
	v_and_b32_e32 v9, 0xffff, v6                               // 00000006F400: 36120CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006F408: BF8903F7
	v_cmp_ne_u32_e32 vcc_lo, 0, v7                             // 00000006F40C: 7C9A0E80
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006F410: 32100C90
	v_add_co_ci_u32_e32 v7, vcc_lo, s5, v7, vcc_lo             // 00000006F414: 400E0E05
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006F418: 7C7A0C80
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000006F41C: BF870132
	v_add_nc_u32_e32 v7, s4, v7                                // 00000006F420: 4A0E0E04
	v_add_co_ci_u32_e32 v6, vcc_lo, s6, v9, vcc_lo             // 00000006F424: 400C1206
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006F428: 7C7A1080
	v_add_nc_u32_e32 v6, s2, v6                                // 00000006F42C: 4A0C0C02
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo             // 00000006F430: 40101007
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006F434: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006F43C: 400A0A01
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006F440: BF870003
	v_add_nc_u32_e32 v8, s3, v8                                // 00000006F444: 4A101003
	s_clause 0x2                                               // 00000006F448: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006F44C: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 00000006F454: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 00000006F45C: DC6A0000 007C0704
	s_nop 0                                                    // 00000006F464: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F468: BFB60003
	s_endpgm                                                   // 00000006F46C: BFB00000
add_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F470: BF800000
	.long 0xbf800000                                           // 00000006F474: BF800000
	.long 0xbf800000                                           // 00000006F478: BF800000
	.long 0xbf800000                                           // 00000006F47C: BF800000
	.long 0xbf800000                                           // 00000006F480: BF800000
	.long 0xbf800000                                           // 00000006F484: BF800000
	.long 0xbf800000                                           // 00000006F488: BF800000
	.long 0xbf800000                                           // 00000006F48C: BF800000
	.long 0xbf800000                                           // 00000006F490: BF800000
	.long 0xbf800000                                           // 00000006F494: BF800000
	.long 0xbf800000                                           // 00000006F498: BF800000
	.long 0xbf800000                                           // 00000006F49C: BF800000
	.long 0xbf800000                                           // 00000006F4A0: BF800000
	.long 0xbf800000                                           // 00000006F4A4: BF800000
	.long 0xbf800000                                           // 00000006F4A8: BF800000
	.long 0xbf800000                                           // 00000006F4AC: BF800000
	.long 0xbf800000                                           // 00000006F4B0: BF800000
	.long 0xbf800000                                           // 00000006F4B4: BF800000
	.long 0xbf800000                                           // 00000006F4B8: BF800000
	.long 0xbf800000                                           // 00000006F4BC: BF800000
	.long 0xbf800000                                           // 00000006F4C0: BF800000
	.long 0xbf800000                                           // 00000006F4C4: BF800000
	.long 0xbf800000                                           // 00000006F4C8: BF800000
	.long 0xbf800000                                           // 00000006F4CC: BF800000
	.long 0xbf800000                                           // 00000006F4D0: BF800000
	.long 0xbf800000                                           // 00000006F4D4: BF800000
	.long 0xbf800000                                           // 00000006F4D8: BF800000
	.long 0xbf800000                                           // 00000006F4DC: BF800000
	.long 0xbf800000                                           // 00000006F4E0: BF800000
	.long 0xbf800000                                           // 00000006F4E4: BF800000
	.long 0xbf800000                                           // 00000006F4E8: BF800000
	.long 0xbf800000                                           // 00000006F4EC: BF800000
	.long 0xbf800000                                           // 00000006F4F0: BF800000
	.long 0xbf800000                                           // 00000006F4F4: BF800000
	.long 0xbf800000                                           // 00000006F4F8: BF800000
	.long 0xbf800000                                           // 00000006F4FC: BF800000

	.p2align	8
	.type	add_get_num_groups_get_num_groups,@function
	.size	add_get_num_groups_get_num_groups, add_get_num_groups_get_num_groups_symend-add_get_num_groups_get_num_groups
add_get_num_groups_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000006F500: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006F504: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006F50C: BEA10080
	s_clause 0x1                                               // 00000006F510: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006F514: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006F51C: DC4A0026 07000001
	s_clause 0x1                                               // 00000006F524: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F528: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006F530: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006F538: 360200FF 000003FF
	s_clause 0x1                                               // 00000006F540: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006F544: F4080300 F8000008
	s_load_b32 s1, s[0:1], 0x18                                // 00000006F54C: F4000040 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F554: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006F55C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006F564: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000006F56C: BF870123
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006F570: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006F578: BF89FC07
	v_add_co_u32 v0, s0, s8, v1                                // 00000006F57C: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006F584: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 00000006F588: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 00000006F590: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 00000006F598: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006F5A0: BF8701A3
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F5A4: D73C0000 00020082
	v_add_co_u32 v4, s0, s6, v4                                // 00000006F5AC: D7000004 00020806
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006F5B4: D73C0002 00020482
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 00000006F5BC: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F5C4: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 00000006F5C8: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 00000006F5D0: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006F5D8: BF870214
	v_add_co_u32 v2, s0, s12, v2                               // 00000006F5DC: D7000002 0002040C
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006F5E4: D73C0004 00020882
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 00000006F5EC: D5200003 0002060D
	s_waitcnt vmcnt(1)                                         // 00000006F5F4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006F5F8: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000006F5FC: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F600: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006F604: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006F608: 7C7A0C80
	s_addc_u32 s2, s14, 0                                      // 00000006F60C: 8202800E
	s_lshl_b32 s2, s2, 1                                       // 00000006F610: 84028102
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F614: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006F618: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006F61C: 7C7A0E80
	s_addc_u32 s3, s15, 0                                      // 00000006F620: 8203800F
	v_mov_b32_e32 v6, s2                                       // 00000006F624: 7E0C0202
	s_lshl_b32 s0, s3, 1                                       // 00000006F628: 84008103
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F62C: BF07806A
	v_mov_b32_e32 v7, s0                                       // 00000006F630: 7E0E0200
	s_addc_u32 s1, s1, 0                                       // 00000006F634: 82018001
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006F638: D7006A04 0002080C
	s_lshl_b32 s0, s1, 1                                       // 00000006F640: 84008101
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006F644: 400A0A0D
	v_mov_b32_e32 v8, s0                                       // 00000006F648: 7E100200
	s_clause 0x2                                               // 00000006F64C: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006F650: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006F658: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006F660: DC6A0000 007C0804
	s_nop 0                                                    // 00000006F668: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F66C: BFB60003
	s_endpgm                                                   // 00000006F670: BFB00000
add_get_num_groups_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F674: BF800000
	.long 0xbf800000                                           // 00000006F678: BF800000
	.long 0xbf800000                                           // 00000006F67C: BF800000
	.long 0xbf800000                                           // 00000006F680: BF800000
	.long 0xbf800000                                           // 00000006F684: BF800000
	.long 0xbf800000                                           // 00000006F688: BF800000
	.long 0xbf800000                                           // 00000006F68C: BF800000
	.long 0xbf800000                                           // 00000006F690: BF800000
	.long 0xbf800000                                           // 00000006F694: BF800000
	.long 0xbf800000                                           // 00000006F698: BF800000
	.long 0xbf800000                                           // 00000006F69C: BF800000
	.long 0xbf800000                                           // 00000006F6A0: BF800000
	.long 0xbf800000                                           // 00000006F6A4: BF800000
	.long 0xbf800000                                           // 00000006F6A8: BF800000
	.long 0xbf800000                                           // 00000006F6AC: BF800000
	.long 0xbf800000                                           // 00000006F6B0: BF800000
	.long 0xbf800000                                           // 00000006F6B4: BF800000
	.long 0xbf800000                                           // 00000006F6B8: BF800000
	.long 0xbf800000                                           // 00000006F6BC: BF800000
	.long 0xbf800000                                           // 00000006F6C0: BF800000
	.long 0xbf800000                                           // 00000006F6C4: BF800000
	.long 0xbf800000                                           // 00000006F6C8: BF800000
	.long 0xbf800000                                           // 00000006F6CC: BF800000
	.long 0xbf800000                                           // 00000006F6D0: BF800000
	.long 0xbf800000                                           // 00000006F6D4: BF800000
	.long 0xbf800000                                           // 00000006F6D8: BF800000
	.long 0xbf800000                                           // 00000006F6DC: BF800000
	.long 0xbf800000                                           // 00000006F6E0: BF800000
	.long 0xbf800000                                           // 00000006F6E4: BF800000
	.long 0xbf800000                                           // 00000006F6E8: BF800000
	.long 0xbf800000                                           // 00000006F6EC: BF800000
	.long 0xbf800000                                           // 00000006F6F0: BF800000
	.long 0xbf800000                                           // 00000006F6F4: BF800000
	.long 0xbf800000                                           // 00000006F6F8: BF800000
	.long 0xbf800000                                           // 00000006F6FC: BF800000

	.p2align	8
	.type	add_get_work_dim_get_num_groups,@function
	.size	add_get_work_dim_get_num_groups, add_get_work_dim_get_num_groups_symend-add_get_work_dim_get_num_groups
add_get_work_dim_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000006F700: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000006F704: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006F70C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000006F714: BEA10080
	s_clause 0x1                                               // 00000006F718: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006F71C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006F724: DC4A0026 07000001
	s_clause 0x1                                               // 00000006F72C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F730: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006F738: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006F740: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F748: D6100000 02292900
	s_load_b32 s5, s[0:1], 0x50                                // 00000006F750: F4000140 F8000050
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006F758: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006F760: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006F764: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000006F76C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000006F774: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F778: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000006F77C: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000006F784: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000006F78C: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006F794: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000006F798: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000006F7A0: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F7A8: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000006F7B0: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 00000006F7B8: F4000080 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006F7C0: D73C0002 00020482
	s_and_b32 s3, s5, 0xffff                                   // 00000006F7C8: 8B03FF05 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006F7D0: BF8701A3
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000006F7D4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000006F7DC: 4002020D
	v_add_co_u32 v2, s1, s12, v2                               // 00000006F7E0: D7000102 0002040C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000006F7E8: BF870151
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 00000006F7EC: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006F7F4: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 00000006F7FC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 00000006F800: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006F804: 7C7A0C80
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006F808: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F810: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006F814: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006F818: 7C7A0E80
	s_addc_u32 s1, s3, s14                                     // 00000006F81C: 82010E03
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006F820: BF870009
	v_mov_b32_e32 v6, s1                                       // 00000006F824: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 00000006F828: BF078000
	s_addc_u32 s0, s15, s3                                     // 00000006F82C: 8200030F
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F830: BF07806A
	v_mov_b32_e32 v7, s0                                       // 00000006F834: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 00000006F838: BF89FC07
	s_addc_u32 s0, s2, s3                                      // 00000006F83C: 82000302
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000006F840: D7006A04 0002080C
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000006F848: 400A0A0D
	v_mov_b32_e32 v8, s0                                       // 00000006F84C: 7E100200
	s_clause 0x2                                               // 00000006F850: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006F854: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006F85C: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006F864: DC6A0000 007C0804
	s_nop 0                                                    // 00000006F86C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F870: BFB60003
	s_endpgm                                                   // 00000006F874: BFB00000
add_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F878: BF800000
	.long 0xbf800000                                           // 00000006F87C: BF800000
	.long 0xbf800000                                           // 00000006F880: BF800000
	.long 0xbf800000                                           // 00000006F884: BF800000
	.long 0xbf800000                                           // 00000006F888: BF800000
	.long 0xbf800000                                           // 00000006F88C: BF800000
	.long 0xbf800000                                           // 00000006F890: BF800000
	.long 0xbf800000                                           // 00000006F894: BF800000
	.long 0xbf800000                                           // 00000006F898: BF800000
	.long 0xbf800000                                           // 00000006F89C: BF800000
	.long 0xbf800000                                           // 00000006F8A0: BF800000
	.long 0xbf800000                                           // 00000006F8A4: BF800000
	.long 0xbf800000                                           // 00000006F8A8: BF800000
	.long 0xbf800000                                           // 00000006F8AC: BF800000
	.long 0xbf800000                                           // 00000006F8B0: BF800000
	.long 0xbf800000                                           // 00000006F8B4: BF800000
	.long 0xbf800000                                           // 00000006F8B8: BF800000
	.long 0xbf800000                                           // 00000006F8BC: BF800000
	.long 0xbf800000                                           // 00000006F8C0: BF800000
	.long 0xbf800000                                           // 00000006F8C4: BF800000
	.long 0xbf800000                                           // 00000006F8C8: BF800000
	.long 0xbf800000                                           // 00000006F8CC: BF800000
	.long 0xbf800000                                           // 00000006F8D0: BF800000
	.long 0xbf800000                                           // 00000006F8D4: BF800000
	.long 0xbf800000                                           // 00000006F8D8: BF800000
	.long 0xbf800000                                           // 00000006F8DC: BF800000
	.long 0xbf800000                                           // 00000006F8E0: BF800000
	.long 0xbf800000                                           // 00000006F8E4: BF800000
	.long 0xbf800000                                           // 00000006F8E8: BF800000
	.long 0xbf800000                                           // 00000006F8EC: BF800000
	.long 0xbf800000                                           // 00000006F8F0: BF800000
	.long 0xbf800000                                           // 00000006F8F4: BF800000
	.long 0xbf800000                                           // 00000006F8F8: BF800000
	.long 0xbf800000                                           // 00000006F8FC: BF800000

	.p2align	8
	.type	add_x_get_work_dim,@function
	.size	add_x_get_work_dim, add_x_get_work_dim_symend-add_x_get_work_dim
add_x_get_work_dim:
	s_clause 0x3                                               // 00000006F900: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000006F904: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F90C: F4080200 F8000038
	s_load_b32 s12, s[0:1], 0x8                                // 00000006F914: F4000300 F8000008
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006F91C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006F924: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006F92C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], null                            // 00000006F934: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F93C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006F944: BEA10080
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000006F948: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006F950: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006F958: BF8700C3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006F95C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006F964: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000006F968: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 00000006F970: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006F978: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006F980: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006F988: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006F98C: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006F994: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F99C: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006F9A4: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006F9AC: BF8704A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006F9B0: D73C0002 00020482
	s_add_i32 s2, s2, s12                                      // 00000006F9B8: 81020C02
	v_mov_b32_e32 v6, s2                                       // 00000006F9BC: 7E0C0202
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 00000006F9C0: BF870254
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F9C4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006F9CC: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F9D4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006F9D8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006F9E0: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006F9E4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006F9EC: 400A0A01
	s_clause 0x2                                               // 00000006F9F0: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006F9F4: DC6A0000 007C0600
	global_store_b32 v[2:3], v6, off                           // 00000006F9FC: DC6A0000 007C0602
	global_store_b32 v[4:5], v6, off                           // 00000006FA04: DC6A0000 007C0604
	s_nop 0                                                    // 00000006FA0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FA10: BFB60003
	s_endpgm                                                   // 00000006FA14: BFB00000
add_x_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006FA18: BF800000
	.long 0xbf800000                                           // 00000006FA1C: BF800000
	.long 0xbf800000                                           // 00000006FA20: BF800000
	.long 0xbf800000                                           // 00000006FA24: BF800000
	.long 0xbf800000                                           // 00000006FA28: BF800000
	.long 0xbf800000                                           // 00000006FA2C: BF800000
	.long 0xbf800000                                           // 00000006FA30: BF800000
	.long 0xbf800000                                           // 00000006FA34: BF800000
	.long 0xbf800000                                           // 00000006FA38: BF800000
	.long 0xbf800000                                           // 00000006FA3C: BF800000
	.long 0xbf800000                                           // 00000006FA40: BF800000
	.long 0xbf800000                                           // 00000006FA44: BF800000
	.long 0xbf800000                                           // 00000006FA48: BF800000
	.long 0xbf800000                                           // 00000006FA4C: BF800000
	.long 0xbf800000                                           // 00000006FA50: BF800000
	.long 0xbf800000                                           // 00000006FA54: BF800000
	.long 0xbf800000                                           // 00000006FA58: BF800000
	.long 0xbf800000                                           // 00000006FA5C: BF800000
	.long 0xbf800000                                           // 00000006FA60: BF800000
	.long 0xbf800000                                           // 00000006FA64: BF800000
	.long 0xbf800000                                           // 00000006FA68: BF800000
	.long 0xbf800000                                           // 00000006FA6C: BF800000
	.long 0xbf800000                                           // 00000006FA70: BF800000
	.long 0xbf800000                                           // 00000006FA74: BF800000
	.long 0xbf800000                                           // 00000006FA78: BF800000
	.long 0xbf800000                                           // 00000006FA7C: BF800000
	.long 0xbf800000                                           // 00000006FA80: BF800000
	.long 0xbf800000                                           // 00000006FA84: BF800000
	.long 0xbf800000                                           // 00000006FA88: BF800000
	.long 0xbf800000                                           // 00000006FA8C: BF800000
	.long 0xbf800000                                           // 00000006FA90: BF800000
	.long 0xbf800000                                           // 00000006FA94: BF800000
	.long 0xbf800000                                           // 00000006FA98: BF800000
	.long 0xbf800000                                           // 00000006FA9C: BF800000
	.long 0xbf800000                                           // 00000006FAA0: BF800000
	.long 0xbf800000                                           // 00000006FAA4: BF800000
	.long 0xbf800000                                           // 00000006FAA8: BF800000
	.long 0xbf800000                                           // 00000006FAAC: BF800000
	.long 0xbf800000                                           // 00000006FAB0: BF800000
	.long 0xbf800000                                           // 00000006FAB4: BF800000
	.long 0xbf800000                                           // 00000006FAB8: BF800000
	.long 0xbf800000                                           // 00000006FABC: BF800000
	.long 0xbf800000                                           // 00000006FAC0: BF800000
	.long 0xbf800000                                           // 00000006FAC4: BF800000
	.long 0xbf800000                                           // 00000006FAC8: BF800000
	.long 0xbf800000                                           // 00000006FACC: BF800000
	.long 0xbf800000                                           // 00000006FAD0: BF800000
	.long 0xbf800000                                           // 00000006FAD4: BF800000
	.long 0xbf800000                                           // 00000006FAD8: BF800000
	.long 0xbf800000                                           // 00000006FADC: BF800000
	.long 0xbf800000                                           // 00000006FAE0: BF800000
	.long 0xbf800000                                           // 00000006FAE4: BF800000
	.long 0xbf800000                                           // 00000006FAE8: BF800000
	.long 0xbf800000                                           // 00000006FAEC: BF800000
	.long 0xbf800000                                           // 00000006FAF0: BF800000
	.long 0xbf800000                                           // 00000006FAF4: BF800000
	.long 0xbf800000                                           // 00000006FAF8: BF800000
	.long 0xbf800000                                           // 00000006FAFC: BF800000

	.p2align	8
	.type	add_get_global_offset_get_work_dim,@function
	.size	add_get_global_offset_get_work_dim, add_get_global_offset_get_work_dim_symend-add_get_global_offset_get_work_dim
add_get_global_offset_get_work_dim:
	s_clause 0x2                                               // 00000006FB00: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006FB04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006FB0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006FB14: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006FB1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006FB24: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FB2C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006FB34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006FB3C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006FB40: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006FB48: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006FB50: BF8700C3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006FB54: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006FB5C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000006FB60: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 00000006FB68: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006FB70: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006FB78: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006FB80: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006FB84: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006FB8C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006FB94: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006FB9C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006FBA4: BF8704A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006FBA8: D73C0002 00020482
	s_add_i32 s3, s8, s2                                       // 00000006FBB0: 81030208
	v_mov_b32_e32 v6, s3                                       // 00000006FBB4: 7E0C0203
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006FBB8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FBBC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006FBC4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FBCC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006FBD0: D7006A02 00020400
	s_add_i32 s3, s10, s2                                      // 00000006FBD8: 8103020A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006FBDC: 40060601
	s_add_i32 s2, s6, s2                                       // 00000006FBE0: 81020206
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006FBE4: D7006A04 00020800
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v8, s2             // 00000006FBEC: CA100003 07080002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006FBF4: 400A0A01
	s_clause 0x2                                               // 00000006FBF8: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006FBFC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006FC04: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006FC0C: DC6A0000 007C0804
	s_nop 0                                                    // 00000006FC14: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FC18: BFB60003
	s_endpgm                                                   // 00000006FC1C: BFB00000
add_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006FC20: BF800000
	.long 0xbf800000                                           // 00000006FC24: BF800000
	.long 0xbf800000                                           // 00000006FC28: BF800000
	.long 0xbf800000                                           // 00000006FC2C: BF800000
	.long 0xbf800000                                           // 00000006FC30: BF800000
	.long 0xbf800000                                           // 00000006FC34: BF800000
	.long 0xbf800000                                           // 00000006FC38: BF800000
	.long 0xbf800000                                           // 00000006FC3C: BF800000
	.long 0xbf800000                                           // 00000006FC40: BF800000
	.long 0xbf800000                                           // 00000006FC44: BF800000
	.long 0xbf800000                                           // 00000006FC48: BF800000
	.long 0xbf800000                                           // 00000006FC4C: BF800000
	.long 0xbf800000                                           // 00000006FC50: BF800000
	.long 0xbf800000                                           // 00000006FC54: BF800000
	.long 0xbf800000                                           // 00000006FC58: BF800000
	.long 0xbf800000                                           // 00000006FC5C: BF800000
	.long 0xbf800000                                           // 00000006FC60: BF800000
	.long 0xbf800000                                           // 00000006FC64: BF800000
	.long 0xbf800000                                           // 00000006FC68: BF800000
	.long 0xbf800000                                           // 00000006FC6C: BF800000
	.long 0xbf800000                                           // 00000006FC70: BF800000
	.long 0xbf800000                                           // 00000006FC74: BF800000
	.long 0xbf800000                                           // 00000006FC78: BF800000
	.long 0xbf800000                                           // 00000006FC7C: BF800000
	.long 0xbf800000                                           // 00000006FC80: BF800000
	.long 0xbf800000                                           // 00000006FC84: BF800000
	.long 0xbf800000                                           // 00000006FC88: BF800000
	.long 0xbf800000                                           // 00000006FC8C: BF800000
	.long 0xbf800000                                           // 00000006FC90: BF800000
	.long 0xbf800000                                           // 00000006FC94: BF800000
	.long 0xbf800000                                           // 00000006FC98: BF800000
	.long 0xbf800000                                           // 00000006FC9C: BF800000
	.long 0xbf800000                                           // 00000006FCA0: BF800000
	.long 0xbf800000                                           // 00000006FCA4: BF800000
	.long 0xbf800000                                           // 00000006FCA8: BF800000
	.long 0xbf800000                                           // 00000006FCAC: BF800000
	.long 0xbf800000                                           // 00000006FCB0: BF800000
	.long 0xbf800000                                           // 00000006FCB4: BF800000
	.long 0xbf800000                                           // 00000006FCB8: BF800000
	.long 0xbf800000                                           // 00000006FCBC: BF800000
	.long 0xbf800000                                           // 00000006FCC0: BF800000
	.long 0xbf800000                                           // 00000006FCC4: BF800000
	.long 0xbf800000                                           // 00000006FCC8: BF800000
	.long 0xbf800000                                           // 00000006FCCC: BF800000
	.long 0xbf800000                                           // 00000006FCD0: BF800000
	.long 0xbf800000                                           // 00000006FCD4: BF800000
	.long 0xbf800000                                           // 00000006FCD8: BF800000
	.long 0xbf800000                                           // 00000006FCDC: BF800000
	.long 0xbf800000                                           // 00000006FCE0: BF800000
	.long 0xbf800000                                           // 00000006FCE4: BF800000
	.long 0xbf800000                                           // 00000006FCE8: BF800000
	.long 0xbf800000                                           // 00000006FCEC: BF800000
	.long 0xbf800000                                           // 00000006FCF0: BF800000
	.long 0xbf800000                                           // 00000006FCF4: BF800000
	.long 0xbf800000                                           // 00000006FCF8: BF800000
	.long 0xbf800000                                           // 00000006FCFC: BF800000

	.p2align	8
	.type	add_get_local_id_get_work_dim,@function
	.size	add_get_local_id_get_work_dim, add_get_local_id_get_work_dim_symend-add_get_local_id_get_work_dim
add_get_local_id_get_work_dim:
	s_clause 0x2                                               // 00000006FD00: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006FD04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006FD0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006FD14: F4040180 F8000048
	v_and_b32_e32 v6, 0x3ff, v0                                // 00000006FD1C: 360C00FF 000003FF
	v_bfe_u32 v7, v0, 10, 10                                   // 00000006FD24: D6100007 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FD2C: F4040000 F8000008
	v_bfe_u32 v8, v0, 20, 10                                   // 00000006FD34: D6100008 02292900
	s_mov_b32 s33, 0                                           // 00000006FD3C: BEA10080
	v_lshl_or_b32 v0, s2, 3, v6                                // 00000006FD40: D6560000 04190602
	v_lshl_or_b32 v2, s3, 2, v7                                // 00000006FD48: D6560002 041D0403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006FD50: BF8700C3
	v_lshl_or_b32 v4, s4, 1, v8                                // 00000006FD54: D6560004 04210204
	s_waitcnt lgkmcnt(0)                                       // 00000006FD5C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000006FD60: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v0                                // 00000006FD68: D7000300 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000006FD70: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000006FD78: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006FD80: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000006FD84: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000006FD8C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006FD94: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000006FD9C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006FDA4: BF870004
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006FDA8: D73C0002 00020482
	v_add_nc_u32_e32 v6, s2, v6                                // 00000006FDB0: 4A0C0C02
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006FDB4: 4A0E0E02
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FDB8: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006FDC0: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FDC8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006FDCC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006FDD4: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006FDD8: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006FDDC: D7006A04 00020800
	v_add_nc_u32_e32 v8, s2, v8                                // 00000006FDE4: 4A101002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006FDE8: 400A0A01
	s_clause 0x2                                               // 00000006FDEC: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006FDF0: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006FDF8: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006FE00: DC6A0000 007C0804
	s_nop 0                                                    // 00000006FE08: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FE0C: BFB60003
	s_endpgm                                                   // 00000006FE10: BFB00000
add_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006FE14: BF800000
	.long 0xbf800000                                           // 00000006FE18: BF800000
	.long 0xbf800000                                           // 00000006FE1C: BF800000
	.long 0xbf800000                                           // 00000006FE20: BF800000
	.long 0xbf800000                                           // 00000006FE24: BF800000
	.long 0xbf800000                                           // 00000006FE28: BF800000
	.long 0xbf800000                                           // 00000006FE2C: BF800000
	.long 0xbf800000                                           // 00000006FE30: BF800000
	.long 0xbf800000                                           // 00000006FE34: BF800000
	.long 0xbf800000                                           // 00000006FE38: BF800000
	.long 0xbf800000                                           // 00000006FE3C: BF800000
	.long 0xbf800000                                           // 00000006FE40: BF800000
	.long 0xbf800000                                           // 00000006FE44: BF800000
	.long 0xbf800000                                           // 00000006FE48: BF800000
	.long 0xbf800000                                           // 00000006FE4C: BF800000
	.long 0xbf800000                                           // 00000006FE50: BF800000
	.long 0xbf800000                                           // 00000006FE54: BF800000
	.long 0xbf800000                                           // 00000006FE58: BF800000
	.long 0xbf800000                                           // 00000006FE5C: BF800000
	.long 0xbf800000                                           // 00000006FE60: BF800000
	.long 0xbf800000                                           // 00000006FE64: BF800000
	.long 0xbf800000                                           // 00000006FE68: BF800000
	.long 0xbf800000                                           // 00000006FE6C: BF800000
	.long 0xbf800000                                           // 00000006FE70: BF800000
	.long 0xbf800000                                           // 00000006FE74: BF800000
	.long 0xbf800000                                           // 00000006FE78: BF800000
	.long 0xbf800000                                           // 00000006FE7C: BF800000
	.long 0xbf800000                                           // 00000006FE80: BF800000
	.long 0xbf800000                                           // 00000006FE84: BF800000
	.long 0xbf800000                                           // 00000006FE88: BF800000
	.long 0xbf800000                                           // 00000006FE8C: BF800000
	.long 0xbf800000                                           // 00000006FE90: BF800000
	.long 0xbf800000                                           // 00000006FE94: BF800000
	.long 0xbf800000                                           // 00000006FE98: BF800000
	.long 0xbf800000                                           // 00000006FE9C: BF800000
	.long 0xbf800000                                           // 00000006FEA0: BF800000
	.long 0xbf800000                                           // 00000006FEA4: BF800000
	.long 0xbf800000                                           // 00000006FEA8: BF800000
	.long 0xbf800000                                           // 00000006FEAC: BF800000
	.long 0xbf800000                                           // 00000006FEB0: BF800000
	.long 0xbf800000                                           // 00000006FEB4: BF800000
	.long 0xbf800000                                           // 00000006FEB8: BF800000
	.long 0xbf800000                                           // 00000006FEBC: BF800000
	.long 0xbf800000                                           // 00000006FEC0: BF800000
	.long 0xbf800000                                           // 00000006FEC4: BF800000
	.long 0xbf800000                                           // 00000006FEC8: BF800000
	.long 0xbf800000                                           // 00000006FECC: BF800000
	.long 0xbf800000                                           // 00000006FED0: BF800000
	.long 0xbf800000                                           // 00000006FED4: BF800000
	.long 0xbf800000                                           // 00000006FED8: BF800000
	.long 0xbf800000                                           // 00000006FEDC: BF800000
	.long 0xbf800000                                           // 00000006FEE0: BF800000
	.long 0xbf800000                                           // 00000006FEE4: BF800000
	.long 0xbf800000                                           // 00000006FEE8: BF800000
	.long 0xbf800000                                           // 00000006FEEC: BF800000
	.long 0xbf800000                                           // 00000006FEF0: BF800000
	.long 0xbf800000                                           // 00000006FEF4: BF800000
	.long 0xbf800000                                           // 00000006FEF8: BF800000
	.long 0xbf800000                                           // 00000006FEFC: BF800000

	.p2align	8
	.type	add_get_group_id_get_work_dim,@function
	.size	add_get_group_id_get_work_dim, add_get_group_id_get_work_dim_symend-add_get_group_id_get_work_dim
add_get_group_id_get_work_dim:
	s_clause 0x2                                               // 00000006FF00: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006FF04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006FF0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000006FF14: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006FF1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006FF24: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FF2C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006FF34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006FF3C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006FF40: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006FF48: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006FF50: BF8700C3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006FF54: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006FF5C: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 00000006FF60: 8B05FF05 0000FFFF
	v_add_co_u32 v0, s8, s8, v1                                // 00000006FF68: D7000800 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 00000006FF70: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 00000006FF78: D7000802 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006FF80: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 00000006FF84: D5207C03 0021000B
	v_add_co_u32 v4, s6, s6, v4                                // 00000006FF8C: D7000604 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006FF94: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s6                    // 00000006FF9C: D5207C05 00190007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006FFA4: BF8704A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006FFA8: D73C0002 00020482
	s_add_i32 s2, s2, s5                                       // 00000006FFB0: 81020502
	v_mov_b32_e32 v6, s2                                       // 00000006FFB4: 7E0C0202
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006FFB8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FFBC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006FFC4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FFCC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006FFD0: D7006A02 00020400
	s_add_i32 s2, s3, s5                                       // 00000006FFD8: 81020503
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006FFDC: 40060601
	v_mov_b32_e32 v7, s2                                       // 00000006FFE0: 7E0E0202
	s_add_i32 s2, s4, s5                                       // 00000006FFE4: 81020504
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006FFE8: D7006A04 00020800
	v_mov_b32_e32 v8, s2                                       // 00000006FFF0: 7E100202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006FFF4: 400A0A01
	s_clause 0x2                                               // 00000006FFF8: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006FFFC: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 000000070004: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000007000C: DC6A0000 007C0804
	s_nop 0                                                    // 000000070014: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070018: BFB60003
	s_endpgm                                                   // 00000007001C: BFB00000
add_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 000000070020: BF800000
	.long 0xbf800000                                           // 000000070024: BF800000
	.long 0xbf800000                                           // 000000070028: BF800000
	.long 0xbf800000                                           // 00000007002C: BF800000
	.long 0xbf800000                                           // 000000070030: BF800000
	.long 0xbf800000                                           // 000000070034: BF800000
	.long 0xbf800000                                           // 000000070038: BF800000
	.long 0xbf800000                                           // 00000007003C: BF800000
	.long 0xbf800000                                           // 000000070040: BF800000
	.long 0xbf800000                                           // 000000070044: BF800000
	.long 0xbf800000                                           // 000000070048: BF800000
	.long 0xbf800000                                           // 00000007004C: BF800000
	.long 0xbf800000                                           // 000000070050: BF800000
	.long 0xbf800000                                           // 000000070054: BF800000
	.long 0xbf800000                                           // 000000070058: BF800000
	.long 0xbf800000                                           // 00000007005C: BF800000
	.long 0xbf800000                                           // 000000070060: BF800000
	.long 0xbf800000                                           // 000000070064: BF800000
	.long 0xbf800000                                           // 000000070068: BF800000
	.long 0xbf800000                                           // 00000007006C: BF800000
	.long 0xbf800000                                           // 000000070070: BF800000
	.long 0xbf800000                                           // 000000070074: BF800000
	.long 0xbf800000                                           // 000000070078: BF800000
	.long 0xbf800000                                           // 00000007007C: BF800000
	.long 0xbf800000                                           // 000000070080: BF800000
	.long 0xbf800000                                           // 000000070084: BF800000
	.long 0xbf800000                                           // 000000070088: BF800000
	.long 0xbf800000                                           // 00000007008C: BF800000
	.long 0xbf800000                                           // 000000070090: BF800000
	.long 0xbf800000                                           // 000000070094: BF800000
	.long 0xbf800000                                           // 000000070098: BF800000
	.long 0xbf800000                                           // 00000007009C: BF800000
	.long 0xbf800000                                           // 0000000700A0: BF800000
	.long 0xbf800000                                           // 0000000700A4: BF800000
	.long 0xbf800000                                           // 0000000700A8: BF800000
	.long 0xbf800000                                           // 0000000700AC: BF800000
	.long 0xbf800000                                           // 0000000700B0: BF800000
	.long 0xbf800000                                           // 0000000700B4: BF800000
	.long 0xbf800000                                           // 0000000700B8: BF800000
	.long 0xbf800000                                           // 0000000700BC: BF800000
	.long 0xbf800000                                           // 0000000700C0: BF800000
	.long 0xbf800000                                           // 0000000700C4: BF800000
	.long 0xbf800000                                           // 0000000700C8: BF800000
	.long 0xbf800000                                           // 0000000700CC: BF800000
	.long 0xbf800000                                           // 0000000700D0: BF800000
	.long 0xbf800000                                           // 0000000700D4: BF800000
	.long 0xbf800000                                           // 0000000700D8: BF800000
	.long 0xbf800000                                           // 0000000700DC: BF800000
	.long 0xbf800000                                           // 0000000700E0: BF800000
	.long 0xbf800000                                           // 0000000700E4: BF800000
	.long 0xbf800000                                           // 0000000700E8: BF800000
	.long 0xbf800000                                           // 0000000700EC: BF800000
	.long 0xbf800000                                           // 0000000700F0: BF800000
	.long 0xbf800000                                           // 0000000700F4: BF800000
	.long 0xbf800000                                           // 0000000700F8: BF800000
	.long 0xbf800000                                           // 0000000700FC: BF800000

	.p2align	8
	.type	add_get_local_size_get_work_dim,@function
	.size	add_get_local_size_get_work_dim, add_get_local_size_get_work_dim_symend-add_get_local_size_get_work_dim
add_get_local_size_get_work_dim:
	s_clause 0x2                                               // 000000070100: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000070104: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007010C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000070114: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007011C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000070124: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007012C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000070134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007013C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000070140: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000070148: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000070150: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000070154: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007015C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 000000070160: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 000000070168: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000070170: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000070178: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000070180: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000070184: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000007018C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070194: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000007019C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000701A4: BF870004
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000701A8: D73C0002 00020482
	s_add_i32 s3, s2, 2                                        // 0000000701B0: 81038202
	s_add_i32 s2, s2, 4                                        // 0000000701B4: 81028402
	v_mov_b32_e32 v6, s3                                       // 0000000701B8: 7E0C0203
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000701BC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000701C4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000701CC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000701D0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000701D8: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000701DC: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000701E0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000701E8: 400A0A01
	v_mov_b32_e32 v7, s2                                       // 0000000701EC: 7E0E0202
	s_clause 0x2                                               // 0000000701F0: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000701F4: DC6A0000 007C0600
	global_store_b32 v[2:3], v6, off                           // 0000000701FC: DC6A0000 007C0602
	global_store_b32 v[4:5], v7, off                           // 000000070204: DC6A0000 007C0704
	s_nop 0                                                    // 00000007020C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070210: BFB60003
	s_endpgm                                                   // 000000070214: BFB00000
add_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000070218: BF800000
	.long 0xbf800000                                           // 00000007021C: BF800000
	.long 0xbf800000                                           // 000000070220: BF800000
	.long 0xbf800000                                           // 000000070224: BF800000
	.long 0xbf800000                                           // 000000070228: BF800000
	.long 0xbf800000                                           // 00000007022C: BF800000
	.long 0xbf800000                                           // 000000070230: BF800000
	.long 0xbf800000                                           // 000000070234: BF800000
	.long 0xbf800000                                           // 000000070238: BF800000
	.long 0xbf800000                                           // 00000007023C: BF800000
	.long 0xbf800000                                           // 000000070240: BF800000
	.long 0xbf800000                                           // 000000070244: BF800000
	.long 0xbf800000                                           // 000000070248: BF800000
	.long 0xbf800000                                           // 00000007024C: BF800000
	.long 0xbf800000                                           // 000000070250: BF800000
	.long 0xbf800000                                           // 000000070254: BF800000
	.long 0xbf800000                                           // 000000070258: BF800000
	.long 0xbf800000                                           // 00000007025C: BF800000
	.long 0xbf800000                                           // 000000070260: BF800000
	.long 0xbf800000                                           // 000000070264: BF800000
	.long 0xbf800000                                           // 000000070268: BF800000
	.long 0xbf800000                                           // 00000007026C: BF800000
	.long 0xbf800000                                           // 000000070270: BF800000
	.long 0xbf800000                                           // 000000070274: BF800000
	.long 0xbf800000                                           // 000000070278: BF800000
	.long 0xbf800000                                           // 00000007027C: BF800000
	.long 0xbf800000                                           // 000000070280: BF800000
	.long 0xbf800000                                           // 000000070284: BF800000
	.long 0xbf800000                                           // 000000070288: BF800000
	.long 0xbf800000                                           // 00000007028C: BF800000
	.long 0xbf800000                                           // 000000070290: BF800000
	.long 0xbf800000                                           // 000000070294: BF800000
	.long 0xbf800000                                           // 000000070298: BF800000
	.long 0xbf800000                                           // 00000007029C: BF800000
	.long 0xbf800000                                           // 0000000702A0: BF800000
	.long 0xbf800000                                           // 0000000702A4: BF800000
	.long 0xbf800000                                           // 0000000702A8: BF800000
	.long 0xbf800000                                           // 0000000702AC: BF800000
	.long 0xbf800000                                           // 0000000702B0: BF800000
	.long 0xbf800000                                           // 0000000702B4: BF800000
	.long 0xbf800000                                           // 0000000702B8: BF800000
	.long 0xbf800000                                           // 0000000702BC: BF800000
	.long 0xbf800000                                           // 0000000702C0: BF800000
	.long 0xbf800000                                           // 0000000702C4: BF800000
	.long 0xbf800000                                           // 0000000702C8: BF800000
	.long 0xbf800000                                           // 0000000702CC: BF800000
	.long 0xbf800000                                           // 0000000702D0: BF800000
	.long 0xbf800000                                           // 0000000702D4: BF800000
	.long 0xbf800000                                           // 0000000702D8: BF800000
	.long 0xbf800000                                           // 0000000702DC: BF800000
	.long 0xbf800000                                           // 0000000702E0: BF800000
	.long 0xbf800000                                           // 0000000702E4: BF800000
	.long 0xbf800000                                           // 0000000702E8: BF800000
	.long 0xbf800000                                           // 0000000702EC: BF800000
	.long 0xbf800000                                           // 0000000702F0: BF800000
	.long 0xbf800000                                           // 0000000702F4: BF800000
	.long 0xbf800000                                           // 0000000702F8: BF800000
	.long 0xbf800000                                           // 0000000702FC: BF800000

	.p2align	8
	.type	add_get_global_id_get_work_dim,@function
	.size	add_get_global_id_get_work_dim, add_get_global_id_get_work_dim_symend-add_get_global_id_get_work_dim
add_get_global_id_get_work_dim:
	s_clause 0x3                                               // 000000070300: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000070304: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007030C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000070314: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007031C: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 000000070324: D6100003 02291500
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007032C: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 000000070338: D6100004 02292900
	s_mov_b32 s33, 0                                           // 000000070340: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070344: BF870193
	v_lshl_or_b32 v3, s3, 1, v3                                // 000000070348: D6560003 040D0203
	v_lshl_or_b32 v0, s2, 1, v2                                // 000000070350: D6560000 04090202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070358: BF870113
	v_lshl_or_b32 v5, s4, 2, v4                                // 00000007035C: D6560005 04110404
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000070364: D73C0001 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000007036C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 000000070370: 8B02FF05 0000FFFF
	v_add_co_u32 v3, s3, s10, v3                               // 000000070378: D7000303 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000070380: BF8700A1
	v_add_co_ci_u32_e64 v4, null, s11, 0, s3                   // 000000070384: D5207C04 000D000B
	v_add_co_u32 v5, s3, s6, v5                                // 00000007038C: D7000305 00020A06
	v_add_co_ci_u32_e64 v6, null, s7, 0, s3                    // 000000070394: D5207C06 000D0007
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007039C: BF870003
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 0000000703A0: D73C0007 00020682
	v_add3_u32 v9, s2, s8, v0                                  // 0000000703A8: D6550009 04001002
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 0000000703B0: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 0000000703B8: 40020401
	v_add_nc_u32_e32 v4, s2, v3                                // 0000000703BC: 4A080602
	v_lshlrev_b64 v[2:3], 2, v[5:6]                            // 0000000703C0: D73C0002 00020A82
	v_add_co_u32 v6, vcc_lo, s0, v7                            // 0000000703C8: D7006A06 00020E00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v8, vcc_lo             // 0000000703D0: 400E1001
	v_add_nc_u32_e32 v5, s2, v5                                // 0000000703D4: 4A0A0A02
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000703D8: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000703DC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000703E4: 40060601
	s_clause 0x2                                               // 0000000703E8: BF850002
	global_store_b32 v[0:1], v9, off                           // 0000000703EC: DC6A0000 007C0900
	global_store_b32 v[6:7], v4, off                           // 0000000703F4: DC6A0000 007C0406
	global_store_b32 v[2:3], v5, off                           // 0000000703FC: DC6A0000 007C0502
	s_nop 0                                                    // 000000070404: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070408: BFB60003
	s_endpgm                                                   // 00000007040C: BFB00000
add_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 000000070410: BF800000
	.long 0xbf800000                                           // 000000070414: BF800000
	.long 0xbf800000                                           // 000000070418: BF800000
	.long 0xbf800000                                           // 00000007041C: BF800000
	.long 0xbf800000                                           // 000000070420: BF800000
	.long 0xbf800000                                           // 000000070424: BF800000
	.long 0xbf800000                                           // 000000070428: BF800000
	.long 0xbf800000                                           // 00000007042C: BF800000
	.long 0xbf800000                                           // 000000070430: BF800000
	.long 0xbf800000                                           // 000000070434: BF800000
	.long 0xbf800000                                           // 000000070438: BF800000
	.long 0xbf800000                                           // 00000007043C: BF800000
	.long 0xbf800000                                           // 000000070440: BF800000
	.long 0xbf800000                                           // 000000070444: BF800000
	.long 0xbf800000                                           // 000000070448: BF800000
	.long 0xbf800000                                           // 00000007044C: BF800000
	.long 0xbf800000                                           // 000000070450: BF800000
	.long 0xbf800000                                           // 000000070454: BF800000
	.long 0xbf800000                                           // 000000070458: BF800000
	.long 0xbf800000                                           // 00000007045C: BF800000
	.long 0xbf800000                                           // 000000070460: BF800000
	.long 0xbf800000                                           // 000000070464: BF800000
	.long 0xbf800000                                           // 000000070468: BF800000
	.long 0xbf800000                                           // 00000007046C: BF800000
	.long 0xbf800000                                           // 000000070470: BF800000
	.long 0xbf800000                                           // 000000070474: BF800000
	.long 0xbf800000                                           // 000000070478: BF800000
	.long 0xbf800000                                           // 00000007047C: BF800000
	.long 0xbf800000                                           // 000000070480: BF800000
	.long 0xbf800000                                           // 000000070484: BF800000
	.long 0xbf800000                                           // 000000070488: BF800000
	.long 0xbf800000                                           // 00000007048C: BF800000
	.long 0xbf800000                                           // 000000070490: BF800000
	.long 0xbf800000                                           // 000000070494: BF800000
	.long 0xbf800000                                           // 000000070498: BF800000
	.long 0xbf800000                                           // 00000007049C: BF800000
	.long 0xbf800000                                           // 0000000704A0: BF800000
	.long 0xbf800000                                           // 0000000704A4: BF800000
	.long 0xbf800000                                           // 0000000704A8: BF800000
	.long 0xbf800000                                           // 0000000704AC: BF800000
	.long 0xbf800000                                           // 0000000704B0: BF800000
	.long 0xbf800000                                           // 0000000704B4: BF800000
	.long 0xbf800000                                           // 0000000704B8: BF800000
	.long 0xbf800000                                           // 0000000704BC: BF800000
	.long 0xbf800000                                           // 0000000704C0: BF800000
	.long 0xbf800000                                           // 0000000704C4: BF800000
	.long 0xbf800000                                           // 0000000704C8: BF800000
	.long 0xbf800000                                           // 0000000704CC: BF800000
	.long 0xbf800000                                           // 0000000704D0: BF800000
	.long 0xbf800000                                           // 0000000704D4: BF800000
	.long 0xbf800000                                           // 0000000704D8: BF800000
	.long 0xbf800000                                           // 0000000704DC: BF800000
	.long 0xbf800000                                           // 0000000704E0: BF800000
	.long 0xbf800000                                           // 0000000704E4: BF800000
	.long 0xbf800000                                           // 0000000704E8: BF800000
	.long 0xbf800000                                           // 0000000704EC: BF800000
	.long 0xbf800000                                           // 0000000704F0: BF800000
	.long 0xbf800000                                           // 0000000704F4: BF800000
	.long 0xbf800000                                           // 0000000704F8: BF800000
	.long 0xbf800000                                           // 0000000704FC: BF800000

	.p2align	8
	.type	add_get_global_size_get_work_dim,@function
	.size	add_get_global_size_get_work_dim, add_get_global_size_get_work_dim_symend-add_get_global_size_get_work_dim
add_get_global_size_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 000000070500: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000070504: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007050C: BEA10080
	s_clause 0x1                                               // 000000070510: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000070514: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007051C: DC4A0026 07000001
	s_clause 0x4                                               // 000000070524: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 000000070528: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000070530: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070538: F4080200 F8000038
	s_load_b32 s14, s[0:1], 0x18                               // 000000070540: F4000380 F8000018
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000070548: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000070550: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], null                            // 000000070558: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 000000070560: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000070568: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070570: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000070574: D6560001 04050802
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000007057C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000070584: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 000000070588: 8B02FF05 0000FFFF
	s_lshl_b32 s3, s6, 4                                       // 000000070590: 84038406
	v_add_co_u32 v0, s4, s8, v1                                // 000000070594: D7000400 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007059C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s4                    // 0000000705A0: D5207C01 00110009
	v_add_co_u32 v2, s5, s10, v2                               // 0000000705A8: D7000502 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s5                   // 0000000705B0: D5207C03 0015000B
	v_add_co_u32 v4, s6, s12, v4                               // 0000000705B8: D7000604 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000705C0: BF870224
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 0000000705C4: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s13, 0, s6                   // 0000000705CC: D5207C05 0019000D
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000705D4: D73C0002 00020482
	s_lshl_b32 s4, s7, 1                                       // 0000000705DC: 84048107
	s_lshl_b32 s5, s14, 1                                      // 0000000705E0: 8405810E
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000705E4: BF870002
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000705E8: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000705F0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000705F8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000705FC: D7006A02 00020400
	s_add_i32 s3, s3, s2                                       // 000000070604: 81030203
	s_add_i32 s4, s4, s2                                       // 000000070608: 81040204
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007060C: 40060601
	s_add_i32 s5, s5, s2                                       // 000000070610: 81050205
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000070614: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000007061C: 400A0A01
	s_waitcnt vmcnt(1)                                         // 000000070620: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 000000070624: 32100C90
	v_and_b32_e32 v6, 0xffff, v6                               // 000000070628: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000070630: BF8903F7
	v_add_nc_u32_e32 v7, s5, v7                                // 000000070634: 4A0E0E05
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070638: BF870193
	v_add_nc_u32_e32 v8, s4, v8                                // 00000007063C: 4A101004
	v_add_nc_u32_e32 v6, s3, v6                                // 000000070640: 4A0C0C03
	s_clause 0x2                                               // 000000070644: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000070648: DC6A0000 007C0600
	global_store_b32 v[2:3], v8, off                           // 000000070650: DC6A0000 007C0802
	global_store_b32 v[4:5], v7, off                           // 000000070658: DC6A0000 007C0704
	s_nop 0                                                    // 000000070660: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070664: BFB60003
	s_endpgm                                                   // 000000070668: BFB00000
add_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007066C: BF800000
	.long 0xbf800000                                           // 000000070670: BF800000
	.long 0xbf800000                                           // 000000070674: BF800000
	.long 0xbf800000                                           // 000000070678: BF800000
	.long 0xbf800000                                           // 00000007067C: BF800000
	.long 0xbf800000                                           // 000000070680: BF800000
	.long 0xbf800000                                           // 000000070684: BF800000
	.long 0xbf800000                                           // 000000070688: BF800000
	.long 0xbf800000                                           // 00000007068C: BF800000
	.long 0xbf800000                                           // 000000070690: BF800000
	.long 0xbf800000                                           // 000000070694: BF800000
	.long 0xbf800000                                           // 000000070698: BF800000
	.long 0xbf800000                                           // 00000007069C: BF800000
	.long 0xbf800000                                           // 0000000706A0: BF800000
	.long 0xbf800000                                           // 0000000706A4: BF800000
	.long 0xbf800000                                           // 0000000706A8: BF800000
	.long 0xbf800000                                           // 0000000706AC: BF800000
	.long 0xbf800000                                           // 0000000706B0: BF800000
	.long 0xbf800000                                           // 0000000706B4: BF800000
	.long 0xbf800000                                           // 0000000706B8: BF800000
	.long 0xbf800000                                           // 0000000706BC: BF800000
	.long 0xbf800000                                           // 0000000706C0: BF800000
	.long 0xbf800000                                           // 0000000706C4: BF800000
	.long 0xbf800000                                           // 0000000706C8: BF800000
	.long 0xbf800000                                           // 0000000706CC: BF800000
	.long 0xbf800000                                           // 0000000706D0: BF800000
	.long 0xbf800000                                           // 0000000706D4: BF800000
	.long 0xbf800000                                           // 0000000706D8: BF800000
	.long 0xbf800000                                           // 0000000706DC: BF800000
	.long 0xbf800000                                           // 0000000706E0: BF800000
	.long 0xbf800000                                           // 0000000706E4: BF800000
	.long 0xbf800000                                           // 0000000706E8: BF800000
	.long 0xbf800000                                           // 0000000706EC: BF800000
	.long 0xbf800000                                           // 0000000706F0: BF800000
	.long 0xbf800000                                           // 0000000706F4: BF800000
	.long 0xbf800000                                           // 0000000706F8: BF800000
	.long 0xbf800000                                           // 0000000706FC: BF800000

	.p2align	8
	.type	add_get_num_groups_get_work_dim,@function
	.size	add_get_num_groups_get_work_dim, add_get_num_groups_get_work_dim_symend-add_get_num_groups_get_work_dim
add_get_num_groups_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 000000070700: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000070704: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007070C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000070714: BEA10080
	s_clause 0x1                                               // 000000070718: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000007071C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000070724: DC4A0026 07000001
	s_clause 0x1                                               // 00000007072C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070730: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000070738: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000070740: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000070748: D6100000 02292900
	s_load_b32 s5, s[0:1], 0x50                                // 000000070750: F4000140 F8000050
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000070758: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070760: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000070764: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007076C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000070774: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070778: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000007077C: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000070784: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007078C: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000070794: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000070798: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 0000000707A0: D7000204 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 0000000707A8: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 0000000707B0: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 0000000707B8: F4000080 F8000018
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000707C0: D73C0002 00020482
	s_and_b32 s3, s5, 0xffff                                   // 0000000707C8: 8B03FF05 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000707D0: BF8701A3
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 0000000707D4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 0000000707DC: 4002020D
	v_add_co_u32 v2, s1, s12, v2                               // 0000000707E0: D7000102 0002040C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 0000000707E8: BF870151
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 0000000707EC: D5200103 0006060D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000707F4: D73C0004 00020882
	s_waitcnt vmcnt(1)                                         // 0000000707FC: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v6                               // 000000070800: 32100C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000070804: 7C7A0C80
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000070808: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000070810: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000070814: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000070818: 7C7A0E80
	s_addc_u32 s1, s14, s3                                     // 00000007081C: 8201030E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000070820: BF870009
	v_mov_b32_e32 v6, s1                                       // 000000070824: 7E0C0201
	s_cmp_lg_u32 s0, 0                                         // 000000070828: BF078000
	s_addc_u32 s0, s15, s3                                     // 00000007082C: 8200030F
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000070830: BF07806A
	v_mov_b32_e32 v7, s0                                       // 000000070834: 7E0E0200
	s_waitcnt lgkmcnt(0)                                       // 000000070838: BF89FC07
	s_addc_u32 s0, s2, s3                                      // 00000007083C: 82000302
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000070840: D7006A04 0002080C
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000070848: 400A0A0D
	v_mov_b32_e32 v8, s0                                       // 00000007084C: 7E100200
	s_clause 0x2                                               // 000000070850: BF850002
	global_store_b32 v[0:1], v6, off                           // 000000070854: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000007085C: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 000000070864: DC6A0000 007C0804
	s_nop 0                                                    // 00000007086C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070870: BFB60003
	s_endpgm                                                   // 000000070874: BFB00000
add_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 000000070878: BF800000
	.long 0xbf800000                                           // 00000007087C: BF800000
	.long 0xbf800000                                           // 000000070880: BF800000
	.long 0xbf800000                                           // 000000070884: BF800000
	.long 0xbf800000                                           // 000000070888: BF800000
	.long 0xbf800000                                           // 00000007088C: BF800000
	.long 0xbf800000                                           // 000000070890: BF800000
	.long 0xbf800000                                           // 000000070894: BF800000
	.long 0xbf800000                                           // 000000070898: BF800000
	.long 0xbf800000                                           // 00000007089C: BF800000
	.long 0xbf800000                                           // 0000000708A0: BF800000
	.long 0xbf800000                                           // 0000000708A4: BF800000
	.long 0xbf800000                                           // 0000000708A8: BF800000
	.long 0xbf800000                                           // 0000000708AC: BF800000
	.long 0xbf800000                                           // 0000000708B0: BF800000
	.long 0xbf800000                                           // 0000000708B4: BF800000
	.long 0xbf800000                                           // 0000000708B8: BF800000
	.long 0xbf800000                                           // 0000000708BC: BF800000
	.long 0xbf800000                                           // 0000000708C0: BF800000
	.long 0xbf800000                                           // 0000000708C4: BF800000
	.long 0xbf800000                                           // 0000000708C8: BF800000
	.long 0xbf800000                                           // 0000000708CC: BF800000
	.long 0xbf800000                                           // 0000000708D0: BF800000
	.long 0xbf800000                                           // 0000000708D4: BF800000
	.long 0xbf800000                                           // 0000000708D8: BF800000
	.long 0xbf800000                                           // 0000000708DC: BF800000
	.long 0xbf800000                                           // 0000000708E0: BF800000
	.long 0xbf800000                                           // 0000000708E4: BF800000
	.long 0xbf800000                                           // 0000000708E8: BF800000
	.long 0xbf800000                                           // 0000000708EC: BF800000
	.long 0xbf800000                                           // 0000000708F0: BF800000
	.long 0xbf800000                                           // 0000000708F4: BF800000
	.long 0xbf800000                                           // 0000000708F8: BF800000
	.long 0xbf800000                                           // 0000000708FC: BF800000

	.p2align	8
	.type	add_get_work_dim_get_work_dim,@function
	.size	add_get_work_dim_get_work_dim, add_get_work_dim_get_work_dim_symend-add_get_work_dim_get_work_dim
add_get_work_dim_get_work_dim:
	s_clause 0x2                                               // 000000070900: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000070904: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007090C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000070914: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007091C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000070924: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007092C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000070934: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007093C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000070940: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000070948: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000070950: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000070954: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007095C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 000000070960: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 000000070968: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000070970: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000070978: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000070980: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000070984: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000007098C: D7000304 00020806
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070994: D73C0000 00020082
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000007099C: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 0000000709A4: BF8704A4
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000709A8: D73C0002 00020482
	s_lshl_b32 s2, s2, 1                                       // 0000000709B0: 84028102
	v_mov_b32_e32 v6, s2                                       // 0000000709B4: 7E0C0202
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 0000000709B8: BF870254
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000709BC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000709C4: D73C0004 00020882
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000709CC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000709D0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000709D8: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000709DC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000709E4: 400A0A01
	s_clause 0x2                                               // 0000000709E8: BF850002
	global_store_b32 v[0:1], v6, off                           // 0000000709EC: DC6A0000 007C0600
	global_store_b32 v[2:3], v6, off                           // 0000000709F4: DC6A0000 007C0602
	global_store_b32 v[4:5], v6, off                           // 0000000709FC: DC6A0000 007C0604
	s_nop 0                                                    // 000000070A04: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070A08: BFB60003
	s_endpgm                                                   // 000000070A0C: BFB00000
add_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 000000070A10: BF800000
	.long 0xbf800000                                           // 000000070A14: BF800000
	.long 0xbf800000                                           // 000000070A18: BF800000
	.long 0xbf800000                                           // 000000070A1C: BF800000
	.long 0xbf800000                                           // 000000070A20: BF800000
	.long 0xbf800000                                           // 000000070A24: BF800000
	.long 0xbf800000                                           // 000000070A28: BF800000
	.long 0xbf800000                                           // 000000070A2C: BF800000
	.long 0xbf800000                                           // 000000070A30: BF800000
	.long 0xbf800000                                           // 000000070A34: BF800000
	.long 0xbf800000                                           // 000000070A38: BF800000
	.long 0xbf800000                                           // 000000070A3C: BF800000
	.long 0xbf800000                                           // 000000070A40: BF800000
	.long 0xbf800000                                           // 000000070A44: BF800000
	.long 0xbf800000                                           // 000000070A48: BF800000
	.long 0xbf800000                                           // 000000070A4C: BF800000
	.long 0xbf800000                                           // 000000070A50: BF800000
	.long 0xbf800000                                           // 000000070A54: BF800000
	.long 0xbf800000                                           // 000000070A58: BF800000
	.long 0xbf800000                                           // 000000070A5C: BF800000
	.long 0xbf800000                                           // 000000070A60: BF800000
	.long 0xbf800000                                           // 000000070A64: BF800000
	.long 0xbf800000                                           // 000000070A68: BF800000
	.long 0xbf800000                                           // 000000070A6C: BF800000
	.long 0xbf800000                                           // 000000070A70: BF800000
	.long 0xbf800000                                           // 000000070A74: BF800000
	.long 0xbf800000                                           // 000000070A78: BF800000
	.long 0xbf800000                                           // 000000070A7C: BF800000
	.long 0xbf800000                                           // 000000070A80: BF800000
	.long 0xbf800000                                           // 000000070A84: BF800000
	.long 0xbf800000                                           // 000000070A88: BF800000
	.long 0xbf800000                                           // 000000070A8C: BF800000
	.long 0xbf800000                                           // 000000070A90: BF800000
	.long 0xbf800000                                           // 000000070A94: BF800000
	.long 0xbf800000                                           // 000000070A98: BF800000
	.long 0xbf800000                                           // 000000070A9C: BF800000
	.long 0xbf800000                                           // 000000070AA0: BF800000
	.long 0xbf800000                                           // 000000070AA4: BF800000
	.long 0xbf800000                                           // 000000070AA8: BF800000
	.long 0xbf800000                                           // 000000070AAC: BF800000
	.long 0xbf800000                                           // 000000070AB0: BF800000
	.long 0xbf800000                                           // 000000070AB4: BF800000
	.long 0xbf800000                                           // 000000070AB8: BF800000
	.long 0xbf800000                                           // 000000070ABC: BF800000
	.long 0xbf800000                                           // 000000070AC0: BF800000
	.long 0xbf800000                                           // 000000070AC4: BF800000
	.long 0xbf800000                                           // 000000070AC8: BF800000
	.long 0xbf800000                                           // 000000070ACC: BF800000
	.long 0xbf800000                                           // 000000070AD0: BF800000
	.long 0xbf800000                                           // 000000070AD4: BF800000
	.long 0xbf800000                                           // 000000070AD8: BF800000
	.long 0xbf800000                                           // 000000070ADC: BF800000
	.long 0xbf800000                                           // 000000070AE0: BF800000
	.long 0xbf800000                                           // 000000070AE4: BF800000
	.long 0xbf800000                                           // 000000070AE8: BF800000
	.long 0xbf800000                                           // 000000070AEC: BF800000
	.long 0xbf800000                                           // 000000070AF0: BF800000
	.long 0xbf800000                                           // 000000070AF4: BF800000
	.long 0xbf800000                                           // 000000070AF8: BF800000
	.long 0xbf800000                                           // 000000070AFC: BF800000

	.p2align	8
	.type	add_x_64,@function
	.size	add_x_64, add_x_64_symend-add_x_64
add_x_64:
	s_clause 0x2                                               // 000000070B00: BF850002
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000070B04: F4040100 F8000038
	s_load_b32 s3, s[0:1], null                                // 000000070B0C: F40000C0 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070B14: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070B1C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000070B24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070B28: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070B2C: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000070B30: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000070B38: D5207C01 00090005
	s_lshl_b32 s2, s3, 1                                       // 000000070B40: 84028103
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070B44: BF870119
	v_mov_b32_e32 v2, s2                                       // 000000070B48: 7E040202
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070B4C: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070B54: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070B58: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070B60: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070B64: DC6A0000 007C0200
	s_nop 0                                                    // 000000070B6C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070B70: BFB60003
	s_endpgm                                                   // 000000070B74: BFB00000
add_x_64_symend:
	.long 0xbf800000                                           // 000000070B78: BF800000
	.long 0xbf800000                                           // 000000070B7C: BF800000
	.long 0xbf800000                                           // 000000070B80: BF800000
	.long 0xbf800000                                           // 000000070B84: BF800000
	.long 0xbf800000                                           // 000000070B88: BF800000
	.long 0xbf800000                                           // 000000070B8C: BF800000
	.long 0xbf800000                                           // 000000070B90: BF800000
	.long 0xbf800000                                           // 000000070B94: BF800000
	.long 0xbf800000                                           // 000000070B98: BF800000
	.long 0xbf800000                                           // 000000070B9C: BF800000
	.long 0xbf800000                                           // 000000070BA0: BF800000
	.long 0xbf800000                                           // 000000070BA4: BF800000
	.long 0xbf800000                                           // 000000070BA8: BF800000
	.long 0xbf800000                                           // 000000070BAC: BF800000
	.long 0xbf800000                                           // 000000070BB0: BF800000
	.long 0xbf800000                                           // 000000070BB4: BF800000
	.long 0xbf800000                                           // 000000070BB8: BF800000
	.long 0xbf800000                                           // 000000070BBC: BF800000
	.long 0xbf800000                                           // 000000070BC0: BF800000
	.long 0xbf800000                                           // 000000070BC4: BF800000
	.long 0xbf800000                                           // 000000070BC8: BF800000
	.long 0xbf800000                                           // 000000070BCC: BF800000
	.long 0xbf800000                                           // 000000070BD0: BF800000
	.long 0xbf800000                                           // 000000070BD4: BF800000
	.long 0xbf800000                                           // 000000070BD8: BF800000
	.long 0xbf800000                                           // 000000070BDC: BF800000
	.long 0xbf800000                                           // 000000070BE0: BF800000
	.long 0xbf800000                                           // 000000070BE4: BF800000
	.long 0xbf800000                                           // 000000070BE8: BF800000
	.long 0xbf800000                                           // 000000070BEC: BF800000
	.long 0xbf800000                                           // 000000070BF0: BF800000
	.long 0xbf800000                                           // 000000070BF4: BF800000
	.long 0xbf800000                                           // 000000070BF8: BF800000
	.long 0xbf800000                                           // 000000070BFC: BF800000

	.p2align	8
	.type	add_get_global_offset_64,@function
	.size	add_get_global_offset_64, add_get_global_offset_64_symend-add_get_global_offset_64
add_get_global_offset_64:
	s_clause 0x1                                               // 000000070C00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000070C04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070C0C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070C14: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000070C1C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070C20: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070C24: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000070C28: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000070C30: D5207C01 00090005
	s_lshl_b32 s2, s4, 1                                       // 000000070C38: 84028104
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070C3C: BF870119
	v_mov_b32_e32 v2, s2                                       // 000000070C40: 7E040202
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070C44: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070C4C: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070C50: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070C58: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070C5C: DC6A0000 007C0200
	s_nop 0                                                    // 000000070C64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070C68: BFB60003
	s_endpgm                                                   // 000000070C6C: BFB00000
add_get_global_offset_64_symend:
	.long 0xbf800000                                           // 000000070C70: BF800000
	.long 0xbf800000                                           // 000000070C74: BF800000
	.long 0xbf800000                                           // 000000070C78: BF800000
	.long 0xbf800000                                           // 000000070C7C: BF800000
	.long 0xbf800000                                           // 000000070C80: BF800000
	.long 0xbf800000                                           // 000000070C84: BF800000
	.long 0xbf800000                                           // 000000070C88: BF800000
	.long 0xbf800000                                           // 000000070C8C: BF800000
	.long 0xbf800000                                           // 000000070C90: BF800000
	.long 0xbf800000                                           // 000000070C94: BF800000
	.long 0xbf800000                                           // 000000070C98: BF800000
	.long 0xbf800000                                           // 000000070C9C: BF800000
	.long 0xbf800000                                           // 000000070CA0: BF800000
	.long 0xbf800000                                           // 000000070CA4: BF800000
	.long 0xbf800000                                           // 000000070CA8: BF800000
	.long 0xbf800000                                           // 000000070CAC: BF800000
	.long 0xbf800000                                           // 000000070CB0: BF800000
	.long 0xbf800000                                           // 000000070CB4: BF800000
	.long 0xbf800000                                           // 000000070CB8: BF800000
	.long 0xbf800000                                           // 000000070CBC: BF800000
	.long 0xbf800000                                           // 000000070CC0: BF800000
	.long 0xbf800000                                           // 000000070CC4: BF800000
	.long 0xbf800000                                           // 000000070CC8: BF800000
	.long 0xbf800000                                           // 000000070CCC: BF800000
	.long 0xbf800000                                           // 000000070CD0: BF800000
	.long 0xbf800000                                           // 000000070CD4: BF800000
	.long 0xbf800000                                           // 000000070CD8: BF800000
	.long 0xbf800000                                           // 000000070CDC: BF800000
	.long 0xbf800000                                           // 000000070CE0: BF800000
	.long 0xbf800000                                           // 000000070CE4: BF800000
	.long 0xbf800000                                           // 000000070CE8: BF800000
	.long 0xbf800000                                           // 000000070CEC: BF800000
	.long 0xbf800000                                           // 000000070CF0: BF800000
	.long 0xbf800000                                           // 000000070CF4: BF800000
	.long 0xbf800000                                           // 000000070CF8: BF800000
	.long 0xbf800000                                           // 000000070CFC: BF800000

	.p2align	8
	.type	add_get_local_id_64,@function
	.size	add_get_local_id_64, add_get_local_id_64_symend-add_get_local_id_64
add_get_local_id_64:
	s_clause 0x1                                               // 000000070D00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000070D04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070D0C: F4040000 F8000008
	v_lshl_or_b32 v1, s2, 6, v0                                // 000000070D14: D6560001 04010C02
	v_lshlrev_b32_e32 v3, 1, v0                                // 000000070D1C: 30060081
	s_mov_b32 s33, 0                                           // 000000070D20: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070D24: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070D28: BF870092
	v_add_co_u32 v1, s2, s4, v1                                // 000000070D2C: D7000201 00020204
	v_add_co_ci_u32_e64 v2, null, s5, 0, s2                    // 000000070D34: D5207C02 00090005
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070D3C: BF870091
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 000000070D40: D73C0001 00020282
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 000000070D48: D7006A00 00020200
	s_delay_alu instid0(VALU_DEP_2)                            // 000000070D50: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000070D54: 40020401
	global_store_b32 v[0:1], v3, off                           // 000000070D58: DC6A0000 007C0300
	s_nop 0                                                    // 000000070D60: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070D64: BFB60003
	s_endpgm                                                   // 000000070D68: BFB00000
add_get_local_id_64_symend:
	.long 0xbf800000                                           // 000000070D6C: BF800000
	.long 0xbf800000                                           // 000000070D70: BF800000
	.long 0xbf800000                                           // 000000070D74: BF800000
	.long 0xbf800000                                           // 000000070D78: BF800000
	.long 0xbf800000                                           // 000000070D7C: BF800000
	.long 0xbf800000                                           // 000000070D80: BF800000
	.long 0xbf800000                                           // 000000070D84: BF800000
	.long 0xbf800000                                           // 000000070D88: BF800000
	.long 0xbf800000                                           // 000000070D8C: BF800000
	.long 0xbf800000                                           // 000000070D90: BF800000
	.long 0xbf800000                                           // 000000070D94: BF800000
	.long 0xbf800000                                           // 000000070D98: BF800000
	.long 0xbf800000                                           // 000000070D9C: BF800000
	.long 0xbf800000                                           // 000000070DA0: BF800000
	.long 0xbf800000                                           // 000000070DA4: BF800000
	.long 0xbf800000                                           // 000000070DA8: BF800000
	.long 0xbf800000                                           // 000000070DAC: BF800000
	.long 0xbf800000                                           // 000000070DB0: BF800000
	.long 0xbf800000                                           // 000000070DB4: BF800000
	.long 0xbf800000                                           // 000000070DB8: BF800000
	.long 0xbf800000                                           // 000000070DBC: BF800000
	.long 0xbf800000                                           // 000000070DC0: BF800000
	.long 0xbf800000                                           // 000000070DC4: BF800000
	.long 0xbf800000                                           // 000000070DC8: BF800000
	.long 0xbf800000                                           // 000000070DCC: BF800000
	.long 0xbf800000                                           // 000000070DD0: BF800000
	.long 0xbf800000                                           // 000000070DD4: BF800000
	.long 0xbf800000                                           // 000000070DD8: BF800000
	.long 0xbf800000                                           // 000000070DDC: BF800000
	.long 0xbf800000                                           // 000000070DE0: BF800000
	.long 0xbf800000                                           // 000000070DE4: BF800000
	.long 0xbf800000                                           // 000000070DE8: BF800000
	.long 0xbf800000                                           // 000000070DEC: BF800000
	.long 0xbf800000                                           // 000000070DF0: BF800000
	.long 0xbf800000                                           // 000000070DF4: BF800000
	.long 0xbf800000                                           // 000000070DF8: BF800000
	.long 0xbf800000                                           // 000000070DFC: BF800000

	.p2align	8
	.type	add_get_group_id_64,@function
	.size	add_get_group_id_64, add_get_group_id_64_symend-add_get_group_id_64
add_get_group_id_64:
	s_clause 0x1                                               // 000000070E00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000070E04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070E0C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070E14: D6560000 04010C02
	s_lshl_b32 s2, s2, 1                                       // 000000070E1C: 84028102
	s_mov_b32 s33, 0                                           // 000000070E20: BEA10080
	v_mov_b32_e32 v2, s2                                       // 000000070E24: 7E040202
	s_waitcnt lgkmcnt(0)                                       // 000000070E28: BF89FC07
	v_add_co_u32 v0, s3, s4, v0                                // 000000070E2C: D7000300 00020004
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070E34: BF870091
	v_add_co_ci_u32_e64 v1, null, s5, 0, s3                    // 000000070E38: D5207C01 000D0005
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070E40: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070E48: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070E4C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070E54: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070E58: DC6A0000 007C0200
	s_nop 0                                                    // 000000070E60: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070E64: BFB60003
	s_endpgm                                                   // 000000070E68: BFB00000
add_get_group_id_64_symend:
	.long 0xbf800000                                           // 000000070E6C: BF800000
	.long 0xbf800000                                           // 000000070E70: BF800000
	.long 0xbf800000                                           // 000000070E74: BF800000
	.long 0xbf800000                                           // 000000070E78: BF800000
	.long 0xbf800000                                           // 000000070E7C: BF800000
	.long 0xbf800000                                           // 000000070E80: BF800000
	.long 0xbf800000                                           // 000000070E84: BF800000
	.long 0xbf800000                                           // 000000070E88: BF800000
	.long 0xbf800000                                           // 000000070E8C: BF800000
	.long 0xbf800000                                           // 000000070E90: BF800000
	.long 0xbf800000                                           // 000000070E94: BF800000
	.long 0xbf800000                                           // 000000070E98: BF800000
	.long 0xbf800000                                           // 000000070E9C: BF800000
	.long 0xbf800000                                           // 000000070EA0: BF800000
	.long 0xbf800000                                           // 000000070EA4: BF800000
	.long 0xbf800000                                           // 000000070EA8: BF800000
	.long 0xbf800000                                           // 000000070EAC: BF800000
	.long 0xbf800000                                           // 000000070EB0: BF800000
	.long 0xbf800000                                           // 000000070EB4: BF800000
	.long 0xbf800000                                           // 000000070EB8: BF800000
	.long 0xbf800000                                           // 000000070EBC: BF800000
	.long 0xbf800000                                           // 000000070EC0: BF800000
	.long 0xbf800000                                           // 000000070EC4: BF800000
	.long 0xbf800000                                           // 000000070EC8: BF800000
	.long 0xbf800000                                           // 000000070ECC: BF800000
	.long 0xbf800000                                           // 000000070ED0: BF800000
	.long 0xbf800000                                           // 000000070ED4: BF800000
	.long 0xbf800000                                           // 000000070ED8: BF800000
	.long 0xbf800000                                           // 000000070EDC: BF800000
	.long 0xbf800000                                           // 000000070EE0: BF800000
	.long 0xbf800000                                           // 000000070EE4: BF800000
	.long 0xbf800000                                           // 000000070EE8: BF800000
	.long 0xbf800000                                           // 000000070EEC: BF800000
	.long 0xbf800000                                           // 000000070EF0: BF800000
	.long 0xbf800000                                           // 000000070EF4: BF800000
	.long 0xbf800000                                           // 000000070EF8: BF800000
	.long 0xbf800000                                           // 000000070EFC: BF800000

	.p2align	8
	.type	add_get_local_size_64,@function
	.size	add_get_local_size_64, add_get_local_size_64_symend-add_get_local_size_64
add_get_local_size_64:
	s_clause 0x1                                               // 000000070F00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000070F04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070F0C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070F14: D6560000 04010C02
	v_mov_b32_e32 v2, 0x80                                     // 000000070F1C: 7E0402FF 00000080
	s_mov_b32 s33, 0                                           // 000000070F24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070F28: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070F2C: BF870092
	v_add_co_u32 v0, s2, s4, v0                                // 000000070F30: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000070F38: D5207C01 00090005
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070F40: BF870091
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070F44: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070F4C: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 000000070F54: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070F58: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070F5C: DC6A0000 007C0200
	s_nop 0                                                    // 000000070F64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070F68: BFB60003
	s_endpgm                                                   // 000000070F6C: BFB00000
add_get_local_size_64_symend:
	.long 0xbf800000                                           // 000000070F70: BF800000
	.long 0xbf800000                                           // 000000070F74: BF800000
	.long 0xbf800000                                           // 000000070F78: BF800000
	.long 0xbf800000                                           // 000000070F7C: BF800000
	.long 0xbf800000                                           // 000000070F80: BF800000
	.long 0xbf800000                                           // 000000070F84: BF800000
	.long 0xbf800000                                           // 000000070F88: BF800000
	.long 0xbf800000                                           // 000000070F8C: BF800000
	.long 0xbf800000                                           // 000000070F90: BF800000
	.long 0xbf800000                                           // 000000070F94: BF800000
	.long 0xbf800000                                           // 000000070F98: BF800000
	.long 0xbf800000                                           // 000000070F9C: BF800000
	.long 0xbf800000                                           // 000000070FA0: BF800000
	.long 0xbf800000                                           // 000000070FA4: BF800000
	.long 0xbf800000                                           // 000000070FA8: BF800000
	.long 0xbf800000                                           // 000000070FAC: BF800000
	.long 0xbf800000                                           // 000000070FB0: BF800000
	.long 0xbf800000                                           // 000000070FB4: BF800000
	.long 0xbf800000                                           // 000000070FB8: BF800000
	.long 0xbf800000                                           // 000000070FBC: BF800000
	.long 0xbf800000                                           // 000000070FC0: BF800000
	.long 0xbf800000                                           // 000000070FC4: BF800000
	.long 0xbf800000                                           // 000000070FC8: BF800000
	.long 0xbf800000                                           // 000000070FCC: BF800000
	.long 0xbf800000                                           // 000000070FD0: BF800000
	.long 0xbf800000                                           // 000000070FD4: BF800000
	.long 0xbf800000                                           // 000000070FD8: BF800000
	.long 0xbf800000                                           // 000000070FDC: BF800000
	.long 0xbf800000                                           // 000000070FE0: BF800000
	.long 0xbf800000                                           // 000000070FE4: BF800000
	.long 0xbf800000                                           // 000000070FE8: BF800000
	.long 0xbf800000                                           // 000000070FEC: BF800000
	.long 0xbf800000                                           // 000000070FF0: BF800000
	.long 0xbf800000                                           // 000000070FF4: BF800000
	.long 0xbf800000                                           // 000000070FF8: BF800000
	.long 0xbf800000                                           // 000000070FFC: BF800000

	.p2align	8
	.type	add_get_global_id_64,@function
	.size	add_get_global_id_64, add_get_global_id_64_symend-add_get_global_id_64
add_get_global_id_64:
	s_clause 0x1                                               // 000000071000: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000071004: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007100C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000071014: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007101C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071020: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071024: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000071028: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000071030: D5207C01 00090005
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071038: BF870112
	v_lshlrev_b32_e32 v3, 1, v0                                // 00000007103C: 30060081
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000071040: D73C0001 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071048: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000007104C: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000071054: 40020401
	global_store_b32 v[0:1], v3, off                           // 000000071058: DC6A0000 007C0300
	s_nop 0                                                    // 000000071060: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071064: BFB60003
	s_endpgm                                                   // 000000071068: BFB00000
add_get_global_id_64_symend:
	.long 0xbf800000                                           // 00000007106C: BF800000
	.long 0xbf800000                                           // 000000071070: BF800000
	.long 0xbf800000                                           // 000000071074: BF800000
	.long 0xbf800000                                           // 000000071078: BF800000
	.long 0xbf800000                                           // 00000007107C: BF800000
	.long 0xbf800000                                           // 000000071080: BF800000
	.long 0xbf800000                                           // 000000071084: BF800000
	.long 0xbf800000                                           // 000000071088: BF800000
	.long 0xbf800000                                           // 00000007108C: BF800000
	.long 0xbf800000                                           // 000000071090: BF800000
	.long 0xbf800000                                           // 000000071094: BF800000
	.long 0xbf800000                                           // 000000071098: BF800000
	.long 0xbf800000                                           // 00000007109C: BF800000
	.long 0xbf800000                                           // 0000000710A0: BF800000
	.long 0xbf800000                                           // 0000000710A4: BF800000
	.long 0xbf800000                                           // 0000000710A8: BF800000
	.long 0xbf800000                                           // 0000000710AC: BF800000
	.long 0xbf800000                                           // 0000000710B0: BF800000
	.long 0xbf800000                                           // 0000000710B4: BF800000
	.long 0xbf800000                                           // 0000000710B8: BF800000
	.long 0xbf800000                                           // 0000000710BC: BF800000
	.long 0xbf800000                                           // 0000000710C0: BF800000
	.long 0xbf800000                                           // 0000000710C4: BF800000
	.long 0xbf800000                                           // 0000000710C8: BF800000
	.long 0xbf800000                                           // 0000000710CC: BF800000
	.long 0xbf800000                                           // 0000000710D0: BF800000
	.long 0xbf800000                                           // 0000000710D4: BF800000
	.long 0xbf800000                                           // 0000000710D8: BF800000
	.long 0xbf800000                                           // 0000000710DC: BF800000
	.long 0xbf800000                                           // 0000000710E0: BF800000
	.long 0xbf800000                                           // 0000000710E4: BF800000
	.long 0xbf800000                                           // 0000000710E8: BF800000
	.long 0xbf800000                                           // 0000000710EC: BF800000
	.long 0xbf800000                                           // 0000000710F0: BF800000
	.long 0xbf800000                                           // 0000000710F4: BF800000
	.long 0xbf800000                                           // 0000000710F8: BF800000
	.long 0xbf800000                                           // 0000000710FC: BF800000

	.p2align	8
	.type	add_get_global_size_64,@function
	.size	add_get_global_size_64, add_get_global_size_64_symend-add_get_global_size_64
add_get_global_size_64:
	s_clause 0x3                                               // 000000071100: BF850003
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000071104: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x20                                // 00000007110C: F40000C0 F8000020
	s_load_b32 s6, s[0:1], 0x10                                // 000000071114: F4000180 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007111C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000071124: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007112C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071130: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071134: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000071138: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000071140: D5207C01 00090005
	s_lshr_b32 s2, s3, 15                                      // 000000071148: 85028F03
	s_lshl_b32 s3, s6, 7                                       // 00000007114C: 84038706
	s_and_b32 s2, s2, 0x1fffe                                  // 000000071150: 8B02FF02 0001FFFE
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000071158: BF8704A1
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000007115C: D73C0000 00020082
	s_add_i32 s2, s2, s3                                       // 000000071164: 81020302
	v_mov_b32_e32 v2, s2                                       // 000000071168: 7E040202
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007116C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071170: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071178: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000007117C: DC6A0000 007C0200
	s_nop 0                                                    // 000000071184: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071188: BFB60003
	s_endpgm                                                   // 00000007118C: BFB00000
add_get_global_size_64_symend:
	.long 0xbf800000                                           // 000000071190: BF800000
	.long 0xbf800000                                           // 000000071194: BF800000
	.long 0xbf800000                                           // 000000071198: BF800000
	.long 0xbf800000                                           // 00000007119C: BF800000
	.long 0xbf800000                                           // 0000000711A0: BF800000
	.long 0xbf800000                                           // 0000000711A4: BF800000
	.long 0xbf800000                                           // 0000000711A8: BF800000
	.long 0xbf800000                                           // 0000000711AC: BF800000
	.long 0xbf800000                                           // 0000000711B0: BF800000
	.long 0xbf800000                                           // 0000000711B4: BF800000
	.long 0xbf800000                                           // 0000000711B8: BF800000
	.long 0xbf800000                                           // 0000000711BC: BF800000
	.long 0xbf800000                                           // 0000000711C0: BF800000
	.long 0xbf800000                                           // 0000000711C4: BF800000
	.long 0xbf800000                                           // 0000000711C8: BF800000
	.long 0xbf800000                                           // 0000000711CC: BF800000
	.long 0xbf800000                                           // 0000000711D0: BF800000
	.long 0xbf800000                                           // 0000000711D4: BF800000
	.long 0xbf800000                                           // 0000000711D8: BF800000
	.long 0xbf800000                                           // 0000000711DC: BF800000
	.long 0xbf800000                                           // 0000000711E0: BF800000
	.long 0xbf800000                                           // 0000000711E4: BF800000
	.long 0xbf800000                                           // 0000000711E8: BF800000
	.long 0xbf800000                                           // 0000000711EC: BF800000
	.long 0xbf800000                                           // 0000000711F0: BF800000
	.long 0xbf800000                                           // 0000000711F4: BF800000
	.long 0xbf800000                                           // 0000000711F8: BF800000
	.long 0xbf800000                                           // 0000000711FC: BF800000

	.p2align	8
	.type	add_get_num_groups_64,@function
	.size	add_get_num_groups_64, add_get_num_groups_64_symend-add_get_num_groups_64
add_get_num_groups_64:
	s_clause 0x3                                               // 000000071200: BF850003
	s_load_b32 s3, s[0:1], 0x20                                // 000000071204: F40000C0 F8000020
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007120C: F4040100 F8000038
	s_load_b32 s6, s[0:1], 0x10                                // 000000071214: F4000180 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007121C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000071224: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007122C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071230: BF89FC07
	s_lshr_b32 s2, s3, 16                                      // 000000071234: 85029003
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071238: BF870091
	v_add_co_u32 v0, s3, s4, v0                                // 00000007123C: D7000300 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s3                    // 000000071244: D5207C01 000D0005
	v_cmp_ne_u16_e64 s2, s2, 0                                 // 00000007124C: D43D0002 00010002
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071254: BF870112
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071258: D73C0000 00020082
	s_cmp_lg_u32 s2, 0                                         // 000000071260: BF078002
	s_addc_u32 s2, s6, 0                                       // 000000071264: 82028006
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071268: BF870099
	s_lshl_b32 s2, s2, 1                                       // 00000007126C: 84028102
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071270: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 000000071278: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007127C: 40020201
	v_mov_b32_e32 v2, s2                                       // 000000071280: 7E040202
	global_store_b32 v[0:1], v2, off                           // 000000071284: DC6A0000 007C0200
	s_nop 0                                                    // 00000007128C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071290: BFB60003
	s_endpgm                                                   // 000000071294: BFB00000
add_get_num_groups_64_symend:
	.long 0xbf800000                                           // 000000071298: BF800000
	.long 0xbf800000                                           // 00000007129C: BF800000
	.long 0xbf800000                                           // 0000000712A0: BF800000
	.long 0xbf800000                                           // 0000000712A4: BF800000
	.long 0xbf800000                                           // 0000000712A8: BF800000
	.long 0xbf800000                                           // 0000000712AC: BF800000
	.long 0xbf800000                                           // 0000000712B0: BF800000
	.long 0xbf800000                                           // 0000000712B4: BF800000
	.long 0xbf800000                                           // 0000000712B8: BF800000
	.long 0xbf800000                                           // 0000000712BC: BF800000
	.long 0xbf800000                                           // 0000000712C0: BF800000
	.long 0xbf800000                                           // 0000000712C4: BF800000
	.long 0xbf800000                                           // 0000000712C8: BF800000
	.long 0xbf800000                                           // 0000000712CC: BF800000
	.long 0xbf800000                                           // 0000000712D0: BF800000
	.long 0xbf800000                                           // 0000000712D4: BF800000
	.long 0xbf800000                                           // 0000000712D8: BF800000
	.long 0xbf800000                                           // 0000000712DC: BF800000
	.long 0xbf800000                                           // 0000000712E0: BF800000
	.long 0xbf800000                                           // 0000000712E4: BF800000
	.long 0xbf800000                                           // 0000000712E8: BF800000
	.long 0xbf800000                                           // 0000000712EC: BF800000
	.long 0xbf800000                                           // 0000000712F0: BF800000
	.long 0xbf800000                                           // 0000000712F4: BF800000
	.long 0xbf800000                                           // 0000000712F8: BF800000
	.long 0xbf800000                                           // 0000000712FC: BF800000

	.p2align	8
	.type	add_get_work_dim,@function
	.size	add_get_work_dim, add_get_work_dim_symend-add_get_work_dim
add_get_work_dim:
	s_clause 0x2                                               // 000000071300: BF850002
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000071304: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x50                                // 00000007130C: F40000C0 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071314: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007131C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000071324: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071328: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007132C: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000071330: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000071338: D5207C01 00090005
	s_and_b32 s2, s3, 0xffff                                   // 000000071340: 8B02FF03 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071348: BF870099
	s_lshl_b32 s2, s2, 1                                       // 00000007134C: 84028102
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071350: D73C0000 00020082
	v_mov_b32_e32 v2, s2                                       // 000000071358: 7E040202
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007135C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071360: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071368: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000007136C: DC6A0000 007C0200
	s_nop 0                                                    // 000000071374: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071378: BFB60003
	s_endpgm                                                   // 00000007137C: BFB00000
add_get_work_dim_symend:
	.long 0xbf800000                                           // 000000071380: BF800000
	.long 0xbf800000                                           // 000000071384: BF800000
	.long 0xbf800000                                           // 000000071388: BF800000
	.long 0xbf800000                                           // 00000007138C: BF800000
	.long 0xbf800000                                           // 000000071390: BF800000
	.long 0xbf800000                                           // 000000071394: BF800000
	.long 0xbf800000                                           // 000000071398: BF800000
	.long 0xbf800000                                           // 00000007139C: BF800000
	.long 0xbf800000                                           // 0000000713A0: BF800000
	.long 0xbf800000                                           // 0000000713A4: BF800000
	.long 0xbf800000                                           // 0000000713A8: BF800000
	.long 0xbf800000                                           // 0000000713AC: BF800000
	.long 0xbf800000                                           // 0000000713B0: BF800000
	.long 0xbf800000                                           // 0000000713B4: BF800000
	.long 0xbf800000                                           // 0000000713B8: BF800000
	.long 0xbf800000                                           // 0000000713BC: BF800000
	.long 0xbf800000                                           // 0000000713C0: BF800000
	.long 0xbf800000                                           // 0000000713C4: BF800000
	.long 0xbf800000                                           // 0000000713C8: BF800000
	.long 0xbf800000                                           // 0000000713CC: BF800000
	.long 0xbf800000                                           // 0000000713D0: BF800000
	.long 0xbf800000                                           // 0000000713D4: BF800000
	.long 0xbf800000                                           // 0000000713D8: BF800000
	.long 0xbf800000                                           // 0000000713DC: BF800000
	.long 0xbf800000                                           // 0000000713E0: BF800000
	.long 0xbf800000                                           // 0000000713E4: BF800000
	.long 0xbf800000                                           // 0000000713E8: BF800000
	.long 0xbf800000                                           // 0000000713EC: BF800000
	.long 0xbf800000                                           // 0000000713F0: BF800000
	.long 0xbf800000                                           // 0000000713F4: BF800000
	.long 0xbf800000                                           // 0000000713F8: BF800000
	.long 0xbf800000                                           // 0000000713FC: BF800000

	.p2align	8
	.type	add_x_8_8,@function
	.size	add_x_8_8, add_x_8_8_symend-add_x_8_8
add_x_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000071400: F4080100 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000071408: 360200FF 000003FF
	s_waitcnt lgkmcnt(0)                                       // 000000071410: BF89FC07
	s_clause 0x1                                               // 000000071414: BF850001
	s_load_b32 s7, s[0:1], null                                // 000000071418: F40001C0 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071420: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 000000071428: D6100003 02291500
	s_mov_b32 s33, 0                                           // 000000071430: BEA10080
	v_lshl_or_b32 v1, s2, 3, v1                                // 000000071434: D6560001 04050602
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007143C: BF870091
	v_add_co_u32 v1, s2, s4, v1                                // 000000071440: D7000201 00020204
	v_add_co_ci_u32_e64 v2, null, s5, 0, s2                    // 000000071448: D5207C02 00090005
	s_lshl_b32 s2, s3, 3                                       // 000000071450: 84028303
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071454: BF870099
	s_add_i32 s2, s6, s2                                       // 000000071458: 81020206
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000007145C: D73C0000 00020282
	s_waitcnt lgkmcnt(0)                                       // 000000071464: BF89FC07
	v_add3_u32 v2, s2, s7, v3                                  // 000000071468: D6550002 040C0E02
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071470: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071474: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007147C: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000071480: DC6A0000 007C0200
	s_nop 0                                                    // 000000071488: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007148C: BFB60003
	s_endpgm                                                   // 000000071490: BFB00000
add_x_8_8_symend:
	.long 0xbf800000                                           // 000000071494: BF800000
	.long 0xbf800000                                           // 000000071498: BF800000
	.long 0xbf800000                                           // 00000007149C: BF800000
	.long 0xbf800000                                           // 0000000714A0: BF800000
	.long 0xbf800000                                           // 0000000714A4: BF800000
	.long 0xbf800000                                           // 0000000714A8: BF800000
	.long 0xbf800000                                           // 0000000714AC: BF800000
	.long 0xbf800000                                           // 0000000714B0: BF800000
	.long 0xbf800000                                           // 0000000714B4: BF800000
	.long 0xbf800000                                           // 0000000714B8: BF800000
	.long 0xbf800000                                           // 0000000714BC: BF800000
	.long 0xbf800000                                           // 0000000714C0: BF800000
	.long 0xbf800000                                           // 0000000714C4: BF800000
	.long 0xbf800000                                           // 0000000714C8: BF800000
	.long 0xbf800000                                           // 0000000714CC: BF800000
	.long 0xbf800000                                           // 0000000714D0: BF800000
	.long 0xbf800000                                           // 0000000714D4: BF800000
	.long 0xbf800000                                           // 0000000714D8: BF800000
	.long 0xbf800000                                           // 0000000714DC: BF800000
	.long 0xbf800000                                           // 0000000714E0: BF800000
	.long 0xbf800000                                           // 0000000714E4: BF800000
	.long 0xbf800000                                           // 0000000714E8: BF800000
	.long 0xbf800000                                           // 0000000714EC: BF800000
	.long 0xbf800000                                           // 0000000714F0: BF800000
	.long 0xbf800000                                           // 0000000714F4: BF800000
	.long 0xbf800000                                           // 0000000714F8: BF800000
	.long 0xbf800000                                           // 0000000714FC: BF800000

	.p2align	8
	.type	add_get_global_offset_8_8,@function
	.size	add_get_global_offset_8_8, add_get_global_offset_8_8_symend-add_get_global_offset_8_8
add_get_global_offset_8_8:
	s_clause 0x1                                               // 000000071500: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000071504: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007150C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000071514: D6560000 04010602
	s_mov_b32 s33, 0                                           // 00000007151C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071520: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071524: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000071528: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000071530: D5207C01 00090005
	s_add_i32 s2, s4, s6                                       // 000000071538: 81020604
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007153C: BF870119
	v_mov_b32_e32 v2, s2                                       // 000000071540: 7E040202
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071544: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007154C: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071550: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071558: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000007155C: DC6A0000 007C0200
	s_nop 0                                                    // 000000071564: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071568: BFB60003
	s_endpgm                                                   // 00000007156C: BFB00000
add_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 000000071570: BF800000
	.long 0xbf800000                                           // 000000071574: BF800000
	.long 0xbf800000                                           // 000000071578: BF800000
	.long 0xbf800000                                           // 00000007157C: BF800000
	.long 0xbf800000                                           // 000000071580: BF800000
	.long 0xbf800000                                           // 000000071584: BF800000
	.long 0xbf800000                                           // 000000071588: BF800000
	.long 0xbf800000                                           // 00000007158C: BF800000
	.long 0xbf800000                                           // 000000071590: BF800000
	.long 0xbf800000                                           // 000000071594: BF800000
	.long 0xbf800000                                           // 000000071598: BF800000
	.long 0xbf800000                                           // 00000007159C: BF800000
	.long 0xbf800000                                           // 0000000715A0: BF800000
	.long 0xbf800000                                           // 0000000715A4: BF800000
	.long 0xbf800000                                           // 0000000715A8: BF800000
	.long 0xbf800000                                           // 0000000715AC: BF800000
	.long 0xbf800000                                           // 0000000715B0: BF800000
	.long 0xbf800000                                           // 0000000715B4: BF800000
	.long 0xbf800000                                           // 0000000715B8: BF800000
	.long 0xbf800000                                           // 0000000715BC: BF800000
	.long 0xbf800000                                           // 0000000715C0: BF800000
	.long 0xbf800000                                           // 0000000715C4: BF800000
	.long 0xbf800000                                           // 0000000715C8: BF800000
	.long 0xbf800000                                           // 0000000715CC: BF800000
	.long 0xbf800000                                           // 0000000715D0: BF800000
	.long 0xbf800000                                           // 0000000715D4: BF800000
	.long 0xbf800000                                           // 0000000715D8: BF800000
	.long 0xbf800000                                           // 0000000715DC: BF800000
	.long 0xbf800000                                           // 0000000715E0: BF800000
	.long 0xbf800000                                           // 0000000715E4: BF800000
	.long 0xbf800000                                           // 0000000715E8: BF800000
	.long 0xbf800000                                           // 0000000715EC: BF800000
	.long 0xbf800000                                           // 0000000715F0: BF800000
	.long 0xbf800000                                           // 0000000715F4: BF800000
	.long 0xbf800000                                           // 0000000715F8: BF800000
	.long 0xbf800000                                           // 0000000715FC: BF800000

	.p2align	8
	.type	add_get_local_id_8_8,@function
	.size	add_get_local_id_8_8, add_get_local_id_8_8_symend-add_get_local_id_8_8
add_get_local_id_8_8:
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000071600: F4040100 F8000038
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000071608: 360600FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071610: F4040000 F8000008
	v_bfe_u32 v4, v0, 10, 10                                   // 000000071618: D6100004 02291500
	s_mov_b32 s33, 0                                           // 000000071620: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000071624: BF8700A2
	v_lshl_or_b32 v1, s2, 3, v3                                // 000000071628: D6560001 040D0602
	s_waitcnt lgkmcnt(0)                                       // 000000071630: BF89FC07
	v_add_co_u32 v1, s2, s4, v1                                // 000000071634: D7000201 00020204
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007163C: BF870091
	v_add_co_ci_u32_e64 v2, null, s5, 0, s2                    // 000000071640: D5207C02 00090005
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000071648: D73C0000 00020282
	v_add_nc_u32_e32 v2, v4, v3                                // 000000071650: 4A040704
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071654: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071658: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071660: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000071664: DC6A0000 007C0200
	s_nop 0                                                    // 00000007166C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071670: BFB60003
	s_endpgm                                                   // 000000071674: BFB00000
add_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 000000071678: BF800000
	.long 0xbf800000                                           // 00000007167C: BF800000
	.long 0xbf800000                                           // 000000071680: BF800000
	.long 0xbf800000                                           // 000000071684: BF800000
	.long 0xbf800000                                           // 000000071688: BF800000
	.long 0xbf800000                                           // 00000007168C: BF800000
	.long 0xbf800000                                           // 000000071690: BF800000
	.long 0xbf800000                                           // 000000071694: BF800000
	.long 0xbf800000                                           // 000000071698: BF800000
	.long 0xbf800000                                           // 00000007169C: BF800000
	.long 0xbf800000                                           // 0000000716A0: BF800000
	.long 0xbf800000                                           // 0000000716A4: BF800000
	.long 0xbf800000                                           // 0000000716A8: BF800000
	.long 0xbf800000                                           // 0000000716AC: BF800000
	.long 0xbf800000                                           // 0000000716B0: BF800000
	.long 0xbf800000                                           // 0000000716B4: BF800000
	.long 0xbf800000                                           // 0000000716B8: BF800000
	.long 0xbf800000                                           // 0000000716BC: BF800000
	.long 0xbf800000                                           // 0000000716C0: BF800000
	.long 0xbf800000                                           // 0000000716C4: BF800000
	.long 0xbf800000                                           // 0000000716C8: BF800000
	.long 0xbf800000                                           // 0000000716CC: BF800000
	.long 0xbf800000                                           // 0000000716D0: BF800000
	.long 0xbf800000                                           // 0000000716D4: BF800000
	.long 0xbf800000                                           // 0000000716D8: BF800000
	.long 0xbf800000                                           // 0000000716DC: BF800000
	.long 0xbf800000                                           // 0000000716E0: BF800000
	.long 0xbf800000                                           // 0000000716E4: BF800000
	.long 0xbf800000                                           // 0000000716E8: BF800000
	.long 0xbf800000                                           // 0000000716EC: BF800000
	.long 0xbf800000                                           // 0000000716F0: BF800000
	.long 0xbf800000                                           // 0000000716F4: BF800000
	.long 0xbf800000                                           // 0000000716F8: BF800000
	.long 0xbf800000                                           // 0000000716FC: BF800000

	.p2align	8
	.type	add_get_group_id_8_8,@function
	.size	add_get_group_id_8_8, add_get_group_id_8_8_symend-add_get_group_id_8_8
add_get_group_id_8_8:
	s_clause 0x1                                               // 000000071700: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000071704: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007170C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000071714: D6560000 04010602
	s_add_i32 s2, s3, s2                                       // 00000007171C: 81020203
	s_mov_b32 s33, 0                                           // 000000071720: BEA10080
	v_mov_b32_e32 v2, s2                                       // 000000071724: 7E040202
	s_waitcnt lgkmcnt(0)                                       // 000000071728: BF89FC07
	v_add_co_u32 v0, s4, s4, v0                                // 00000007172C: D7000400 00020004
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071734: BF870091
	v_add_co_ci_u32_e64 v1, null, s5, 0, s4                    // 000000071738: D5207C01 00110005
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071740: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071748: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007174C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071754: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000071758: DC6A0000 007C0200
	s_nop 0                                                    // 000000071760: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071764: BFB60003
	s_endpgm                                                   // 000000071768: BFB00000
add_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 00000007176C: BF800000
	.long 0xbf800000                                           // 000000071770: BF800000
	.long 0xbf800000                                           // 000000071774: BF800000
	.long 0xbf800000                                           // 000000071778: BF800000
	.long 0xbf800000                                           // 00000007177C: BF800000
	.long 0xbf800000                                           // 000000071780: BF800000
	.long 0xbf800000                                           // 000000071784: BF800000
	.long 0xbf800000                                           // 000000071788: BF800000
	.long 0xbf800000                                           // 00000007178C: BF800000
	.long 0xbf800000                                           // 000000071790: BF800000
	.long 0xbf800000                                           // 000000071794: BF800000
	.long 0xbf800000                                           // 000000071798: BF800000
	.long 0xbf800000                                           // 00000007179C: BF800000
	.long 0xbf800000                                           // 0000000717A0: BF800000
	.long 0xbf800000                                           // 0000000717A4: BF800000
	.long 0xbf800000                                           // 0000000717A8: BF800000
	.long 0xbf800000                                           // 0000000717AC: BF800000
	.long 0xbf800000                                           // 0000000717B0: BF800000
	.long 0xbf800000                                           // 0000000717B4: BF800000
	.long 0xbf800000                                           // 0000000717B8: BF800000
	.long 0xbf800000                                           // 0000000717BC: BF800000
	.long 0xbf800000                                           // 0000000717C0: BF800000
	.long 0xbf800000                                           // 0000000717C4: BF800000
	.long 0xbf800000                                           // 0000000717C8: BF800000
	.long 0xbf800000                                           // 0000000717CC: BF800000
	.long 0xbf800000                                           // 0000000717D0: BF800000
	.long 0xbf800000                                           // 0000000717D4: BF800000
	.long 0xbf800000                                           // 0000000717D8: BF800000
	.long 0xbf800000                                           // 0000000717DC: BF800000
	.long 0xbf800000                                           // 0000000717E0: BF800000
	.long 0xbf800000                                           // 0000000717E4: BF800000
	.long 0xbf800000                                           // 0000000717E8: BF800000
	.long 0xbf800000                                           // 0000000717EC: BF800000
	.long 0xbf800000                                           // 0000000717F0: BF800000
	.long 0xbf800000                                           // 0000000717F4: BF800000
	.long 0xbf800000                                           // 0000000717F8: BF800000
	.long 0xbf800000                                           // 0000000717FC: BF800000

	.p2align	8
	.type	add_get_local_size_8_8,@function
	.size	add_get_local_size_8_8, add_get_local_size_8_8_symend-add_get_local_size_8_8
add_get_local_size_8_8:
	s_clause 0x1                                               // 000000071800: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000071804: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007180C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000071814: D6560000 04010602
	v_mov_b32_e32 v2, 16                                       // 00000007181C: 7E040290
	s_mov_b32 s33, 0                                           // 000000071820: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071824: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071828: BF870092
	v_add_co_u32 v0, s2, s4, v0                                // 00000007182C: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000071834: D5207C01 00090005
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007183C: BF870091
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071840: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071848: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 000000071850: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071854: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000071858: DC6A0000 007C0200
	s_nop 0                                                    // 000000071860: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071864: BFB60003
	s_endpgm                                                   // 000000071868: BFB00000
add_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 00000007186C: BF800000
	.long 0xbf800000                                           // 000000071870: BF800000
	.long 0xbf800000                                           // 000000071874: BF800000
	.long 0xbf800000                                           // 000000071878: BF800000
	.long 0xbf800000                                           // 00000007187C: BF800000
	.long 0xbf800000                                           // 000000071880: BF800000
	.long 0xbf800000                                           // 000000071884: BF800000
	.long 0xbf800000                                           // 000000071888: BF800000
	.long 0xbf800000                                           // 00000007188C: BF800000
	.long 0xbf800000                                           // 000000071890: BF800000
	.long 0xbf800000                                           // 000000071894: BF800000
	.long 0xbf800000                                           // 000000071898: BF800000
	.long 0xbf800000                                           // 00000007189C: BF800000
	.long 0xbf800000                                           // 0000000718A0: BF800000
	.long 0xbf800000                                           // 0000000718A4: BF800000
	.long 0xbf800000                                           // 0000000718A8: BF800000
	.long 0xbf800000                                           // 0000000718AC: BF800000
	.long 0xbf800000                                           // 0000000718B0: BF800000
	.long 0xbf800000                                           // 0000000718B4: BF800000
	.long 0xbf800000                                           // 0000000718B8: BF800000
	.long 0xbf800000                                           // 0000000718BC: BF800000
	.long 0xbf800000                                           // 0000000718C0: BF800000
	.long 0xbf800000                                           // 0000000718C4: BF800000
	.long 0xbf800000                                           // 0000000718C8: BF800000
	.long 0xbf800000                                           // 0000000718CC: BF800000
	.long 0xbf800000                                           // 0000000718D0: BF800000
	.long 0xbf800000                                           // 0000000718D4: BF800000
	.long 0xbf800000                                           // 0000000718D8: BF800000
	.long 0xbf800000                                           // 0000000718DC: BF800000
	.long 0xbf800000                                           // 0000000718E0: BF800000
	.long 0xbf800000                                           // 0000000718E4: BF800000
	.long 0xbf800000                                           // 0000000718E8: BF800000
	.long 0xbf800000                                           // 0000000718EC: BF800000
	.long 0xbf800000                                           // 0000000718F0: BF800000
	.long 0xbf800000                                           // 0000000718F4: BF800000
	.long 0xbf800000                                           // 0000000718F8: BF800000
	.long 0xbf800000                                           // 0000000718FC: BF800000

	.p2align	8
	.type	add_get_global_id_8_8,@function
	.size	add_get_global_id_8_8, add_get_global_id_8_8_symend-add_get_global_id_8_8
add_get_global_id_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000071900: F4080100 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000071908: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071910: F4040000 F8000008
	v_bfe_u32 v0, v0, 10, 10                                   // 000000071918: D6100000 02291500
	s_mov_b32 s33, 0                                           // 000000071920: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000071924: BF8700A2
	v_lshl_or_b32 v1, s2, 3, v1                                // 000000071928: D6560001 04050602
	s_waitcnt lgkmcnt(0)                                       // 000000071930: BF89FC07
	v_add_co_u32 v1, s2, s4, v1                                // 000000071934: D7000201 00020204
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007193C: BF8704A1
	v_add_co_ci_u32_e64 v2, null, s5, 0, s2                    // 000000071940: D5207C02 00090005
	s_lshl_b32 s2, s3, 3                                       // 000000071948: 84028303
	s_add_i32 s2, s6, s2                                       // 00000007194C: 81020206
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000071950: BF870121
	v_lshlrev_b64 v[2:3], 2, v[1:2]                            // 000000071954: D73C0002 00020282
	v_add3_u32 v4, s2, v0, v1                                  // 00000007195C: D6550004 04060002
	v_add_co_u32 v0, vcc_lo, s0, v2                            // 000000071964: D7006A00 00020400
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007196C: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo             // 000000071970: 40020601
	global_store_b32 v[0:1], v4, off                           // 000000071974: DC6A0000 007C0400
	s_nop 0                                                    // 00000007197C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071980: BFB60003
	s_endpgm                                                   // 000000071984: BFB00000
add_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 000000071988: BF800000
	.long 0xbf800000                                           // 00000007198C: BF800000
	.long 0xbf800000                                           // 000000071990: BF800000
	.long 0xbf800000                                           // 000000071994: BF800000
	.long 0xbf800000                                           // 000000071998: BF800000
	.long 0xbf800000                                           // 00000007199C: BF800000
	.long 0xbf800000                                           // 0000000719A0: BF800000
	.long 0xbf800000                                           // 0000000719A4: BF800000
	.long 0xbf800000                                           // 0000000719A8: BF800000
	.long 0xbf800000                                           // 0000000719AC: BF800000
	.long 0xbf800000                                           // 0000000719B0: BF800000
	.long 0xbf800000                                           // 0000000719B4: BF800000
	.long 0xbf800000                                           // 0000000719B8: BF800000
	.long 0xbf800000                                           // 0000000719BC: BF800000
	.long 0xbf800000                                           // 0000000719C0: BF800000
	.long 0xbf800000                                           // 0000000719C4: BF800000
	.long 0xbf800000                                           // 0000000719C8: BF800000
	.long 0xbf800000                                           // 0000000719CC: BF800000
	.long 0xbf800000                                           // 0000000719D0: BF800000
	.long 0xbf800000                                           // 0000000719D4: BF800000
	.long 0xbf800000                                           // 0000000719D8: BF800000
	.long 0xbf800000                                           // 0000000719DC: BF800000
	.long 0xbf800000                                           // 0000000719E0: BF800000
	.long 0xbf800000                                           // 0000000719E4: BF800000
	.long 0xbf800000                                           // 0000000719E8: BF800000
	.long 0xbf800000                                           // 0000000719EC: BF800000
	.long 0xbf800000                                           // 0000000719F0: BF800000
	.long 0xbf800000                                           // 0000000719F4: BF800000
	.long 0xbf800000                                           // 0000000719F8: BF800000
	.long 0xbf800000                                           // 0000000719FC: BF800000

	.p2align	8
	.type	add_get_global_size_8_8,@function
	.size	add_get_global_size_8_8, add_get_global_size_8_8_symend-add_get_global_size_8_8
add_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000071A00: 7E020280
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000071A04: D6560000 04010602
	s_mov_b32 s33, 0                                           // 000000071A0C: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 000000071A10: DC520022 01000001
	s_clause 0x1                                               // 000000071A18: BF850001
	s_load_b64 s[8:9], s[0:1], 0x38                            // 000000071A1C: F4040200 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000071A24: F4080100 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000071A2C: BF89FC07
	v_add_co_u32 v0, s0, s8, v0                                // 000000071A30: D7000000 00020008
	s_waitcnt vmcnt(0)                                         // 000000071A38: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 000000071A3C: 32040290
	v_and_b32_e32 v3, 0xffff, v1                               // 000000071A40: 360602FF 0000FFFF
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 000000071A48: D5207C01 00010009
	s_add_i32 s0, s6, s7                                       // 000000071A50: 81000706
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071A54: BF870112
	v_add_nc_u32_e32 v2, v3, v2                                // 000000071A58: 4A040503
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071A5C: D73C0000 00020082
	s_lshl_b32 s0, s0, 3                                       // 000000071A64: 84008300
	s_delay_alu instid0(VALU_DEP_2) | instid1(SALU_CYCLE_1)    // 000000071A68: BF870482
	v_add_nc_u32_e32 v2, s0, v2                                // 000000071A6C: 4A040400
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071A70: BF870192
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 000000071A74: D7006A00 00020004
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 000000071A7C: 40020205
	global_store_b32 v[0:1], v2, off                           // 000000071A80: DC6A0000 007C0200
	s_nop 0                                                    // 000000071A88: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071A8C: BFB60003
	s_endpgm                                                   // 000000071A90: BFB00000
add_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 000000071A94: BF800000
	.long 0xbf800000                                           // 000000071A98: BF800000
	.long 0xbf800000                                           // 000000071A9C: BF800000
	.long 0xbf800000                                           // 000000071AA0: BF800000
	.long 0xbf800000                                           // 000000071AA4: BF800000
	.long 0xbf800000                                           // 000000071AA8: BF800000
	.long 0xbf800000                                           // 000000071AAC: BF800000
	.long 0xbf800000                                           // 000000071AB0: BF800000
	.long 0xbf800000                                           // 000000071AB4: BF800000
	.long 0xbf800000                                           // 000000071AB8: BF800000
	.long 0xbf800000                                           // 000000071ABC: BF800000
	.long 0xbf800000                                           // 000000071AC0: BF800000
	.long 0xbf800000                                           // 000000071AC4: BF800000
	.long 0xbf800000                                           // 000000071AC8: BF800000
	.long 0xbf800000                                           // 000000071ACC: BF800000
	.long 0xbf800000                                           // 000000071AD0: BF800000
	.long 0xbf800000                                           // 000000071AD4: BF800000
	.long 0xbf800000                                           // 000000071AD8: BF800000
	.long 0xbf800000                                           // 000000071ADC: BF800000
	.long 0xbf800000                                           // 000000071AE0: BF800000
	.long 0xbf800000                                           // 000000071AE4: BF800000
	.long 0xbf800000                                           // 000000071AE8: BF800000
	.long 0xbf800000                                           // 000000071AEC: BF800000
	.long 0xbf800000                                           // 000000071AF0: BF800000
	.long 0xbf800000                                           // 000000071AF4: BF800000
	.long 0xbf800000                                           // 000000071AF8: BF800000
	.long 0xbf800000                                           // 000000071AFC: BF800000

	.p2align	8
	.type	add_get_num_groups_8_8,@function
	.size	add_get_num_groups_8_8, add_get_num_groups_8_8_symend-add_get_num_groups_8_8
add_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000071B00: 7E020280
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000071B04: D6560000 04010602
	s_mov_b32 s33, 0                                           // 000000071B0C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000071B10: DC520022 02000001
	s_clause 0x1                                               // 000000071B18: BF850001
	s_load_b64 s[8:9], s[0:1], 0x38                            // 000000071B1C: F4040200 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000071B24: F4080100 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000071B2C: BF89FC07
	v_add_co_u32 v0, s0, s8, v0                                // 000000071B30: D7000000 00020008
	s_waitcnt vmcnt(0)                                         // 000000071B38: BF8903F7
	v_lshrrev_b32_e32 v1, 16, v2                               // 000000071B3C: 32020490
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000071B40: BF870141
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 000000071B44: 7C7A0280
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 000000071B48: D5207C01 00010009
	v_cmp_ne_u16_e64 s0, 0, v2.l                               // 000000071B50: D43D0000 00020480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000071B58: BF07806A
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071B5C: D73C0000 00020082
	s_addc_u32 s1, s7, 0                                       // 000000071B64: 82018007
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000071B68: BF8704A2
	s_cmp_lg_u32 s0, 0                                         // 000000071B6C: BF078000
	s_addc_u32 s0, s1, s6                                      // 000000071B70: 82000601
	v_mov_b32_e32 v2, s0                                       // 000000071B74: 7E040200
	s_delay_alu instid0(VALU_DEP_2)                            // 000000071B78: BF870002
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 000000071B7C: D7006A00 00020004
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 000000071B84: 40020205
	global_store_b32 v[0:1], v2, off                           // 000000071B88: DC6A0000 007C0200
	s_nop 0                                                    // 000000071B90: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071B94: BFB60003
	s_endpgm                                                   // 000000071B98: BFB00000
add_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 000000071B9C: BF800000
	.long 0xbf800000                                           // 000000071BA0: BF800000
	.long 0xbf800000                                           // 000000071BA4: BF800000
	.long 0xbf800000                                           // 000000071BA8: BF800000
	.long 0xbf800000                                           // 000000071BAC: BF800000
	.long 0xbf800000                                           // 000000071BB0: BF800000
	.long 0xbf800000                                           // 000000071BB4: BF800000
	.long 0xbf800000                                           // 000000071BB8: BF800000
	.long 0xbf800000                                           // 000000071BBC: BF800000
	.long 0xbf800000                                           // 000000071BC0: BF800000
	.long 0xbf800000                                           // 000000071BC4: BF800000
	.long 0xbf800000                                           // 000000071BC8: BF800000
	.long 0xbf800000                                           // 000000071BCC: BF800000
	.long 0xbf800000                                           // 000000071BD0: BF800000
	.long 0xbf800000                                           // 000000071BD4: BF800000
	.long 0xbf800000                                           // 000000071BD8: BF800000
	.long 0xbf800000                                           // 000000071BDC: BF800000
	.long 0xbf800000                                           // 000000071BE0: BF800000
	.long 0xbf800000                                           // 000000071BE4: BF800000
	.long 0xbf800000                                           // 000000071BE8: BF800000
	.long 0xbf800000                                           // 000000071BEC: BF800000
	.long 0xbf800000                                           // 000000071BF0: BF800000
	.long 0xbf800000                                           // 000000071BF4: BF800000
	.long 0xbf800000                                           // 000000071BF8: BF800000
	.long 0xbf800000                                           // 000000071BFC: BF800000

	.p2align	8
	.type	add_get_work_dim_8_8,@function
	.size	add_get_work_dim_8_8, add_get_work_dim_8_8_symend-add_get_work_dim_8_8
add_get_work_dim_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000071C00: F4080100 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000071C08: 360200FF 000003FF
	s_waitcnt lgkmcnt(0)                                       // 000000071C10: BF89FC07
	s_clause 0x1                                               // 000000071C14: BF850001
	s_load_b32 s7, s[0:1], 0x50                                // 000000071C18: F40001C0 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071C20: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 000000071C28: D6100003 02291500
	s_mov_b32 s33, 0                                           // 000000071C30: BEA10080
	v_lshl_or_b32 v1, s2, 3, v1                                // 000000071C34: D6560001 04050602
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071C3C: BF870091
	v_add_co_u32 v1, s2, s4, v1                                // 000000071C40: D7000201 00020204
	v_add_co_ci_u32_e64 v2, null, s5, 0, s2                    // 000000071C48: D5207C02 00090005
	s_lshl_b32 s2, s3, 3                                       // 000000071C50: 84028303
	s_waitcnt lgkmcnt(0)                                       // 000000071C54: BF89FC07
	s_and_b32 s3, s7, 0xffff                                   // 000000071C58: 8B03FF07 0000FFFF
	s_add_i32 s2, s6, s2                                       // 000000071C60: 81020206
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000071C64: D73C0000 00020282
	v_add3_u32 v2, s2, s3, v3                                  // 000000071C6C: D6550002 040C0602
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071C74: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071C78: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071C80: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000071C84: DC6A0000 007C0200
	s_nop 0                                                    // 000000071C8C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071C90: BFB60003
	s_endpgm                                                   // 000000071C94: BFB00000
add_get_work_dim_8_8_symend:
	.long 0xbf800000                                           // 000000071C98: BF800000
	.long 0xbf800000                                           // 000000071C9C: BF800000
	.long 0xbf800000                                           // 000000071CA0: BF800000
	.long 0xbf800000                                           // 000000071CA4: BF800000
	.long 0xbf800000                                           // 000000071CA8: BF800000
	.long 0xbf800000                                           // 000000071CAC: BF800000
	.long 0xbf800000                                           // 000000071CB0: BF800000
	.long 0xbf800000                                           // 000000071CB4: BF800000
	.long 0xbf800000                                           // 000000071CB8: BF800000
	.long 0xbf800000                                           // 000000071CBC: BF800000
	.long 0xbf800000                                           // 000000071CC0: BF800000
	.long 0xbf800000                                           // 000000071CC4: BF800000
	.long 0xbf800000                                           // 000000071CC8: BF800000
	.long 0xbf800000                                           // 000000071CCC: BF800000
	.long 0xbf800000                                           // 000000071CD0: BF800000
	.long 0xbf800000                                           // 000000071CD4: BF800000
	.long 0xbf800000                                           // 000000071CD8: BF800000
	.long 0xbf800000                                           // 000000071CDC: BF800000
	.long 0xbf800000                                           // 000000071CE0: BF800000
	.long 0xbf800000                                           // 000000071CE4: BF800000
	.long 0xbf800000                                           // 000000071CE8: BF800000
	.long 0xbf800000                                           // 000000071CEC: BF800000
	.long 0xbf800000                                           // 000000071CF0: BF800000
	.long 0xbf800000                                           // 000000071CF4: BF800000
	.long 0xbf800000                                           // 000000071CF8: BF800000
	.long 0xbf800000                                           // 000000071CFC: BF800000

	.p2align	8
	.type	add_long_x_x,@function
	.size	add_long_x_x, add_long_x_x_symend-add_long_x_x
add_long_x_x:
	s_clause 0x2                                               // 000000071D00: BF850002
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000071D04: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x8                                 // 000000071D0C: F40000C0 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 000000071D14: F4040000 F8000000
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000071D1C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000071D24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071D28: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071D2C: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000071D30: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000071D38: D5207C01 00090005
	s_lshl_b32 s2, s3, 1                                       // 000000071D40: 84028103
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071D44: BF870099
	s_ashr_i32 s3, s2, 31                                      // 000000071D48: 86039F02
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000071D4C: D73C0000 00020083
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 000000071D54: CA100002 02020003
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071D5C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071D60: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071D68: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 000000071D6C: DC6E0000 007C0200
	s_nop 0                                                    // 000000071D74: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071D78: BFB60003
	s_endpgm                                                   // 000000071D7C: BFB00000
add_long_x_x_symend:
	.long 0xbf800000                                           // 000000071D80: BF800000
	.long 0xbf800000                                           // 000000071D84: BF800000
	.long 0xbf800000                                           // 000000071D88: BF800000
	.long 0xbf800000                                           // 000000071D8C: BF800000
	.long 0xbf800000                                           // 000000071D90: BF800000
	.long 0xbf800000                                           // 000000071D94: BF800000
	.long 0xbf800000                                           // 000000071D98: BF800000
	.long 0xbf800000                                           // 000000071D9C: BF800000
	.long 0xbf800000                                           // 000000071DA0: BF800000
	.long 0xbf800000                                           // 000000071DA4: BF800000
	.long 0xbf800000                                           // 000000071DA8: BF800000
	.long 0xbf800000                                           // 000000071DAC: BF800000
	.long 0xbf800000                                           // 000000071DB0: BF800000
	.long 0xbf800000                                           // 000000071DB4: BF800000
	.long 0xbf800000                                           // 000000071DB8: BF800000
	.long 0xbf800000                                           // 000000071DBC: BF800000
	.long 0xbf800000                                           // 000000071DC0: BF800000
	.long 0xbf800000                                           // 000000071DC4: BF800000
	.long 0xbf800000                                           // 000000071DC8: BF800000
	.long 0xbf800000                                           // 000000071DCC: BF800000
	.long 0xbf800000                                           // 000000071DD0: BF800000
	.long 0xbf800000                                           // 000000071DD4: BF800000
	.long 0xbf800000                                           // 000000071DD8: BF800000
	.long 0xbf800000                                           // 000000071DDC: BF800000
	.long 0xbf800000                                           // 000000071DE0: BF800000
	.long 0xbf800000                                           // 000000071DE4: BF800000
	.long 0xbf800000                                           // 000000071DE8: BF800000
	.long 0xbf800000                                           // 000000071DEC: BF800000
	.long 0xbf800000                                           // 000000071DF0: BF800000
	.long 0xbf800000                                           // 000000071DF4: BF800000
	.long 0xbf800000                                           // 000000071DF8: BF800000
	.long 0xbf800000                                           // 000000071DFC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_x,@function
	.size	add_long_get_global_offset_x, add_long_get_global_offset_x_symend-add_long_get_global_offset_x
add_long_get_global_offset_x:
	s_clause 0x3                                               // 000000071E00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071E04: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 000000071E0C: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000071E14: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000071E1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000071E24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000071E2C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000071E34: D6100003 02292900
	s_mov_b32 s33, 0                                           // 000000071E3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071E40: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000071E44: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000071E4C: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000071E54: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v3                                // 000000071E58: D6560004 040D0204
	s_waitcnt lgkmcnt(0)                                       // 000000071E60: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 000000071E64: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1)                            // 000000071E6C: BF870001
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000071E70: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000071E78: D7000202 0002040A
	s_ashr_i32 s4, s5, 31                                      // 000000071E80: 86049F05
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000071E84: D5207C03 0009000B
	s_add_u32 s2, s8, s5                                       // 000000071E8C: 80020508
	v_add_co_u32 v4, s8, s0, v4                                // 000000071E90: D7000804 00020800
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000071E98: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s8                    // 000000071EA0: D5207C05 00210001
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000071EA8: D73C0002 00020483
	s_addc_u32 s3, s9, s4                                      // 000000071EB0: 82030409
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071EB4: BF870193
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000071EB8: D7006A00 00020006
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000071EC0: D73C0004 00020883
	v_mov_b32_e32 v7, s3                                       // 000000071EC8: 7E0E0203
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000071ECC: 40020207
	v_mov_b32_e32 v6, s2                                       // 000000071ED0: 7E0C0202
	s_add_u32 s2, s10, s5                                      // 000000071ED4: 8002050A
	s_addc_u32 s3, s11, s4                                     // 000000071ED8: 8203040B
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000071EDC: D7006A02 00020406
	s_add_u32 s0, s0, s5                                       // 000000071EE4: 80000500
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000071EE8: 40060607
	s_addc_u32 s1, s1, s4                                      // 000000071EEC: 82010401
	v_mov_b32_e32 v9, s3                                       // 000000071EF0: 7E120203
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000071EF4: D7006A04 00020806
	v_dual_mov_b32 v8, s2 :: v_dual_mov_b32 v11, s1            // 000000071EFC: CA100002 080A0001
	v_mov_b32_e32 v10, s0                                      // 000000071F04: 7E140200
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000071F08: 400A0A07
	s_clause 0x2                                               // 000000071F0C: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000071F10: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000071F18: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000071F20: DC6E0000 007C0A04
	s_nop 0                                                    // 000000071F28: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071F2C: BFB60003
	s_endpgm                                                   // 000000071F30: BFB00000
add_long_get_global_offset_x_symend:
	.long 0xbf800000                                           // 000000071F34: BF800000
	.long 0xbf800000                                           // 000000071F38: BF800000
	.long 0xbf800000                                           // 000000071F3C: BF800000
	.long 0xbf800000                                           // 000000071F40: BF800000
	.long 0xbf800000                                           // 000000071F44: BF800000
	.long 0xbf800000                                           // 000000071F48: BF800000
	.long 0xbf800000                                           // 000000071F4C: BF800000
	.long 0xbf800000                                           // 000000071F50: BF800000
	.long 0xbf800000                                           // 000000071F54: BF800000
	.long 0xbf800000                                           // 000000071F58: BF800000
	.long 0xbf800000                                           // 000000071F5C: BF800000
	.long 0xbf800000                                           // 000000071F60: BF800000
	.long 0xbf800000                                           // 000000071F64: BF800000
	.long 0xbf800000                                           // 000000071F68: BF800000
	.long 0xbf800000                                           // 000000071F6C: BF800000
	.long 0xbf800000                                           // 000000071F70: BF800000
	.long 0xbf800000                                           // 000000071F74: BF800000
	.long 0xbf800000                                           // 000000071F78: BF800000
	.long 0xbf800000                                           // 000000071F7C: BF800000
	.long 0xbf800000                                           // 000000071F80: BF800000
	.long 0xbf800000                                           // 000000071F84: BF800000
	.long 0xbf800000                                           // 000000071F88: BF800000
	.long 0xbf800000                                           // 000000071F8C: BF800000
	.long 0xbf800000                                           // 000000071F90: BF800000
	.long 0xbf800000                                           // 000000071F94: BF800000
	.long 0xbf800000                                           // 000000071F98: BF800000
	.long 0xbf800000                                           // 000000071F9C: BF800000
	.long 0xbf800000                                           // 000000071FA0: BF800000
	.long 0xbf800000                                           // 000000071FA4: BF800000
	.long 0xbf800000                                           // 000000071FA8: BF800000
	.long 0xbf800000                                           // 000000071FAC: BF800000
	.long 0xbf800000                                           // 000000071FB0: BF800000
	.long 0xbf800000                                           // 000000071FB4: BF800000
	.long 0xbf800000                                           // 000000071FB8: BF800000
	.long 0xbf800000                                           // 000000071FBC: BF800000
	.long 0xbf800000                                           // 000000071FC0: BF800000
	.long 0xbf800000                                           // 000000071FC4: BF800000
	.long 0xbf800000                                           // 000000071FC8: BF800000
	.long 0xbf800000                                           // 000000071FCC: BF800000
	.long 0xbf800000                                           // 000000071FD0: BF800000
	.long 0xbf800000                                           // 000000071FD4: BF800000
	.long 0xbf800000                                           // 000000071FD8: BF800000
	.long 0xbf800000                                           // 000000071FDC: BF800000
	.long 0xbf800000                                           // 000000071FE0: BF800000
	.long 0xbf800000                                           // 000000071FE4: BF800000
	.long 0xbf800000                                           // 000000071FE8: BF800000
	.long 0xbf800000                                           // 000000071FEC: BF800000
	.long 0xbf800000                                           // 000000071FF0: BF800000
	.long 0xbf800000                                           // 000000071FF4: BF800000
	.long 0xbf800000                                           // 000000071FF8: BF800000
	.long 0xbf800000                                           // 000000071FFC: BF800000

	.p2align	8
	.type	add_long_get_local_id_x,@function
	.size	add_long_get_local_id_x, add_long_get_local_id_x_symend-add_long_get_local_id_x
add_long_get_local_id_x:
	s_clause 0x3                                               // 000000072000: BF850003
	s_load_b32 s5, s[0:1], null                                // 000000072004: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007200C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000072014: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007201C: F4040000 F8000048
	v_and_b32_e32 v4, 0x3ff, v0                                // 000000072024: 360800FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 00000007202C: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000072034: D610000A 02292900
	s_mov_b32 s33, 0                                           // 00000007203C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072040: BF870193
	v_lshl_or_b32 v0, s2, 3, v4                                // 000000072044: D6560000 04110602
	v_lshl_or_b32 v2, s3, 2, v6                                // 00000007204C: D6560002 04190403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000072054: BF8700C3
	v_lshl_or_b32 v8, s4, 1, v10                               // 000000072058: D6560008 04290204
	s_waitcnt lgkmcnt(0)                                       // 000000072060: BF89FC07
	s_ashr_i32 s2, s5, 31                                      // 000000072064: 86029F05
	v_add_co_u32 v0, s3, s8, v0                                // 000000072068: D7000300 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000072070: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000072078: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000072080: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000072084: D5207C03 000D000B
	v_add_co_u32 v8, s0, s0, v8                                // 00000007208C: D7000008 00021000
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072094: D73C0000 00020083
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 00000007209C: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000720A4: BF870224
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000720A8: D73C0002 00020483
	v_add_co_u32 v4, s3, s5, v4                                // 0000000720B0: D7000304 00020805
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000720B8: D7006A00 00020006
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000720C0: BF870004
	v_lshlrev_b64 v[8:9], 3, v[8:9]                            // 0000000720C4: D73C0008 00021083
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000720CC: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000720D0: D7006A02 00020406
	v_add_co_ci_u32_e64 v5, null, s2, 0, s3                    // 0000000720D8: D5207C05 000D0002
	v_add_co_u32 v6, s3, s5, v6                                // 0000000720E0: D7000306 00020C05
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000720E8: 40060607
	v_add_co_u32 v10, s0, s5, v10                              // 0000000720EC: D700000A 00021405
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 0000000720F4: D7006A08 00021006
	v_add_co_ci_u32_e64 v7, null, s2, 0, s3                    // 0000000720FC: D5207C07 000D0002
	v_add_co_ci_u32_e64 v11, null, s2, 0, s0                   // 000000072104: D5207C0B 00010002
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 00000007210C: 40121207
	s_clause 0x2                                               // 000000072110: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000072114: DC6E0000 007C0400
	global_store_b64 v[2:3], v[6:7], off                       // 00000007211C: DC6E0000 007C0602
	global_store_b64 v[8:9], v[10:11], off                     // 000000072124: DC6E0000 007C0A08
	s_nop 0                                                    // 00000007212C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072130: BFB60003
	s_endpgm                                                   // 000000072134: BFB00000
add_long_get_local_id_x_symend:
	.long 0xbf800000                                           // 000000072138: BF800000
	.long 0xbf800000                                           // 00000007213C: BF800000
	.long 0xbf800000                                           // 000000072140: BF800000
	.long 0xbf800000                                           // 000000072144: BF800000
	.long 0xbf800000                                           // 000000072148: BF800000
	.long 0xbf800000                                           // 00000007214C: BF800000
	.long 0xbf800000                                           // 000000072150: BF800000
	.long 0xbf800000                                           // 000000072154: BF800000
	.long 0xbf800000                                           // 000000072158: BF800000
	.long 0xbf800000                                           // 00000007215C: BF800000
	.long 0xbf800000                                           // 000000072160: BF800000
	.long 0xbf800000                                           // 000000072164: BF800000
	.long 0xbf800000                                           // 000000072168: BF800000
	.long 0xbf800000                                           // 00000007216C: BF800000
	.long 0xbf800000                                           // 000000072170: BF800000
	.long 0xbf800000                                           // 000000072174: BF800000
	.long 0xbf800000                                           // 000000072178: BF800000
	.long 0xbf800000                                           // 00000007217C: BF800000
	.long 0xbf800000                                           // 000000072180: BF800000
	.long 0xbf800000                                           // 000000072184: BF800000
	.long 0xbf800000                                           // 000000072188: BF800000
	.long 0xbf800000                                           // 00000007218C: BF800000
	.long 0xbf800000                                           // 000000072190: BF800000
	.long 0xbf800000                                           // 000000072194: BF800000
	.long 0xbf800000                                           // 000000072198: BF800000
	.long 0xbf800000                                           // 00000007219C: BF800000
	.long 0xbf800000                                           // 0000000721A0: BF800000
	.long 0xbf800000                                           // 0000000721A4: BF800000
	.long 0xbf800000                                           // 0000000721A8: BF800000
	.long 0xbf800000                                           // 0000000721AC: BF800000
	.long 0xbf800000                                           // 0000000721B0: BF800000
	.long 0xbf800000                                           // 0000000721B4: BF800000
	.long 0xbf800000                                           // 0000000721B8: BF800000
	.long 0xbf800000                                           // 0000000721BC: BF800000
	.long 0xbf800000                                           // 0000000721C0: BF800000
	.long 0xbf800000                                           // 0000000721C4: BF800000
	.long 0xbf800000                                           // 0000000721C8: BF800000
	.long 0xbf800000                                           // 0000000721CC: BF800000
	.long 0xbf800000                                           // 0000000721D0: BF800000
	.long 0xbf800000                                           // 0000000721D4: BF800000
	.long 0xbf800000                                           // 0000000721D8: BF800000
	.long 0xbf800000                                           // 0000000721DC: BF800000
	.long 0xbf800000                                           // 0000000721E0: BF800000
	.long 0xbf800000                                           // 0000000721E4: BF800000
	.long 0xbf800000                                           // 0000000721E8: BF800000
	.long 0xbf800000                                           // 0000000721EC: BF800000
	.long 0xbf800000                                           // 0000000721F0: BF800000
	.long 0xbf800000                                           // 0000000721F4: BF800000
	.long 0xbf800000                                           // 0000000721F8: BF800000
	.long 0xbf800000                                           // 0000000721FC: BF800000

	.p2align	8
	.type	add_long_get_group_id_x,@function
	.size	add_long_get_group_id_x, add_long_get_group_id_x_symend-add_long_get_group_id_x
add_long_get_group_id_x:
	s_clause 0x3                                               // 000000072200: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072204: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007220C: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000072214: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007221C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000072224: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007222C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000072234: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000007223C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072240: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000072244: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007224C: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000072254: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v3                                // 000000072258: D6560004 040D0204
	s_waitcnt lgkmcnt(0)                                       // 000000072260: BF89FC07
	v_add_co_u32 v0, s8, s8, v1                                // 000000072264: D7000800 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007226C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 000000072270: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 000000072278: D7000802 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 000000072280: D5207C03 0021000B
	v_add_co_u32 v4, s0, s0, v4                                // 000000072288: D7000004 00020800
	s_delay_alu instid0(VALU_DEP_4)                            // 000000072290: BF870004
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072294: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007229C: D5207C05 00010001
	s_ashr_i32 s12, s5, 31                                     // 0000000722A4: 860C9F05
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000722A8: D73C0002 00020483
	s_add_u32 s8, s5, s2                                       // 0000000722B0: 80080205
	s_addc_u32 s9, s12, 0                                      // 0000000722B4: 8209800C
	v_mov_b32_e32 v6, s8                                       // 0000000722B8: 7E0C0208
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000722BC: D7006A00 00020006
	s_add_u32 s0, s5, s3                                       // 0000000722C4: 80000305
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000722C8: D73C0004 00020883
	s_addc_u32 s1, s12, 0                                      // 0000000722D0: 8201800C
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000722D4: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000722D8: D7006A02 00020406
	v_mov_b32_e32 v9, s1                                       // 0000000722E0: 7E120201
	v_dual_mov_b32 v7, s9 :: v_dual_mov_b32 v8, s0             // 0000000722E4: CA100009 07080000
	s_add_u32 s0, s5, s4                                       // 0000000722EC: 80000405
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000722F0: 40060607
	s_addc_u32 s1, s12, 0                                      // 0000000722F4: 8201800C
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000722F8: D7006A04 00020806
	v_mov_b32_e32 v11, s1                                      // 000000072300: 7E160201
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000072304: 400A0A07
	v_mov_b32_e32 v10, s0                                      // 000000072308: 7E140200
	s_clause 0x2                                               // 00000007230C: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000072310: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000072318: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000072320: DC6E0000 007C0A04
	s_nop 0                                                    // 000000072328: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007232C: BFB60003
	s_endpgm                                                   // 000000072330: BFB00000
add_long_get_group_id_x_symend:
	.long 0xbf800000                                           // 000000072334: BF800000
	.long 0xbf800000                                           // 000000072338: BF800000
	.long 0xbf800000                                           // 00000007233C: BF800000
	.long 0xbf800000                                           // 000000072340: BF800000
	.long 0xbf800000                                           // 000000072344: BF800000
	.long 0xbf800000                                           // 000000072348: BF800000
	.long 0xbf800000                                           // 00000007234C: BF800000
	.long 0xbf800000                                           // 000000072350: BF800000
	.long 0xbf800000                                           // 000000072354: BF800000
	.long 0xbf800000                                           // 000000072358: BF800000
	.long 0xbf800000                                           // 00000007235C: BF800000
	.long 0xbf800000                                           // 000000072360: BF800000
	.long 0xbf800000                                           // 000000072364: BF800000
	.long 0xbf800000                                           // 000000072368: BF800000
	.long 0xbf800000                                           // 00000007236C: BF800000
	.long 0xbf800000                                           // 000000072370: BF800000
	.long 0xbf800000                                           // 000000072374: BF800000
	.long 0xbf800000                                           // 000000072378: BF800000
	.long 0xbf800000                                           // 00000007237C: BF800000
	.long 0xbf800000                                           // 000000072380: BF800000
	.long 0xbf800000                                           // 000000072384: BF800000
	.long 0xbf800000                                           // 000000072388: BF800000
	.long 0xbf800000                                           // 00000007238C: BF800000
	.long 0xbf800000                                           // 000000072390: BF800000
	.long 0xbf800000                                           // 000000072394: BF800000
	.long 0xbf800000                                           // 000000072398: BF800000
	.long 0xbf800000                                           // 00000007239C: BF800000
	.long 0xbf800000                                           // 0000000723A0: BF800000
	.long 0xbf800000                                           // 0000000723A4: BF800000
	.long 0xbf800000                                           // 0000000723A8: BF800000
	.long 0xbf800000                                           // 0000000723AC: BF800000
	.long 0xbf800000                                           // 0000000723B0: BF800000
	.long 0xbf800000                                           // 0000000723B4: BF800000
	.long 0xbf800000                                           // 0000000723B8: BF800000
	.long 0xbf800000                                           // 0000000723BC: BF800000
	.long 0xbf800000                                           // 0000000723C0: BF800000
	.long 0xbf800000                                           // 0000000723C4: BF800000
	.long 0xbf800000                                           // 0000000723C8: BF800000
	.long 0xbf800000                                           // 0000000723CC: BF800000
	.long 0xbf800000                                           // 0000000723D0: BF800000
	.long 0xbf800000                                           // 0000000723D4: BF800000
	.long 0xbf800000                                           // 0000000723D8: BF800000
	.long 0xbf800000                                           // 0000000723DC: BF800000
	.long 0xbf800000                                           // 0000000723E0: BF800000
	.long 0xbf800000                                           // 0000000723E4: BF800000
	.long 0xbf800000                                           // 0000000723E8: BF800000
	.long 0xbf800000                                           // 0000000723EC: BF800000
	.long 0xbf800000                                           // 0000000723F0: BF800000
	.long 0xbf800000                                           // 0000000723F4: BF800000
	.long 0xbf800000                                           // 0000000723F8: BF800000
	.long 0xbf800000                                           // 0000000723FC: BF800000

	.p2align	8
	.type	add_long_get_local_size_x,@function
	.size	add_long_get_local_size_x, add_long_get_local_size_x_symend-add_long_get_local_size_x
add_long_get_local_size_x:
	s_clause 0x2                                               // 000000072400: BF850002
	s_load_b32 s5, s[0:1], null                                // 000000072404: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007240C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000072414: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007241C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000072424: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007242C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072434: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007243C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000072440: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000072448: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000072450: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000072454: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007245C: BF89FC07
	s_ashr_i32 s4, s5, 31                                      // 000000072460: 86049F05
	v_add_co_u32 v0, s2, s8, v1                                // 000000072464: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000007246C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000072474: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007247C: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000072480: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000072488: D7000204 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072490: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000072498: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000724A0: BF8701B4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000724A4: D73C0002 00020483
	s_add_u32 s2, s5, 2                                        // 0000000724AC: 80028205
	s_addc_u32 s3, s4, 0                                       // 0000000724B0: 82038004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000724B4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000724BC: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000724C4: 40020201
	v_mov_b32_e32 v7, s3                                       // 0000000724C8: 7E0E0203
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000724CC: D7006A02 00020400
	v_mov_b32_e32 v6, s2                                       // 0000000724D4: 7E0C0202
	s_add_u32 s2, s5, 4                                        // 0000000724D8: 80028405
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000724DC: 40060601
	s_addc_u32 s3, s4, 0                                       // 0000000724E0: 82038004
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000724E4: D7006A04 00020800
	v_dual_mov_b32 v9, s3 :: v_dual_mov_b32 v8, s2             // 0000000724EC: CA100003 09080002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000724F4: 400A0A01
	s_clause 0x2                                               // 0000000724F8: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 0000000724FC: DC6E0000 007C0600
	global_store_b64 v[2:3], v[6:7], off                       // 000000072504: DC6E0000 007C0602
	global_store_b64 v[4:5], v[8:9], off                       // 00000007250C: DC6E0000 007C0804
	s_nop 0                                                    // 000000072514: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072518: BFB60003
	s_endpgm                                                   // 00000007251C: BFB00000
add_long_get_local_size_x_symend:
	.long 0xbf800000                                           // 000000072520: BF800000
	.long 0xbf800000                                           // 000000072524: BF800000
	.long 0xbf800000                                           // 000000072528: BF800000
	.long 0xbf800000                                           // 00000007252C: BF800000
	.long 0xbf800000                                           // 000000072530: BF800000
	.long 0xbf800000                                           // 000000072534: BF800000
	.long 0xbf800000                                           // 000000072538: BF800000
	.long 0xbf800000                                           // 00000007253C: BF800000
	.long 0xbf800000                                           // 000000072540: BF800000
	.long 0xbf800000                                           // 000000072544: BF800000
	.long 0xbf800000                                           // 000000072548: BF800000
	.long 0xbf800000                                           // 00000007254C: BF800000
	.long 0xbf800000                                           // 000000072550: BF800000
	.long 0xbf800000                                           // 000000072554: BF800000
	.long 0xbf800000                                           // 000000072558: BF800000
	.long 0xbf800000                                           // 00000007255C: BF800000
	.long 0xbf800000                                           // 000000072560: BF800000
	.long 0xbf800000                                           // 000000072564: BF800000
	.long 0xbf800000                                           // 000000072568: BF800000
	.long 0xbf800000                                           // 00000007256C: BF800000
	.long 0xbf800000                                           // 000000072570: BF800000
	.long 0xbf800000                                           // 000000072574: BF800000
	.long 0xbf800000                                           // 000000072578: BF800000
	.long 0xbf800000                                           // 00000007257C: BF800000
	.long 0xbf800000                                           // 000000072580: BF800000
	.long 0xbf800000                                           // 000000072584: BF800000
	.long 0xbf800000                                           // 000000072588: BF800000
	.long 0xbf800000                                           // 00000007258C: BF800000
	.long 0xbf800000                                           // 000000072590: BF800000
	.long 0xbf800000                                           // 000000072594: BF800000
	.long 0xbf800000                                           // 000000072598: BF800000
	.long 0xbf800000                                           // 00000007259C: BF800000
	.long 0xbf800000                                           // 0000000725A0: BF800000
	.long 0xbf800000                                           // 0000000725A4: BF800000
	.long 0xbf800000                                           // 0000000725A8: BF800000
	.long 0xbf800000                                           // 0000000725AC: BF800000
	.long 0xbf800000                                           // 0000000725B0: BF800000
	.long 0xbf800000                                           // 0000000725B4: BF800000
	.long 0xbf800000                                           // 0000000725B8: BF800000
	.long 0xbf800000                                           // 0000000725BC: BF800000
	.long 0xbf800000                                           // 0000000725C0: BF800000
	.long 0xbf800000                                           // 0000000725C4: BF800000
	.long 0xbf800000                                           // 0000000725C8: BF800000
	.long 0xbf800000                                           // 0000000725CC: BF800000
	.long 0xbf800000                                           // 0000000725D0: BF800000
	.long 0xbf800000                                           // 0000000725D4: BF800000
	.long 0xbf800000                                           // 0000000725D8: BF800000
	.long 0xbf800000                                           // 0000000725DC: BF800000
	.long 0xbf800000                                           // 0000000725E0: BF800000
	.long 0xbf800000                                           // 0000000725E4: BF800000
	.long 0xbf800000                                           // 0000000725E8: BF800000
	.long 0xbf800000                                           // 0000000725EC: BF800000
	.long 0xbf800000                                           // 0000000725F0: BF800000
	.long 0xbf800000                                           // 0000000725F4: BF800000
	.long 0xbf800000                                           // 0000000725F8: BF800000
	.long 0xbf800000                                           // 0000000725FC: BF800000

	.p2align	8
	.type	add_long_get_global_id_x,@function
	.size	add_long_get_global_id_x, add_long_get_global_id_x_symend-add_long_get_global_id_x
add_long_get_global_id_x:
	s_clause 0x2                                               // 000000072600: BF850002
	s_load_b32 s5, s[0:1], null                                // 000000072604: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007260C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072614: F4080200 F8000038
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007261C: CA240080 020000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000072628: F4040000 F8000048
	v_bfe_u32 v4, v0, 10, 10                                   // 000000072630: D6100004 02291500
	v_bfe_u32 v6, v0, 20, 10                                   // 000000072638: D6100006 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000072640: BF8701A3
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000072644: D6560001 04050202
	s_mov_b32 s33, 0                                           // 00000007264C: BEA10080
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000072650: D6560004 04110203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072658: BF870193
	v_lshl_or_b32 v8, s4, 2, v6                                // 00000007265C: D6560008 04190404
	v_lshlrev_b64 v[2:3], 3, v[1:2]                            // 000000072664: D73C0002 00020283
	s_waitcnt lgkmcnt(0)                                       // 00000007266C: BF89FC07
	s_ashr_i32 s2, s5, 31                                      // 000000072670: 86029F05
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000072674: BF8700C1
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000072678: D7006A02 00020406
	s_add_u32 s3, s5, s8                                       // 000000072680: 80030805
	s_addc_u32 s8, s2, s9                                      // 000000072684: 82080902
	v_add_co_u32 v0, s3, s3, v1                                // 000000072688: D7000300 00020203
	v_add_co_ci_u32_e64 v1, null, s8, 0, s3                    // 000000072690: D5207C01 000D0008
	v_add_co_u32 v4, s3, s10, v4                               // 000000072698: D7000304 0002080A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000726A0: BF8701A1
	v_add_co_ci_u32_e64 v5, null, s11, 0, s3                   // 0000000726A4: D5207C05 000D000B
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000726AC: 40060607
	v_add_co_u32 v6, vcc_lo, v4, s5                            // 0000000726B0: D7006A06 00000B04
	v_add_co_u32 v8, s0, s0, v8                                // 0000000726B8: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 0000000726C0: BF870134
	v_add_co_ci_u32_e32 v7, vcc_lo, s2, v5, vcc_lo             // 0000000726C4: 400E0A02
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000726C8: D73C0004 00020883
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 0000000726D0: D5207C09 00010001
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000726D8: D7006A04 00020806
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000726E0: BF870212
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 0000000726E4: D73C000A 00021083
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000726EC: 400A0A07
	v_add_co_u32 v8, vcc_lo, v8, s5                            // 0000000726F0: D7006A08 00000B08
	v_add_co_ci_u32_e32 v9, vcc_lo, s2, v9, vcc_lo             // 0000000726F8: 40121202
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000726FC: BF870004
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 000000072700: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000072708: 40161607
	s_clause 0x2                                               // 00000007270C: BF850002
	global_store_b64 v[2:3], v[0:1], off                       // 000000072710: DC6E0000 007C0002
	global_store_b64 v[4:5], v[6:7], off                       // 000000072718: DC6E0000 007C0604
	global_store_b64 v[10:11], v[8:9], off                     // 000000072720: DC6E0000 007C080A
	s_nop 0                                                    // 000000072728: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007272C: BFB60003
	s_endpgm                                                   // 000000072730: BFB00000
add_long_get_global_id_x_symend:
	.long 0xbf800000                                           // 000000072734: BF800000
	.long 0xbf800000                                           // 000000072738: BF800000
	.long 0xbf800000                                           // 00000007273C: BF800000
	.long 0xbf800000                                           // 000000072740: BF800000
	.long 0xbf800000                                           // 000000072744: BF800000
	.long 0xbf800000                                           // 000000072748: BF800000
	.long 0xbf800000                                           // 00000007274C: BF800000
	.long 0xbf800000                                           // 000000072750: BF800000
	.long 0xbf800000                                           // 000000072754: BF800000
	.long 0xbf800000                                           // 000000072758: BF800000
	.long 0xbf800000                                           // 00000007275C: BF800000
	.long 0xbf800000                                           // 000000072760: BF800000
	.long 0xbf800000                                           // 000000072764: BF800000
	.long 0xbf800000                                           // 000000072768: BF800000
	.long 0xbf800000                                           // 00000007276C: BF800000
	.long 0xbf800000                                           // 000000072770: BF800000
	.long 0xbf800000                                           // 000000072774: BF800000
	.long 0xbf800000                                           // 000000072778: BF800000
	.long 0xbf800000                                           // 00000007277C: BF800000
	.long 0xbf800000                                           // 000000072780: BF800000
	.long 0xbf800000                                           // 000000072784: BF800000
	.long 0xbf800000                                           // 000000072788: BF800000
	.long 0xbf800000                                           // 00000007278C: BF800000
	.long 0xbf800000                                           // 000000072790: BF800000
	.long 0xbf800000                                           // 000000072794: BF800000
	.long 0xbf800000                                           // 000000072798: BF800000
	.long 0xbf800000                                           // 00000007279C: BF800000
	.long 0xbf800000                                           // 0000000727A0: BF800000
	.long 0xbf800000                                           // 0000000727A4: BF800000
	.long 0xbf800000                                           // 0000000727A8: BF800000
	.long 0xbf800000                                           // 0000000727AC: BF800000
	.long 0xbf800000                                           // 0000000727B0: BF800000
	.long 0xbf800000                                           // 0000000727B4: BF800000
	.long 0xbf800000                                           // 0000000727B8: BF800000
	.long 0xbf800000                                           // 0000000727BC: BF800000
	.long 0xbf800000                                           // 0000000727C0: BF800000
	.long 0xbf800000                                           // 0000000727C4: BF800000
	.long 0xbf800000                                           // 0000000727C8: BF800000
	.long 0xbf800000                                           // 0000000727CC: BF800000
	.long 0xbf800000                                           // 0000000727D0: BF800000
	.long 0xbf800000                                           // 0000000727D4: BF800000
	.long 0xbf800000                                           // 0000000727D8: BF800000
	.long 0xbf800000                                           // 0000000727DC: BF800000
	.long 0xbf800000                                           // 0000000727E0: BF800000
	.long 0xbf800000                                           // 0000000727E4: BF800000
	.long 0xbf800000                                           // 0000000727E8: BF800000
	.long 0xbf800000                                           // 0000000727EC: BF800000
	.long 0xbf800000                                           // 0000000727F0: BF800000
	.long 0xbf800000                                           // 0000000727F4: BF800000
	.long 0xbf800000                                           // 0000000727F8: BF800000
	.long 0xbf800000                                           // 0000000727FC: BF800000

	.p2align	8
	.type	add_long_get_global_size_x,@function
	.size	add_long_get_global_size_x, add_long_get_global_size_x_symend-add_long_get_global_size_x
add_long_get_global_size_x:
	v_mov_b32_e32 v1, 0                                        // 000000072800: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000072804: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007280C: BEA10080
	s_clause 0x1                                               // 000000072810: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000072814: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007281C: DC4A0026 07000001
	s_clause 0x3                                               // 000000072824: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 000000072828: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000072830: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072838: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000072840: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000072848: 360200FF 000003FF
	s_clause 0x1                                               // 000000072850: BF850001
	s_load_b64 s[14:15], s[0:1], null                          // 000000072854: F4040380 F8000000
	s_load_b32 s0, s[0:1], 0x18                                // 00000007285C: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072864: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007286C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000072874: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 00000007287C: BF8700D3
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000072880: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000072888: BF89FC07
	s_ashr_i32 s1, s5, 31                                      // 00000007288C: 86019F05
	s_lshl_b32 s2, s6, 4                                       // 000000072890: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 000000072894: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000007289C: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 0000000728A4: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000728AC: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 0000000728B0: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 0000000728B8: D7000304 0002080C
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000728C0: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 0000000728C8: D5207C05 000D000D
	s_lshl_b32 s3, s7, 1                                       // 0000000728D0: 84038107
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000728D4: D73C0002 00020483
	s_lshl_b32 s0, s0, 1                                       // 0000000728DC: 84008100
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 0000000728E0: BF870232
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000728E4: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s14, v0                           // 0000000728EC: D7006A00 0002000E
	v_add_co_ci_u32_e32 v1, vcc_lo, s15, v1, vcc_lo            // 0000000728F4: 4002020F
	v_add_co_u32 v2, vcc_lo, s14, v2                           // 0000000728F8: D7006A02 0002040E
	v_add_co_ci_u32_e32 v3, vcc_lo, s15, v3, vcc_lo            // 000000072900: 4006060F
	v_add_co_u32 v4, vcc_lo, s14, v4                           // 000000072904: D7006A04 0002080E
	v_add_co_ci_u32_e32 v5, vcc_lo, s15, v5, vcc_lo            // 00000007290C: 400A0A0F
	s_waitcnt vmcnt(1)                                         // 000000072910: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 000000072914: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000007291C: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000072920: BF8903F7
	v_add_nc_u32_e32 v10, s0, v7                               // 000000072924: 4A140E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072928: BF870193
	v_add_nc_u32_e32 v8, s2, v8                                // 00000007292C: 4A101002
	v_add_nc_u32_e32 v9, s3, v6                                // 000000072930: 4A120C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072934: BF870092
	v_add_co_u32 v6, s0, v8, s5                                // 000000072938: D7000006 00000B08
	v_add_co_ci_u32_e64 v7, null, 0, s1, s0                    // 000000072940: D5207C07 00000280
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072948: BF870093
	v_add_co_u32 v8, s0, v9, s5                                // 00000007294C: D7000008 00000B09
	v_add_co_ci_u32_e64 v9, null, 0, s1, s0                    // 000000072954: D5207C09 00000280
	v_add_co_u32 v10, s0, v10, s5                              // 00000007295C: D700000A 00000B0A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000072964: BF870001
	v_add_co_ci_u32_e64 v11, null, 0, s1, s0                   // 000000072968: D5207C0B 00000280
	s_clause 0x2                                               // 000000072970: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000072974: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007297C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000072984: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007298C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072990: BFB60003
	s_endpgm                                                   // 000000072994: BFB00000
add_long_get_global_size_x_symend:
	.long 0xbf800000                                           // 000000072998: BF800000
	.long 0xbf800000                                           // 00000007299C: BF800000
	.long 0xbf800000                                           // 0000000729A0: BF800000
	.long 0xbf800000                                           // 0000000729A4: BF800000
	.long 0xbf800000                                           // 0000000729A8: BF800000
	.long 0xbf800000                                           // 0000000729AC: BF800000
	.long 0xbf800000                                           // 0000000729B0: BF800000
	.long 0xbf800000                                           // 0000000729B4: BF800000
	.long 0xbf800000                                           // 0000000729B8: BF800000
	.long 0xbf800000                                           // 0000000729BC: BF800000
	.long 0xbf800000                                           // 0000000729C0: BF800000
	.long 0xbf800000                                           // 0000000729C4: BF800000
	.long 0xbf800000                                           // 0000000729C8: BF800000
	.long 0xbf800000                                           // 0000000729CC: BF800000
	.long 0xbf800000                                           // 0000000729D0: BF800000
	.long 0xbf800000                                           // 0000000729D4: BF800000
	.long 0xbf800000                                           // 0000000729D8: BF800000
	.long 0xbf800000                                           // 0000000729DC: BF800000
	.long 0xbf800000                                           // 0000000729E0: BF800000
	.long 0xbf800000                                           // 0000000729E4: BF800000
	.long 0xbf800000                                           // 0000000729E8: BF800000
	.long 0xbf800000                                           // 0000000729EC: BF800000
	.long 0xbf800000                                           // 0000000729F0: BF800000
	.long 0xbf800000                                           // 0000000729F4: BF800000
	.long 0xbf800000                                           // 0000000729F8: BF800000
	.long 0xbf800000                                           // 0000000729FC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_x,@function
	.size	add_long_get_num_groups_x, add_long_get_num_groups_x_symend-add_long_get_num_groups_x
add_long_get_num_groups_x:
	v_mov_b32_e32 v1, 0                                        // 000000072A00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000072A04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000072A0C: BEA10080
	s_clause 0x1                                               // 000000072A10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000072A14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000072A1C: DC4A0026 07000001
	s_clause 0x2                                               // 000000072A24: BF850002
	s_load_b32 s5, s[0:1], null                                // 000000072A28: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072A30: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000072A38: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000072A40: 360200FF 000003FF
	s_clause 0x1                                               // 000000072A48: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000072A4C: F4080300 F8000008
	s_load_b32 s16, s[0:1], 0x18                               // 000000072A54: F4000400 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072A5C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000072A64: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000072A6C: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000072A74: BF870133
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000072A78: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000072A80: BF89FC07
	s_ashr_i32 s4, s5, 31                                      // 000000072A84: 86049F05
	v_add_co_u32 v0, s0, s8, v1                                // 000000072A88: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000072A90: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 000000072A94: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 000000072A9C: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 000000072AA4: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000072AAC: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072AB0: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 000000072AB8: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000072AC0: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 000000072AC8: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072AD0: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 000000072AD4: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 000000072ADC: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072AE4: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 000000072AE8: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 000000072AF0: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000072AF8: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 000000072B00: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000072B04: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000072B08: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000072B0C: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000072B10: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000072B14: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 000000072B18: 8201800E
	s_add_u32 s2, s1, s5                                       // 000000072B1C: 80020501
	s_addc_u32 s3, 0, s4                                       // 000000072B20: 82030480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000072B24: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000072B28: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000072B2C: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 000000072B30: 8201800F
	v_mov_b32_e32 v7, s3                                       // 000000072B34: 7E0E0203
	s_add_u32 s0, s1, s5                                       // 000000072B38: 80000501
	s_addc_u32 s1, 0, s4                                       // 000000072B3C: 82010480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000072B40: BF07806A
	v_mov_b32_e32 v6, s2                                       // 000000072B44: 7E0C0202
	s_addc_u32 s2, s16, 0                                      // 000000072B48: 82028010
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 000000072B4C: CA100001 09080000
	s_add_u32 s0, s2, s5                                       // 000000072B54: 80000502
	s_addc_u32 s1, 0, s4                                       // 000000072B58: 82010480
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000072B5C: D7006A04 0002080C
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 000000072B64: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000072B6C: 400A0A0D
	s_clause 0x2                                               // 000000072B70: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000072B74: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000072B7C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000072B84: DC6E0000 007C0A04
	s_nop 0                                                    // 000000072B8C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072B90: BFB60003
	s_endpgm                                                   // 000000072B94: BFB00000
add_long_get_num_groups_x_symend:
	.long 0xbf800000                                           // 000000072B98: BF800000
	.long 0xbf800000                                           // 000000072B9C: BF800000
	.long 0xbf800000                                           // 000000072BA0: BF800000
	.long 0xbf800000                                           // 000000072BA4: BF800000
	.long 0xbf800000                                           // 000000072BA8: BF800000
	.long 0xbf800000                                           // 000000072BAC: BF800000
	.long 0xbf800000                                           // 000000072BB0: BF800000
	.long 0xbf800000                                           // 000000072BB4: BF800000
	.long 0xbf800000                                           // 000000072BB8: BF800000
	.long 0xbf800000                                           // 000000072BBC: BF800000
	.long 0xbf800000                                           // 000000072BC0: BF800000
	.long 0xbf800000                                           // 000000072BC4: BF800000
	.long 0xbf800000                                           // 000000072BC8: BF800000
	.long 0xbf800000                                           // 000000072BCC: BF800000
	.long 0xbf800000                                           // 000000072BD0: BF800000
	.long 0xbf800000                                           // 000000072BD4: BF800000
	.long 0xbf800000                                           // 000000072BD8: BF800000
	.long 0xbf800000                                           // 000000072BDC: BF800000
	.long 0xbf800000                                           // 000000072BE0: BF800000
	.long 0xbf800000                                           // 000000072BE4: BF800000
	.long 0xbf800000                                           // 000000072BE8: BF800000
	.long 0xbf800000                                           // 000000072BEC: BF800000
	.long 0xbf800000                                           // 000000072BF0: BF800000
	.long 0xbf800000                                           // 000000072BF4: BF800000
	.long 0xbf800000                                           // 000000072BF8: BF800000
	.long 0xbf800000                                           // 000000072BFC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_x,@function
	.size	add_long_get_work_dim_x, add_long_get_work_dim_x_symend-add_long_get_work_dim_x
add_long_get_work_dim_x:
	s_clause 0x3                                               // 000000072C00: BF850003
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000072C04: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x50                                // 000000072C0C: F40000C0 F8000050
	s_load_b32 s6, s[0:1], null                                // 000000072C14: F4000180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072C1C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 1, v0                                // 000000072C24: D6560000 04010202
	s_mov_b32 s33, 0                                           // 000000072C2C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072C30: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072C34: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000072C38: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000072C40: D5207C01 00090005
	s_and_b32 s2, s3, 0xffff                                   // 000000072C48: 8B02FF03 0000FFFF
	s_ashr_i32 s3, s6, 31                                      // 000000072C50: 86039F06
	s_add_u32 s2, s2, s6                                       // 000000072C54: 80020602
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000072C58: BF8704A1
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072C5C: D73C0000 00020083
	s_addc_u32 s3, 0, s3                                       // 000000072C64: 82030380
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 000000072C68: CA100002 02020003
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072C70: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000072C74: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000072C7C: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 000000072C80: DC6E0000 007C0200
	s_nop 0                                                    // 000000072C88: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072C8C: BFB60003
	s_endpgm                                                   // 000000072C90: BFB00000
add_long_get_work_dim_x_symend:
	.long 0xbf800000                                           // 000000072C94: BF800000
	.long 0xbf800000                                           // 000000072C98: BF800000
	.long 0xbf800000                                           // 000000072C9C: BF800000
	.long 0xbf800000                                           // 000000072CA0: BF800000
	.long 0xbf800000                                           // 000000072CA4: BF800000
	.long 0xbf800000                                           // 000000072CA8: BF800000
	.long 0xbf800000                                           // 000000072CAC: BF800000
	.long 0xbf800000                                           // 000000072CB0: BF800000
	.long 0xbf800000                                           // 000000072CB4: BF800000
	.long 0xbf800000                                           // 000000072CB8: BF800000
	.long 0xbf800000                                           // 000000072CBC: BF800000
	.long 0xbf800000                                           // 000000072CC0: BF800000
	.long 0xbf800000                                           // 000000072CC4: BF800000
	.long 0xbf800000                                           // 000000072CC8: BF800000
	.long 0xbf800000                                           // 000000072CCC: BF800000
	.long 0xbf800000                                           // 000000072CD0: BF800000
	.long 0xbf800000                                           // 000000072CD4: BF800000
	.long 0xbf800000                                           // 000000072CD8: BF800000
	.long 0xbf800000                                           // 000000072CDC: BF800000
	.long 0xbf800000                                           // 000000072CE0: BF800000
	.long 0xbf800000                                           // 000000072CE4: BF800000
	.long 0xbf800000                                           // 000000072CE8: BF800000
	.long 0xbf800000                                           // 000000072CEC: BF800000
	.long 0xbf800000                                           // 000000072CF0: BF800000
	.long 0xbf800000                                           // 000000072CF4: BF800000
	.long 0xbf800000                                           // 000000072CF8: BF800000
	.long 0xbf800000                                           // 000000072CFC: BF800000

	.p2align	8
	.type	add_long_x_get_global_offset,@function
	.size	add_long_x_get_global_offset, add_long_x_get_global_offset_symend-add_long_x_get_global_offset
add_long_x_get_global_offset:
	s_clause 0x3                                               // 000000072D00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072D04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 000000072D0C: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 000000072D14: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000072D1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000072D24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000072D2C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000072D34: D6100003 02292900
	s_mov_b32 s33, 0                                           // 000000072D3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072D40: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000072D44: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000072D4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000072D54: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v3                                // 000000072D58: D6560004 040D0204
	s_waitcnt lgkmcnt(0)                                       // 000000072D60: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 000000072D64: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1)                            // 000000072D6C: BF870001
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000072D70: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000072D78: D7000202 0002040A
	s_ashr_i32 s4, s5, 31                                      // 000000072D80: 86049F05
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000072D84: D5207C03 0009000B
	s_add_u32 s2, s8, s5                                       // 000000072D8C: 80020508
	v_add_co_u32 v4, s8, s0, v4                                // 000000072D90: D7000804 00020800
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072D98: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s8                    // 000000072DA0: D5207C05 00210001
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000072DA8: D73C0002 00020483
	s_addc_u32 s3, s9, s4                                      // 000000072DB0: 82030409
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072DB4: BF870193
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000072DB8: D7006A00 00020006
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000072DC0: D73C0004 00020883
	v_mov_b32_e32 v7, s3                                       // 000000072DC8: 7E0E0203
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000072DCC: 40020207
	v_mov_b32_e32 v6, s2                                       // 000000072DD0: 7E0C0202
	s_add_u32 s2, s10, s5                                      // 000000072DD4: 8002050A
	s_addc_u32 s3, s11, s4                                     // 000000072DD8: 8203040B
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000072DDC: D7006A02 00020406
	s_add_u32 s0, s0, s5                                       // 000000072DE4: 80000500
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000072DE8: 40060607
	s_addc_u32 s1, s1, s4                                      // 000000072DEC: 82010401
	v_mov_b32_e32 v9, s3                                       // 000000072DF0: 7E120203
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000072DF4: D7006A04 00020806
	v_dual_mov_b32 v8, s2 :: v_dual_mov_b32 v11, s1            // 000000072DFC: CA100002 080A0001
	v_mov_b32_e32 v10, s0                                      // 000000072E04: 7E140200
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000072E08: 400A0A07
	s_clause 0x2                                               // 000000072E0C: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000072E10: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000072E18: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000072E20: DC6E0000 007C0A04
	s_nop 0                                                    // 000000072E28: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072E2C: BFB60003
	s_endpgm                                                   // 000000072E30: BFB00000
add_long_x_get_global_offset_symend:
	.long 0xbf800000                                           // 000000072E34: BF800000
	.long 0xbf800000                                           // 000000072E38: BF800000
	.long 0xbf800000                                           // 000000072E3C: BF800000
	.long 0xbf800000                                           // 000000072E40: BF800000
	.long 0xbf800000                                           // 000000072E44: BF800000
	.long 0xbf800000                                           // 000000072E48: BF800000
	.long 0xbf800000                                           // 000000072E4C: BF800000
	.long 0xbf800000                                           // 000000072E50: BF800000
	.long 0xbf800000                                           // 000000072E54: BF800000
	.long 0xbf800000                                           // 000000072E58: BF800000
	.long 0xbf800000                                           // 000000072E5C: BF800000
	.long 0xbf800000                                           // 000000072E60: BF800000
	.long 0xbf800000                                           // 000000072E64: BF800000
	.long 0xbf800000                                           // 000000072E68: BF800000
	.long 0xbf800000                                           // 000000072E6C: BF800000
	.long 0xbf800000                                           // 000000072E70: BF800000
	.long 0xbf800000                                           // 000000072E74: BF800000
	.long 0xbf800000                                           // 000000072E78: BF800000
	.long 0xbf800000                                           // 000000072E7C: BF800000
	.long 0xbf800000                                           // 000000072E80: BF800000
	.long 0xbf800000                                           // 000000072E84: BF800000
	.long 0xbf800000                                           // 000000072E88: BF800000
	.long 0xbf800000                                           // 000000072E8C: BF800000
	.long 0xbf800000                                           // 000000072E90: BF800000
	.long 0xbf800000                                           // 000000072E94: BF800000
	.long 0xbf800000                                           // 000000072E98: BF800000
	.long 0xbf800000                                           // 000000072E9C: BF800000
	.long 0xbf800000                                           // 000000072EA0: BF800000
	.long 0xbf800000                                           // 000000072EA4: BF800000
	.long 0xbf800000                                           // 000000072EA8: BF800000
	.long 0xbf800000                                           // 000000072EAC: BF800000
	.long 0xbf800000                                           // 000000072EB0: BF800000
	.long 0xbf800000                                           // 000000072EB4: BF800000
	.long 0xbf800000                                           // 000000072EB8: BF800000
	.long 0xbf800000                                           // 000000072EBC: BF800000
	.long 0xbf800000                                           // 000000072EC0: BF800000
	.long 0xbf800000                                           // 000000072EC4: BF800000
	.long 0xbf800000                                           // 000000072EC8: BF800000
	.long 0xbf800000                                           // 000000072ECC: BF800000
	.long 0xbf800000                                           // 000000072ED0: BF800000
	.long 0xbf800000                                           // 000000072ED4: BF800000
	.long 0xbf800000                                           // 000000072ED8: BF800000
	.long 0xbf800000                                           // 000000072EDC: BF800000
	.long 0xbf800000                                           // 000000072EE0: BF800000
	.long 0xbf800000                                           // 000000072EE4: BF800000
	.long 0xbf800000                                           // 000000072EE8: BF800000
	.long 0xbf800000                                           // 000000072EEC: BF800000
	.long 0xbf800000                                           // 000000072EF0: BF800000
	.long 0xbf800000                                           // 000000072EF4: BF800000
	.long 0xbf800000                                           // 000000072EF8: BF800000
	.long 0xbf800000                                           // 000000072EFC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_get_global_offset,@function
	.size	add_long_get_global_offset_get_global_offset, add_long_get_global_offset_get_global_offset_symend-add_long_get_global_offset_get_global_offset
add_long_get_global_offset_get_global_offset:
	s_clause 0x1                                               // 000000072F00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072F04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000072F0C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000072F14: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000072F1C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072F24: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072F2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000072F34: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000072F38: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000072F40: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000072F48: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000072F4C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000072F54: BF89FC07
	v_add_co_u32 v0, s4, s8, v1                                // 000000072F58: D7000400 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000072F60: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s4                    // 000000072F64: D5207C01 00110009
	v_add_co_u32 v2, s4, s10, v2                               // 000000072F6C: D7000402 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s4                   // 000000072F74: D5207C03 0011000B
	v_add_co_u32 v4, s4, s6, v4                                // 000000072F7C: D7000404 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000072F84: BF870224
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072F88: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s4                    // 000000072F90: D5207C05 00110007
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000072F98: D73C0002 00020483
	s_lshl_b64 s[2:3], s[8:9], 1                               // 000000072FA0: 84828108
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072FA4: BF870193
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000072FA8: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000072FB0: D73C0004 00020883
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v6, s2             // 000000072FB8: CA100003 07060002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000072FC0: 40020201
	s_lshl_b64 s[2:3], s[10:11], 1                             // 000000072FC4: 8482810A
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000072FC8: D7006A02 00020400
	v_mov_b32_e32 v9, s3                                       // 000000072FD0: 7E120203
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000072FD4: 40060601
	v_mov_b32_e32 v8, s2                                       // 000000072FD8: 7E100202
	s_lshl_b64 s[2:3], s[6:7], 1                               // 000000072FDC: 84828106
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000072FE0: D7006A04 00020800
	v_dual_mov_b32 v11, s3 :: v_dual_mov_b32 v10, s2           // 000000072FE8: CA100003 0B0A0002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000072FF0: 400A0A01
	s_clause 0x2                                               // 000000072FF4: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000072FF8: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000073000: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000073008: DC6E0000 007C0A04
	s_nop 0                                                    // 000000073010: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073014: BFB60003
	s_endpgm                                                   // 000000073018: BFB00000
add_long_get_global_offset_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007301C: BF800000
	.long 0xbf800000                                           // 000000073020: BF800000
	.long 0xbf800000                                           // 000000073024: BF800000
	.long 0xbf800000                                           // 000000073028: BF800000
	.long 0xbf800000                                           // 00000007302C: BF800000
	.long 0xbf800000                                           // 000000073030: BF800000
	.long 0xbf800000                                           // 000000073034: BF800000
	.long 0xbf800000                                           // 000000073038: BF800000
	.long 0xbf800000                                           // 00000007303C: BF800000
	.long 0xbf800000                                           // 000000073040: BF800000
	.long 0xbf800000                                           // 000000073044: BF800000
	.long 0xbf800000                                           // 000000073048: BF800000
	.long 0xbf800000                                           // 00000007304C: BF800000
	.long 0xbf800000                                           // 000000073050: BF800000
	.long 0xbf800000                                           // 000000073054: BF800000
	.long 0xbf800000                                           // 000000073058: BF800000
	.long 0xbf800000                                           // 00000007305C: BF800000
	.long 0xbf800000                                           // 000000073060: BF800000
	.long 0xbf800000                                           // 000000073064: BF800000
	.long 0xbf800000                                           // 000000073068: BF800000
	.long 0xbf800000                                           // 00000007306C: BF800000
	.long 0xbf800000                                           // 000000073070: BF800000
	.long 0xbf800000                                           // 000000073074: BF800000
	.long 0xbf800000                                           // 000000073078: BF800000
	.long 0xbf800000                                           // 00000007307C: BF800000
	.long 0xbf800000                                           // 000000073080: BF800000
	.long 0xbf800000                                           // 000000073084: BF800000
	.long 0xbf800000                                           // 000000073088: BF800000
	.long 0xbf800000                                           // 00000007308C: BF800000
	.long 0xbf800000                                           // 000000073090: BF800000
	.long 0xbf800000                                           // 000000073094: BF800000
	.long 0xbf800000                                           // 000000073098: BF800000
	.long 0xbf800000                                           // 00000007309C: BF800000
	.long 0xbf800000                                           // 0000000730A0: BF800000
	.long 0xbf800000                                           // 0000000730A4: BF800000
	.long 0xbf800000                                           // 0000000730A8: BF800000
	.long 0xbf800000                                           // 0000000730AC: BF800000
	.long 0xbf800000                                           // 0000000730B0: BF800000
	.long 0xbf800000                                           // 0000000730B4: BF800000
	.long 0xbf800000                                           // 0000000730B8: BF800000
	.long 0xbf800000                                           // 0000000730BC: BF800000
	.long 0xbf800000                                           // 0000000730C0: BF800000
	.long 0xbf800000                                           // 0000000730C4: BF800000
	.long 0xbf800000                                           // 0000000730C8: BF800000
	.long 0xbf800000                                           // 0000000730CC: BF800000
	.long 0xbf800000                                           // 0000000730D0: BF800000
	.long 0xbf800000                                           // 0000000730D4: BF800000
	.long 0xbf800000                                           // 0000000730D8: BF800000
	.long 0xbf800000                                           // 0000000730DC: BF800000
	.long 0xbf800000                                           // 0000000730E0: BF800000
	.long 0xbf800000                                           // 0000000730E4: BF800000
	.long 0xbf800000                                           // 0000000730E8: BF800000
	.long 0xbf800000                                           // 0000000730EC: BF800000
	.long 0xbf800000                                           // 0000000730F0: BF800000
	.long 0xbf800000                                           // 0000000730F4: BF800000
	.long 0xbf800000                                           // 0000000730F8: BF800000
	.long 0xbf800000                                           // 0000000730FC: BF800000

	.p2align	8
	.type	add_long_get_local_id_get_global_offset,@function
	.size	add_long_get_local_id_get_global_offset, add_long_get_local_id_get_global_offset_symend-add_long_get_local_id_get_global_offset
add_long_get_local_id_get_global_offset:
	s_clause 0x2                                               // 000000073100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073104: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007310C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000073114: F4040000 F8000048
	v_and_b32_e32 v2, 0x3ff, v0                                // 00000007311C: 360400FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000073124: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007312C: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000073134: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073138: BF870193
	v_lshl_or_b32 v0, s2, 3, v2                                // 00000007313C: D6560000 04090602
	v_lshl_or_b32 v4, s3, 2, v6                                // 000000073144: D6560004 04190403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007314C: BF8701A3
	v_lshl_or_b32 v8, s4, 1, v10                               // 000000073150: D6560008 04290204
	s_waitcnt lgkmcnt(0)                                       // 000000073158: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 00000007315C: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000073164: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000073168: D5207C01 00090009
	v_add_co_u32 v2, s2, s8, v2                                // 000000073170: D7000202 00020408
	v_add_co_ci_u32_e64 v3, null, s9, 0, s2                    // 000000073178: D5207C03 00090009
	v_add_co_u32 v4, s2, s10, v4                               // 000000073180: D7000204 0002080A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000073188: BF8700A1
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 00000007318C: D5207C05 0009000B
	v_add_co_u32 v6, s2, s10, v6                               // 000000073194: D7000206 00020C0A
	v_add_co_ci_u32_e64 v7, null, s11, 0, s2                   // 00000007319C: D5207C07 0009000B
	v_add_co_u32 v8, s2, s0, v8                                // 0000000731A4: D7000208 00021000
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000731AC: D73C0000 00020083
	v_add_co_ci_u32_e64 v9, null, s1, 0, s2                    // 0000000731B4: D5207C09 00090001
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000731BC: D73C0004 00020883
	v_add_co_u32 v10, s0, s0, v10                              // 0000000731C4: D700000A 00021400
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000731CC: BF870214
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000731D0: D7006A00 00020006
	v_lshlrev_b64 v[8:9], 3, v[8:9]                            // 0000000731D8: D73C0008 00021083
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000731E0: 40020207
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000731E4: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000731EC: 400A0A07
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000731F0: BF870004
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 0000000731F4: D7006A08 00021006
	v_add_co_ci_u32_e64 v11, null, s1, 0, s0                   // 0000000731FC: D5207C0B 00010001
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 000000073204: 40121207
	s_clause 0x2                                               // 000000073208: BF850002
	global_store_b64 v[0:1], v[2:3], off                       // 00000007320C: DC6E0000 007C0200
	global_store_b64 v[4:5], v[6:7], off                       // 000000073214: DC6E0000 007C0604
	global_store_b64 v[8:9], v[10:11], off                     // 00000007321C: DC6E0000 007C0A08
	s_nop 0                                                    // 000000073224: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073228: BFB60003
	s_endpgm                                                   // 00000007322C: BFB00000
add_long_get_local_id_get_global_offset_symend:
	.long 0xbf800000                                           // 000000073230: BF800000
	.long 0xbf800000                                           // 000000073234: BF800000
	.long 0xbf800000                                           // 000000073238: BF800000
	.long 0xbf800000                                           // 00000007323C: BF800000
	.long 0xbf800000                                           // 000000073240: BF800000
	.long 0xbf800000                                           // 000000073244: BF800000
	.long 0xbf800000                                           // 000000073248: BF800000
	.long 0xbf800000                                           // 00000007324C: BF800000
	.long 0xbf800000                                           // 000000073250: BF800000
	.long 0xbf800000                                           // 000000073254: BF800000
	.long 0xbf800000                                           // 000000073258: BF800000
	.long 0xbf800000                                           // 00000007325C: BF800000
	.long 0xbf800000                                           // 000000073260: BF800000
	.long 0xbf800000                                           // 000000073264: BF800000
	.long 0xbf800000                                           // 000000073268: BF800000
	.long 0xbf800000                                           // 00000007326C: BF800000
	.long 0xbf800000                                           // 000000073270: BF800000
	.long 0xbf800000                                           // 000000073274: BF800000
	.long 0xbf800000                                           // 000000073278: BF800000
	.long 0xbf800000                                           // 00000007327C: BF800000
	.long 0xbf800000                                           // 000000073280: BF800000
	.long 0xbf800000                                           // 000000073284: BF800000
	.long 0xbf800000                                           // 000000073288: BF800000
	.long 0xbf800000                                           // 00000007328C: BF800000
	.long 0xbf800000                                           // 000000073290: BF800000
	.long 0xbf800000                                           // 000000073294: BF800000
	.long 0xbf800000                                           // 000000073298: BF800000
	.long 0xbf800000                                           // 00000007329C: BF800000
	.long 0xbf800000                                           // 0000000732A0: BF800000
	.long 0xbf800000                                           // 0000000732A4: BF800000
	.long 0xbf800000                                           // 0000000732A8: BF800000
	.long 0xbf800000                                           // 0000000732AC: BF800000
	.long 0xbf800000                                           // 0000000732B0: BF800000
	.long 0xbf800000                                           // 0000000732B4: BF800000
	.long 0xbf800000                                           // 0000000732B8: BF800000
	.long 0xbf800000                                           // 0000000732BC: BF800000
	.long 0xbf800000                                           // 0000000732C0: BF800000
	.long 0xbf800000                                           // 0000000732C4: BF800000
	.long 0xbf800000                                           // 0000000732C8: BF800000
	.long 0xbf800000                                           // 0000000732CC: BF800000
	.long 0xbf800000                                           // 0000000732D0: BF800000
	.long 0xbf800000                                           // 0000000732D4: BF800000
	.long 0xbf800000                                           // 0000000732D8: BF800000
	.long 0xbf800000                                           // 0000000732DC: BF800000
	.long 0xbf800000                                           // 0000000732E0: BF800000
	.long 0xbf800000                                           // 0000000732E4: BF800000
	.long 0xbf800000                                           // 0000000732E8: BF800000
	.long 0xbf800000                                           // 0000000732EC: BF800000
	.long 0xbf800000                                           // 0000000732F0: BF800000
	.long 0xbf800000                                           // 0000000732F4: BF800000
	.long 0xbf800000                                           // 0000000732F8: BF800000
	.long 0xbf800000                                           // 0000000732FC: BF800000

	.p2align	8
	.type	add_long_get_group_id_get_global_offset,@function
	.size	add_long_get_group_id_get_global_offset, add_long_get_group_id_get_global_offset_symend-add_long_get_group_id_get_global_offset
add_long_get_group_id_get_global_offset:
	s_clause 0x1                                               // 000000073300: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073304: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007330C: F4040180 F8000048
	v_bfe_u32 v2, v0, 10, 10                                   // 000000073314: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007331C: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000073324: BEA10080
	s_delay_alu instid0(VALU_DEP_1)                            // 000000073328: BF870001
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007332C: D6560002 04090803
	s_waitcnt lgkmcnt(0)                                       // 000000073334: BF89FC07
	s_add_u32 s12, s8, s2                                      // 000000073338: 800C0208
	s_addc_u32 s13, s9, 0                                      // 00000007333C: 820D8009
	v_dual_mov_b32 v6, s12 :: v_dual_and_b32 v1, 0x3ff, v0     // 000000073340: CA24000C 060000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007334C: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000073354: BF870112
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000073358: D6560001 04050202
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000073360: D6560004 04010204
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073368: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000007336C: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000073374: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007337C: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000073384: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000073388: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000073390: D7000204 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000073398: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 0000000733A0: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000733A8: BF8701B4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000733AC: D73C0002 00020483
	s_add_u32 s2, s10, s3                                      // 0000000733B4: 8002030A
	s_addc_u32 s3, s11, 0                                      // 0000000733B8: 8203800B
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000733BC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000733C4: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000733CC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000733D0: D7006A02 00020400
	v_mov_b32_e32 v9, s3                                       // 0000000733D8: 7E120203
	v_dual_mov_b32 v7, s13 :: v_dual_mov_b32 v8, s2            // 0000000733DC: CA10000D 07080002
	s_add_u32 s2, s6, s4                                       // 0000000733E4: 80020406
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000733E8: 40060601
	s_addc_u32 s3, s7, 0                                       // 0000000733EC: 82038007
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000733F0: D7006A04 00020800
	v_mov_b32_e32 v11, s3                                      // 0000000733F8: 7E160203
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000733FC: 400A0A01
	v_mov_b32_e32 v10, s2                                      // 000000073400: 7E140202
	s_clause 0x2                                               // 000000073404: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000073408: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000073410: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000073418: DC6E0000 007C0A04
	s_nop 0                                                    // 000000073420: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073424: BFB60003
	s_endpgm                                                   // 000000073428: BFB00000
add_long_get_group_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007342C: BF800000
	.long 0xbf800000                                           // 000000073430: BF800000
	.long 0xbf800000                                           // 000000073434: BF800000
	.long 0xbf800000                                           // 000000073438: BF800000
	.long 0xbf800000                                           // 00000007343C: BF800000
	.long 0xbf800000                                           // 000000073440: BF800000
	.long 0xbf800000                                           // 000000073444: BF800000
	.long 0xbf800000                                           // 000000073448: BF800000
	.long 0xbf800000                                           // 00000007344C: BF800000
	.long 0xbf800000                                           // 000000073450: BF800000
	.long 0xbf800000                                           // 000000073454: BF800000
	.long 0xbf800000                                           // 000000073458: BF800000
	.long 0xbf800000                                           // 00000007345C: BF800000
	.long 0xbf800000                                           // 000000073460: BF800000
	.long 0xbf800000                                           // 000000073464: BF800000
	.long 0xbf800000                                           // 000000073468: BF800000
	.long 0xbf800000                                           // 00000007346C: BF800000
	.long 0xbf800000                                           // 000000073470: BF800000
	.long 0xbf800000                                           // 000000073474: BF800000
	.long 0xbf800000                                           // 000000073478: BF800000
	.long 0xbf800000                                           // 00000007347C: BF800000
	.long 0xbf800000                                           // 000000073480: BF800000
	.long 0xbf800000                                           // 000000073484: BF800000
	.long 0xbf800000                                           // 000000073488: BF800000
	.long 0xbf800000                                           // 00000007348C: BF800000
	.long 0xbf800000                                           // 000000073490: BF800000
	.long 0xbf800000                                           // 000000073494: BF800000
	.long 0xbf800000                                           // 000000073498: BF800000
	.long 0xbf800000                                           // 00000007349C: BF800000
	.long 0xbf800000                                           // 0000000734A0: BF800000
	.long 0xbf800000                                           // 0000000734A4: BF800000
	.long 0xbf800000                                           // 0000000734A8: BF800000
	.long 0xbf800000                                           // 0000000734AC: BF800000
	.long 0xbf800000                                           // 0000000734B0: BF800000
	.long 0xbf800000                                           // 0000000734B4: BF800000
	.long 0xbf800000                                           // 0000000734B8: BF800000
	.long 0xbf800000                                           // 0000000734BC: BF800000
	.long 0xbf800000                                           // 0000000734C0: BF800000
	.long 0xbf800000                                           // 0000000734C4: BF800000
	.long 0xbf800000                                           // 0000000734C8: BF800000
	.long 0xbf800000                                           // 0000000734CC: BF800000
	.long 0xbf800000                                           // 0000000734D0: BF800000
	.long 0xbf800000                                           // 0000000734D4: BF800000
	.long 0xbf800000                                           // 0000000734D8: BF800000
	.long 0xbf800000                                           // 0000000734DC: BF800000
	.long 0xbf800000                                           // 0000000734E0: BF800000
	.long 0xbf800000                                           // 0000000734E4: BF800000
	.long 0xbf800000                                           // 0000000734E8: BF800000
	.long 0xbf800000                                           // 0000000734EC: BF800000
	.long 0xbf800000                                           // 0000000734F0: BF800000
	.long 0xbf800000                                           // 0000000734F4: BF800000
	.long 0xbf800000                                           // 0000000734F8: BF800000
	.long 0xbf800000                                           // 0000000734FC: BF800000

	.p2align	8
	.type	add_long_get_local_size_get_global_offset,@function
	.size	add_long_get_local_size_get_global_offset, add_long_get_local_size_get_global_offset_symend-add_long_get_local_size_get_global_offset
add_long_get_local_size_get_global_offset:
	s_clause 0x1                                               // 000000073500: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073504: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007350C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000073514: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007351C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000073524: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007352C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000073534: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000073538: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000073540: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000073548: BF8701A3
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007354C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000073554: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 000000073558: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000073560: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000073564: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000007356C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000073574: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000007357C: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4)                            // 000000073584: BF870004
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000073588: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000073590: D5207C05 000D0007
	s_add_u32 s2, s8, 2                                        // 000000073598: 80028208
	s_addc_u32 s3, s9, 0                                       // 00000007359C: 82038009
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000735A0: D73C0002 00020483
	v_mov_b32_e32 v7, s3                                       // 0000000735A8: 7E0E0203
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000735AC: D7006A00 00020000
	v_mov_b32_e32 v6, s2                                       // 0000000735B4: 7E0C0202
	s_add_u32 s2, s10, 2                                       // 0000000735B8: 8002820A
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000735BC: D73C0004 00020883
	s_addc_u32 s3, s11, 0                                      // 0000000735C4: 8203800B
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000735C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000735CC: D7006A02 00020400
	v_dual_mov_b32 v9, s3 :: v_dual_mov_b32 v8, s2             // 0000000735D4: CA100003 09080002
	s_add_u32 s2, s6, 4                                        // 0000000735DC: 80028406
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000735E0: 40060601
	s_addc_u32 s3, s7, 0                                       // 0000000735E4: 82038007
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000735E8: D7006A04 00020800
	v_dual_mov_b32 v11, s3 :: v_dual_mov_b32 v10, s2           // 0000000735F0: CA100003 0B0A0002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000735F8: 400A0A01
	s_clause 0x2                                               // 0000000735FC: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000073600: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000073608: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000073610: DC6E0000 007C0A04
	s_nop 0                                                    // 000000073618: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007361C: BFB60003
	s_endpgm                                                   // 000000073620: BFB00000
add_long_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000073624: BF800000
	.long 0xbf800000                                           // 000000073628: BF800000
	.long 0xbf800000                                           // 00000007362C: BF800000
	.long 0xbf800000                                           // 000000073630: BF800000
	.long 0xbf800000                                           // 000000073634: BF800000
	.long 0xbf800000                                           // 000000073638: BF800000
	.long 0xbf800000                                           // 00000007363C: BF800000
	.long 0xbf800000                                           // 000000073640: BF800000
	.long 0xbf800000                                           // 000000073644: BF800000
	.long 0xbf800000                                           // 000000073648: BF800000
	.long 0xbf800000                                           // 00000007364C: BF800000
	.long 0xbf800000                                           // 000000073650: BF800000
	.long 0xbf800000                                           // 000000073654: BF800000
	.long 0xbf800000                                           // 000000073658: BF800000
	.long 0xbf800000                                           // 00000007365C: BF800000
	.long 0xbf800000                                           // 000000073660: BF800000
	.long 0xbf800000                                           // 000000073664: BF800000
	.long 0xbf800000                                           // 000000073668: BF800000
	.long 0xbf800000                                           // 00000007366C: BF800000
	.long 0xbf800000                                           // 000000073670: BF800000
	.long 0xbf800000                                           // 000000073674: BF800000
	.long 0xbf800000                                           // 000000073678: BF800000
	.long 0xbf800000                                           // 00000007367C: BF800000
	.long 0xbf800000                                           // 000000073680: BF800000
	.long 0xbf800000                                           // 000000073684: BF800000
	.long 0xbf800000                                           // 000000073688: BF800000
	.long 0xbf800000                                           // 00000007368C: BF800000
	.long 0xbf800000                                           // 000000073690: BF800000
	.long 0xbf800000                                           // 000000073694: BF800000
	.long 0xbf800000                                           // 000000073698: BF800000
	.long 0xbf800000                                           // 00000007369C: BF800000
	.long 0xbf800000                                           // 0000000736A0: BF800000
	.long 0xbf800000                                           // 0000000736A4: BF800000
	.long 0xbf800000                                           // 0000000736A8: BF800000
	.long 0xbf800000                                           // 0000000736AC: BF800000
	.long 0xbf800000                                           // 0000000736B0: BF800000
	.long 0xbf800000                                           // 0000000736B4: BF800000
	.long 0xbf800000                                           // 0000000736B8: BF800000
	.long 0xbf800000                                           // 0000000736BC: BF800000
	.long 0xbf800000                                           // 0000000736C0: BF800000
	.long 0xbf800000                                           // 0000000736C4: BF800000
	.long 0xbf800000                                           // 0000000736C8: BF800000
	.long 0xbf800000                                           // 0000000736CC: BF800000
	.long 0xbf800000                                           // 0000000736D0: BF800000
	.long 0xbf800000                                           // 0000000736D4: BF800000
	.long 0xbf800000                                           // 0000000736D8: BF800000
	.long 0xbf800000                                           // 0000000736DC: BF800000
	.long 0xbf800000                                           // 0000000736E0: BF800000
	.long 0xbf800000                                           // 0000000736E4: BF800000
	.long 0xbf800000                                           // 0000000736E8: BF800000
	.long 0xbf800000                                           // 0000000736EC: BF800000
	.long 0xbf800000                                           // 0000000736F0: BF800000
	.long 0xbf800000                                           // 0000000736F4: BF800000
	.long 0xbf800000                                           // 0000000736F8: BF800000
	.long 0xbf800000                                           // 0000000736FC: BF800000

	.p2align	8
	.type	add_long_get_global_id_get_global_offset,@function
	.size	add_long_get_global_id_get_global_offset, add_long_get_global_id_get_global_offset_symend-add_long_get_global_id_get_global_offset
add_long_get_global_id_get_global_offset:
	s_clause 0x1                                               // 000000073700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007370C: F4040180 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000073714: CA240080 020000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000073720: F4040000 F8000048
	v_bfe_u32 v4, v0, 10, 10                                   // 000000073728: D6100004 02291500
	v_bfe_u32 v6, v0, 20, 10                                   // 000000073730: D6100006 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000073738: BF8701A3
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007373C: D6560001 04050202
	s_mov_b32 s33, 0                                           // 000000073744: BEA10080
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000073748: D6560004 04110203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073750: BF870193
	v_lshl_or_b32 v8, s4, 2, v6                                // 000000073754: D6560008 04190404
	v_lshlrev_b64 v[2:3], 3, v[1:2]                            // 00000007375C: D73C0002 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000073764: BF89FC07
	s_lshl_b64 s[2:3], s[8:9], 1                               // 000000073768: 84828108
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007376C: BF8700A1
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000073770: D7006A02 00020406
	v_add_co_u32 v0, s2, s2, v1                                // 000000073778: D7000200 00020202
	v_add_co_ci_u32_e64 v1, null, s3, 0, s2                    // 000000073780: D5207C01 00090003
	v_add_co_u32 v4, s2, s10, v4                               // 000000073788: D7000204 0002080A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000073790: BF8701A1
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 000000073794: D5207C05 0009000B
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 00000007379C: 40060607
	v_add_co_u32 v6, vcc_lo, v4, s10                           // 0000000737A0: D7006A06 00001504
	v_add_co_u32 v8, s2, s0, v8                                // 0000000737A8: D7000208 00021000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 0000000737B0: BF870134
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v5, vcc_lo            // 0000000737B4: 400E0A0B
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000737B8: D73C0004 00020883
	v_add_co_ci_u32_e64 v9, null, s1, 0, s2                    // 0000000737C0: D5207C09 00090001
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000737C8: D7006A04 00020806
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000737D0: BF870212
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 0000000737D4: D73C000A 00021083
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000737DC: 400A0A07
	v_add_co_u32 v8, vcc_lo, v8, s0                            // 0000000737E0: D7006A08 00000108
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 0000000737E8: 40121201
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000737EC: BF870004
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000737F0: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 0000000737F8: 40161607
	s_clause 0x2                                               // 0000000737FC: BF850002
	global_store_b64 v[2:3], v[0:1], off                       // 000000073800: DC6E0000 007C0002
	global_store_b64 v[4:5], v[6:7], off                       // 000000073808: DC6E0000 007C0604
	global_store_b64 v[10:11], v[8:9], off                     // 000000073810: DC6E0000 007C080A
	s_nop 0                                                    // 000000073818: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007381C: BFB60003
	s_endpgm                                                   // 000000073820: BFB00000
add_long_get_global_id_get_global_offset_symend:
	.long 0xbf800000                                           // 000000073824: BF800000
	.long 0xbf800000                                           // 000000073828: BF800000
	.long 0xbf800000                                           // 00000007382C: BF800000
	.long 0xbf800000                                           // 000000073830: BF800000
	.long 0xbf800000                                           // 000000073834: BF800000
	.long 0xbf800000                                           // 000000073838: BF800000
	.long 0xbf800000                                           // 00000007383C: BF800000
	.long 0xbf800000                                           // 000000073840: BF800000
	.long 0xbf800000                                           // 000000073844: BF800000
	.long 0xbf800000                                           // 000000073848: BF800000
	.long 0xbf800000                                           // 00000007384C: BF800000
	.long 0xbf800000                                           // 000000073850: BF800000
	.long 0xbf800000                                           // 000000073854: BF800000
	.long 0xbf800000                                           // 000000073858: BF800000
	.long 0xbf800000                                           // 00000007385C: BF800000
	.long 0xbf800000                                           // 000000073860: BF800000
	.long 0xbf800000                                           // 000000073864: BF800000
	.long 0xbf800000                                           // 000000073868: BF800000
	.long 0xbf800000                                           // 00000007386C: BF800000
	.long 0xbf800000                                           // 000000073870: BF800000
	.long 0xbf800000                                           // 000000073874: BF800000
	.long 0xbf800000                                           // 000000073878: BF800000
	.long 0xbf800000                                           // 00000007387C: BF800000
	.long 0xbf800000                                           // 000000073880: BF800000
	.long 0xbf800000                                           // 000000073884: BF800000
	.long 0xbf800000                                           // 000000073888: BF800000
	.long 0xbf800000                                           // 00000007388C: BF800000
	.long 0xbf800000                                           // 000000073890: BF800000
	.long 0xbf800000                                           // 000000073894: BF800000
	.long 0xbf800000                                           // 000000073898: BF800000
	.long 0xbf800000                                           // 00000007389C: BF800000
	.long 0xbf800000                                           // 0000000738A0: BF800000
	.long 0xbf800000                                           // 0000000738A4: BF800000
	.long 0xbf800000                                           // 0000000738A8: BF800000
	.long 0xbf800000                                           // 0000000738AC: BF800000
	.long 0xbf800000                                           // 0000000738B0: BF800000
	.long 0xbf800000                                           // 0000000738B4: BF800000
	.long 0xbf800000                                           // 0000000738B8: BF800000
	.long 0xbf800000                                           // 0000000738BC: BF800000
	.long 0xbf800000                                           // 0000000738C0: BF800000
	.long 0xbf800000                                           // 0000000738C4: BF800000
	.long 0xbf800000                                           // 0000000738C8: BF800000
	.long 0xbf800000                                           // 0000000738CC: BF800000
	.long 0xbf800000                                           // 0000000738D0: BF800000
	.long 0xbf800000                                           // 0000000738D4: BF800000
	.long 0xbf800000                                           // 0000000738D8: BF800000
	.long 0xbf800000                                           // 0000000738DC: BF800000
	.long 0xbf800000                                           // 0000000738E0: BF800000
	.long 0xbf800000                                           // 0000000738E4: BF800000
	.long 0xbf800000                                           // 0000000738E8: BF800000
	.long 0xbf800000                                           // 0000000738EC: BF800000
	.long 0xbf800000                                           // 0000000738F0: BF800000
	.long 0xbf800000                                           // 0000000738F4: BF800000
	.long 0xbf800000                                           // 0000000738F8: BF800000
	.long 0xbf800000                                           // 0000000738FC: BF800000

	.p2align	8
	.type	add_long_get_global_size_get_global_offset,@function
	.size	add_long_get_global_size_get_global_offset, add_long_get_global_size_get_global_offset_symend-add_long_get_global_size_get_global_offset
add_long_get_global_size_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 000000073900: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000073904: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007390C: BEA10080
	s_clause 0x1                                               // 000000073910: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000073914: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007391C: DC4A0026 07000001
	s_clause 0x2                                               // 000000073924: BF850002
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000073928: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073930: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000073938: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000073940: 360200FF 000003FF
	s_clause 0x1                                               // 000000073948: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 00000007394C: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 000000073954: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007395C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000073964: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007396C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000073974: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000073978: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000073980: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 000000073984: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 000000073988: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000073990: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000073994: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000007399C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 0000000739A4: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 0000000739AC: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000739B4: BF870224
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000739B8: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 0000000739C0: D5207C05 000D000D
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000739C8: D73C0002 00020483
	s_lshl_b32 s3, s7, 1                                       // 0000000739D0: 84038107
	s_lshl_b32 s4, s5, 1                                       // 0000000739D4: 84048105
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000739D8: BF870002
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000739DC: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000739E4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000739EC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000739F0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000739F8: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000739FC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000073A04: 400A0A01
	s_waitcnt vmcnt(1)                                         // 000000073A08: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 000000073A0C: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000073A14: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000073A18: BF8903F7
	v_add_nc_u32_e32 v10, s4, v7                               // 000000073A1C: 4A140E04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073A20: BF870193
	v_add_nc_u32_e32 v8, s2, v8                                // 000000073A24: 4A101002
	v_add_nc_u32_e32 v9, s3, v6                                // 000000073A28: 4A120C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073A2C: BF870092
	v_add_co_u32 v6, s0, s8, v8                                // 000000073A30: D7000006 00021008
	v_add_co_ci_u32_e64 v7, null, s9, 0, s0                    // 000000073A38: D5207C07 00010009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073A40: BF870093
	v_add_co_u32 v8, s0, s10, v9                               // 000000073A44: D7000008 0002120A
	v_add_co_ci_u32_e64 v9, null, s11, 0, s0                   // 000000073A4C: D5207C09 0001000B
	v_add_co_u32 v10, s0, s12, v10                             // 000000073A54: D700000A 0002140C
	s_delay_alu instid0(VALU_DEP_1)                            // 000000073A5C: BF870001
	v_add_co_ci_u32_e64 v11, null, s13, 0, s0                  // 000000073A60: D5207C0B 0001000D
	s_clause 0x2                                               // 000000073A68: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000073A6C: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000073A74: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000073A7C: DC6E0000 007C0A04
	s_nop 0                                                    // 000000073A84: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073A88: BFB60003
	s_endpgm                                                   // 000000073A8C: BFB00000
add_long_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000073A90: BF800000
	.long 0xbf800000                                           // 000000073A94: BF800000
	.long 0xbf800000                                           // 000000073A98: BF800000
	.long 0xbf800000                                           // 000000073A9C: BF800000
	.long 0xbf800000                                           // 000000073AA0: BF800000
	.long 0xbf800000                                           // 000000073AA4: BF800000
	.long 0xbf800000                                           // 000000073AA8: BF800000
	.long 0xbf800000                                           // 000000073AAC: BF800000
	.long 0xbf800000                                           // 000000073AB0: BF800000
	.long 0xbf800000                                           // 000000073AB4: BF800000
	.long 0xbf800000                                           // 000000073AB8: BF800000
	.long 0xbf800000                                           // 000000073ABC: BF800000
	.long 0xbf800000                                           // 000000073AC0: BF800000
	.long 0xbf800000                                           // 000000073AC4: BF800000
	.long 0xbf800000                                           // 000000073AC8: BF800000
	.long 0xbf800000                                           // 000000073ACC: BF800000
	.long 0xbf800000                                           // 000000073AD0: BF800000
	.long 0xbf800000                                           // 000000073AD4: BF800000
	.long 0xbf800000                                           // 000000073AD8: BF800000
	.long 0xbf800000                                           // 000000073ADC: BF800000
	.long 0xbf800000                                           // 000000073AE0: BF800000
	.long 0xbf800000                                           // 000000073AE4: BF800000
	.long 0xbf800000                                           // 000000073AE8: BF800000
	.long 0xbf800000                                           // 000000073AEC: BF800000
	.long 0xbf800000                                           // 000000073AF0: BF800000
	.long 0xbf800000                                           // 000000073AF4: BF800000
	.long 0xbf800000                                           // 000000073AF8: BF800000
	.long 0xbf800000                                           // 000000073AFC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_get_global_offset,@function
	.size	add_long_get_num_groups_get_global_offset, add_long_get_num_groups_get_global_offset_symend-add_long_get_num_groups_get_global_offset
add_long_get_num_groups_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 000000073B00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000073B04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000073B0C: BEA10080
	s_clause 0x1                                               // 000000073B10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000073B14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000073B1C: DC4A0026 07000001
	s_clause 0x1                                               // 000000073B24: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073B28: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000073B30: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000073B38: 360200FF 000003FF
	s_clause 0x1                                               // 000000073B40: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000073B44: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 000000073B4C: F4000140 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073B54: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000073B5C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000073B64: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000073B6C: BF870123
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000073B70: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000073B78: BF89FC07
	v_add_co_u32 v0, s0, s8, v1                                // 000000073B7C: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000073B84: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 000000073B88: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 000000073B90: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 000000073B98: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000073BA0: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000073BA4: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 000000073BAC: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000073BB4: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 000000073BBC: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073BC4: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 000000073BC8: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 000000073BD0: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073BD8: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 000000073BDC: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 000000073BE4: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000073BEC: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 000000073BF4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000073BF8: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000073BFC: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000073C00: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000073C04: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000073C08: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 000000073C0C: 8201800E
	s_add_u32 s2, s8, s1                                       // 000000073C10: 80020108
	s_addc_u32 s3, s9, 0                                       // 000000073C14: 82038009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000073C18: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000073C1C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000073C20: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 000000073C24: 8201800F
	v_mov_b32_e32 v7, s3                                       // 000000073C28: 7E0E0203
	s_add_u32 s0, s10, s1                                      // 000000073C2C: 8000010A
	s_addc_u32 s1, s11, 0                                      // 000000073C30: 8201800B
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000073C34: BF07806A
	v_mov_b32_e32 v6, s2                                       // 000000073C38: 7E0C0202
	s_addc_u32 s2, s5, 0                                       // 000000073C3C: 82028005
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 000000073C40: CA100001 09080000
	s_add_u32 s0, s6, s2                                       // 000000073C48: 80000206
	s_addc_u32 s1, s7, 0                                       // 000000073C4C: 82018007
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000073C50: D7006A04 0002080C
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 000000073C58: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000073C60: 400A0A0D
	s_clause 0x2                                               // 000000073C64: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000073C68: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000073C70: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000073C78: DC6E0000 007C0A04
	s_nop 0                                                    // 000000073C80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073C84: BFB60003
	s_endpgm                                                   // 000000073C88: BFB00000
add_long_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 000000073C8C: BF800000
	.long 0xbf800000                                           // 000000073C90: BF800000
	.long 0xbf800000                                           // 000000073C94: BF800000
	.long 0xbf800000                                           // 000000073C98: BF800000
	.long 0xbf800000                                           // 000000073C9C: BF800000
	.long 0xbf800000                                           // 000000073CA0: BF800000
	.long 0xbf800000                                           // 000000073CA4: BF800000
	.long 0xbf800000                                           // 000000073CA8: BF800000
	.long 0xbf800000                                           // 000000073CAC: BF800000
	.long 0xbf800000                                           // 000000073CB0: BF800000
	.long 0xbf800000                                           // 000000073CB4: BF800000
	.long 0xbf800000                                           // 000000073CB8: BF800000
	.long 0xbf800000                                           // 000000073CBC: BF800000
	.long 0xbf800000                                           // 000000073CC0: BF800000
	.long 0xbf800000                                           // 000000073CC4: BF800000
	.long 0xbf800000                                           // 000000073CC8: BF800000
	.long 0xbf800000                                           // 000000073CCC: BF800000
	.long 0xbf800000                                           // 000000073CD0: BF800000
	.long 0xbf800000                                           // 000000073CD4: BF800000
	.long 0xbf800000                                           // 000000073CD8: BF800000
	.long 0xbf800000                                           // 000000073CDC: BF800000
	.long 0xbf800000                                           // 000000073CE0: BF800000
	.long 0xbf800000                                           // 000000073CE4: BF800000
	.long 0xbf800000                                           // 000000073CE8: BF800000
	.long 0xbf800000                                           // 000000073CEC: BF800000
	.long 0xbf800000                                           // 000000073CF0: BF800000
	.long 0xbf800000                                           // 000000073CF4: BF800000
	.long 0xbf800000                                           // 000000073CF8: BF800000
	.long 0xbf800000                                           // 000000073CFC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_get_global_offset,@function
	.size	add_long_get_work_dim_get_global_offset, add_long_get_work_dim_get_global_offset_symend-add_long_get_work_dim_get_global_offset
add_long_get_work_dim_get_global_offset:
	s_clause 0x3                                               // 000000073D00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073D04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 000000073D0C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000073D14: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000073D1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000073D24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000073D2C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000073D34: D6100003 02292900
	s_mov_b32 s33, 0                                           // 000000073D3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073D40: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000073D44: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000073D4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000073D54: BF8701A3
	v_lshl_or_b32 v4, s4, 2, v3                                // 000000073D58: D6560004 040D0404
	s_waitcnt lgkmcnt(0)                                       // 000000073D60: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 000000073D64: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000073D6C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000073D70: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000073D78: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000073D80: D5207C03 0009000B
	s_and_b32 s4, s5, 0xffff                                   // 000000073D88: 8B04FF05 0000FFFF
	v_add_co_u32 v4, s5, s0, v4                                // 000000073D90: D7000504 00020800
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000073D98: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s5                    // 000000073DA0: D5207C05 00150001
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000073DA8: D73C0002 00020483
	s_add_u32 s2, s8, s4                                       // 000000073DB0: 80020408
	s_addc_u32 s3, s9, 0                                       // 000000073DB4: 82038009
	s_delay_alu instid0(VALU_DEP_3)                            // 000000073DB8: BF870003
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000073DBC: D7006A00 00020006
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000073DC4: D73C0004 00020883
	v_mov_b32_e32 v7, s3                                       // 000000073DCC: 7E0E0203
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000073DD0: 40020207
	v_mov_b32_e32 v6, s2                                       // 000000073DD4: 7E0C0202
	s_add_u32 s2, s10, s4                                      // 000000073DD8: 8002040A
	s_addc_u32 s3, s11, 0                                      // 000000073DDC: 8203800B
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000073DE0: D7006A02 00020406
	s_add_u32 s0, s0, s4                                       // 000000073DE8: 80000400
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000073DEC: 40060607
	s_addc_u32 s1, s1, 0                                       // 000000073DF0: 82018001
	v_mov_b32_e32 v9, s3                                       // 000000073DF4: 7E120203
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000073DF8: D7006A04 00020806
	v_dual_mov_b32 v8, s2 :: v_dual_mov_b32 v11, s1            // 000000073E00: CA100002 080A0001
	v_mov_b32_e32 v10, s0                                      // 000000073E08: 7E140200
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000073E0C: 400A0A07
	s_clause 0x2                                               // 000000073E10: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000073E14: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000073E1C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000073E24: DC6E0000 007C0A04
	s_nop 0                                                    // 000000073E2C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073E30: BFB60003
	s_endpgm                                                   // 000000073E34: BFB00000
add_long_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 000000073E38: BF800000
	.long 0xbf800000                                           // 000000073E3C: BF800000
	.long 0xbf800000                                           // 000000073E40: BF800000
	.long 0xbf800000                                           // 000000073E44: BF800000
	.long 0xbf800000                                           // 000000073E48: BF800000
	.long 0xbf800000                                           // 000000073E4C: BF800000
	.long 0xbf800000                                           // 000000073E50: BF800000
	.long 0xbf800000                                           // 000000073E54: BF800000
	.long 0xbf800000                                           // 000000073E58: BF800000
	.long 0xbf800000                                           // 000000073E5C: BF800000
	.long 0xbf800000                                           // 000000073E60: BF800000
	.long 0xbf800000                                           // 000000073E64: BF800000
	.long 0xbf800000                                           // 000000073E68: BF800000
	.long 0xbf800000                                           // 000000073E6C: BF800000
	.long 0xbf800000                                           // 000000073E70: BF800000
	.long 0xbf800000                                           // 000000073E74: BF800000
	.long 0xbf800000                                           // 000000073E78: BF800000
	.long 0xbf800000                                           // 000000073E7C: BF800000
	.long 0xbf800000                                           // 000000073E80: BF800000
	.long 0xbf800000                                           // 000000073E84: BF800000
	.long 0xbf800000                                           // 000000073E88: BF800000
	.long 0xbf800000                                           // 000000073E8C: BF800000
	.long 0xbf800000                                           // 000000073E90: BF800000
	.long 0xbf800000                                           // 000000073E94: BF800000
	.long 0xbf800000                                           // 000000073E98: BF800000
	.long 0xbf800000                                           // 000000073E9C: BF800000
	.long 0xbf800000                                           // 000000073EA0: BF800000
	.long 0xbf800000                                           // 000000073EA4: BF800000
	.long 0xbf800000                                           // 000000073EA8: BF800000
	.long 0xbf800000                                           // 000000073EAC: BF800000
	.long 0xbf800000                                           // 000000073EB0: BF800000
	.long 0xbf800000                                           // 000000073EB4: BF800000
	.long 0xbf800000                                           // 000000073EB8: BF800000
	.long 0xbf800000                                           // 000000073EBC: BF800000
	.long 0xbf800000                                           // 000000073EC0: BF800000
	.long 0xbf800000                                           // 000000073EC4: BF800000
	.long 0xbf800000                                           // 000000073EC8: BF800000
	.long 0xbf800000                                           // 000000073ECC: BF800000
	.long 0xbf800000                                           // 000000073ED0: BF800000
	.long 0xbf800000                                           // 000000073ED4: BF800000
	.long 0xbf800000                                           // 000000073ED8: BF800000
	.long 0xbf800000                                           // 000000073EDC: BF800000
	.long 0xbf800000                                           // 000000073EE0: BF800000
	.long 0xbf800000                                           // 000000073EE4: BF800000
	.long 0xbf800000                                           // 000000073EE8: BF800000
	.long 0xbf800000                                           // 000000073EEC: BF800000
	.long 0xbf800000                                           // 000000073EF0: BF800000
	.long 0xbf800000                                           // 000000073EF4: BF800000
	.long 0xbf800000                                           // 000000073EF8: BF800000
	.long 0xbf800000                                           // 000000073EFC: BF800000

	.p2align	8
	.type	add_long_x_get_local_id,@function
	.size	add_long_x_get_local_id, add_long_x_get_local_id_symend-add_long_x_get_local_id
add_long_x_get_local_id:
	s_clause 0x3                                               // 000000073F00: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 000000073F04: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073F0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 000000073F14: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000073F1C: F4040000 F8000048
	v_and_b32_e32 v4, 0x3ff, v0                                // 000000073F24: 360800FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000073F2C: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000073F34: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000073F3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073F40: BF870193
	v_lshl_or_b32 v0, s2, 4, v4                                // 000000073F44: D6560000 04110802
	v_lshl_or_b32 v2, s3, 1, v6                                // 000000073F4C: D6560002 04190203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000073F54: BF8700C3
	v_lshl_or_b32 v8, s4, 1, v10                               // 000000073F58: D6560008 04290204
	s_waitcnt lgkmcnt(0)                                       // 000000073F60: BF89FC07
	s_ashr_i32 s2, s5, 31                                      // 000000073F64: 86029F05
	v_add_co_u32 v0, s3, s8, v0                                // 000000073F68: D7000300 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000073F70: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000073F78: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000073F80: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000073F84: D5207C03 000D000B
	v_add_co_u32 v8, s0, s0, v8                                // 000000073F8C: D7000008 00021000
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000073F94: D73C0000 00020083
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 000000073F9C: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000073FA4: BF870224
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000073FA8: D73C0002 00020483
	v_add_co_u32 v4, s3, s5, v4                                // 000000073FB0: D7000304 00020805
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000073FB8: D7006A00 00020006
	s_delay_alu instid0(VALU_DEP_4)                            // 000000073FC0: BF870004
	v_lshlrev_b64 v[8:9], 3, v[8:9]                            // 000000073FC4: D73C0008 00021083
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000073FCC: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000073FD0: D7006A02 00020406
	v_add_co_ci_u32_e64 v5, null, s2, 0, s3                    // 000000073FD8: D5207C05 000D0002
	v_add_co_u32 v6, s3, s5, v6                                // 000000073FE0: D7000306 00020C05
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000073FE8: 40060607
	v_add_co_u32 v10, s0, s5, v10                              // 000000073FEC: D700000A 00021405
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 000000073FF4: D7006A08 00021006
	v_add_co_ci_u32_e64 v7, null, s2, 0, s3                    // 000000073FFC: D5207C07 000D0002
	v_add_co_ci_u32_e64 v11, null, s2, 0, s0                   // 000000074004: D5207C0B 00010002
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 00000007400C: 40121207
	s_clause 0x2                                               // 000000074010: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000074014: DC6E0000 007C0400
	global_store_b64 v[2:3], v[6:7], off                       // 00000007401C: DC6E0000 007C0602
	global_store_b64 v[8:9], v[10:11], off                     // 000000074024: DC6E0000 007C0A08
	s_nop 0                                                    // 00000007402C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074030: BFB60003
	s_endpgm                                                   // 000000074034: BFB00000
add_long_x_get_local_id_symend:
	.long 0xbf800000                                           // 000000074038: BF800000
	.long 0xbf800000                                           // 00000007403C: BF800000
	.long 0xbf800000                                           // 000000074040: BF800000
	.long 0xbf800000                                           // 000000074044: BF800000
	.long 0xbf800000                                           // 000000074048: BF800000
	.long 0xbf800000                                           // 00000007404C: BF800000
	.long 0xbf800000                                           // 000000074050: BF800000
	.long 0xbf800000                                           // 000000074054: BF800000
	.long 0xbf800000                                           // 000000074058: BF800000
	.long 0xbf800000                                           // 00000007405C: BF800000
	.long 0xbf800000                                           // 000000074060: BF800000
	.long 0xbf800000                                           // 000000074064: BF800000
	.long 0xbf800000                                           // 000000074068: BF800000
	.long 0xbf800000                                           // 00000007406C: BF800000
	.long 0xbf800000                                           // 000000074070: BF800000
	.long 0xbf800000                                           // 000000074074: BF800000
	.long 0xbf800000                                           // 000000074078: BF800000
	.long 0xbf800000                                           // 00000007407C: BF800000
	.long 0xbf800000                                           // 000000074080: BF800000
	.long 0xbf800000                                           // 000000074084: BF800000
	.long 0xbf800000                                           // 000000074088: BF800000
	.long 0xbf800000                                           // 00000007408C: BF800000
	.long 0xbf800000                                           // 000000074090: BF800000
	.long 0xbf800000                                           // 000000074094: BF800000
	.long 0xbf800000                                           // 000000074098: BF800000
	.long 0xbf800000                                           // 00000007409C: BF800000
	.long 0xbf800000                                           // 0000000740A0: BF800000
	.long 0xbf800000                                           // 0000000740A4: BF800000
	.long 0xbf800000                                           // 0000000740A8: BF800000
	.long 0xbf800000                                           // 0000000740AC: BF800000
	.long 0xbf800000                                           // 0000000740B0: BF800000
	.long 0xbf800000                                           // 0000000740B4: BF800000
	.long 0xbf800000                                           // 0000000740B8: BF800000
	.long 0xbf800000                                           // 0000000740BC: BF800000
	.long 0xbf800000                                           // 0000000740C0: BF800000
	.long 0xbf800000                                           // 0000000740C4: BF800000
	.long 0xbf800000                                           // 0000000740C8: BF800000
	.long 0xbf800000                                           // 0000000740CC: BF800000
	.long 0xbf800000                                           // 0000000740D0: BF800000
	.long 0xbf800000                                           // 0000000740D4: BF800000
	.long 0xbf800000                                           // 0000000740D8: BF800000
	.long 0xbf800000                                           // 0000000740DC: BF800000
	.long 0xbf800000                                           // 0000000740E0: BF800000
	.long 0xbf800000                                           // 0000000740E4: BF800000
	.long 0xbf800000                                           // 0000000740E8: BF800000
	.long 0xbf800000                                           // 0000000740EC: BF800000
	.long 0xbf800000                                           // 0000000740F0: BF800000
	.long 0xbf800000                                           // 0000000740F4: BF800000
	.long 0xbf800000                                           // 0000000740F8: BF800000
	.long 0xbf800000                                           // 0000000740FC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_get_local_id,@function
	.size	add_long_get_global_offset_get_local_id, add_long_get_global_offset_get_local_id_symend-add_long_get_global_offset_get_local_id
add_long_get_global_offset_get_local_id:
	s_clause 0x2                                               // 000000074100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074104: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007410C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000074114: F4040000 F8000048
	v_and_b32_e32 v2, 0x3ff, v0                                // 00000007411C: 360400FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000074124: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007412C: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000074134: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000074138: BF870193
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000007413C: D6560000 04090202
	v_lshl_or_b32 v4, s3, 4, v6                                // 000000074144: D6560004 04190803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007414C: BF8701A3
	v_lshl_or_b32 v8, s4, 1, v10                               // 000000074150: D6560008 04290204
	s_waitcnt lgkmcnt(0)                                       // 000000074158: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 00000007415C: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074164: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000074168: D5207C01 00090009
	v_add_co_u32 v2, s2, s8, v2                                // 000000074170: D7000202 00020408
	v_add_co_ci_u32_e64 v3, null, s9, 0, s2                    // 000000074178: D5207C03 00090009
	v_add_co_u32 v4, s2, s10, v4                               // 000000074180: D7000204 0002080A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074188: BF8700A1
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 00000007418C: D5207C05 0009000B
	v_add_co_u32 v6, s2, s10, v6                               // 000000074194: D7000206 00020C0A
	v_add_co_ci_u32_e64 v7, null, s11, 0, s2                   // 00000007419C: D5207C07 0009000B
	v_add_co_u32 v8, s2, s0, v8                                // 0000000741A4: D7000208 00021000
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000741AC: D73C0000 00020083
	v_add_co_ci_u32_e64 v9, null, s1, 0, s2                    // 0000000741B4: D5207C09 00090001
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000741BC: D73C0004 00020883
	v_add_co_u32 v10, s0, s0, v10                              // 0000000741C4: D700000A 00021400
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000741CC: BF870214
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000741D0: D7006A00 00020006
	v_lshlrev_b64 v[8:9], 3, v[8:9]                            // 0000000741D8: D73C0008 00021083
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000741E0: 40020207
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000741E4: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000741EC: 400A0A07
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000741F0: BF870004
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 0000000741F4: D7006A08 00021006
	v_add_co_ci_u32_e64 v11, null, s1, 0, s0                   // 0000000741FC: D5207C0B 00010001
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 000000074204: 40121207
	s_clause 0x2                                               // 000000074208: BF850002
	global_store_b64 v[0:1], v[2:3], off                       // 00000007420C: DC6E0000 007C0200
	global_store_b64 v[4:5], v[6:7], off                       // 000000074214: DC6E0000 007C0604
	global_store_b64 v[8:9], v[10:11], off                     // 00000007421C: DC6E0000 007C0A08
	s_nop 0                                                    // 000000074224: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074228: BFB60003
	s_endpgm                                                   // 00000007422C: BFB00000
add_long_get_global_offset_get_local_id_symend:
	.long 0xbf800000                                           // 000000074230: BF800000
	.long 0xbf800000                                           // 000000074234: BF800000
	.long 0xbf800000                                           // 000000074238: BF800000
	.long 0xbf800000                                           // 00000007423C: BF800000
	.long 0xbf800000                                           // 000000074240: BF800000
	.long 0xbf800000                                           // 000000074244: BF800000
	.long 0xbf800000                                           // 000000074248: BF800000
	.long 0xbf800000                                           // 00000007424C: BF800000
	.long 0xbf800000                                           // 000000074250: BF800000
	.long 0xbf800000                                           // 000000074254: BF800000
	.long 0xbf800000                                           // 000000074258: BF800000
	.long 0xbf800000                                           // 00000007425C: BF800000
	.long 0xbf800000                                           // 000000074260: BF800000
	.long 0xbf800000                                           // 000000074264: BF800000
	.long 0xbf800000                                           // 000000074268: BF800000
	.long 0xbf800000                                           // 00000007426C: BF800000
	.long 0xbf800000                                           // 000000074270: BF800000
	.long 0xbf800000                                           // 000000074274: BF800000
	.long 0xbf800000                                           // 000000074278: BF800000
	.long 0xbf800000                                           // 00000007427C: BF800000
	.long 0xbf800000                                           // 000000074280: BF800000
	.long 0xbf800000                                           // 000000074284: BF800000
	.long 0xbf800000                                           // 000000074288: BF800000
	.long 0xbf800000                                           // 00000007428C: BF800000
	.long 0xbf800000                                           // 000000074290: BF800000
	.long 0xbf800000                                           // 000000074294: BF800000
	.long 0xbf800000                                           // 000000074298: BF800000
	.long 0xbf800000                                           // 00000007429C: BF800000
	.long 0xbf800000                                           // 0000000742A0: BF800000
	.long 0xbf800000                                           // 0000000742A4: BF800000
	.long 0xbf800000                                           // 0000000742A8: BF800000
	.long 0xbf800000                                           // 0000000742AC: BF800000
	.long 0xbf800000                                           // 0000000742B0: BF800000
	.long 0xbf800000                                           // 0000000742B4: BF800000
	.long 0xbf800000                                           // 0000000742B8: BF800000
	.long 0xbf800000                                           // 0000000742BC: BF800000
	.long 0xbf800000                                           // 0000000742C0: BF800000
	.long 0xbf800000                                           // 0000000742C4: BF800000
	.long 0xbf800000                                           // 0000000742C8: BF800000
	.long 0xbf800000                                           // 0000000742CC: BF800000
	.long 0xbf800000                                           // 0000000742D0: BF800000
	.long 0xbf800000                                           // 0000000742D4: BF800000
	.long 0xbf800000                                           // 0000000742D8: BF800000
	.long 0xbf800000                                           // 0000000742DC: BF800000
	.long 0xbf800000                                           // 0000000742E0: BF800000
	.long 0xbf800000                                           // 0000000742E4: BF800000
	.long 0xbf800000                                           // 0000000742E8: BF800000
	.long 0xbf800000                                           // 0000000742EC: BF800000
	.long 0xbf800000                                           // 0000000742F0: BF800000
	.long 0xbf800000                                           // 0000000742F4: BF800000
	.long 0xbf800000                                           // 0000000742F8: BF800000
	.long 0xbf800000                                           // 0000000742FC: BF800000

	.p2align	8
	.type	add_long_get_local_id_get_local_id,@function
	.size	add_long_get_local_id_get_local_id, add_long_get_local_id_get_local_id_symend-add_long_get_local_id_get_local_id
add_long_get_local_id_get_local_id:
	s_clause 0x1                                               // 000000074300: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074304: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007430C: F4040180 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000074314: CA240080 010200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000074320: F4040000 F8000008
	v_bfe_u32 v8, v0, 10, 10                                   // 000000074328: D6100008 02291500
	v_bfe_u32 v9, v0, 20, 10                                   // 000000074330: D6100009 02292900
	s_delay_alu instid0(VALU_DEP_3)                            // 000000074338: BF870003
	v_lshl_or_b32 v3, s2, 3, v2                                // 00000007433C: D6560003 04090602
	v_lshlrev_b32_e32 v0, 1, v2                                // 000000074344: 30000481
	s_mov_b32 s33, 0                                           // 000000074348: BEA10080
	v_lshl_or_b32 v4, s3, 2, v8                                // 00000007434C: D6560004 04210403
	v_lshl_or_b32 v6, s4, 1, v9                                // 000000074354: D6560006 04250204
	s_waitcnt lgkmcnt(0)                                       // 00000007435C: BF89FC07
	v_add_co_u32 v2, s2, s8, v3                                // 000000074360: D7000202 00020608
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074368: BF8700A1
	v_add_co_ci_u32_e64 v3, null, s9, 0, s2                    // 00000007436C: D5207C03 00090009
	v_add_co_u32 v4, s2, s10, v4                               // 000000074374: D7000204 0002080A
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 00000007437C: D5207C05 0009000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074384: BF8700A3
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000074388: D73C0002 00020483
	v_add_co_u32 v6, s2, s6, v6                                // 000000074390: D7000206 00020C06
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 000000074398: D5207C07 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000743A0: BF870214
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000743A4: D73C0004 00020883
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000743AC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000743B4: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 0000000743B8: BF8701D3
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000743BC: D7006A04 00020800
	global_store_b64 v[2:3], v[0:1], off                       // 0000000743C4: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000743CC: D73C0002 00020C83
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000743D4: 400A0A01
	v_lshlrev_b32_e32 v0, 1, v8                                // 0000000743D8: 30001081
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000743DC: D7006A02 00020400
	global_store_b64 v[4:5], v[0:1], off                       // 0000000743E4: DC6E0000 007C0004
	v_lshlrev_b32_e32 v0, 1, v9                                // 0000000743EC: 30001281
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000743F0: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000743F4: DC6E0000 007C0002
	s_nop 0                                                    // 0000000743FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074400: BFB60003
	s_endpgm                                                   // 000000074404: BFB00000
add_long_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000074408: BF800000
	.long 0xbf800000                                           // 00000007440C: BF800000
	.long 0xbf800000                                           // 000000074410: BF800000
	.long 0xbf800000                                           // 000000074414: BF800000
	.long 0xbf800000                                           // 000000074418: BF800000
	.long 0xbf800000                                           // 00000007441C: BF800000
	.long 0xbf800000                                           // 000000074420: BF800000
	.long 0xbf800000                                           // 000000074424: BF800000
	.long 0xbf800000                                           // 000000074428: BF800000
	.long 0xbf800000                                           // 00000007442C: BF800000
	.long 0xbf800000                                           // 000000074430: BF800000
	.long 0xbf800000                                           // 000000074434: BF800000
	.long 0xbf800000                                           // 000000074438: BF800000
	.long 0xbf800000                                           // 00000007443C: BF800000
	.long 0xbf800000                                           // 000000074440: BF800000
	.long 0xbf800000                                           // 000000074444: BF800000
	.long 0xbf800000                                           // 000000074448: BF800000
	.long 0xbf800000                                           // 00000007444C: BF800000
	.long 0xbf800000                                           // 000000074450: BF800000
	.long 0xbf800000                                           // 000000074454: BF800000
	.long 0xbf800000                                           // 000000074458: BF800000
	.long 0xbf800000                                           // 00000007445C: BF800000
	.long 0xbf800000                                           // 000000074460: BF800000
	.long 0xbf800000                                           // 000000074464: BF800000
	.long 0xbf800000                                           // 000000074468: BF800000
	.long 0xbf800000                                           // 00000007446C: BF800000
	.long 0xbf800000                                           // 000000074470: BF800000
	.long 0xbf800000                                           // 000000074474: BF800000
	.long 0xbf800000                                           // 000000074478: BF800000
	.long 0xbf800000                                           // 00000007447C: BF800000
	.long 0xbf800000                                           // 000000074480: BF800000
	.long 0xbf800000                                           // 000000074484: BF800000
	.long 0xbf800000                                           // 000000074488: BF800000
	.long 0xbf800000                                           // 00000007448C: BF800000
	.long 0xbf800000                                           // 000000074490: BF800000
	.long 0xbf800000                                           // 000000074494: BF800000
	.long 0xbf800000                                           // 000000074498: BF800000
	.long 0xbf800000                                           // 00000007449C: BF800000
	.long 0xbf800000                                           // 0000000744A0: BF800000
	.long 0xbf800000                                           // 0000000744A4: BF800000
	.long 0xbf800000                                           // 0000000744A8: BF800000
	.long 0xbf800000                                           // 0000000744AC: BF800000
	.long 0xbf800000                                           // 0000000744B0: BF800000
	.long 0xbf800000                                           // 0000000744B4: BF800000
	.long 0xbf800000                                           // 0000000744B8: BF800000
	.long 0xbf800000                                           // 0000000744BC: BF800000
	.long 0xbf800000                                           // 0000000744C0: BF800000
	.long 0xbf800000                                           // 0000000744C4: BF800000
	.long 0xbf800000                                           // 0000000744C8: BF800000
	.long 0xbf800000                                           // 0000000744CC: BF800000
	.long 0xbf800000                                           // 0000000744D0: BF800000
	.long 0xbf800000                                           // 0000000744D4: BF800000
	.long 0xbf800000                                           // 0000000744D8: BF800000
	.long 0xbf800000                                           // 0000000744DC: BF800000
	.long 0xbf800000                                           // 0000000744E0: BF800000
	.long 0xbf800000                                           // 0000000744E4: BF800000
	.long 0xbf800000                                           // 0000000744E8: BF800000
	.long 0xbf800000                                           // 0000000744EC: BF800000
	.long 0xbf800000                                           // 0000000744F0: BF800000
	.long 0xbf800000                                           // 0000000744F4: BF800000
	.long 0xbf800000                                           // 0000000744F8: BF800000
	.long 0xbf800000                                           // 0000000744FC: BF800000

	.p2align	8
	.type	add_long_get_group_id_get_local_id,@function
	.size	add_long_get_group_id_get_local_id, add_long_get_group_id_get_local_id_symend-add_long_get_group_id_get_local_id
add_long_get_group_id_get_local_id:
	s_clause 0x2                                               // 000000074500: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074504: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007450C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000074514: F4040000 F8000048
	v_and_b32_e32 v2, 0x3ff, v0                                // 00000007451C: 360400FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000074524: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007452C: D610000A 02292900
	s_mov_b32 s5, 0                                            // 000000074534: BE850080
	s_mov_b32 s33, 0                                           // 000000074538: BEA10080
	v_lshl_or_b32 v1, s2, 1, v2                                // 00000007453C: D6560001 04090202
	v_lshl_or_b32 v4, s3, 4, v6                                // 000000074544: D6560004 04190803
	v_add_co_u32 v2, s2, v2, s2                                // 00000007454C: D7000202 00000502
	v_lshl_or_b32 v8, s4, 1, v10                               // 000000074554: D6560008 04290204
	v_add_co_ci_u32_e64 v3, null, s5, 0, s2                    // 00000007455C: D5207C03 00090005
	s_waitcnt lgkmcnt(0)                                       // 000000074564: BF89FC07
	v_add_co_u32 v0, s8, s8, v1                                // 000000074568: D7000800 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074570: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 000000074574: D5207C01 00210009
	v_add_co_u32 v4, s2, s10, v4                               // 00000007457C: D7000204 0002080A
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 000000074584: D5207C05 0009000B
	v_add_co_u32 v8, s0, s0, v8                                // 00000007458C: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000074594: BF870224
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000074598: D73C0000 00020083
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 0000000745A0: D5207C09 00010001
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000745A8: D73C0004 00020883
	v_add_co_u32 v6, s2, v6, s3                                // 0000000745B0: D7000206 00000706
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000745B8: BF870214
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000745BC: D7006A00 00020006
	v_lshlrev_b64 v[8:9], 3, v[8:9]                            // 0000000745C4: D73C0008 00021083
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000745CC: 40020207
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000745D0: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000745D8: 400A0A07
	v_add_co_u32 v10, s0, v10, s4                              // 0000000745DC: D700000A 0000090A
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 0000000745E4: D7006A08 00021006
	v_add_co_ci_u32_e64 v7, null, s5, 0, s2                    // 0000000745EC: D5207C07 00090005
	v_add_co_ci_u32_e64 v11, null, s5, 0, s0                   // 0000000745F4: D5207C0B 00010005
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 0000000745FC: 40121207
	s_clause 0x2                                               // 000000074600: BF850002
	global_store_b64 v[0:1], v[2:3], off                       // 000000074604: DC6E0000 007C0200
	global_store_b64 v[4:5], v[6:7], off                       // 00000007460C: DC6E0000 007C0604
	global_store_b64 v[8:9], v[10:11], off                     // 000000074614: DC6E0000 007C0A08
	s_nop 0                                                    // 00000007461C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074620: BFB60003
	s_endpgm                                                   // 000000074624: BFB00000
add_long_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000074628: BF800000
	.long 0xbf800000                                           // 00000007462C: BF800000
	.long 0xbf800000                                           // 000000074630: BF800000
	.long 0xbf800000                                           // 000000074634: BF800000
	.long 0xbf800000                                           // 000000074638: BF800000
	.long 0xbf800000                                           // 00000007463C: BF800000
	.long 0xbf800000                                           // 000000074640: BF800000
	.long 0xbf800000                                           // 000000074644: BF800000
	.long 0xbf800000                                           // 000000074648: BF800000
	.long 0xbf800000                                           // 00000007464C: BF800000
	.long 0xbf800000                                           // 000000074650: BF800000
	.long 0xbf800000                                           // 000000074654: BF800000
	.long 0xbf800000                                           // 000000074658: BF800000
	.long 0xbf800000                                           // 00000007465C: BF800000
	.long 0xbf800000                                           // 000000074660: BF800000
	.long 0xbf800000                                           // 000000074664: BF800000
	.long 0xbf800000                                           // 000000074668: BF800000
	.long 0xbf800000                                           // 00000007466C: BF800000
	.long 0xbf800000                                           // 000000074670: BF800000
	.long 0xbf800000                                           // 000000074674: BF800000
	.long 0xbf800000                                           // 000000074678: BF800000
	.long 0xbf800000                                           // 00000007467C: BF800000
	.long 0xbf800000                                           // 000000074680: BF800000
	.long 0xbf800000                                           // 000000074684: BF800000
	.long 0xbf800000                                           // 000000074688: BF800000
	.long 0xbf800000                                           // 00000007468C: BF800000
	.long 0xbf800000                                           // 000000074690: BF800000
	.long 0xbf800000                                           // 000000074694: BF800000
	.long 0xbf800000                                           // 000000074698: BF800000
	.long 0xbf800000                                           // 00000007469C: BF800000
	.long 0xbf800000                                           // 0000000746A0: BF800000
	.long 0xbf800000                                           // 0000000746A4: BF800000
	.long 0xbf800000                                           // 0000000746A8: BF800000
	.long 0xbf800000                                           // 0000000746AC: BF800000
	.long 0xbf800000                                           // 0000000746B0: BF800000
	.long 0xbf800000                                           // 0000000746B4: BF800000
	.long 0xbf800000                                           // 0000000746B8: BF800000
	.long 0xbf800000                                           // 0000000746BC: BF800000
	.long 0xbf800000                                           // 0000000746C0: BF800000
	.long 0xbf800000                                           // 0000000746C4: BF800000
	.long 0xbf800000                                           // 0000000746C8: BF800000
	.long 0xbf800000                                           // 0000000746CC: BF800000
	.long 0xbf800000                                           // 0000000746D0: BF800000
	.long 0xbf800000                                           // 0000000746D4: BF800000
	.long 0xbf800000                                           // 0000000746D8: BF800000
	.long 0xbf800000                                           // 0000000746DC: BF800000
	.long 0xbf800000                                           // 0000000746E0: BF800000
	.long 0xbf800000                                           // 0000000746E4: BF800000
	.long 0xbf800000                                           // 0000000746E8: BF800000
	.long 0xbf800000                                           // 0000000746EC: BF800000
	.long 0xbf800000                                           // 0000000746F0: BF800000
	.long 0xbf800000                                           // 0000000746F4: BF800000
	.long 0xbf800000                                           // 0000000746F8: BF800000
	.long 0xbf800000                                           // 0000000746FC: BF800000

	.p2align	8
	.type	add_long_get_local_size_get_local_id,@function
	.size	add_long_get_local_size_get_local_id, add_long_get_local_size_get_local_id_symend-add_long_get_local_size_get_local_id
add_long_get_local_size_get_local_id:
	s_clause 0x1                                               // 000000074700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007470C: F4040180 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000074714: CA240080 010200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000074720: F4040000 F8000008
	v_bfe_u32 v8, v0, 10, 10                                   // 000000074728: D6100008 02291500
	v_bfe_u32 v9, v0, 20, 10                                   // 000000074730: D6100009 02292900
	s_delay_alu instid0(VALU_DEP_3)                            // 000000074738: BF870003
	v_lshl_or_b32 v3, s2, 1, v2                                // 00000007473C: D6560003 04090202
	v_or_b32_e32 v0, 2, v2                                     // 000000074744: 38000482
	s_mov_b32 s33, 0                                           // 000000074748: BEA10080
	v_lshl_or_b32 v4, s3, 1, v8                                // 00000007474C: D6560004 04210203
	v_lshl_or_b32 v6, s4, 2, v9                                // 000000074754: D6560006 04250404
	s_waitcnt lgkmcnt(0)                                       // 00000007475C: BF89FC07
	v_add_co_u32 v2, s2, s8, v3                                // 000000074760: D7000202 00020608
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074768: BF8700A1
	v_add_co_ci_u32_e64 v3, null, s9, 0, s2                    // 00000007476C: D5207C03 00090009
	v_add_co_u32 v4, s2, s10, v4                               // 000000074774: D7000204 0002080A
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 00000007477C: D5207C05 0009000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074784: BF8700A3
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000074788: D73C0002 00020483
	v_add_co_u32 v6, s2, s6, v6                                // 000000074790: D7000206 00020C06
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 000000074798: D5207C07 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000747A0: BF870214
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000747A4: D73C0004 00020883
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000747AC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000747B4: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 0000000747B8: BF8701D3
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000747BC: D7006A04 00020800
	global_store_b64 v[2:3], v[0:1], off                       // 0000000747C4: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000747CC: D73C0002 00020C83
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000747D4: 400A0A01
	v_or_b32_e32 v0, 2, v8                                     // 0000000747D8: 38001082
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000747DC: D7006A02 00020400
	global_store_b64 v[4:5], v[0:1], off                       // 0000000747E4: DC6E0000 007C0004
	v_or_b32_e32 v0, 4, v9                                     // 0000000747EC: 38001284
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000747F0: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000747F4: DC6E0000 007C0002
	s_nop 0                                                    // 0000000747FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074800: BFB60003
	s_endpgm                                                   // 000000074804: BFB00000
add_long_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000074808: BF800000
	.long 0xbf800000                                           // 00000007480C: BF800000
	.long 0xbf800000                                           // 000000074810: BF800000
	.long 0xbf800000                                           // 000000074814: BF800000
	.long 0xbf800000                                           // 000000074818: BF800000
	.long 0xbf800000                                           // 00000007481C: BF800000
	.long 0xbf800000                                           // 000000074820: BF800000
	.long 0xbf800000                                           // 000000074824: BF800000
	.long 0xbf800000                                           // 000000074828: BF800000
	.long 0xbf800000                                           // 00000007482C: BF800000
	.long 0xbf800000                                           // 000000074830: BF800000
	.long 0xbf800000                                           // 000000074834: BF800000
	.long 0xbf800000                                           // 000000074838: BF800000
	.long 0xbf800000                                           // 00000007483C: BF800000
	.long 0xbf800000                                           // 000000074840: BF800000
	.long 0xbf800000                                           // 000000074844: BF800000
	.long 0xbf800000                                           // 000000074848: BF800000
	.long 0xbf800000                                           // 00000007484C: BF800000
	.long 0xbf800000                                           // 000000074850: BF800000
	.long 0xbf800000                                           // 000000074854: BF800000
	.long 0xbf800000                                           // 000000074858: BF800000
	.long 0xbf800000                                           // 00000007485C: BF800000
	.long 0xbf800000                                           // 000000074860: BF800000
	.long 0xbf800000                                           // 000000074864: BF800000
	.long 0xbf800000                                           // 000000074868: BF800000
	.long 0xbf800000                                           // 00000007486C: BF800000
	.long 0xbf800000                                           // 000000074870: BF800000
	.long 0xbf800000                                           // 000000074874: BF800000
	.long 0xbf800000                                           // 000000074878: BF800000
	.long 0xbf800000                                           // 00000007487C: BF800000
	.long 0xbf800000                                           // 000000074880: BF800000
	.long 0xbf800000                                           // 000000074884: BF800000
	.long 0xbf800000                                           // 000000074888: BF800000
	.long 0xbf800000                                           // 00000007488C: BF800000
	.long 0xbf800000                                           // 000000074890: BF800000
	.long 0xbf800000                                           // 000000074894: BF800000
	.long 0xbf800000                                           // 000000074898: BF800000
	.long 0xbf800000                                           // 00000007489C: BF800000
	.long 0xbf800000                                           // 0000000748A0: BF800000
	.long 0xbf800000                                           // 0000000748A4: BF800000
	.long 0xbf800000                                           // 0000000748A8: BF800000
	.long 0xbf800000                                           // 0000000748AC: BF800000
	.long 0xbf800000                                           // 0000000748B0: BF800000
	.long 0xbf800000                                           // 0000000748B4: BF800000
	.long 0xbf800000                                           // 0000000748B8: BF800000
	.long 0xbf800000                                           // 0000000748BC: BF800000
	.long 0xbf800000                                           // 0000000748C0: BF800000
	.long 0xbf800000                                           // 0000000748C4: BF800000
	.long 0xbf800000                                           // 0000000748C8: BF800000
	.long 0xbf800000                                           // 0000000748CC: BF800000
	.long 0xbf800000                                           // 0000000748D0: BF800000
	.long 0xbf800000                                           // 0000000748D4: BF800000
	.long 0xbf800000                                           // 0000000748D8: BF800000
	.long 0xbf800000                                           // 0000000748DC: BF800000
	.long 0xbf800000                                           // 0000000748E0: BF800000
	.long 0xbf800000                                           // 0000000748E4: BF800000
	.long 0xbf800000                                           // 0000000748E8: BF800000
	.long 0xbf800000                                           // 0000000748EC: BF800000
	.long 0xbf800000                                           // 0000000748F0: BF800000
	.long 0xbf800000                                           // 0000000748F4: BF800000
	.long 0xbf800000                                           // 0000000748F8: BF800000
	.long 0xbf800000                                           // 0000000748FC: BF800000

	.p2align	8
	.type	add_long_get_global_id_get_local_id,@function
	.size	add_long_get_global_id_get_local_id, add_long_get_global_id_get_local_id_symend-add_long_get_global_id_get_local_id
add_long_get_global_id_get_local_id:
	s_clause 0x1                                               // 000000074900: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074904: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007490C: F4040180 F8000008
	v_and_b32_e32 v4, 0x3ff, v0                                // 000000074914: 360800FF 000003FF
	v_mov_b32_e32 v2, 0                                        // 00000007491C: 7E040280
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000074920: F4040000 F8000048
	v_bfe_u32 v6, v0, 10, 10                                   // 000000074928: D6100006 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000074930: D610000C 02292900
	v_lshl_or_b32 v1, s2, 1, v4                                // 000000074938: D6560001 04110202
	s_mov_b32 s33, 0                                           // 000000074940: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000074944: BF870113
	v_lshl_or_b32 v5, s3, 1, v6                                // 000000074948: D6560005 04190203
	v_lshlrev_b64 v[2:3], 3, v[1:2]                            // 000000074950: D73C0002 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000074958: BF89FC07
	v_add_co_u32 v7, s2, s8, v1                                // 00000007495C: D7000207 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000074964: BF870191
	v_add_co_ci_u32_e64 v8, null, s9, 0, s2                    // 000000074968: D5207C08 00090009
	v_add_co_u32 v0, vcc_lo, s6, v2                            // 000000074970: D7006A00 00020406
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000074978: BF870214
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v3, vcc_lo             // 00000007497C: 40020607
	v_add_co_u32 v2, vcc_lo, v7, v4                            // 000000074980: D7006A02 00020907
	v_add_co_u32 v4, s2, s10, v5                               // 000000074988: D7000204 00020A0A
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v8, vcc_lo              // 000000074990: 40061080
	v_lshl_or_b32 v8, s4, 2, v12                               // 000000074994: D6560008 04310404
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 00000007499C: D5207C05 0009000B
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000749A4: BF870194
	v_add_co_u32 v6, vcc_lo, v4, v6                            // 0000000749A8: D7006A06 00020D04
	v_add_co_u32 v8, s0, s0, v8                                // 0000000749B0: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 0000000749B8: BF870133
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v5, vcc_lo              // 0000000749BC: 400E0A80
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000749C0: D73C0004 00020883
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 0000000749C8: D5207C09 00010001
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000749D0: D7006A04 00020806
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000749D8: BF870212
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 0000000749DC: D73C000A 00021083
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000749E4: 400A0A07
	v_add_co_u32 v8, vcc_lo, v8, v12                           // 0000000749E8: D7006A08 00021908
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v9, vcc_lo              // 0000000749F0: 40121280
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000749F4: BF870004
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000749F8: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000074A00: 40161607
	s_clause 0x2                                               // 000000074A04: BF850002
	global_store_b64 v[0:1], v[2:3], off                       // 000000074A08: DC6E0000 007C0200
	global_store_b64 v[4:5], v[6:7], off                       // 000000074A10: DC6E0000 007C0604
	global_store_b64 v[10:11], v[8:9], off                     // 000000074A18: DC6E0000 007C080A
	s_nop 0                                                    // 000000074A20: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074A24: BFB60003
	s_endpgm                                                   // 000000074A28: BFB00000
add_long_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000074A2C: BF800000
	.long 0xbf800000                                           // 000000074A30: BF800000
	.long 0xbf800000                                           // 000000074A34: BF800000
	.long 0xbf800000                                           // 000000074A38: BF800000
	.long 0xbf800000                                           // 000000074A3C: BF800000
	.long 0xbf800000                                           // 000000074A40: BF800000
	.long 0xbf800000                                           // 000000074A44: BF800000
	.long 0xbf800000                                           // 000000074A48: BF800000
	.long 0xbf800000                                           // 000000074A4C: BF800000
	.long 0xbf800000                                           // 000000074A50: BF800000
	.long 0xbf800000                                           // 000000074A54: BF800000
	.long 0xbf800000                                           // 000000074A58: BF800000
	.long 0xbf800000                                           // 000000074A5C: BF800000
	.long 0xbf800000                                           // 000000074A60: BF800000
	.long 0xbf800000                                           // 000000074A64: BF800000
	.long 0xbf800000                                           // 000000074A68: BF800000
	.long 0xbf800000                                           // 000000074A6C: BF800000
	.long 0xbf800000                                           // 000000074A70: BF800000
	.long 0xbf800000                                           // 000000074A74: BF800000
	.long 0xbf800000                                           // 000000074A78: BF800000
	.long 0xbf800000                                           // 000000074A7C: BF800000
	.long 0xbf800000                                           // 000000074A80: BF800000
	.long 0xbf800000                                           // 000000074A84: BF800000
	.long 0xbf800000                                           // 000000074A88: BF800000
	.long 0xbf800000                                           // 000000074A8C: BF800000
	.long 0xbf800000                                           // 000000074A90: BF800000
	.long 0xbf800000                                           // 000000074A94: BF800000
	.long 0xbf800000                                           // 000000074A98: BF800000
	.long 0xbf800000                                           // 000000074A9C: BF800000
	.long 0xbf800000                                           // 000000074AA0: BF800000
	.long 0xbf800000                                           // 000000074AA4: BF800000
	.long 0xbf800000                                           // 000000074AA8: BF800000
	.long 0xbf800000                                           // 000000074AAC: BF800000
	.long 0xbf800000                                           // 000000074AB0: BF800000
	.long 0xbf800000                                           // 000000074AB4: BF800000
	.long 0xbf800000                                           // 000000074AB8: BF800000
	.long 0xbf800000                                           // 000000074ABC: BF800000
	.long 0xbf800000                                           // 000000074AC0: BF800000
	.long 0xbf800000                                           // 000000074AC4: BF800000
	.long 0xbf800000                                           // 000000074AC8: BF800000
	.long 0xbf800000                                           // 000000074ACC: BF800000
	.long 0xbf800000                                           // 000000074AD0: BF800000
	.long 0xbf800000                                           // 000000074AD4: BF800000
	.long 0xbf800000                                           // 000000074AD8: BF800000
	.long 0xbf800000                                           // 000000074ADC: BF800000
	.long 0xbf800000                                           // 000000074AE0: BF800000
	.long 0xbf800000                                           // 000000074AE4: BF800000
	.long 0xbf800000                                           // 000000074AE8: BF800000
	.long 0xbf800000                                           // 000000074AEC: BF800000
	.long 0xbf800000                                           // 000000074AF0: BF800000
	.long 0xbf800000                                           // 000000074AF4: BF800000
	.long 0xbf800000                                           // 000000074AF8: BF800000
	.long 0xbf800000                                           // 000000074AFC: BF800000

	.p2align	8
	.type	add_long_get_global_size_get_local_id,@function
	.size	add_long_get_global_size_get_local_id, add_long_get_global_size_get_local_id_symend-add_long_get_global_size_get_local_id
add_long_get_global_size_get_local_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000074B00: CA240080 010800FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 000000074B0C: D6100009 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000074B14: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000074B1C: BEA10080
	s_clause 0x1                                               // 000000074B20: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000074B24: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000074B2C: DC4A0026 07000001
	s_clause 0x4                                               // 000000074B34: BF850004
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000074B38: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074B40: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000074B48: F4040300 F8000048
	s_load_b32 s5, s[0:1], 0x18                                // 000000074B50: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 000000074B58: F4040000 F8000000
	v_lshl_or_b32 v0, s2, 4, v8                                // 000000074B60: D6560000 04210802
	v_lshl_or_b32 v2, s3, 1, v9                                // 000000074B68: D6560002 04250203
	v_lshl_or_b32 v4, s4, 1, v10                               // 000000074B70: D6560004 04290204
	s_waitcnt lgkmcnt(0)                                       // 000000074B78: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 000000074B7C: 84028406
	v_add_co_u32 v0, s3, s8, v0                                // 000000074B80: D7000300 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074B88: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000074B8C: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000074B94: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000074B9C: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 000000074BA4: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000074BAC: BF870224
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000074BB0: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 000000074BB8: D5207C05 000D000D
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000074BC0: D73C0002 00020483
	s_lshl_b32 s3, s7, 1                                       // 000000074BC8: 84038107
	s_lshl_b32 s4, s5, 1                                       // 000000074BCC: 84048105
	s_delay_alu instid0(VALU_DEP_2)                            // 000000074BD0: BF870002
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000074BD4: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000074BDC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000074BE4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000074BE8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000074BF0: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000074BF4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000074BFC: 400A0A01
	s_waitcnt vmcnt(1)                                         // 000000074C00: BF8907F7
	v_and_b32_e32 v11, 0xffff, v6                              // 000000074C04: 36160CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000074C0C: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000074C10: BF8903F7
	v_add_nc_u32_e32 v12, s4, v7                               // 000000074C14: 4A180E04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000074C18: BF870193
	v_add_nc_u32_e32 v11, s2, v11                              // 000000074C1C: 4A161602
	v_add_nc_u32_e32 v13, s3, v6                               // 000000074C20: 4A1A0C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000074C24: BF870092
	v_add_co_u32 v6, s0, v11, v8                               // 000000074C28: D7000006 0002110B
	v_add_co_ci_u32_e64 v7, null, 0, 0, s0                     // 000000074C30: D5207C07 00010080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000074C38: BF870093
	v_add_co_u32 v8, s0, v13, v9                               // 000000074C3C: D7000008 0002130D
	v_add_co_ci_u32_e64 v9, null, 0, 0, s0                     // 000000074C44: D5207C09 00010080
	v_add_co_u32 v10, s0, v12, v10                             // 000000074C4C: D700000A 0002150C
	s_delay_alu instid0(VALU_DEP_1)                            // 000000074C54: BF870001
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 000000074C58: D5207C0B 00010080
	s_clause 0x2                                               // 000000074C60: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000074C64: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000074C6C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000074C74: DC6E0000 007C0A04
	s_nop 0                                                    // 000000074C7C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074C80: BFB60003
	s_endpgm                                                   // 000000074C84: BFB00000
add_long_get_global_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000074C88: BF800000
	.long 0xbf800000                                           // 000000074C8C: BF800000
	.long 0xbf800000                                           // 000000074C90: BF800000
	.long 0xbf800000                                           // 000000074C94: BF800000
	.long 0xbf800000                                           // 000000074C98: BF800000
	.long 0xbf800000                                           // 000000074C9C: BF800000
	.long 0xbf800000                                           // 000000074CA0: BF800000
	.long 0xbf800000                                           // 000000074CA4: BF800000
	.long 0xbf800000                                           // 000000074CA8: BF800000
	.long 0xbf800000                                           // 000000074CAC: BF800000
	.long 0xbf800000                                           // 000000074CB0: BF800000
	.long 0xbf800000                                           // 000000074CB4: BF800000
	.long 0xbf800000                                           // 000000074CB8: BF800000
	.long 0xbf800000                                           // 000000074CBC: BF800000
	.long 0xbf800000                                           // 000000074CC0: BF800000
	.long 0xbf800000                                           // 000000074CC4: BF800000
	.long 0xbf800000                                           // 000000074CC8: BF800000
	.long 0xbf800000                                           // 000000074CCC: BF800000
	.long 0xbf800000                                           // 000000074CD0: BF800000
	.long 0xbf800000                                           // 000000074CD4: BF800000
	.long 0xbf800000                                           // 000000074CD8: BF800000
	.long 0xbf800000                                           // 000000074CDC: BF800000
	.long 0xbf800000                                           // 000000074CE0: BF800000
	.long 0xbf800000                                           // 000000074CE4: BF800000
	.long 0xbf800000                                           // 000000074CE8: BF800000
	.long 0xbf800000                                           // 000000074CEC: BF800000
	.long 0xbf800000                                           // 000000074CF0: BF800000
	.long 0xbf800000                                           // 000000074CF4: BF800000
	.long 0xbf800000                                           // 000000074CF8: BF800000
	.long 0xbf800000                                           // 000000074CFC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_get_local_id,@function
	.size	add_long_get_num_groups_get_local_id, add_long_get_num_groups_get_local_id_symend-add_long_get_num_groups_get_local_id
add_long_get_num_groups_get_local_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000074D00: CA240080 010800FF 000003FF
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000074D0C: F4080300 F8000008
	v_bfe_u32 v9, v0, 10, 10                                   // 000000074D14: D6100009 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000074D1C: D610000A 02292900
	s_clause 0x1                                               // 000000074D24: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000074D28: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000074D30: DC4A0026 07000001
	s_clause 0x1                                               // 000000074D38: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074D3C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000074D44: F4040180 F8000048
	v_lshl_or_b32 v0, s2, 1, v8                                // 000000074D4C: D6560000 04210202
	v_lshl_or_b32 v2, s3, 1, v9                                // 000000074D54: D6560002 04250203
	v_lshl_or_b32 v4, s4, 2, v10                               // 000000074D5C: D6560004 04290404
	s_mov_b32 s33, 0                                           // 000000074D64: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000074D68: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000074D6C: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074D74: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000074D78: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000074D80: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000074D88: D5207C03 0009000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074D90: BF8700A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000074D94: D73C0000 00020083
	v_add_co_u32 v4, s2, s6, v4                                // 000000074D9C: D7000204 00020806
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000074DA4: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 000000074DAC: F4000080 F8000018
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000074DB4: BF8701C3
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 000000074DB8: D7006A00 0002000C
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000074DC0: D73C0002 00020483
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 000000074DC8: 4002020D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000074DCC: D73C0004 00020883
	v_add_co_u32 v2, s1, s12, v2                               // 000000074DD4: D7000102 0002040C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000074DDC: BF870141
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 000000074DE0: D5200103 0006060D
	s_waitcnt vmcnt(1)                                         // 000000074DE8: BF8907F7
	v_lshrrev_b32_e32 v11, 16, v6                              // 000000074DEC: 32160C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000074DF0: 7C7A0C80
	v_cmp_ne_u16_e64 s0, 0, v11.l                              // 000000074DF4: D43D0000 00021680
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000074DFC: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000074E00: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000074E04: 7C7A0E80
	s_addc_u32 s1, s14, 0                                      // 000000074E08: 8201800E
	s_cmp_lg_u32 s0, 0                                         // 000000074E0C: BF078000
	v_add_co_u32 v6, s0, s1, v8                                // 000000074E10: D7000006 00021001
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000074E18: BF8700C1
	v_add_co_ci_u32_e64 v7, null, 0, 0, s0                     // 000000074E1C: D5207C07 00010080
	s_addc_u32 s0, s15, 0                                      // 000000074E24: 8200800F
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000074E28: BF07806A
	v_add_co_u32 v8, s0, s0, v9                                // 000000074E2C: D7000008 00021200
	v_add_co_ci_u32_e64 v9, null, 0, 0, s0                     // 000000074E34: D5207C09 00010080
	s_waitcnt lgkmcnt(0)                                       // 000000074E3C: BF89FC07
	s_addc_u32 s0, s2, 0                                       // 000000074E40: 82008002
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000074E44: D7006A04 0002080C
	v_add_co_u32 v10, s0, s0, v10                              // 000000074E4C: D700000A 00021400
	s_delay_alu instid0(VALU_DEP_1)                            // 000000074E54: BF870001
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 000000074E58: D5207C0B 00010080
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000074E60: 400A0A0D
	s_clause 0x2                                               // 000000074E64: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000074E68: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000074E70: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000074E78: DC6E0000 007C0A04
	s_nop 0                                                    // 000000074E80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074E84: BFB60003
	s_endpgm                                                   // 000000074E88: BFB00000
add_long_get_num_groups_get_local_id_symend:
	.long 0xbf800000                                           // 000000074E8C: BF800000
	.long 0xbf800000                                           // 000000074E90: BF800000
	.long 0xbf800000                                           // 000000074E94: BF800000
	.long 0xbf800000                                           // 000000074E98: BF800000
	.long 0xbf800000                                           // 000000074E9C: BF800000
	.long 0xbf800000                                           // 000000074EA0: BF800000
	.long 0xbf800000                                           // 000000074EA4: BF800000
	.long 0xbf800000                                           // 000000074EA8: BF800000
	.long 0xbf800000                                           // 000000074EAC: BF800000
	.long 0xbf800000                                           // 000000074EB0: BF800000
	.long 0xbf800000                                           // 000000074EB4: BF800000
	.long 0xbf800000                                           // 000000074EB8: BF800000
	.long 0xbf800000                                           // 000000074EBC: BF800000
	.long 0xbf800000                                           // 000000074EC0: BF800000
	.long 0xbf800000                                           // 000000074EC4: BF800000
	.long 0xbf800000                                           // 000000074EC8: BF800000
	.long 0xbf800000                                           // 000000074ECC: BF800000
	.long 0xbf800000                                           // 000000074ED0: BF800000
	.long 0xbf800000                                           // 000000074ED4: BF800000
	.long 0xbf800000                                           // 000000074ED8: BF800000
	.long 0xbf800000                                           // 000000074EDC: BF800000
	.long 0xbf800000                                           // 000000074EE0: BF800000
	.long 0xbf800000                                           // 000000074EE4: BF800000
	.long 0xbf800000                                           // 000000074EE8: BF800000
	.long 0xbf800000                                           // 000000074EEC: BF800000
	.long 0xbf800000                                           // 000000074EF0: BF800000
	.long 0xbf800000                                           // 000000074EF4: BF800000
	.long 0xbf800000                                           // 000000074EF8: BF800000
	.long 0xbf800000                                           // 000000074EFC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_get_local_id,@function
	.size	add_long_get_work_dim_get_local_id, add_long_get_work_dim_get_local_id_symend-add_long_get_work_dim_get_local_id
add_long_get_work_dim_get_local_id:
	s_clause 0x3                                               // 000000074F00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000074F04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074F0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000074F14: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000074F1C: F4040000 F8000048
	v_and_b32_e32 v4, 0x3ff, v0                                // 000000074F24: 360800FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000074F2C: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000074F34: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000074F3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000074F40: BF870193
	v_lshl_or_b32 v0, s2, 1, v4                                // 000000074F44: D6560000 04110202
	v_lshl_or_b32 v2, s3, 1, v6                                // 000000074F4C: D6560002 04190203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000074F54: BF8700C3
	v_lshl_or_b32 v8, s4, 2, v10                               // 000000074F58: D6560008 04290404
	s_waitcnt lgkmcnt(0)                                       // 000000074F60: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 000000074F64: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v0                                // 000000074F6C: D7000300 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000074F74: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000074F7C: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000074F84: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000074F88: D5207C03 000D000B
	v_add_co_u32 v8, s0, s0, v8                                // 000000074F90: D7000008 00021000
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000074F98: D73C0000 00020083
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 000000074FA0: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000074FA8: BF870224
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000074FAC: D73C0002 00020483
	v_add_co_u32 v4, s3, s2, v4                                // 000000074FB4: D7000304 00020802
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000074FBC: D7006A00 00020006
	s_delay_alu instid0(VALU_DEP_4)                            // 000000074FC4: BF870004
	v_lshlrev_b64 v[8:9], 3, v[8:9]                            // 000000074FC8: D73C0008 00021083
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000074FD0: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000074FD4: D7006A02 00020406
	v_add_co_ci_u32_e64 v5, null, 0, 0, s3                     // 000000074FDC: D5207C05 000D0080
	v_add_co_u32 v6, s3, s2, v6                                // 000000074FE4: D7000306 00020C02
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000074FEC: 40060607
	v_add_co_u32 v10, s0, s2, v10                              // 000000074FF0: D700000A 00021402
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 000000074FF8: D7006A08 00021006
	v_add_co_ci_u32_e64 v7, null, 0, 0, s3                     // 000000075000: D5207C07 000D0080
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 000000075008: D5207C0B 00010080
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 000000075010: 40121207
	s_clause 0x2                                               // 000000075014: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000075018: DC6E0000 007C0400
	global_store_b64 v[2:3], v[6:7], off                       // 000000075020: DC6E0000 007C0602
	global_store_b64 v[8:9], v[10:11], off                     // 000000075028: DC6E0000 007C0A08
	s_nop 0                                                    // 000000075030: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075034: BFB60003
	s_endpgm                                                   // 000000075038: BFB00000
add_long_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 00000007503C: BF800000
	.long 0xbf800000                                           // 000000075040: BF800000
	.long 0xbf800000                                           // 000000075044: BF800000
	.long 0xbf800000                                           // 000000075048: BF800000
	.long 0xbf800000                                           // 00000007504C: BF800000
	.long 0xbf800000                                           // 000000075050: BF800000
	.long 0xbf800000                                           // 000000075054: BF800000
	.long 0xbf800000                                           // 000000075058: BF800000
	.long 0xbf800000                                           // 00000007505C: BF800000
	.long 0xbf800000                                           // 000000075060: BF800000
	.long 0xbf800000                                           // 000000075064: BF800000
	.long 0xbf800000                                           // 000000075068: BF800000
	.long 0xbf800000                                           // 00000007506C: BF800000
	.long 0xbf800000                                           // 000000075070: BF800000
	.long 0xbf800000                                           // 000000075074: BF800000
	.long 0xbf800000                                           // 000000075078: BF800000
	.long 0xbf800000                                           // 00000007507C: BF800000
	.long 0xbf800000                                           // 000000075080: BF800000
	.long 0xbf800000                                           // 000000075084: BF800000
	.long 0xbf800000                                           // 000000075088: BF800000
	.long 0xbf800000                                           // 00000007508C: BF800000
	.long 0xbf800000                                           // 000000075090: BF800000
	.long 0xbf800000                                           // 000000075094: BF800000
	.long 0xbf800000                                           // 000000075098: BF800000
	.long 0xbf800000                                           // 00000007509C: BF800000
	.long 0xbf800000                                           // 0000000750A0: BF800000
	.long 0xbf800000                                           // 0000000750A4: BF800000
	.long 0xbf800000                                           // 0000000750A8: BF800000
	.long 0xbf800000                                           // 0000000750AC: BF800000
	.long 0xbf800000                                           // 0000000750B0: BF800000
	.long 0xbf800000                                           // 0000000750B4: BF800000
	.long 0xbf800000                                           // 0000000750B8: BF800000
	.long 0xbf800000                                           // 0000000750BC: BF800000
	.long 0xbf800000                                           // 0000000750C0: BF800000
	.long 0xbf800000                                           // 0000000750C4: BF800000
	.long 0xbf800000                                           // 0000000750C8: BF800000
	.long 0xbf800000                                           // 0000000750CC: BF800000
	.long 0xbf800000                                           // 0000000750D0: BF800000
	.long 0xbf800000                                           // 0000000750D4: BF800000
	.long 0xbf800000                                           // 0000000750D8: BF800000
	.long 0xbf800000                                           // 0000000750DC: BF800000
	.long 0xbf800000                                           // 0000000750E0: BF800000
	.long 0xbf800000                                           // 0000000750E4: BF800000
	.long 0xbf800000                                           // 0000000750E8: BF800000
	.long 0xbf800000                                           // 0000000750EC: BF800000
	.long 0xbf800000                                           // 0000000750F0: BF800000
	.long 0xbf800000                                           // 0000000750F4: BF800000
	.long 0xbf800000                                           // 0000000750F8: BF800000
	.long 0xbf800000                                           // 0000000750FC: BF800000

	.p2align	8
	.type	add_long_x_get_group_id,@function
	.size	add_long_x_get_group_id, add_long_x_get_group_id_symend-add_long_x_get_group_id
add_long_x_get_group_id:
	s_clause 0x3                                               // 000000075100: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007510C: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 000000075114: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007511C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000075124: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007512C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000075134: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000007513C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000075140: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000075144: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007514C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000075154: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v3                                // 000000075158: D6560004 040D0204
	s_waitcnt lgkmcnt(0)                                       // 000000075160: BF89FC07
	v_add_co_u32 v0, s8, s8, v1                                // 000000075164: D7000800 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007516C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 000000075170: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 000000075178: D7000802 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 000000075180: D5207C03 0021000B
	v_add_co_u32 v4, s0, s0, v4                                // 000000075188: D7000004 00020800
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075190: BF870004
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000075194: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007519C: D5207C05 00010001
	s_ashr_i32 s12, s5, 31                                     // 0000000751A4: 860C9F05
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000751A8: D73C0002 00020483
	s_add_u32 s8, s5, s2                                       // 0000000751B0: 80080205
	s_addc_u32 s9, s12, 0                                      // 0000000751B4: 8209800C
	v_mov_b32_e32 v6, s8                                       // 0000000751B8: 7E0C0208
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000751BC: D7006A00 00020006
	s_add_u32 s0, s5, s3                                       // 0000000751C4: 80000305
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000751C8: D73C0004 00020883
	s_addc_u32 s1, s12, 0                                      // 0000000751D0: 8201800C
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000751D4: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000751D8: D7006A02 00020406
	v_mov_b32_e32 v9, s1                                       // 0000000751E0: 7E120201
	v_dual_mov_b32 v7, s9 :: v_dual_mov_b32 v8, s0             // 0000000751E4: CA100009 07080000
	s_add_u32 s0, s5, s4                                       // 0000000751EC: 80000405
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000751F0: 40060607
	s_addc_u32 s1, s12, 0                                      // 0000000751F4: 8201800C
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000751F8: D7006A04 00020806
	v_mov_b32_e32 v11, s1                                      // 000000075200: 7E160201
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000075204: 400A0A07
	v_mov_b32_e32 v10, s0                                      // 000000075208: 7E140200
	s_clause 0x2                                               // 00000007520C: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000075210: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000075218: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000075220: DC6E0000 007C0A04
	s_nop 0                                                    // 000000075228: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007522C: BFB60003
	s_endpgm                                                   // 000000075230: BFB00000
add_long_x_get_group_id_symend:
	.long 0xbf800000                                           // 000000075234: BF800000
	.long 0xbf800000                                           // 000000075238: BF800000
	.long 0xbf800000                                           // 00000007523C: BF800000
	.long 0xbf800000                                           // 000000075240: BF800000
	.long 0xbf800000                                           // 000000075244: BF800000
	.long 0xbf800000                                           // 000000075248: BF800000
	.long 0xbf800000                                           // 00000007524C: BF800000
	.long 0xbf800000                                           // 000000075250: BF800000
	.long 0xbf800000                                           // 000000075254: BF800000
	.long 0xbf800000                                           // 000000075258: BF800000
	.long 0xbf800000                                           // 00000007525C: BF800000
	.long 0xbf800000                                           // 000000075260: BF800000
	.long 0xbf800000                                           // 000000075264: BF800000
	.long 0xbf800000                                           // 000000075268: BF800000
	.long 0xbf800000                                           // 00000007526C: BF800000
	.long 0xbf800000                                           // 000000075270: BF800000
	.long 0xbf800000                                           // 000000075274: BF800000
	.long 0xbf800000                                           // 000000075278: BF800000
	.long 0xbf800000                                           // 00000007527C: BF800000
	.long 0xbf800000                                           // 000000075280: BF800000
	.long 0xbf800000                                           // 000000075284: BF800000
	.long 0xbf800000                                           // 000000075288: BF800000
	.long 0xbf800000                                           // 00000007528C: BF800000
	.long 0xbf800000                                           // 000000075290: BF800000
	.long 0xbf800000                                           // 000000075294: BF800000
	.long 0xbf800000                                           // 000000075298: BF800000
	.long 0xbf800000                                           // 00000007529C: BF800000
	.long 0xbf800000                                           // 0000000752A0: BF800000
	.long 0xbf800000                                           // 0000000752A4: BF800000
	.long 0xbf800000                                           // 0000000752A8: BF800000
	.long 0xbf800000                                           // 0000000752AC: BF800000
	.long 0xbf800000                                           // 0000000752B0: BF800000
	.long 0xbf800000                                           // 0000000752B4: BF800000
	.long 0xbf800000                                           // 0000000752B8: BF800000
	.long 0xbf800000                                           // 0000000752BC: BF800000
	.long 0xbf800000                                           // 0000000752C0: BF800000
	.long 0xbf800000                                           // 0000000752C4: BF800000
	.long 0xbf800000                                           // 0000000752C8: BF800000
	.long 0xbf800000                                           // 0000000752CC: BF800000
	.long 0xbf800000                                           // 0000000752D0: BF800000
	.long 0xbf800000                                           // 0000000752D4: BF800000
	.long 0xbf800000                                           // 0000000752D8: BF800000
	.long 0xbf800000                                           // 0000000752DC: BF800000
	.long 0xbf800000                                           // 0000000752E0: BF800000
	.long 0xbf800000                                           // 0000000752E4: BF800000
	.long 0xbf800000                                           // 0000000752E8: BF800000
	.long 0xbf800000                                           // 0000000752EC: BF800000
	.long 0xbf800000                                           // 0000000752F0: BF800000
	.long 0xbf800000                                           // 0000000752F4: BF800000
	.long 0xbf800000                                           // 0000000752F8: BF800000
	.long 0xbf800000                                           // 0000000752FC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_get_group_id,@function
	.size	add_long_get_global_offset_get_group_id, add_long_get_global_offset_get_group_id_symend-add_long_get_global_offset_get_group_id
add_long_get_global_offset_get_group_id:
	s_clause 0x1                                               // 000000075300: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075304: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007530C: F4040180 F8000048
	v_bfe_u32 v2, v0, 10, 10                                   // 000000075314: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007531C: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000075324: BEA10080
	s_delay_alu instid0(VALU_DEP_1)                            // 000000075328: BF870001
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007532C: D6560002 04090803
	s_waitcnt lgkmcnt(0)                                       // 000000075334: BF89FC07
	s_add_u32 s12, s8, s2                                      // 000000075338: 800C0208
	s_addc_u32 s13, s9, 0                                      // 00000007533C: 820D8009
	v_dual_mov_b32 v6, s12 :: v_dual_and_b32 v1, 0x3ff, v0     // 000000075340: CA24000C 060000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007534C: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000075354: BF870112
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000075358: D6560001 04050202
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000075360: D6560004 04010204
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075368: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000007536C: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000075374: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007537C: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000075384: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000075388: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 000000075390: D7000204 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000075398: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 0000000753A0: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000753A8: BF8701B4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000753AC: D73C0002 00020483
	s_add_u32 s2, s10, s3                                      // 0000000753B4: 8002030A
	s_addc_u32 s3, s11, 0                                      // 0000000753B8: 8203800B
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000753BC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000753C4: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000753CC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000753D0: D7006A02 00020400
	v_mov_b32_e32 v9, s3                                       // 0000000753D8: 7E120203
	v_dual_mov_b32 v7, s13 :: v_dual_mov_b32 v8, s2            // 0000000753DC: CA10000D 07080002
	s_add_u32 s2, s6, s4                                       // 0000000753E4: 80020406
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000753E8: 40060601
	s_addc_u32 s3, s7, 0                                       // 0000000753EC: 82038007
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000753F0: D7006A04 00020800
	v_mov_b32_e32 v11, s3                                      // 0000000753F8: 7E160203
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000753FC: 400A0A01
	v_mov_b32_e32 v10, s2                                      // 000000075400: 7E140202
	s_clause 0x2                                               // 000000075404: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000075408: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000075410: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000075418: DC6E0000 007C0A04
	s_nop 0                                                    // 000000075420: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075424: BFB60003
	s_endpgm                                                   // 000000075428: BFB00000
add_long_get_global_offset_get_group_id_symend:
	.long 0xbf800000                                           // 00000007542C: BF800000
	.long 0xbf800000                                           // 000000075430: BF800000
	.long 0xbf800000                                           // 000000075434: BF800000
	.long 0xbf800000                                           // 000000075438: BF800000
	.long 0xbf800000                                           // 00000007543C: BF800000
	.long 0xbf800000                                           // 000000075440: BF800000
	.long 0xbf800000                                           // 000000075444: BF800000
	.long 0xbf800000                                           // 000000075448: BF800000
	.long 0xbf800000                                           // 00000007544C: BF800000
	.long 0xbf800000                                           // 000000075450: BF800000
	.long 0xbf800000                                           // 000000075454: BF800000
	.long 0xbf800000                                           // 000000075458: BF800000
	.long 0xbf800000                                           // 00000007545C: BF800000
	.long 0xbf800000                                           // 000000075460: BF800000
	.long 0xbf800000                                           // 000000075464: BF800000
	.long 0xbf800000                                           // 000000075468: BF800000
	.long 0xbf800000                                           // 00000007546C: BF800000
	.long 0xbf800000                                           // 000000075470: BF800000
	.long 0xbf800000                                           // 000000075474: BF800000
	.long 0xbf800000                                           // 000000075478: BF800000
	.long 0xbf800000                                           // 00000007547C: BF800000
	.long 0xbf800000                                           // 000000075480: BF800000
	.long 0xbf800000                                           // 000000075484: BF800000
	.long 0xbf800000                                           // 000000075488: BF800000
	.long 0xbf800000                                           // 00000007548C: BF800000
	.long 0xbf800000                                           // 000000075490: BF800000
	.long 0xbf800000                                           // 000000075494: BF800000
	.long 0xbf800000                                           // 000000075498: BF800000
	.long 0xbf800000                                           // 00000007549C: BF800000
	.long 0xbf800000                                           // 0000000754A0: BF800000
	.long 0xbf800000                                           // 0000000754A4: BF800000
	.long 0xbf800000                                           // 0000000754A8: BF800000
	.long 0xbf800000                                           // 0000000754AC: BF800000
	.long 0xbf800000                                           // 0000000754B0: BF800000
	.long 0xbf800000                                           // 0000000754B4: BF800000
	.long 0xbf800000                                           // 0000000754B8: BF800000
	.long 0xbf800000                                           // 0000000754BC: BF800000
	.long 0xbf800000                                           // 0000000754C0: BF800000
	.long 0xbf800000                                           // 0000000754C4: BF800000
	.long 0xbf800000                                           // 0000000754C8: BF800000
	.long 0xbf800000                                           // 0000000754CC: BF800000
	.long 0xbf800000                                           // 0000000754D0: BF800000
	.long 0xbf800000                                           // 0000000754D4: BF800000
	.long 0xbf800000                                           // 0000000754D8: BF800000
	.long 0xbf800000                                           // 0000000754DC: BF800000
	.long 0xbf800000                                           // 0000000754E0: BF800000
	.long 0xbf800000                                           // 0000000754E4: BF800000
	.long 0xbf800000                                           // 0000000754E8: BF800000
	.long 0xbf800000                                           // 0000000754EC: BF800000
	.long 0xbf800000                                           // 0000000754F0: BF800000
	.long 0xbf800000                                           // 0000000754F4: BF800000
	.long 0xbf800000                                           // 0000000754F8: BF800000
	.long 0xbf800000                                           // 0000000754FC: BF800000

	.p2align	8
	.type	add_long_get_local_id_get_group_id,@function
	.size	add_long_get_local_id_get_group_id, add_long_get_local_id_get_group_id_symend-add_long_get_local_id_get_group_id
add_long_get_local_id_get_group_id:
	s_clause 0x2                                               // 000000075500: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075504: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007550C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000075514: F4040000 F8000048
	v_and_b32_e32 v2, 0x3ff, v0                                // 00000007551C: 360400FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000075524: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007552C: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000075534: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000075538: BF870193
	v_lshl_or_b32 v1, s2, 3, v2                                // 00000007553C: D6560001 04090602
	v_lshl_or_b32 v4, s3, 2, v6                                // 000000075544: D6560004 04190403
	v_add_co_u32 v2, s2, s2, v2                                // 00000007554C: D7000202 00020402
	v_lshl_or_b32 v8, s4, 1, v10                               // 000000075554: D6560008 04290204
	v_add_co_ci_u32_e64 v3, null, 0, 0, s2                     // 00000007555C: D5207C03 00090080
	s_waitcnt lgkmcnt(0)                                       // 000000075564: BF89FC07
	v_add_co_u32 v0, s5, s8, v1                                // 000000075568: D7000500 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075570: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 000000075574: D5207C01 00150009
	v_add_co_u32 v4, s2, s10, v4                               // 00000007557C: D7000204 0002080A
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 000000075584: D5207C05 0009000B
	v_add_co_u32 v8, s0, s0, v8                                // 00000007558C: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000075594: BF870224
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000075598: D73C0000 00020083
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 0000000755A0: D5207C09 00010001
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000755A8: D73C0004 00020883
	v_add_co_u32 v6, s2, s3, v6                                // 0000000755B0: D7000206 00020C03
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000755B8: BF870214
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000755BC: D7006A00 00020006
	v_lshlrev_b64 v[8:9], 3, v[8:9]                            // 0000000755C4: D73C0008 00021083
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000755CC: 40020207
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000755D0: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000755D8: 400A0A07
	v_add_co_u32 v10, s0, s4, v10                              // 0000000755DC: D700000A 00021404
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 0000000755E4: D7006A08 00021006
	v_add_co_ci_u32_e64 v7, null, 0, 0, s2                     // 0000000755EC: D5207C07 00090080
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 0000000755F4: D5207C0B 00010080
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 0000000755FC: 40121207
	s_clause 0x2                                               // 000000075600: BF850002
	global_store_b64 v[0:1], v[2:3], off                       // 000000075604: DC6E0000 007C0200
	global_store_b64 v[4:5], v[6:7], off                       // 00000007560C: DC6E0000 007C0604
	global_store_b64 v[8:9], v[10:11], off                     // 000000075614: DC6E0000 007C0A08
	s_nop 0                                                    // 00000007561C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075620: BFB60003
	s_endpgm                                                   // 000000075624: BFB00000
add_long_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 000000075628: BF800000
	.long 0xbf800000                                           // 00000007562C: BF800000
	.long 0xbf800000                                           // 000000075630: BF800000
	.long 0xbf800000                                           // 000000075634: BF800000
	.long 0xbf800000                                           // 000000075638: BF800000
	.long 0xbf800000                                           // 00000007563C: BF800000
	.long 0xbf800000                                           // 000000075640: BF800000
	.long 0xbf800000                                           // 000000075644: BF800000
	.long 0xbf800000                                           // 000000075648: BF800000
	.long 0xbf800000                                           // 00000007564C: BF800000
	.long 0xbf800000                                           // 000000075650: BF800000
	.long 0xbf800000                                           // 000000075654: BF800000
	.long 0xbf800000                                           // 000000075658: BF800000
	.long 0xbf800000                                           // 00000007565C: BF800000
	.long 0xbf800000                                           // 000000075660: BF800000
	.long 0xbf800000                                           // 000000075664: BF800000
	.long 0xbf800000                                           // 000000075668: BF800000
	.long 0xbf800000                                           // 00000007566C: BF800000
	.long 0xbf800000                                           // 000000075670: BF800000
	.long 0xbf800000                                           // 000000075674: BF800000
	.long 0xbf800000                                           // 000000075678: BF800000
	.long 0xbf800000                                           // 00000007567C: BF800000
	.long 0xbf800000                                           // 000000075680: BF800000
	.long 0xbf800000                                           // 000000075684: BF800000
	.long 0xbf800000                                           // 000000075688: BF800000
	.long 0xbf800000                                           // 00000007568C: BF800000
	.long 0xbf800000                                           // 000000075690: BF800000
	.long 0xbf800000                                           // 000000075694: BF800000
	.long 0xbf800000                                           // 000000075698: BF800000
	.long 0xbf800000                                           // 00000007569C: BF800000
	.long 0xbf800000                                           // 0000000756A0: BF800000
	.long 0xbf800000                                           // 0000000756A4: BF800000
	.long 0xbf800000                                           // 0000000756A8: BF800000
	.long 0xbf800000                                           // 0000000756AC: BF800000
	.long 0xbf800000                                           // 0000000756B0: BF800000
	.long 0xbf800000                                           // 0000000756B4: BF800000
	.long 0xbf800000                                           // 0000000756B8: BF800000
	.long 0xbf800000                                           // 0000000756BC: BF800000
	.long 0xbf800000                                           // 0000000756C0: BF800000
	.long 0xbf800000                                           // 0000000756C4: BF800000
	.long 0xbf800000                                           // 0000000756C8: BF800000
	.long 0xbf800000                                           // 0000000756CC: BF800000
	.long 0xbf800000                                           // 0000000756D0: BF800000
	.long 0xbf800000                                           // 0000000756D4: BF800000
	.long 0xbf800000                                           // 0000000756D8: BF800000
	.long 0xbf800000                                           // 0000000756DC: BF800000
	.long 0xbf800000                                           // 0000000756E0: BF800000
	.long 0xbf800000                                           // 0000000756E4: BF800000
	.long 0xbf800000                                           // 0000000756E8: BF800000
	.long 0xbf800000                                           // 0000000756EC: BF800000
	.long 0xbf800000                                           // 0000000756F0: BF800000
	.long 0xbf800000                                           // 0000000756F4: BF800000
	.long 0xbf800000                                           // 0000000756F8: BF800000
	.long 0xbf800000                                           // 0000000756FC: BF800000

	.p2align	8
	.type	add_long_get_group_id_get_group_id,@function
	.size	add_long_get_group_id_get_group_id, add_long_get_group_id_get_group_id_symend-add_long_get_group_id_get_group_id
add_long_get_group_id_get_group_id:
	s_clause 0x1                                               // 000000075700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075704: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 00000007570C: F4040300 F8000048
	s_mov_b32 s6, s3                                           // 000000075714: BE860003
	s_mov_b32 s3, 0                                            // 000000075718: BE830080
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007571C: F4040000 F8000008
	s_lshl_b64 s[14:15], s[2:3], 1                             // 000000075724: 848E8102
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000075728: BF8701C9
	v_dual_mov_b32 v6, s14 :: v_dual_and_b32 v1, 0x3ff, v0     // 00000007572C: CA24000E 060000FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000075738: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075740: D6100000 02292900
	s_mov_b32 s7, s3                                           // 000000075748: BE870003
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007574C: D6560001 04050202
	s_mov_b32 s5, s3                                           // 000000075754: BE850003
	v_lshl_or_b32 v2, s6, 4, v2                                // 000000075758: D6560002 04090806
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000075760: D6560004 04010204
	s_lshl_b64 s[6:7], s[6:7], 1                               // 000000075768: 84868106
	v_mov_b32_e32 v7, s15                                      // 00000007576C: 7E0E020F
	s_mov_b32 s33, 0                                           // 000000075770: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000075774: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 000000075778: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075780: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000075784: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007578C: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000075794: D5207C03 0009000B
	v_add_co_u32 v4, s2, s12, v4                               // 00000007579C: D7000204 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000757A4: BF870224
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000757A8: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s13, 0, s2                   // 0000000757B0: D5207C05 0009000D
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000757B8: D73C0002 00020483
	s_lshl_b64 s[2:3], s[4:5], 1                               // 0000000757C0: 84828104
	v_mov_b32_e32 v9, s7                                       // 0000000757C4: 7E120207
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 0000000757C8: BF870254
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000757CC: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000757D4: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000757DC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000757E0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000757E8: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000757EC: D7006A04 00020800
	v_dual_mov_b32 v8, s6 :: v_dual_mov_b32 v11, s3            // 0000000757F4: CA100006 080A0003
	v_mov_b32_e32 v10, s2                                      // 0000000757FC: 7E140202
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000075800: 400A0A01
	s_clause 0x2                                               // 000000075804: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000075808: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000075810: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000075818: DC6E0000 007C0A04
	s_nop 0                                                    // 000000075820: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075824: BFB60003
	s_endpgm                                                   // 000000075828: BFB00000
add_long_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007582C: BF800000
	.long 0xbf800000                                           // 000000075830: BF800000
	.long 0xbf800000                                           // 000000075834: BF800000
	.long 0xbf800000                                           // 000000075838: BF800000
	.long 0xbf800000                                           // 00000007583C: BF800000
	.long 0xbf800000                                           // 000000075840: BF800000
	.long 0xbf800000                                           // 000000075844: BF800000
	.long 0xbf800000                                           // 000000075848: BF800000
	.long 0xbf800000                                           // 00000007584C: BF800000
	.long 0xbf800000                                           // 000000075850: BF800000
	.long 0xbf800000                                           // 000000075854: BF800000
	.long 0xbf800000                                           // 000000075858: BF800000
	.long 0xbf800000                                           // 00000007585C: BF800000
	.long 0xbf800000                                           // 000000075860: BF800000
	.long 0xbf800000                                           // 000000075864: BF800000
	.long 0xbf800000                                           // 000000075868: BF800000
	.long 0xbf800000                                           // 00000007586C: BF800000
	.long 0xbf800000                                           // 000000075870: BF800000
	.long 0xbf800000                                           // 000000075874: BF800000
	.long 0xbf800000                                           // 000000075878: BF800000
	.long 0xbf800000                                           // 00000007587C: BF800000
	.long 0xbf800000                                           // 000000075880: BF800000
	.long 0xbf800000                                           // 000000075884: BF800000
	.long 0xbf800000                                           // 000000075888: BF800000
	.long 0xbf800000                                           // 00000007588C: BF800000
	.long 0xbf800000                                           // 000000075890: BF800000
	.long 0xbf800000                                           // 000000075894: BF800000
	.long 0xbf800000                                           // 000000075898: BF800000
	.long 0xbf800000                                           // 00000007589C: BF800000
	.long 0xbf800000                                           // 0000000758A0: BF800000
	.long 0xbf800000                                           // 0000000758A4: BF800000
	.long 0xbf800000                                           // 0000000758A8: BF800000
	.long 0xbf800000                                           // 0000000758AC: BF800000
	.long 0xbf800000                                           // 0000000758B0: BF800000
	.long 0xbf800000                                           // 0000000758B4: BF800000
	.long 0xbf800000                                           // 0000000758B8: BF800000
	.long 0xbf800000                                           // 0000000758BC: BF800000
	.long 0xbf800000                                           // 0000000758C0: BF800000
	.long 0xbf800000                                           // 0000000758C4: BF800000
	.long 0xbf800000                                           // 0000000758C8: BF800000
	.long 0xbf800000                                           // 0000000758CC: BF800000
	.long 0xbf800000                                           // 0000000758D0: BF800000
	.long 0xbf800000                                           // 0000000758D4: BF800000
	.long 0xbf800000                                           // 0000000758D8: BF800000
	.long 0xbf800000                                           // 0000000758DC: BF800000
	.long 0xbf800000                                           // 0000000758E0: BF800000
	.long 0xbf800000                                           // 0000000758E4: BF800000
	.long 0xbf800000                                           // 0000000758E8: BF800000
	.long 0xbf800000                                           // 0000000758EC: BF800000
	.long 0xbf800000                                           // 0000000758F0: BF800000
	.long 0xbf800000                                           // 0000000758F4: BF800000
	.long 0xbf800000                                           // 0000000758F8: BF800000
	.long 0xbf800000                                           // 0000000758FC: BF800000

	.p2align	8
	.type	add_long_get_local_size_get_group_id,@function
	.size	add_long_get_local_size_get_group_id, add_long_get_local_size_get_group_id_symend-add_long_get_local_size_get_group_id
add_long_get_local_size_get_group_id:
	s_clause 0x1                                               // 000000075900: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075904: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007590C: F4040180 F8000048
	s_add_u32 s12, s2, 2                                       // 000000075914: 800C8202
	s_addc_u32 s13, 0, 0                                       // 000000075918: 820D8080
	v_dual_mov_b32 v6, s12 :: v_dual_and_b32 v1, 0x3ff, v0     // 00000007591C: CA24000C 060000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000075928: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000075930: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075938: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000075940: BF8701A3
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000075944: D6560001 04050202
	s_mov_b32 s33, 0                                           // 00000007594C: BEA10080
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000075950: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000075958: BF8700B3
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007595C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000075964: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 000000075968: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000075970: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000075978: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000075980: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000075984: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000007598C: D7000204 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000075994: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000007599C: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000759A4: BF8701B4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000759A8: D73C0002 00020483
	s_add_u32 s2, s3, 2                                        // 0000000759B0: 80028203
	s_addc_u32 s3, 0, 0                                        // 0000000759B4: 82038080
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000759B8: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000759C0: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000759C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000759CC: D7006A02 00020400
	v_mov_b32_e32 v9, s3                                       // 0000000759D4: 7E120203
	v_dual_mov_b32 v7, s13 :: v_dual_mov_b32 v8, s2            // 0000000759D8: CA10000D 07080002
	s_add_u32 s2, s4, 4                                        // 0000000759E0: 80028404
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000759E4: 40060601
	s_addc_u32 s3, 0, 0                                        // 0000000759E8: 82038080
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000759EC: D7006A04 00020800
	v_mov_b32_e32 v11, s3                                      // 0000000759F4: 7E160203
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000759F8: 400A0A01
	v_mov_b32_e32 v10, s2                                      // 0000000759FC: 7E140202
	s_clause 0x2                                               // 000000075A00: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000075A04: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000075A0C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000075A14: DC6E0000 007C0A04
	s_nop 0                                                    // 000000075A1C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075A20: BFB60003
	s_endpgm                                                   // 000000075A24: BFB00000
add_long_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 000000075A28: BF800000
	.long 0xbf800000                                           // 000000075A2C: BF800000
	.long 0xbf800000                                           // 000000075A30: BF800000
	.long 0xbf800000                                           // 000000075A34: BF800000
	.long 0xbf800000                                           // 000000075A38: BF800000
	.long 0xbf800000                                           // 000000075A3C: BF800000
	.long 0xbf800000                                           // 000000075A40: BF800000
	.long 0xbf800000                                           // 000000075A44: BF800000
	.long 0xbf800000                                           // 000000075A48: BF800000
	.long 0xbf800000                                           // 000000075A4C: BF800000
	.long 0xbf800000                                           // 000000075A50: BF800000
	.long 0xbf800000                                           // 000000075A54: BF800000
	.long 0xbf800000                                           // 000000075A58: BF800000
	.long 0xbf800000                                           // 000000075A5C: BF800000
	.long 0xbf800000                                           // 000000075A60: BF800000
	.long 0xbf800000                                           // 000000075A64: BF800000
	.long 0xbf800000                                           // 000000075A68: BF800000
	.long 0xbf800000                                           // 000000075A6C: BF800000
	.long 0xbf800000                                           // 000000075A70: BF800000
	.long 0xbf800000                                           // 000000075A74: BF800000
	.long 0xbf800000                                           // 000000075A78: BF800000
	.long 0xbf800000                                           // 000000075A7C: BF800000
	.long 0xbf800000                                           // 000000075A80: BF800000
	.long 0xbf800000                                           // 000000075A84: BF800000
	.long 0xbf800000                                           // 000000075A88: BF800000
	.long 0xbf800000                                           // 000000075A8C: BF800000
	.long 0xbf800000                                           // 000000075A90: BF800000
	.long 0xbf800000                                           // 000000075A94: BF800000
	.long 0xbf800000                                           // 000000075A98: BF800000
	.long 0xbf800000                                           // 000000075A9C: BF800000
	.long 0xbf800000                                           // 000000075AA0: BF800000
	.long 0xbf800000                                           // 000000075AA4: BF800000
	.long 0xbf800000                                           // 000000075AA8: BF800000
	.long 0xbf800000                                           // 000000075AAC: BF800000
	.long 0xbf800000                                           // 000000075AB0: BF800000
	.long 0xbf800000                                           // 000000075AB4: BF800000
	.long 0xbf800000                                           // 000000075AB8: BF800000
	.long 0xbf800000                                           // 000000075ABC: BF800000
	.long 0xbf800000                                           // 000000075AC0: BF800000
	.long 0xbf800000                                           // 000000075AC4: BF800000
	.long 0xbf800000                                           // 000000075AC8: BF800000
	.long 0xbf800000                                           // 000000075ACC: BF800000
	.long 0xbf800000                                           // 000000075AD0: BF800000
	.long 0xbf800000                                           // 000000075AD4: BF800000
	.long 0xbf800000                                           // 000000075AD8: BF800000
	.long 0xbf800000                                           // 000000075ADC: BF800000
	.long 0xbf800000                                           // 000000075AE0: BF800000
	.long 0xbf800000                                           // 000000075AE4: BF800000
	.long 0xbf800000                                           // 000000075AE8: BF800000
	.long 0xbf800000                                           // 000000075AEC: BF800000
	.long 0xbf800000                                           // 000000075AF0: BF800000
	.long 0xbf800000                                           // 000000075AF4: BF800000
	.long 0xbf800000                                           // 000000075AF8: BF800000
	.long 0xbf800000                                           // 000000075AFC: BF800000

	.p2align	8
	.type	add_long_get_global_id_get_group_id,@function
	.size	add_long_get_global_id_get_group_id, add_long_get_global_id_get_group_id_symend-add_long_get_global_id_get_group_id
add_long_get_global_id_get_group_id:
	s_clause 0x1                                               // 000000075B00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075B04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000075B0C: F4040180 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000075B14: CA240080 020000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000075B20: F4040000 F8000048
	v_bfe_u32 v4, v0, 10, 10                                   // 000000075B28: D6100004 02291500
	v_bfe_u32 v6, v0, 20, 10                                   // 000000075B30: D6100006 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000075B38: BF8701A3
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000075B3C: D6560001 04050202
	s_mov_b32 s33, 0                                           // 000000075B44: BEA10080
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000075B48: D6560004 04110203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000075B50: BF870193
	v_lshl_or_b32 v8, s4, 2, v6                                // 000000075B54: D6560008 04190404
	v_lshlrev_b64 v[2:3], 3, v[1:2]                            // 000000075B5C: D73C0002 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000075B64: BF89FC07
	s_add_u32 s2, s2, s8                                       // 000000075B68: 80020802
	s_addc_u32 s5, 0, s9                                       // 000000075B6C: 82050980
	v_add_co_u32 v0, s2, s2, v1                                // 000000075B70: D7000200 00020202
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 000000075B78: BF870251
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000075B7C: D5207C01 00090005
	v_add_co_u32 v4, s2, s10, v4                               // 000000075B84: D7000204 0002080A
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000075B8C: D7006A02 00020406
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 000000075B94: D5207C05 0009000B
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000075B9C: 40060607
	v_add_co_u32 v6, vcc_lo, v4, s3                            // 000000075BA0: D7006A06 00000704
	v_add_co_u32 v8, s0, s0, v8                                // 000000075BA8: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000075BB0: BF870134
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v5, vcc_lo              // 000000075BB4: 400E0A80
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000075BB8: D73C0004 00020883
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 000000075BC0: D5207C09 00010001
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000075BC8: D7006A04 00020806
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000075BD0: BF870212
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 000000075BD4: D73C000A 00021083
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000075BDC: 400A0A07
	v_add_co_u32 v8, vcc_lo, v8, s4                            // 000000075BE0: D7006A08 00000908
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v9, vcc_lo              // 000000075BE8: 40121280
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075BEC: BF870004
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 000000075BF0: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000075BF8: 40161607
	s_clause 0x2                                               // 000000075BFC: BF850002
	global_store_b64 v[2:3], v[0:1], off                       // 000000075C00: DC6E0000 007C0002
	global_store_b64 v[4:5], v[6:7], off                       // 000000075C08: DC6E0000 007C0604
	global_store_b64 v[10:11], v[8:9], off                     // 000000075C10: DC6E0000 007C080A
	s_nop 0                                                    // 000000075C18: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075C1C: BFB60003
	s_endpgm                                                   // 000000075C20: BFB00000
add_long_get_global_id_get_group_id_symend:
	.long 0xbf800000                                           // 000000075C24: BF800000
	.long 0xbf800000                                           // 000000075C28: BF800000
	.long 0xbf800000                                           // 000000075C2C: BF800000
	.long 0xbf800000                                           // 000000075C30: BF800000
	.long 0xbf800000                                           // 000000075C34: BF800000
	.long 0xbf800000                                           // 000000075C38: BF800000
	.long 0xbf800000                                           // 000000075C3C: BF800000
	.long 0xbf800000                                           // 000000075C40: BF800000
	.long 0xbf800000                                           // 000000075C44: BF800000
	.long 0xbf800000                                           // 000000075C48: BF800000
	.long 0xbf800000                                           // 000000075C4C: BF800000
	.long 0xbf800000                                           // 000000075C50: BF800000
	.long 0xbf800000                                           // 000000075C54: BF800000
	.long 0xbf800000                                           // 000000075C58: BF800000
	.long 0xbf800000                                           // 000000075C5C: BF800000
	.long 0xbf800000                                           // 000000075C60: BF800000
	.long 0xbf800000                                           // 000000075C64: BF800000
	.long 0xbf800000                                           // 000000075C68: BF800000
	.long 0xbf800000                                           // 000000075C6C: BF800000
	.long 0xbf800000                                           // 000000075C70: BF800000
	.long 0xbf800000                                           // 000000075C74: BF800000
	.long 0xbf800000                                           // 000000075C78: BF800000
	.long 0xbf800000                                           // 000000075C7C: BF800000
	.long 0xbf800000                                           // 000000075C80: BF800000
	.long 0xbf800000                                           // 000000075C84: BF800000
	.long 0xbf800000                                           // 000000075C88: BF800000
	.long 0xbf800000                                           // 000000075C8C: BF800000
	.long 0xbf800000                                           // 000000075C90: BF800000
	.long 0xbf800000                                           // 000000075C94: BF800000
	.long 0xbf800000                                           // 000000075C98: BF800000
	.long 0xbf800000                                           // 000000075C9C: BF800000
	.long 0xbf800000                                           // 000000075CA0: BF800000
	.long 0xbf800000                                           // 000000075CA4: BF800000
	.long 0xbf800000                                           // 000000075CA8: BF800000
	.long 0xbf800000                                           // 000000075CAC: BF800000
	.long 0xbf800000                                           // 000000075CB0: BF800000
	.long 0xbf800000                                           // 000000075CB4: BF800000
	.long 0xbf800000                                           // 000000075CB8: BF800000
	.long 0xbf800000                                           // 000000075CBC: BF800000
	.long 0xbf800000                                           // 000000075CC0: BF800000
	.long 0xbf800000                                           // 000000075CC4: BF800000
	.long 0xbf800000                                           // 000000075CC8: BF800000
	.long 0xbf800000                                           // 000000075CCC: BF800000
	.long 0xbf800000                                           // 000000075CD0: BF800000
	.long 0xbf800000                                           // 000000075CD4: BF800000
	.long 0xbf800000                                           // 000000075CD8: BF800000
	.long 0xbf800000                                           // 000000075CDC: BF800000
	.long 0xbf800000                                           // 000000075CE0: BF800000
	.long 0xbf800000                                           // 000000075CE4: BF800000
	.long 0xbf800000                                           // 000000075CE8: BF800000
	.long 0xbf800000                                           // 000000075CEC: BF800000
	.long 0xbf800000                                           // 000000075CF0: BF800000
	.long 0xbf800000                                           // 000000075CF4: BF800000
	.long 0xbf800000                                           // 000000075CF8: BF800000
	.long 0xbf800000                                           // 000000075CFC: BF800000

	.p2align	8
	.type	add_long_get_global_size_get_group_id,@function
	.size	add_long_get_global_size_get_group_id, add_long_get_global_size_get_group_id_symend-add_long_get_global_size_get_group_id
add_long_get_global_size_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 000000075D00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000075D04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000075D0C: BEA10080
	s_clause 0x1                                               // 000000075D10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000075D14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000075D1C: DC4A0026 07000001
	s_clause 0x3                                               // 000000075D24: BF850003
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000075D28: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075D30: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000075D38: F4040300 F8000048
	s_load_b64 s[14:15], s[0:1], null                          // 000000075D40: F4040380 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000075D48: 360200FF 000003FF
	s_load_b32 s0, s[0:1], 0x18                                // 000000075D50: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075D58: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000075D60: D6560002 04090203
	s_mov_b32 s1, 0                                            // 000000075D68: BE810080
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000075D6C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000075D74: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000075D78: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000075D80: BF89FC07
	s_lshl_b32 s5, s6, 4                                       // 000000075D84: 84058406
	v_add_co_u32 v0, s6, s8, v1                                // 000000075D88: D7000600 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075D90: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s6                    // 000000075D94: D5207C01 00190009
	v_add_co_u32 v2, s6, s10, v2                               // 000000075D9C: D7000602 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s6                   // 000000075DA4: D5207C03 0019000B
	v_add_co_u32 v4, s6, s12, v4                               // 000000075DAC: D7000604 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000075DB4: BF870154
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000075DB8: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s13, 0, s6                   // 000000075DC0: D5207C05 0019000D
	s_lshl_b32 s6, s7, 1                                       // 000000075DC8: 84068107
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000075DCC: D73C0002 00020483
	s_lshl_b32 s0, s0, 1                                       // 000000075DD4: 84008100
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000075DD8: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s14, v0                           // 000000075DE0: D7006A00 0002000E
	v_add_co_ci_u32_e32 v1, vcc_lo, s15, v1, vcc_lo            // 000000075DE8: 4002020F
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075DEC: BF870004
	v_add_co_u32 v2, vcc_lo, s14, v2                           // 000000075DF0: D7006A02 0002040E
	v_add_co_ci_u32_e32 v3, vcc_lo, s15, v3, vcc_lo            // 000000075DF8: 4006060F
	v_add_co_u32 v4, vcc_lo, s14, v4                           // 000000075DFC: D7006A04 0002080E
	v_add_co_ci_u32_e32 v5, vcc_lo, s15, v5, vcc_lo            // 000000075E04: 400A0A0F
	s_waitcnt vmcnt(1)                                         // 000000075E08: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 000000075E0C: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000075E14: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000075E18: BF8903F7
	v_add_nc_u32_e32 v10, s0, v7                               // 000000075E1C: 4A140E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000075E20: BF870193
	v_add_nc_u32_e32 v8, s5, v8                                // 000000075E24: 4A101005
	v_add_nc_u32_e32 v9, s6, v6                                // 000000075E28: 4A120C06
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075E2C: BF870092
	v_add_co_u32 v6, s0, v8, s2                                // 000000075E30: D7000006 00000508
	v_add_co_ci_u32_e64 v7, null, s1, 0, s0                    // 000000075E38: D5207C07 00010001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075E40: BF870093
	v_add_co_u32 v8, s0, v9, s3                                // 000000075E44: D7000008 00000709
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 000000075E4C: D5207C09 00010001
	v_add_co_u32 v10, s0, v10, s4                              // 000000075E54: D700000A 0000090A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000075E5C: BF870001
	v_add_co_ci_u32_e64 v11, null, s1, 0, s0                   // 000000075E60: D5207C0B 00010001
	s_clause 0x2                                               // 000000075E68: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000075E6C: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000075E74: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000075E7C: DC6E0000 007C0A04
	s_nop 0                                                    // 000000075E84: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075E88: BFB60003
	s_endpgm                                                   // 000000075E8C: BFB00000
add_long_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 000000075E90: BF800000
	.long 0xbf800000                                           // 000000075E94: BF800000
	.long 0xbf800000                                           // 000000075E98: BF800000
	.long 0xbf800000                                           // 000000075E9C: BF800000
	.long 0xbf800000                                           // 000000075EA0: BF800000
	.long 0xbf800000                                           // 000000075EA4: BF800000
	.long 0xbf800000                                           // 000000075EA8: BF800000
	.long 0xbf800000                                           // 000000075EAC: BF800000
	.long 0xbf800000                                           // 000000075EB0: BF800000
	.long 0xbf800000                                           // 000000075EB4: BF800000
	.long 0xbf800000                                           // 000000075EB8: BF800000
	.long 0xbf800000                                           // 000000075EBC: BF800000
	.long 0xbf800000                                           // 000000075EC0: BF800000
	.long 0xbf800000                                           // 000000075EC4: BF800000
	.long 0xbf800000                                           // 000000075EC8: BF800000
	.long 0xbf800000                                           // 000000075ECC: BF800000
	.long 0xbf800000                                           // 000000075ED0: BF800000
	.long 0xbf800000                                           // 000000075ED4: BF800000
	.long 0xbf800000                                           // 000000075ED8: BF800000
	.long 0xbf800000                                           // 000000075EDC: BF800000
	.long 0xbf800000                                           // 000000075EE0: BF800000
	.long 0xbf800000                                           // 000000075EE4: BF800000
	.long 0xbf800000                                           // 000000075EE8: BF800000
	.long 0xbf800000                                           // 000000075EEC: BF800000
	.long 0xbf800000                                           // 000000075EF0: BF800000
	.long 0xbf800000                                           // 000000075EF4: BF800000
	.long 0xbf800000                                           // 000000075EF8: BF800000
	.long 0xbf800000                                           // 000000075EFC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_get_group_id,@function
	.size	add_long_get_num_groups_get_group_id, add_long_get_num_groups_get_group_id_symend-add_long_get_num_groups_get_group_id
add_long_get_num_groups_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 000000075F00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000075F04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000075F0C: BEA10080
	s_clause 0x1                                               // 000000075F10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000075F14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000075F1C: DC4A0026 07000001
	s_clause 0x1                                               // 000000075F24: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075F28: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000075F30: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000075F38: 360200FF 000003FF
	s_clause 0x1                                               // 000000075F40: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000075F44: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 000000075F4C: F4000140 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075F54: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000075F5C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000075F64: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000075F6C: BF870123
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000075F70: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000075F78: BF89FC07
	v_add_co_u32 v0, s0, s8, v1                                // 000000075F7C: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075F84: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 000000075F88: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 000000075F90: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 000000075F98: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000075FA0: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000075FA4: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 000000075FAC: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000075FB4: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 000000075FBC: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075FC4: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 000000075FC8: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 000000075FD0: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075FD8: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 000000075FDC: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 000000075FE4: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000075FEC: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 000000075FF4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000075FF8: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000075FFC: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000076000: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000076004: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000076008: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 00000007600C: 8201800E
	s_add_u32 s6, s1, s2                                       // 000000076010: 80060201
	s_addc_u32 s7, 0, 0                                        // 000000076014: 82078080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000076018: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007601C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000076020: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 000000076024: 8201800F
	v_mov_b32_e32 v6, s6                                       // 000000076028: 7E0C0206
	s_add_u32 s0, s1, s3                                       // 00000007602C: 80000301
	s_addc_u32 s1, 0, 0                                        // 000000076030: 82018080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000076034: BF07806A
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 000000076038: CA100001 09080000
	s_addc_u32 s2, s5, 0                                       // 000000076040: 82028005
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000076044: D7006A04 0002080C
	s_add_u32 s0, s2, s4                                       // 00000007604C: 80000402
	s_addc_u32 s1, 0, 0                                        // 000000076050: 82018080
	v_mov_b32_e32 v7, s7                                       // 000000076054: 7E0E0207
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 000000076058: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000076060: 400A0A0D
	s_clause 0x2                                               // 000000076064: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000076068: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000076070: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000076078: DC6E0000 007C0A04
	s_nop 0                                                    // 000000076080: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076084: BFB60003
	s_endpgm                                                   // 000000076088: BFB00000
add_long_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 00000007608C: BF800000
	.long 0xbf800000                                           // 000000076090: BF800000
	.long 0xbf800000                                           // 000000076094: BF800000
	.long 0xbf800000                                           // 000000076098: BF800000
	.long 0xbf800000                                           // 00000007609C: BF800000
	.long 0xbf800000                                           // 0000000760A0: BF800000
	.long 0xbf800000                                           // 0000000760A4: BF800000
	.long 0xbf800000                                           // 0000000760A8: BF800000
	.long 0xbf800000                                           // 0000000760AC: BF800000
	.long 0xbf800000                                           // 0000000760B0: BF800000
	.long 0xbf800000                                           // 0000000760B4: BF800000
	.long 0xbf800000                                           // 0000000760B8: BF800000
	.long 0xbf800000                                           // 0000000760BC: BF800000
	.long 0xbf800000                                           // 0000000760C0: BF800000
	.long 0xbf800000                                           // 0000000760C4: BF800000
	.long 0xbf800000                                           // 0000000760C8: BF800000
	.long 0xbf800000                                           // 0000000760CC: BF800000
	.long 0xbf800000                                           // 0000000760D0: BF800000
	.long 0xbf800000                                           // 0000000760D4: BF800000
	.long 0xbf800000                                           // 0000000760D8: BF800000
	.long 0xbf800000                                           // 0000000760DC: BF800000
	.long 0xbf800000                                           // 0000000760E0: BF800000
	.long 0xbf800000                                           // 0000000760E4: BF800000
	.long 0xbf800000                                           // 0000000760E8: BF800000
	.long 0xbf800000                                           // 0000000760EC: BF800000
	.long 0xbf800000                                           // 0000000760F0: BF800000
	.long 0xbf800000                                           // 0000000760F4: BF800000
	.long 0xbf800000                                           // 0000000760F8: BF800000
	.long 0xbf800000                                           // 0000000760FC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_get_group_id,@function
	.size	add_long_get_work_dim_get_group_id, add_long_get_work_dim_get_group_id_symend-add_long_get_work_dim_get_group_id
add_long_get_work_dim_get_group_id:
	s_clause 0x3                                               // 000000076100: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007610C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000076114: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007611C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000076124: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007612C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000076134: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000007613C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076140: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000076144: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007614C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076154: BF8701A3
	v_lshl_or_b32 v4, s4, 2, v3                                // 000000076158: D6560004 040D0404
	s_waitcnt lgkmcnt(0)                                       // 000000076160: BF89FC07
	v_add_co_u32 v0, s8, s8, v1                                // 000000076164: D7000800 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007616C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 000000076170: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 000000076178: D7000802 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 000000076180: D5207C03 0021000B
	v_add_co_u32 v4, s0, s0, v4                                // 000000076188: D7000004 00020800
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076190: BF870004
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000076194: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007619C: D5207C05 00010001
	s_and_b32 s5, s5, 0xffff                                   // 0000000761A4: 8B05FF05 0000FFFF
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000761AC: D73C0002 00020483
	s_add_u32 s8, s5, s2                                       // 0000000761B4: 80080205
	s_addc_u32 s9, 0, 0                                        // 0000000761B8: 82098080
	v_mov_b32_e32 v6, s8                                       // 0000000761BC: 7E0C0208
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000761C0: D7006A00 00020006
	s_add_u32 s0, s5, s3                                       // 0000000761C8: 80000305
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000761CC: D73C0004 00020883
	s_addc_u32 s1, 0, 0                                        // 0000000761D4: 82018080
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000761D8: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000761DC: D7006A02 00020406
	v_mov_b32_e32 v9, s1                                       // 0000000761E4: 7E120201
	v_dual_mov_b32 v7, s9 :: v_dual_mov_b32 v8, s0             // 0000000761E8: CA100009 07080000
	s_add_u32 s0, s5, s4                                       // 0000000761F0: 80000405
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000761F4: 40060607
	s_addc_u32 s1, 0, 0                                        // 0000000761F8: 82018080
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000761FC: D7006A04 00020806
	v_mov_b32_e32 v11, s1                                      // 000000076204: 7E160201
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000076208: 400A0A07
	v_mov_b32_e32 v10, s0                                      // 00000007620C: 7E140200
	s_clause 0x2                                               // 000000076210: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000076214: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007621C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000076224: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007622C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076230: BFB60003
	s_endpgm                                                   // 000000076234: BFB00000
add_long_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 000000076238: BF800000
	.long 0xbf800000                                           // 00000007623C: BF800000
	.long 0xbf800000                                           // 000000076240: BF800000
	.long 0xbf800000                                           // 000000076244: BF800000
	.long 0xbf800000                                           // 000000076248: BF800000
	.long 0xbf800000                                           // 00000007624C: BF800000
	.long 0xbf800000                                           // 000000076250: BF800000
	.long 0xbf800000                                           // 000000076254: BF800000
	.long 0xbf800000                                           // 000000076258: BF800000
	.long 0xbf800000                                           // 00000007625C: BF800000
	.long 0xbf800000                                           // 000000076260: BF800000
	.long 0xbf800000                                           // 000000076264: BF800000
	.long 0xbf800000                                           // 000000076268: BF800000
	.long 0xbf800000                                           // 00000007626C: BF800000
	.long 0xbf800000                                           // 000000076270: BF800000
	.long 0xbf800000                                           // 000000076274: BF800000
	.long 0xbf800000                                           // 000000076278: BF800000
	.long 0xbf800000                                           // 00000007627C: BF800000
	.long 0xbf800000                                           // 000000076280: BF800000
	.long 0xbf800000                                           // 000000076284: BF800000
	.long 0xbf800000                                           // 000000076288: BF800000
	.long 0xbf800000                                           // 00000007628C: BF800000
	.long 0xbf800000                                           // 000000076290: BF800000
	.long 0xbf800000                                           // 000000076294: BF800000
	.long 0xbf800000                                           // 000000076298: BF800000
	.long 0xbf800000                                           // 00000007629C: BF800000
	.long 0xbf800000                                           // 0000000762A0: BF800000
	.long 0xbf800000                                           // 0000000762A4: BF800000
	.long 0xbf800000                                           // 0000000762A8: BF800000
	.long 0xbf800000                                           // 0000000762AC: BF800000
	.long 0xbf800000                                           // 0000000762B0: BF800000
	.long 0xbf800000                                           // 0000000762B4: BF800000
	.long 0xbf800000                                           // 0000000762B8: BF800000
	.long 0xbf800000                                           // 0000000762BC: BF800000
	.long 0xbf800000                                           // 0000000762C0: BF800000
	.long 0xbf800000                                           // 0000000762C4: BF800000
	.long 0xbf800000                                           // 0000000762C8: BF800000
	.long 0xbf800000                                           // 0000000762CC: BF800000
	.long 0xbf800000                                           // 0000000762D0: BF800000
	.long 0xbf800000                                           // 0000000762D4: BF800000
	.long 0xbf800000                                           // 0000000762D8: BF800000
	.long 0xbf800000                                           // 0000000762DC: BF800000
	.long 0xbf800000                                           // 0000000762E0: BF800000
	.long 0xbf800000                                           // 0000000762E4: BF800000
	.long 0xbf800000                                           // 0000000762E8: BF800000
	.long 0xbf800000                                           // 0000000762EC: BF800000
	.long 0xbf800000                                           // 0000000762F0: BF800000
	.long 0xbf800000                                           // 0000000762F4: BF800000
	.long 0xbf800000                                           // 0000000762F8: BF800000
	.long 0xbf800000                                           // 0000000762FC: BF800000

	.p2align	8
	.type	add_long_x_get_local_size,@function
	.size	add_long_x_get_local_size, add_long_x_get_local_size_symend-add_long_x_get_local_size
add_long_x_get_local_size:
	s_clause 0x3                                               // 000000076300: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007630C: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 000000076314: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007631C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000076324: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007632C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000076334: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000007633C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076340: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000076344: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007634C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076354: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v3                                // 000000076358: D6560004 040D0204
	s_waitcnt lgkmcnt(0)                                       // 000000076360: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 000000076364: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007636C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000076370: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000076378: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000076380: D5207C03 0009000B
	v_add_co_u32 v4, s0, s0, v4                                // 000000076388: D7000004 00020800
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000076390: BF870224
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000076394: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007639C: D5207C05 00010001
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000763A4: D73C0002 00020483
	s_ashr_i32 s4, s5, 31                                      // 0000000763AC: 86049F05
	s_add_u32 s2, s5, 16                                       // 0000000763B0: 80029005
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000763B4: BF870003
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000763B8: D7006A00 00020006
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000763C0: D73C0004 00020883
	s_addc_u32 s3, s4, 0                                       // 0000000763C8: 82038004
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000763CC: 40020207
	s_add_u32 s0, s5, 2                                        // 0000000763D0: 80008205
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000763D4: D7006A02 00020406
	s_addc_u32 s1, s4, 0                                       // 0000000763DC: 82018004
	v_mov_b32_e32 v7, s3                                       // 0000000763E0: 7E0E0203
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000763E4: 40060607
	v_dual_mov_b32 v6, s2 :: v_dual_mov_b32 v9, s1             // 0000000763E8: CA100002 06080001
	v_mov_b32_e32 v8, s0                                       // 0000000763F0: 7E100200
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000763F4: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000763FC: 400A0A07
	s_clause 0x2                                               // 000000076400: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000076404: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007640C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[8:9], off                       // 000000076414: DC6E0000 007C0804
	s_nop 0                                                    // 00000007641C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076420: BFB60003
	s_endpgm                                                   // 000000076424: BFB00000
add_long_x_get_local_size_symend:
	.long 0xbf800000                                           // 000000076428: BF800000
	.long 0xbf800000                                           // 00000007642C: BF800000
	.long 0xbf800000                                           // 000000076430: BF800000
	.long 0xbf800000                                           // 000000076434: BF800000
	.long 0xbf800000                                           // 000000076438: BF800000
	.long 0xbf800000                                           // 00000007643C: BF800000
	.long 0xbf800000                                           // 000000076440: BF800000
	.long 0xbf800000                                           // 000000076444: BF800000
	.long 0xbf800000                                           // 000000076448: BF800000
	.long 0xbf800000                                           // 00000007644C: BF800000
	.long 0xbf800000                                           // 000000076450: BF800000
	.long 0xbf800000                                           // 000000076454: BF800000
	.long 0xbf800000                                           // 000000076458: BF800000
	.long 0xbf800000                                           // 00000007645C: BF800000
	.long 0xbf800000                                           // 000000076460: BF800000
	.long 0xbf800000                                           // 000000076464: BF800000
	.long 0xbf800000                                           // 000000076468: BF800000
	.long 0xbf800000                                           // 00000007646C: BF800000
	.long 0xbf800000                                           // 000000076470: BF800000
	.long 0xbf800000                                           // 000000076474: BF800000
	.long 0xbf800000                                           // 000000076478: BF800000
	.long 0xbf800000                                           // 00000007647C: BF800000
	.long 0xbf800000                                           // 000000076480: BF800000
	.long 0xbf800000                                           // 000000076484: BF800000
	.long 0xbf800000                                           // 000000076488: BF800000
	.long 0xbf800000                                           // 00000007648C: BF800000
	.long 0xbf800000                                           // 000000076490: BF800000
	.long 0xbf800000                                           // 000000076494: BF800000
	.long 0xbf800000                                           // 000000076498: BF800000
	.long 0xbf800000                                           // 00000007649C: BF800000
	.long 0xbf800000                                           // 0000000764A0: BF800000
	.long 0xbf800000                                           // 0000000764A4: BF800000
	.long 0xbf800000                                           // 0000000764A8: BF800000
	.long 0xbf800000                                           // 0000000764AC: BF800000
	.long 0xbf800000                                           // 0000000764B0: BF800000
	.long 0xbf800000                                           // 0000000764B4: BF800000
	.long 0xbf800000                                           // 0000000764B8: BF800000
	.long 0xbf800000                                           // 0000000764BC: BF800000
	.long 0xbf800000                                           // 0000000764C0: BF800000
	.long 0xbf800000                                           // 0000000764C4: BF800000
	.long 0xbf800000                                           // 0000000764C8: BF800000
	.long 0xbf800000                                           // 0000000764CC: BF800000
	.long 0xbf800000                                           // 0000000764D0: BF800000
	.long 0xbf800000                                           // 0000000764D4: BF800000
	.long 0xbf800000                                           // 0000000764D8: BF800000
	.long 0xbf800000                                           // 0000000764DC: BF800000
	.long 0xbf800000                                           // 0000000764E0: BF800000
	.long 0xbf800000                                           // 0000000764E4: BF800000
	.long 0xbf800000                                           // 0000000764E8: BF800000
	.long 0xbf800000                                           // 0000000764EC: BF800000
	.long 0xbf800000                                           // 0000000764F0: BF800000
	.long 0xbf800000                                           // 0000000764F4: BF800000
	.long 0xbf800000                                           // 0000000764F8: BF800000
	.long 0xbf800000                                           // 0000000764FC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_get_local_size,@function
	.size	add_long_get_global_offset_get_local_size, add_long_get_global_offset_get_local_size_symend-add_long_get_global_offset_get_local_size
add_long_get_global_offset_get_local_size:
	s_clause 0x1                                               // 000000076500: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076504: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007650C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000076514: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007651C: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000076524: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007652C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000076534: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000076538: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000076540: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076548: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000007654C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000076554: BF89FC07
	v_add_co_u32 v0, s3, s8, v1                                // 000000076558: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000076560: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000076564: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000007656C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000076574: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000007657C: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076584: BF870004
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000076588: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000076590: D5207C05 000D0007
	s_add_u32 s2, s8, 2                                        // 000000076598: 80028208
	s_addc_u32 s3, s9, 0                                       // 00000007659C: 82038009
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000765A0: D73C0002 00020483
	v_mov_b32_e32 v7, s3                                       // 0000000765A8: 7E0E0203
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000765AC: D7006A00 00020000
	v_mov_b32_e32 v6, s2                                       // 0000000765B4: 7E0C0202
	s_add_u32 s2, s10, 16                                      // 0000000765B8: 8002900A
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000765BC: D73C0004 00020883
	s_addc_u32 s3, s11, 0                                      // 0000000765C4: 8203800B
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000765C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000765CC: D7006A02 00020400
	v_dual_mov_b32 v9, s3 :: v_dual_mov_b32 v8, s2             // 0000000765D4: CA100003 09080002
	s_add_u32 s2, s6, 2                                        // 0000000765DC: 80028206
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000765E0: 40060601
	s_addc_u32 s3, s7, 0                                       // 0000000765E4: 82038007
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000765E8: D7006A04 00020800
	v_dual_mov_b32 v11, s3 :: v_dual_mov_b32 v10, s2           // 0000000765F0: CA100003 0B0A0002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000765F8: 400A0A01
	s_clause 0x2                                               // 0000000765FC: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000076600: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000076608: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000076610: DC6E0000 007C0A04
	s_nop 0                                                    // 000000076618: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007661C: BFB60003
	s_endpgm                                                   // 000000076620: BFB00000
add_long_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 000000076624: BF800000
	.long 0xbf800000                                           // 000000076628: BF800000
	.long 0xbf800000                                           // 00000007662C: BF800000
	.long 0xbf800000                                           // 000000076630: BF800000
	.long 0xbf800000                                           // 000000076634: BF800000
	.long 0xbf800000                                           // 000000076638: BF800000
	.long 0xbf800000                                           // 00000007663C: BF800000
	.long 0xbf800000                                           // 000000076640: BF800000
	.long 0xbf800000                                           // 000000076644: BF800000
	.long 0xbf800000                                           // 000000076648: BF800000
	.long 0xbf800000                                           // 00000007664C: BF800000
	.long 0xbf800000                                           // 000000076650: BF800000
	.long 0xbf800000                                           // 000000076654: BF800000
	.long 0xbf800000                                           // 000000076658: BF800000
	.long 0xbf800000                                           // 00000007665C: BF800000
	.long 0xbf800000                                           // 000000076660: BF800000
	.long 0xbf800000                                           // 000000076664: BF800000
	.long 0xbf800000                                           // 000000076668: BF800000
	.long 0xbf800000                                           // 00000007666C: BF800000
	.long 0xbf800000                                           // 000000076670: BF800000
	.long 0xbf800000                                           // 000000076674: BF800000
	.long 0xbf800000                                           // 000000076678: BF800000
	.long 0xbf800000                                           // 00000007667C: BF800000
	.long 0xbf800000                                           // 000000076680: BF800000
	.long 0xbf800000                                           // 000000076684: BF800000
	.long 0xbf800000                                           // 000000076688: BF800000
	.long 0xbf800000                                           // 00000007668C: BF800000
	.long 0xbf800000                                           // 000000076690: BF800000
	.long 0xbf800000                                           // 000000076694: BF800000
	.long 0xbf800000                                           // 000000076698: BF800000
	.long 0xbf800000                                           // 00000007669C: BF800000
	.long 0xbf800000                                           // 0000000766A0: BF800000
	.long 0xbf800000                                           // 0000000766A4: BF800000
	.long 0xbf800000                                           // 0000000766A8: BF800000
	.long 0xbf800000                                           // 0000000766AC: BF800000
	.long 0xbf800000                                           // 0000000766B0: BF800000
	.long 0xbf800000                                           // 0000000766B4: BF800000
	.long 0xbf800000                                           // 0000000766B8: BF800000
	.long 0xbf800000                                           // 0000000766BC: BF800000
	.long 0xbf800000                                           // 0000000766C0: BF800000
	.long 0xbf800000                                           // 0000000766C4: BF800000
	.long 0xbf800000                                           // 0000000766C8: BF800000
	.long 0xbf800000                                           // 0000000766CC: BF800000
	.long 0xbf800000                                           // 0000000766D0: BF800000
	.long 0xbf800000                                           // 0000000766D4: BF800000
	.long 0xbf800000                                           // 0000000766D8: BF800000
	.long 0xbf800000                                           // 0000000766DC: BF800000
	.long 0xbf800000                                           // 0000000766E0: BF800000
	.long 0xbf800000                                           // 0000000766E4: BF800000
	.long 0xbf800000                                           // 0000000766E8: BF800000
	.long 0xbf800000                                           // 0000000766EC: BF800000
	.long 0xbf800000                                           // 0000000766F0: BF800000
	.long 0xbf800000                                           // 0000000766F4: BF800000
	.long 0xbf800000                                           // 0000000766F8: BF800000
	.long 0xbf800000                                           // 0000000766FC: BF800000

	.p2align	8
	.type	add_long_get_local_id_get_local_size,@function
	.size	add_long_get_local_id_get_local_size, add_long_get_local_id_get_local_size_symend-add_long_get_local_id_get_local_size
add_long_get_local_id_get_local_size:
	s_clause 0x1                                               // 000000076700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007670C: F4040180 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000076714: CA240080 010200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000076720: F4040000 F8000008
	v_bfe_u32 v8, v0, 10, 10                                   // 000000076728: D6100008 02291500
	v_bfe_u32 v9, v0, 20, 10                                   // 000000076730: D6100009 02292900
	s_delay_alu instid0(VALU_DEP_3)                            // 000000076738: BF870003
	v_lshl_or_b32 v3, s2, 3, v2                                // 00000007673C: D6560003 04090602
	v_or_b32_e32 v0, 8, v2                                     // 000000076744: 38000488
	s_mov_b32 s33, 0                                           // 000000076748: BEA10080
	v_lshl_or_b32 v4, s3, 2, v8                                // 00000007674C: D6560004 04210403
	v_lshl_or_b32 v6, s4, 1, v9                                // 000000076754: D6560006 04250204
	s_waitcnt lgkmcnt(0)                                       // 00000007675C: BF89FC07
	v_add_co_u32 v2, s2, s8, v3                                // 000000076760: D7000202 00020608
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000076768: BF8700A1
	v_add_co_ci_u32_e64 v3, null, s9, 0, s2                    // 00000007676C: D5207C03 00090009
	v_add_co_u32 v4, s2, s10, v4                               // 000000076774: D7000204 0002080A
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 00000007677C: D5207C05 0009000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000076784: BF8700A3
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000076788: D73C0002 00020483
	v_add_co_u32 v6, s2, s6, v6                                // 000000076790: D7000206 00020C06
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 000000076798: D5207C07 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000767A0: BF870214
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000767A4: D73C0004 00020883
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000767AC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000767B4: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 0000000767B8: BF8701D3
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000767BC: D7006A04 00020800
	global_store_b64 v[2:3], v[0:1], off                       // 0000000767C4: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000767CC: D73C0002 00020C83
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000767D4: 400A0A01
	v_or_b32_e32 v0, 4, v8                                     // 0000000767D8: 38001084
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000767DC: D7006A02 00020400
	global_store_b64 v[4:5], v[0:1], off                       // 0000000767E4: DC6E0000 007C0004
	v_or_b32_e32 v0, 2, v9                                     // 0000000767EC: 38001282
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000767F0: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000767F4: DC6E0000 007C0002
	s_nop 0                                                    // 0000000767FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076800: BFB60003
	s_endpgm                                                   // 000000076804: BFB00000
add_long_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 000000076808: BF800000
	.long 0xbf800000                                           // 00000007680C: BF800000
	.long 0xbf800000                                           // 000000076810: BF800000
	.long 0xbf800000                                           // 000000076814: BF800000
	.long 0xbf800000                                           // 000000076818: BF800000
	.long 0xbf800000                                           // 00000007681C: BF800000
	.long 0xbf800000                                           // 000000076820: BF800000
	.long 0xbf800000                                           // 000000076824: BF800000
	.long 0xbf800000                                           // 000000076828: BF800000
	.long 0xbf800000                                           // 00000007682C: BF800000
	.long 0xbf800000                                           // 000000076830: BF800000
	.long 0xbf800000                                           // 000000076834: BF800000
	.long 0xbf800000                                           // 000000076838: BF800000
	.long 0xbf800000                                           // 00000007683C: BF800000
	.long 0xbf800000                                           // 000000076840: BF800000
	.long 0xbf800000                                           // 000000076844: BF800000
	.long 0xbf800000                                           // 000000076848: BF800000
	.long 0xbf800000                                           // 00000007684C: BF800000
	.long 0xbf800000                                           // 000000076850: BF800000
	.long 0xbf800000                                           // 000000076854: BF800000
	.long 0xbf800000                                           // 000000076858: BF800000
	.long 0xbf800000                                           // 00000007685C: BF800000
	.long 0xbf800000                                           // 000000076860: BF800000
	.long 0xbf800000                                           // 000000076864: BF800000
	.long 0xbf800000                                           // 000000076868: BF800000
	.long 0xbf800000                                           // 00000007686C: BF800000
	.long 0xbf800000                                           // 000000076870: BF800000
	.long 0xbf800000                                           // 000000076874: BF800000
	.long 0xbf800000                                           // 000000076878: BF800000
	.long 0xbf800000                                           // 00000007687C: BF800000
	.long 0xbf800000                                           // 000000076880: BF800000
	.long 0xbf800000                                           // 000000076884: BF800000
	.long 0xbf800000                                           // 000000076888: BF800000
	.long 0xbf800000                                           // 00000007688C: BF800000
	.long 0xbf800000                                           // 000000076890: BF800000
	.long 0xbf800000                                           // 000000076894: BF800000
	.long 0xbf800000                                           // 000000076898: BF800000
	.long 0xbf800000                                           // 00000007689C: BF800000
	.long 0xbf800000                                           // 0000000768A0: BF800000
	.long 0xbf800000                                           // 0000000768A4: BF800000
	.long 0xbf800000                                           // 0000000768A8: BF800000
	.long 0xbf800000                                           // 0000000768AC: BF800000
	.long 0xbf800000                                           // 0000000768B0: BF800000
	.long 0xbf800000                                           // 0000000768B4: BF800000
	.long 0xbf800000                                           // 0000000768B8: BF800000
	.long 0xbf800000                                           // 0000000768BC: BF800000
	.long 0xbf800000                                           // 0000000768C0: BF800000
	.long 0xbf800000                                           // 0000000768C4: BF800000
	.long 0xbf800000                                           // 0000000768C8: BF800000
	.long 0xbf800000                                           // 0000000768CC: BF800000
	.long 0xbf800000                                           // 0000000768D0: BF800000
	.long 0xbf800000                                           // 0000000768D4: BF800000
	.long 0xbf800000                                           // 0000000768D8: BF800000
	.long 0xbf800000                                           // 0000000768DC: BF800000
	.long 0xbf800000                                           // 0000000768E0: BF800000
	.long 0xbf800000                                           // 0000000768E4: BF800000
	.long 0xbf800000                                           // 0000000768E8: BF800000
	.long 0xbf800000                                           // 0000000768EC: BF800000
	.long 0xbf800000                                           // 0000000768F0: BF800000
	.long 0xbf800000                                           // 0000000768F4: BF800000
	.long 0xbf800000                                           // 0000000768F8: BF800000
	.long 0xbf800000                                           // 0000000768FC: BF800000

	.p2align	8
	.type	add_long_get_group_id_get_local_size,@function
	.size	add_long_get_group_id_get_local_size, add_long_get_group_id_get_local_size_symend-add_long_get_group_id_get_local_size
add_long_get_group_id_get_local_size:
	s_clause 0x1                                               // 000000076900: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076904: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007690C: F4040180 F8000048
	s_add_u32 s12, s2, 2                                       // 000000076914: 800C8202
	s_addc_u32 s13, 0, 0                                       // 000000076918: 820D8080
	v_dual_mov_b32 v6, s12 :: v_dual_and_b32 v1, 0x3ff, v0     // 00000007691C: CA24000C 060000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000076928: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000076930: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076938: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076940: BF8701A3
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000076944: D6560001 04050202
	s_mov_b32 s33, 0                                           // 00000007694C: BEA10080
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000076950: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000076958: BF8700B3
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000007695C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000076964: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 000000076968: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000076970: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000076978: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000076980: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000076984: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000007698C: D7000204 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000076994: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000007699C: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000769A4: BF8701B4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000769A8: D73C0002 00020483
	s_add_u32 s2, s3, 16                                       // 0000000769B0: 80029003
	s_addc_u32 s3, 0, 0                                        // 0000000769B4: 82038080
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000769B8: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000769C0: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000769C8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000769CC: D7006A02 00020400
	v_mov_b32_e32 v9, s3                                       // 0000000769D4: 7E120203
	v_dual_mov_b32 v7, s13 :: v_dual_mov_b32 v8, s2            // 0000000769D8: CA10000D 07080002
	s_add_u32 s2, s4, 2                                        // 0000000769E0: 80028204
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000769E4: 40060601
	s_addc_u32 s3, 0, 0                                        // 0000000769E8: 82038080
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000769EC: D7006A04 00020800
	v_mov_b32_e32 v11, s3                                      // 0000000769F4: 7E160203
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000769F8: 400A0A01
	v_mov_b32_e32 v10, s2                                      // 0000000769FC: 7E140202
	s_clause 0x2                                               // 000000076A00: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000076A04: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000076A0C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000076A14: DC6E0000 007C0A04
	s_nop 0                                                    // 000000076A1C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076A20: BFB60003
	s_endpgm                                                   // 000000076A24: BFB00000
add_long_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 000000076A28: BF800000
	.long 0xbf800000                                           // 000000076A2C: BF800000
	.long 0xbf800000                                           // 000000076A30: BF800000
	.long 0xbf800000                                           // 000000076A34: BF800000
	.long 0xbf800000                                           // 000000076A38: BF800000
	.long 0xbf800000                                           // 000000076A3C: BF800000
	.long 0xbf800000                                           // 000000076A40: BF800000
	.long 0xbf800000                                           // 000000076A44: BF800000
	.long 0xbf800000                                           // 000000076A48: BF800000
	.long 0xbf800000                                           // 000000076A4C: BF800000
	.long 0xbf800000                                           // 000000076A50: BF800000
	.long 0xbf800000                                           // 000000076A54: BF800000
	.long 0xbf800000                                           // 000000076A58: BF800000
	.long 0xbf800000                                           // 000000076A5C: BF800000
	.long 0xbf800000                                           // 000000076A60: BF800000
	.long 0xbf800000                                           // 000000076A64: BF800000
	.long 0xbf800000                                           // 000000076A68: BF800000
	.long 0xbf800000                                           // 000000076A6C: BF800000
	.long 0xbf800000                                           // 000000076A70: BF800000
	.long 0xbf800000                                           // 000000076A74: BF800000
	.long 0xbf800000                                           // 000000076A78: BF800000
	.long 0xbf800000                                           // 000000076A7C: BF800000
	.long 0xbf800000                                           // 000000076A80: BF800000
	.long 0xbf800000                                           // 000000076A84: BF800000
	.long 0xbf800000                                           // 000000076A88: BF800000
	.long 0xbf800000                                           // 000000076A8C: BF800000
	.long 0xbf800000                                           // 000000076A90: BF800000
	.long 0xbf800000                                           // 000000076A94: BF800000
	.long 0xbf800000                                           // 000000076A98: BF800000
	.long 0xbf800000                                           // 000000076A9C: BF800000
	.long 0xbf800000                                           // 000000076AA0: BF800000
	.long 0xbf800000                                           // 000000076AA4: BF800000
	.long 0xbf800000                                           // 000000076AA8: BF800000
	.long 0xbf800000                                           // 000000076AAC: BF800000
	.long 0xbf800000                                           // 000000076AB0: BF800000
	.long 0xbf800000                                           // 000000076AB4: BF800000
	.long 0xbf800000                                           // 000000076AB8: BF800000
	.long 0xbf800000                                           // 000000076ABC: BF800000
	.long 0xbf800000                                           // 000000076AC0: BF800000
	.long 0xbf800000                                           // 000000076AC4: BF800000
	.long 0xbf800000                                           // 000000076AC8: BF800000
	.long 0xbf800000                                           // 000000076ACC: BF800000
	.long 0xbf800000                                           // 000000076AD0: BF800000
	.long 0xbf800000                                           // 000000076AD4: BF800000
	.long 0xbf800000                                           // 000000076AD8: BF800000
	.long 0xbf800000                                           // 000000076ADC: BF800000
	.long 0xbf800000                                           // 000000076AE0: BF800000
	.long 0xbf800000                                           // 000000076AE4: BF800000
	.long 0xbf800000                                           // 000000076AE8: BF800000
	.long 0xbf800000                                           // 000000076AEC: BF800000
	.long 0xbf800000                                           // 000000076AF0: BF800000
	.long 0xbf800000                                           // 000000076AF4: BF800000
	.long 0xbf800000                                           // 000000076AF8: BF800000
	.long 0xbf800000                                           // 000000076AFC: BF800000

	.p2align	8
	.type	add_long_get_local_size_get_local_size,@function
	.size	add_long_get_local_size_get_local_size, add_long_get_local_size_get_local_size_symend-add_long_get_local_size_get_local_size
add_long_get_local_size_get_local_size:
	s_clause 0x2                                               // 000000076B00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076B04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000076B0C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000076B14: F4040000 F8000048
	s_mov_b64 s[12:13], 4                                      // 000000076B1C: BE8C0184
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 000000076B20: BF870249
	v_dual_mov_b32 v8, s12 :: v_dual_and_b32 v1, 0x3ff, v0     // 000000076B24: CA24000C 080000FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000076B30: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076B38: D6100000 02292900
	v_mov_b32_e32 v9, s13                                      // 000000076B40: 7E12020D
	v_lshl_or_b32 v3, s2, 1, v1                                // 000000076B44: D6560003 04050202
	v_mov_b32_e32 v1, 0                                        // 000000076B4C: 7E020280
	v_lshl_or_b32 v4, s3, 1, v2                                // 000000076B50: D6560004 04090203
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000076B58: D6560000 04010404
	s_mov_b32 s33, 0                                           // 000000076B60: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000076B64: BF89FC07
	v_add_co_u32 v2, s2, s8, v3                                // 000000076B68: D7000202 00020608
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000076B70: BF8700A1
	v_add_co_ci_u32_e64 v3, null, s9, 0, s2                    // 000000076B74: D5207C03 00090009
	v_add_co_u32 v4, s2, s10, v4                               // 000000076B7C: D7000204 0002080A
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 000000076B84: D5207C05 0009000B
	v_add_co_u32 v6, s0, s0, v0                                // 000000076B8C: D7000006 00020000
	v_mov_b32_e32 v0, 8                                        // 000000076B94: 7E000288
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000076B98: D73C0002 00020483
	v_add_co_ci_u32_e64 v7, null, s1, 0, s0                    // 000000076BA0: D5207C07 00010001
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000076BA8: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076BB0: BF870193
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000076BB4: D7006A02 00020406
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 000000076BBC: D73C0006 00020C83
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000076BC4: 40060607
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000076BC8: BF870224
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000076BCC: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000076BD4: 400A0A07
	v_add_co_u32 v6, vcc_lo, s6, v6                            // 000000076BD8: D7006A06 00020C06
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo             // 000000076BE0: 400E0E07
	s_clause 0x2                                               // 000000076BE4: BF850002
	global_store_b64 v[2:3], v[8:9], off                       // 000000076BE8: DC6E0000 007C0802
	global_store_b64 v[4:5], v[8:9], off                       // 000000076BF0: DC6E0000 007C0804
	global_store_b64 v[6:7], v[0:1], off                       // 000000076BF8: DC6E0000 007C0006
	s_nop 0                                                    // 000000076C00: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076C04: BFB60003
	s_endpgm                                                   // 000000076C08: BFB00000
add_long_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 000000076C0C: BF800000
	.long 0xbf800000                                           // 000000076C10: BF800000
	.long 0xbf800000                                           // 000000076C14: BF800000
	.long 0xbf800000                                           // 000000076C18: BF800000
	.long 0xbf800000                                           // 000000076C1C: BF800000
	.long 0xbf800000                                           // 000000076C20: BF800000
	.long 0xbf800000                                           // 000000076C24: BF800000
	.long 0xbf800000                                           // 000000076C28: BF800000
	.long 0xbf800000                                           // 000000076C2C: BF800000
	.long 0xbf800000                                           // 000000076C30: BF800000
	.long 0xbf800000                                           // 000000076C34: BF800000
	.long 0xbf800000                                           // 000000076C38: BF800000
	.long 0xbf800000                                           // 000000076C3C: BF800000
	.long 0xbf800000                                           // 000000076C40: BF800000
	.long 0xbf800000                                           // 000000076C44: BF800000
	.long 0xbf800000                                           // 000000076C48: BF800000
	.long 0xbf800000                                           // 000000076C4C: BF800000
	.long 0xbf800000                                           // 000000076C50: BF800000
	.long 0xbf800000                                           // 000000076C54: BF800000
	.long 0xbf800000                                           // 000000076C58: BF800000
	.long 0xbf800000                                           // 000000076C5C: BF800000
	.long 0xbf800000                                           // 000000076C60: BF800000
	.long 0xbf800000                                           // 000000076C64: BF800000
	.long 0xbf800000                                           // 000000076C68: BF800000
	.long 0xbf800000                                           // 000000076C6C: BF800000
	.long 0xbf800000                                           // 000000076C70: BF800000
	.long 0xbf800000                                           // 000000076C74: BF800000
	.long 0xbf800000                                           // 000000076C78: BF800000
	.long 0xbf800000                                           // 000000076C7C: BF800000
	.long 0xbf800000                                           // 000000076C80: BF800000
	.long 0xbf800000                                           // 000000076C84: BF800000
	.long 0xbf800000                                           // 000000076C88: BF800000
	.long 0xbf800000                                           // 000000076C8C: BF800000
	.long 0xbf800000                                           // 000000076C90: BF800000
	.long 0xbf800000                                           // 000000076C94: BF800000
	.long 0xbf800000                                           // 000000076C98: BF800000
	.long 0xbf800000                                           // 000000076C9C: BF800000
	.long 0xbf800000                                           // 000000076CA0: BF800000
	.long 0xbf800000                                           // 000000076CA4: BF800000
	.long 0xbf800000                                           // 000000076CA8: BF800000
	.long 0xbf800000                                           // 000000076CAC: BF800000
	.long 0xbf800000                                           // 000000076CB0: BF800000
	.long 0xbf800000                                           // 000000076CB4: BF800000
	.long 0xbf800000                                           // 000000076CB8: BF800000
	.long 0xbf800000                                           // 000000076CBC: BF800000
	.long 0xbf800000                                           // 000000076CC0: BF800000
	.long 0xbf800000                                           // 000000076CC4: BF800000
	.long 0xbf800000                                           // 000000076CC8: BF800000
	.long 0xbf800000                                           // 000000076CCC: BF800000
	.long 0xbf800000                                           // 000000076CD0: BF800000
	.long 0xbf800000                                           // 000000076CD4: BF800000
	.long 0xbf800000                                           // 000000076CD8: BF800000
	.long 0xbf800000                                           // 000000076CDC: BF800000
	.long 0xbf800000                                           // 000000076CE0: BF800000
	.long 0xbf800000                                           // 000000076CE4: BF800000
	.long 0xbf800000                                           // 000000076CE8: BF800000
	.long 0xbf800000                                           // 000000076CEC: BF800000
	.long 0xbf800000                                           // 000000076CF0: BF800000
	.long 0xbf800000                                           // 000000076CF4: BF800000
	.long 0xbf800000                                           // 000000076CF8: BF800000
	.long 0xbf800000                                           // 000000076CFC: BF800000

	.p2align	8
	.type	add_long_get_global_id_get_local_size,@function
	.size	add_long_get_global_id_get_local_size, add_long_get_global_id_get_local_size_symend-add_long_get_global_id_get_local_size
add_long_get_global_id_get_local_size:
	s_clause 0x1                                               // 000000076D00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076D04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000076D0C: F4040180 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000076D14: CA240080 020000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000076D20: F4040000 F8000048
	v_bfe_u32 v3, v0, 10, 10                                   // 000000076D28: D6100003 02291500
	v_bfe_u32 v6, v0, 20, 10                                   // 000000076D30: D6100006 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076D38: BF8701A3
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000076D3C: D6560001 04050202
	s_mov_b32 s33, 0                                           // 000000076D44: BEA10080
	v_lshl_or_b32 v4, s3, 1, v3                                // 000000076D48: D6560004 040D0203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076D50: BF870193
	v_lshl_or_b32 v8, s4, 2, v6                                // 000000076D54: D6560008 04190404
	v_lshlrev_b64 v[2:3], 3, v[1:2]                            // 000000076D5C: D73C0002 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000076D64: BF89FC07
	v_add_co_u32 v5, s2, s8, v1                                // 000000076D68: D7000205 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076D70: BF870191
	v_add_co_ci_u32_e64 v7, null, s9, 0, s2                    // 000000076D74: D5207C07 00090009
	v_add_co_u32 v0, vcc_lo, s6, v2                            // 000000076D7C: D7006A00 00020406
	v_add_co_u32 v4, s2, s10, v4                               // 000000076D84: D7000204 0002080A
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v3, vcc_lo             // 000000076D8C: 40020607
	v_add_co_u32 v2, vcc_lo, v5, 2                             // 000000076D90: D7006A02 00010505
	v_add_co_ci_u32_e64 v5, null, s11, 0, s2                   // 000000076D98: D5207C05 0009000B
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v7, vcc_lo              // 000000076DA0: 40060E80
	v_add_co_u32 v6, vcc_lo, v4, 2                             // 000000076DA4: D7006A06 00010504
	v_add_co_u32 v8, s0, s0, v8                                // 000000076DAC: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000076DB4: BF870134
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v5, vcc_lo              // 000000076DB8: 400E0A80
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000076DBC: D73C0004 00020883
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 000000076DC4: D5207C09 00010001
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000076DCC: D7006A04 00020806
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000076DD4: BF870212
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 000000076DD8: D73C000A 00021083
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000076DE0: 400A0A07
	v_add_co_u32 v8, vcc_lo, v8, 4                             // 000000076DE4: D7006A08 00010908
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v9, vcc_lo              // 000000076DEC: 40121280
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076DF0: BF870004
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 000000076DF4: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000076DFC: 40161607
	s_clause 0x2                                               // 000000076E00: BF850002
	global_store_b64 v[0:1], v[2:3], off                       // 000000076E04: DC6E0000 007C0200
	global_store_b64 v[4:5], v[6:7], off                       // 000000076E0C: DC6E0000 007C0604
	global_store_b64 v[10:11], v[8:9], off                     // 000000076E14: DC6E0000 007C080A
	s_nop 0                                                    // 000000076E1C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076E20: BFB60003
	s_endpgm                                                   // 000000076E24: BFB00000
add_long_get_global_id_get_local_size_symend:
	.long 0xbf800000                                           // 000000076E28: BF800000
	.long 0xbf800000                                           // 000000076E2C: BF800000
	.long 0xbf800000                                           // 000000076E30: BF800000
	.long 0xbf800000                                           // 000000076E34: BF800000
	.long 0xbf800000                                           // 000000076E38: BF800000
	.long 0xbf800000                                           // 000000076E3C: BF800000
	.long 0xbf800000                                           // 000000076E40: BF800000
	.long 0xbf800000                                           // 000000076E44: BF800000
	.long 0xbf800000                                           // 000000076E48: BF800000
	.long 0xbf800000                                           // 000000076E4C: BF800000
	.long 0xbf800000                                           // 000000076E50: BF800000
	.long 0xbf800000                                           // 000000076E54: BF800000
	.long 0xbf800000                                           // 000000076E58: BF800000
	.long 0xbf800000                                           // 000000076E5C: BF800000
	.long 0xbf800000                                           // 000000076E60: BF800000
	.long 0xbf800000                                           // 000000076E64: BF800000
	.long 0xbf800000                                           // 000000076E68: BF800000
	.long 0xbf800000                                           // 000000076E6C: BF800000
	.long 0xbf800000                                           // 000000076E70: BF800000
	.long 0xbf800000                                           // 000000076E74: BF800000
	.long 0xbf800000                                           // 000000076E78: BF800000
	.long 0xbf800000                                           // 000000076E7C: BF800000
	.long 0xbf800000                                           // 000000076E80: BF800000
	.long 0xbf800000                                           // 000000076E84: BF800000
	.long 0xbf800000                                           // 000000076E88: BF800000
	.long 0xbf800000                                           // 000000076E8C: BF800000
	.long 0xbf800000                                           // 000000076E90: BF800000
	.long 0xbf800000                                           // 000000076E94: BF800000
	.long 0xbf800000                                           // 000000076E98: BF800000
	.long 0xbf800000                                           // 000000076E9C: BF800000
	.long 0xbf800000                                           // 000000076EA0: BF800000
	.long 0xbf800000                                           // 000000076EA4: BF800000
	.long 0xbf800000                                           // 000000076EA8: BF800000
	.long 0xbf800000                                           // 000000076EAC: BF800000
	.long 0xbf800000                                           // 000000076EB0: BF800000
	.long 0xbf800000                                           // 000000076EB4: BF800000
	.long 0xbf800000                                           // 000000076EB8: BF800000
	.long 0xbf800000                                           // 000000076EBC: BF800000
	.long 0xbf800000                                           // 000000076EC0: BF800000
	.long 0xbf800000                                           // 000000076EC4: BF800000
	.long 0xbf800000                                           // 000000076EC8: BF800000
	.long 0xbf800000                                           // 000000076ECC: BF800000
	.long 0xbf800000                                           // 000000076ED0: BF800000
	.long 0xbf800000                                           // 000000076ED4: BF800000
	.long 0xbf800000                                           // 000000076ED8: BF800000
	.long 0xbf800000                                           // 000000076EDC: BF800000
	.long 0xbf800000                                           // 000000076EE0: BF800000
	.long 0xbf800000                                           // 000000076EE4: BF800000
	.long 0xbf800000                                           // 000000076EE8: BF800000
	.long 0xbf800000                                           // 000000076EEC: BF800000
	.long 0xbf800000                                           // 000000076EF0: BF800000
	.long 0xbf800000                                           // 000000076EF4: BF800000
	.long 0xbf800000                                           // 000000076EF8: BF800000
	.long 0xbf800000                                           // 000000076EFC: BF800000

	.p2align	8
	.type	add_long_get_global_size_get_local_size,@function
	.size	add_long_get_global_size_get_local_size, add_long_get_global_size_get_local_size_symend-add_long_get_global_size_get_local_size
add_long_get_global_size_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 000000076F00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000076F04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000076F0C: BEA10080
	s_clause 0x1                                               // 000000076F10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000076F14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000076F1C: DC4A0026 07000001
	s_clause 0x3                                               // 000000076F24: BF850003
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000076F28: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076F30: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000076F38: F4040300 F8000048
	s_load_b64 s[14:15], s[0:1], null                          // 000000076F40: F4040380 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000076F48: 360200FF 000003FF
	s_load_b32 s0, s[0:1], 0x18                                // 000000076F50: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076F58: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000076F60: D6560002 04090203
	s_mov_b32 s1, 0                                            // 000000076F68: BE810080
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000076F6C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000076F74: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000076F78: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000076F80: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 000000076F84: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 000000076F88: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000076F90: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000076F94: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000076F9C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000076FA4: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 000000076FAC: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000076FB4: BF870154
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000076FB8: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 000000076FC0: D5207C05 000D000D
	s_lshl_b32 s3, s7, 1                                       // 000000076FC8: 84038107
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000076FCC: D73C0002 00020483
	s_lshl_b32 s0, s0, 1                                       // 000000076FD4: 84008100
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000076FD8: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s14, v0                           // 000000076FE0: D7006A00 0002000E
	v_add_co_ci_u32_e32 v1, vcc_lo, s15, v1, vcc_lo            // 000000076FE8: 4002020F
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076FEC: BF870004
	v_add_co_u32 v2, vcc_lo, s14, v2                           // 000000076FF0: D7006A02 0002040E
	v_add_co_ci_u32_e32 v3, vcc_lo, s15, v3, vcc_lo            // 000000076FF8: 4006060F
	v_add_co_u32 v4, vcc_lo, s14, v4                           // 000000076FFC: D7006A04 0002080E
	v_add_co_ci_u32_e32 v5, vcc_lo, s15, v5, vcc_lo            // 000000077004: 400A0A0F
	s_waitcnt vmcnt(1)                                         // 000000077008: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 00000007700C: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000077014: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000077018: BF8903F7
	v_add_nc_u32_e32 v10, s0, v7                               // 00000007701C: 4A140E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077020: BF870193
	v_add_nc_u32_e32 v8, s2, v8                                // 000000077024: 4A101002
	v_add_nc_u32_e32 v9, s3, v6                                // 000000077028: 4A120C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007702C: BF870092
	v_add_co_u32 v6, s0, v8, 16                                // 000000077030: D7000006 00012108
	v_add_co_ci_u32_e64 v7, null, s1, 0, s0                    // 000000077038: D5207C07 00010001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077040: BF870093
	v_add_co_u32 v8, s0, v9, 2                                 // 000000077044: D7000008 00010509
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 00000007704C: D5207C09 00010001
	v_add_co_u32 v10, s0, v10, 2                               // 000000077054: D700000A 0001050A
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007705C: BF870001
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 000000077060: D5207C0B 00010080
	s_clause 0x2                                               // 000000077068: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007706C: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000077074: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007707C: DC6E0000 007C0A04
	s_nop 0                                                    // 000000077084: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077088: BFB60003
	s_endpgm                                                   // 00000007708C: BFB00000
add_long_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 000000077090: BF800000
	.long 0xbf800000                                           // 000000077094: BF800000
	.long 0xbf800000                                           // 000000077098: BF800000
	.long 0xbf800000                                           // 00000007709C: BF800000
	.long 0xbf800000                                           // 0000000770A0: BF800000
	.long 0xbf800000                                           // 0000000770A4: BF800000
	.long 0xbf800000                                           // 0000000770A8: BF800000
	.long 0xbf800000                                           // 0000000770AC: BF800000
	.long 0xbf800000                                           // 0000000770B0: BF800000
	.long 0xbf800000                                           // 0000000770B4: BF800000
	.long 0xbf800000                                           // 0000000770B8: BF800000
	.long 0xbf800000                                           // 0000000770BC: BF800000
	.long 0xbf800000                                           // 0000000770C0: BF800000
	.long 0xbf800000                                           // 0000000770C4: BF800000
	.long 0xbf800000                                           // 0000000770C8: BF800000
	.long 0xbf800000                                           // 0000000770CC: BF800000
	.long 0xbf800000                                           // 0000000770D0: BF800000
	.long 0xbf800000                                           // 0000000770D4: BF800000
	.long 0xbf800000                                           // 0000000770D8: BF800000
	.long 0xbf800000                                           // 0000000770DC: BF800000
	.long 0xbf800000                                           // 0000000770E0: BF800000
	.long 0xbf800000                                           // 0000000770E4: BF800000
	.long 0xbf800000                                           // 0000000770E8: BF800000
	.long 0xbf800000                                           // 0000000770EC: BF800000
	.long 0xbf800000                                           // 0000000770F0: BF800000
	.long 0xbf800000                                           // 0000000770F4: BF800000
	.long 0xbf800000                                           // 0000000770F8: BF800000
	.long 0xbf800000                                           // 0000000770FC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_get_local_size,@function
	.size	add_long_get_num_groups_get_local_size, add_long_get_num_groups_get_local_size_symend-add_long_get_num_groups_get_local_size
add_long_get_num_groups_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 000000077100: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000077104: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007710C: BEA10080
	s_clause 0x1                                               // 000000077110: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000077114: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007711C: DC4A0026 07000001
	s_clause 0x1                                               // 000000077124: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077128: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000077130: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000077138: 360200FF 000003FF
	s_clause 0x1                                               // 000000077140: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000077144: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 00000007714C: F4000140 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077154: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007715C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077164: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007716C: BF870123
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000077170: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000077178: BF89FC07
	v_add_co_u32 v0, s0, s8, v1                                // 00000007717C: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000077184: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 000000077188: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 000000077190: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 000000077198: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000771A0: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000771A4: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 0000000771AC: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000771B4: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 0000000771BC: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000771C4: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 0000000771C8: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 0000000771D0: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000771D8: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 0000000771DC: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 0000000771E4: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000771EC: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 0000000771F4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 0000000771F8: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 0000000771FC: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077200: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000077204: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000077208: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 00000007720C: 8201800E
	s_add_u32 s2, s1, 2                                        // 000000077210: 80028201
	s_addc_u32 s3, 0, 0                                        // 000000077214: 82038080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077218: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007721C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000077220: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 000000077224: 8201800F
	v_mov_b32_e32 v7, s3                                       // 000000077228: 7E0E0203
	s_add_u32 s0, s1, 2                                        // 00000007722C: 80008201
	s_addc_u32 s1, 0, 0                                        // 000000077230: 82018080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077234: BF07806A
	v_mov_b32_e32 v6, s2                                       // 000000077238: 7E0C0202
	s_addc_u32 s2, s5, 0                                       // 00000007723C: 82028005
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 000000077240: CA100001 09080000
	s_add_u32 s0, s2, 4                                        // 000000077248: 80008402
	s_addc_u32 s1, 0, 0                                        // 00000007724C: 82018080
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000077250: D7006A04 0002080C
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 000000077258: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000077260: 400A0A0D
	s_clause 0x2                                               // 000000077264: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000077268: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000077270: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000077278: DC6E0000 007C0A04
	s_nop 0                                                    // 000000077280: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077284: BFB60003
	s_endpgm                                                   // 000000077288: BFB00000
add_long_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 00000007728C: BF800000
	.long 0xbf800000                                           // 000000077290: BF800000
	.long 0xbf800000                                           // 000000077294: BF800000
	.long 0xbf800000                                           // 000000077298: BF800000
	.long 0xbf800000                                           // 00000007729C: BF800000
	.long 0xbf800000                                           // 0000000772A0: BF800000
	.long 0xbf800000                                           // 0000000772A4: BF800000
	.long 0xbf800000                                           // 0000000772A8: BF800000
	.long 0xbf800000                                           // 0000000772AC: BF800000
	.long 0xbf800000                                           // 0000000772B0: BF800000
	.long 0xbf800000                                           // 0000000772B4: BF800000
	.long 0xbf800000                                           // 0000000772B8: BF800000
	.long 0xbf800000                                           // 0000000772BC: BF800000
	.long 0xbf800000                                           // 0000000772C0: BF800000
	.long 0xbf800000                                           // 0000000772C4: BF800000
	.long 0xbf800000                                           // 0000000772C8: BF800000
	.long 0xbf800000                                           // 0000000772CC: BF800000
	.long 0xbf800000                                           // 0000000772D0: BF800000
	.long 0xbf800000                                           // 0000000772D4: BF800000
	.long 0xbf800000                                           // 0000000772D8: BF800000
	.long 0xbf800000                                           // 0000000772DC: BF800000
	.long 0xbf800000                                           // 0000000772E0: BF800000
	.long 0xbf800000                                           // 0000000772E4: BF800000
	.long 0xbf800000                                           // 0000000772E8: BF800000
	.long 0xbf800000                                           // 0000000772EC: BF800000
	.long 0xbf800000                                           // 0000000772F0: BF800000
	.long 0xbf800000                                           // 0000000772F4: BF800000
	.long 0xbf800000                                           // 0000000772F8: BF800000
	.long 0xbf800000                                           // 0000000772FC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_get_local_size,@function
	.size	add_long_get_work_dim_get_local_size, add_long_get_work_dim_get_local_size_symend-add_long_get_work_dim_get_local_size
add_long_get_work_dim_get_local_size:
	s_clause 0x2                                               // 000000077300: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000077304: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007730C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000077314: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007731C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000077324: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007732C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077334: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007733C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077340: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000077348: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000077350: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000077354: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007735C: BF89FC07
	s_and_b32 s4, s5, 0xffff                                   // 000000077360: 8B04FF05 0000FFFF
	v_add_co_u32 v0, s2, s8, v1                                // 000000077368: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000077370: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000077378: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000077380: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000077384: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000007738C: D7000204 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000077394: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000007739C: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000773A4: BF8701B4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000773A8: D73C0002 00020483
	s_add_u32 s2, s4, 2                                        // 0000000773B0: 80028204
	s_addc_u32 s3, 0, 0                                        // 0000000773B4: 82038080
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000773B8: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000773C0: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000773C8: 40020201
	v_mov_b32_e32 v7, s3                                       // 0000000773CC: 7E0E0203
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000773D0: D7006A02 00020400
	v_mov_b32_e32 v6, s2                                       // 0000000773D8: 7E0C0202
	s_add_u32 s2, s4, 4                                        // 0000000773DC: 80028404
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000773E0: 40060601
	s_addc_u32 s3, 0, 0                                        // 0000000773E4: 82038080
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000773E8: D7006A04 00020800
	v_dual_mov_b32 v9, s3 :: v_dual_mov_b32 v8, s2             // 0000000773F0: CA100003 09080002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000773F8: 400A0A01
	s_clause 0x2                                               // 0000000773FC: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000077400: DC6E0000 007C0600
	global_store_b64 v[2:3], v[6:7], off                       // 000000077408: DC6E0000 007C0602
	global_store_b64 v[4:5], v[8:9], off                       // 000000077410: DC6E0000 007C0804
	s_nop 0                                                    // 000000077418: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007741C: BFB60003
	s_endpgm                                                   // 000000077420: BFB00000
add_long_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 000000077424: BF800000
	.long 0xbf800000                                           // 000000077428: BF800000
	.long 0xbf800000                                           // 00000007742C: BF800000
	.long 0xbf800000                                           // 000000077430: BF800000
	.long 0xbf800000                                           // 000000077434: BF800000
	.long 0xbf800000                                           // 000000077438: BF800000
	.long 0xbf800000                                           // 00000007743C: BF800000
	.long 0xbf800000                                           // 000000077440: BF800000
	.long 0xbf800000                                           // 000000077444: BF800000
	.long 0xbf800000                                           // 000000077448: BF800000
	.long 0xbf800000                                           // 00000007744C: BF800000
	.long 0xbf800000                                           // 000000077450: BF800000
	.long 0xbf800000                                           // 000000077454: BF800000
	.long 0xbf800000                                           // 000000077458: BF800000
	.long 0xbf800000                                           // 00000007745C: BF800000
	.long 0xbf800000                                           // 000000077460: BF800000
	.long 0xbf800000                                           // 000000077464: BF800000
	.long 0xbf800000                                           // 000000077468: BF800000
	.long 0xbf800000                                           // 00000007746C: BF800000
	.long 0xbf800000                                           // 000000077470: BF800000
	.long 0xbf800000                                           // 000000077474: BF800000
	.long 0xbf800000                                           // 000000077478: BF800000
	.long 0xbf800000                                           // 00000007747C: BF800000
	.long 0xbf800000                                           // 000000077480: BF800000
	.long 0xbf800000                                           // 000000077484: BF800000
	.long 0xbf800000                                           // 000000077488: BF800000
	.long 0xbf800000                                           // 00000007748C: BF800000
	.long 0xbf800000                                           // 000000077490: BF800000
	.long 0xbf800000                                           // 000000077494: BF800000
	.long 0xbf800000                                           // 000000077498: BF800000
	.long 0xbf800000                                           // 00000007749C: BF800000
	.long 0xbf800000                                           // 0000000774A0: BF800000
	.long 0xbf800000                                           // 0000000774A4: BF800000
	.long 0xbf800000                                           // 0000000774A8: BF800000
	.long 0xbf800000                                           // 0000000774AC: BF800000
	.long 0xbf800000                                           // 0000000774B0: BF800000
	.long 0xbf800000                                           // 0000000774B4: BF800000
	.long 0xbf800000                                           // 0000000774B8: BF800000
	.long 0xbf800000                                           // 0000000774BC: BF800000
	.long 0xbf800000                                           // 0000000774C0: BF800000
	.long 0xbf800000                                           // 0000000774C4: BF800000
	.long 0xbf800000                                           // 0000000774C8: BF800000
	.long 0xbf800000                                           // 0000000774CC: BF800000
	.long 0xbf800000                                           // 0000000774D0: BF800000
	.long 0xbf800000                                           // 0000000774D4: BF800000
	.long 0xbf800000                                           // 0000000774D8: BF800000
	.long 0xbf800000                                           // 0000000774DC: BF800000
	.long 0xbf800000                                           // 0000000774E0: BF800000
	.long 0xbf800000                                           // 0000000774E4: BF800000
	.long 0xbf800000                                           // 0000000774E8: BF800000
	.long 0xbf800000                                           // 0000000774EC: BF800000
	.long 0xbf800000                                           // 0000000774F0: BF800000
	.long 0xbf800000                                           // 0000000774F4: BF800000
	.long 0xbf800000                                           // 0000000774F8: BF800000
	.long 0xbf800000                                           // 0000000774FC: BF800000

	.p2align	8
	.type	add_long_x_get_global_id,@function
	.size	add_long_x_get_global_id, add_long_x_get_global_id_symend-add_long_x_get_global_id
add_long_x_get_global_id:
	s_clause 0x1                                               // 000000077500: BF850001
	s_load_b32 s5, s[0:1], 0x8                                 // 000000077504: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007750C: F4080200 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000077514: 360200FF 000003FF
	s_clause 0x1                                               // 00000007751C: BF850001
	s_load_b64 s[6:7], s[0:1], null                            // 000000077520: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000077528: F4040000 F8000048
	v_bfe_u32 v2, v0, 10, 10                                   // 000000077530: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077538: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000077540: BEA10080
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000077544: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007754C: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000077550: D6560002 04090203
	v_lshl_or_b32 v8, s4, 1, v0                                // 000000077558: D6560008 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000077560: BF89FC07
	s_ashr_i32 s2, s5, 31                                      // 000000077564: 86029F05
	v_add_co_u32 v0, s3, s8, v1                                // 000000077568: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000077570: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000077574: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000007757C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000077584: D5207C03 000D000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 00000007758C: BF870243
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000077590: D73C0004 00020083
	v_add_co_u32 v0, vcc_lo, v0, s5                            // 000000077598: D7006A00 00000B00
	v_add_co_ci_u32_e32 v1, vcc_lo, s2, v1, vcc_lo             // 0000000775A0: 40020202
	v_add_co_u32 v8, s0, s0, v8                                // 0000000775A4: D7000008 00021000
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000775AC: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000775B4: 400A0A07
	v_add_co_u32 v6, vcc_lo, v2, s5                            // 0000000775B8: D7006A06 00000B02
	v_add_co_ci_u32_e32 v7, vcc_lo, s2, v3, vcc_lo             // 0000000775C0: 400E0602
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000775C4: D73C0002 00020483
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 0000000775CC: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000775D4: BF870112
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000775D8: D7006A02 00020406
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 0000000775E0: D73C000A 00021083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 0000000775E8: BF870234
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000775EC: 40060607
	v_add_co_u32 v8, vcc_lo, v8, s5                            // 0000000775F0: D7006A08 00000B08
	v_add_co_ci_u32_e32 v9, vcc_lo, s2, v9, vcc_lo             // 0000000775F8: 40121202
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000775FC: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000077604: 40161607
	s_clause 0x2                                               // 000000077608: BF850002
	global_store_b64 v[4:5], v[0:1], off                       // 00000007760C: DC6E0000 007C0004
	global_store_b64 v[2:3], v[6:7], off                       // 000000077614: DC6E0000 007C0602
	global_store_b64 v[10:11], v[8:9], off                     // 00000007761C: DC6E0000 007C080A
	s_nop 0                                                    // 000000077624: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077628: BFB60003
	s_endpgm                                                   // 00000007762C: BFB00000
add_long_x_get_global_id_symend:
	.long 0xbf800000                                           // 000000077630: BF800000
	.long 0xbf800000                                           // 000000077634: BF800000
	.long 0xbf800000                                           // 000000077638: BF800000
	.long 0xbf800000                                           // 00000007763C: BF800000
	.long 0xbf800000                                           // 000000077640: BF800000
	.long 0xbf800000                                           // 000000077644: BF800000
	.long 0xbf800000                                           // 000000077648: BF800000
	.long 0xbf800000                                           // 00000007764C: BF800000
	.long 0xbf800000                                           // 000000077650: BF800000
	.long 0xbf800000                                           // 000000077654: BF800000
	.long 0xbf800000                                           // 000000077658: BF800000
	.long 0xbf800000                                           // 00000007765C: BF800000
	.long 0xbf800000                                           // 000000077660: BF800000
	.long 0xbf800000                                           // 000000077664: BF800000
	.long 0xbf800000                                           // 000000077668: BF800000
	.long 0xbf800000                                           // 00000007766C: BF800000
	.long 0xbf800000                                           // 000000077670: BF800000
	.long 0xbf800000                                           // 000000077674: BF800000
	.long 0xbf800000                                           // 000000077678: BF800000
	.long 0xbf800000                                           // 00000007767C: BF800000
	.long 0xbf800000                                           // 000000077680: BF800000
	.long 0xbf800000                                           // 000000077684: BF800000
	.long 0xbf800000                                           // 000000077688: BF800000
	.long 0xbf800000                                           // 00000007768C: BF800000
	.long 0xbf800000                                           // 000000077690: BF800000
	.long 0xbf800000                                           // 000000077694: BF800000
	.long 0xbf800000                                           // 000000077698: BF800000
	.long 0xbf800000                                           // 00000007769C: BF800000
	.long 0xbf800000                                           // 0000000776A0: BF800000
	.long 0xbf800000                                           // 0000000776A4: BF800000
	.long 0xbf800000                                           // 0000000776A8: BF800000
	.long 0xbf800000                                           // 0000000776AC: BF800000
	.long 0xbf800000                                           // 0000000776B0: BF800000
	.long 0xbf800000                                           // 0000000776B4: BF800000
	.long 0xbf800000                                           // 0000000776B8: BF800000
	.long 0xbf800000                                           // 0000000776BC: BF800000
	.long 0xbf800000                                           // 0000000776C0: BF800000
	.long 0xbf800000                                           // 0000000776C4: BF800000
	.long 0xbf800000                                           // 0000000776C8: BF800000
	.long 0xbf800000                                           // 0000000776CC: BF800000
	.long 0xbf800000                                           // 0000000776D0: BF800000
	.long 0xbf800000                                           // 0000000776D4: BF800000
	.long 0xbf800000                                           // 0000000776D8: BF800000
	.long 0xbf800000                                           // 0000000776DC: BF800000
	.long 0xbf800000                                           // 0000000776E0: BF800000
	.long 0xbf800000                                           // 0000000776E4: BF800000
	.long 0xbf800000                                           // 0000000776E8: BF800000
	.long 0xbf800000                                           // 0000000776EC: BF800000
	.long 0xbf800000                                           // 0000000776F0: BF800000
	.long 0xbf800000                                           // 0000000776F4: BF800000
	.long 0xbf800000                                           // 0000000776F8: BF800000
	.long 0xbf800000                                           // 0000000776FC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_get_global_id,@function
	.size	add_long_get_global_offset_get_global_id, add_long_get_global_offset_get_global_id_symend-add_long_get_global_offset_get_global_id
add_long_get_global_offset_get_global_id:
	s_clause 0x1                                               // 000000077700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007770C: F4040180 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000077714: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007771C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077724: D6100000 02292900
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007772C: F4040000 F8000048
	s_mov_b32 s33, 0                                           // 000000077734: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077738: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000077740: D6560002 04090803
	v_lshl_or_b32 v8, s4, 1, v0                                // 000000077748: D6560008 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000077750: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077754: BF870093
	v_add_co_u32 v0, s2, s8, v1                                // 000000077758: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000077760: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000077768: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077770: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000077774: D5207C03 0009000B
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 00000007777C: D73C0004 00020083
	v_add_co_u32 v0, vcc_lo, v0, s8                            // 000000077784: D7006A00 00001100
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 00000007778C: 40020209
	v_add_co_u32 v8, s2, s0, v8                                // 000000077790: D7000208 00021000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000077798: BF870004
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 00000007779C: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000777A4: 400A0A07
	v_add_co_u32 v6, vcc_lo, v2, s10                           // 0000000777A8: D7006A06 00001502
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v3, vcc_lo            // 0000000777B0: 400E060B
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000777B4: D73C0002 00020483
	v_add_co_ci_u32_e64 v9, null, s1, 0, s2                    // 0000000777BC: D5207C09 00090001
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000777C4: BF870112
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000777C8: D7006A02 00020406
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 0000000777D0: D73C000A 00021083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 0000000777D8: BF870234
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000777DC: 40060607
	v_add_co_u32 v8, vcc_lo, v8, s0                            // 0000000777E0: D7006A08 00000108
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 0000000777E8: 40121201
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000777EC: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 0000000777F4: 40161607
	s_clause 0x2                                               // 0000000777F8: BF850002
	global_store_b64 v[4:5], v[0:1], off                       // 0000000777FC: DC6E0000 007C0004
	global_store_b64 v[2:3], v[6:7], off                       // 000000077804: DC6E0000 007C0602
	global_store_b64 v[10:11], v[8:9], off                     // 00000007780C: DC6E0000 007C080A
	s_nop 0                                                    // 000000077814: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077818: BFB60003
	s_endpgm                                                   // 00000007781C: BFB00000
add_long_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 000000077820: BF800000
	.long 0xbf800000                                           // 000000077824: BF800000
	.long 0xbf800000                                           // 000000077828: BF800000
	.long 0xbf800000                                           // 00000007782C: BF800000
	.long 0xbf800000                                           // 000000077830: BF800000
	.long 0xbf800000                                           // 000000077834: BF800000
	.long 0xbf800000                                           // 000000077838: BF800000
	.long 0xbf800000                                           // 00000007783C: BF800000
	.long 0xbf800000                                           // 000000077840: BF800000
	.long 0xbf800000                                           // 000000077844: BF800000
	.long 0xbf800000                                           // 000000077848: BF800000
	.long 0xbf800000                                           // 00000007784C: BF800000
	.long 0xbf800000                                           // 000000077850: BF800000
	.long 0xbf800000                                           // 000000077854: BF800000
	.long 0xbf800000                                           // 000000077858: BF800000
	.long 0xbf800000                                           // 00000007785C: BF800000
	.long 0xbf800000                                           // 000000077860: BF800000
	.long 0xbf800000                                           // 000000077864: BF800000
	.long 0xbf800000                                           // 000000077868: BF800000
	.long 0xbf800000                                           // 00000007786C: BF800000
	.long 0xbf800000                                           // 000000077870: BF800000
	.long 0xbf800000                                           // 000000077874: BF800000
	.long 0xbf800000                                           // 000000077878: BF800000
	.long 0xbf800000                                           // 00000007787C: BF800000
	.long 0xbf800000                                           // 000000077880: BF800000
	.long 0xbf800000                                           // 000000077884: BF800000
	.long 0xbf800000                                           // 000000077888: BF800000
	.long 0xbf800000                                           // 00000007788C: BF800000
	.long 0xbf800000                                           // 000000077890: BF800000
	.long 0xbf800000                                           // 000000077894: BF800000
	.long 0xbf800000                                           // 000000077898: BF800000
	.long 0xbf800000                                           // 00000007789C: BF800000
	.long 0xbf800000                                           // 0000000778A0: BF800000
	.long 0xbf800000                                           // 0000000778A4: BF800000
	.long 0xbf800000                                           // 0000000778A8: BF800000
	.long 0xbf800000                                           // 0000000778AC: BF800000
	.long 0xbf800000                                           // 0000000778B0: BF800000
	.long 0xbf800000                                           // 0000000778B4: BF800000
	.long 0xbf800000                                           // 0000000778B8: BF800000
	.long 0xbf800000                                           // 0000000778BC: BF800000
	.long 0xbf800000                                           // 0000000778C0: BF800000
	.long 0xbf800000                                           // 0000000778C4: BF800000
	.long 0xbf800000                                           // 0000000778C8: BF800000
	.long 0xbf800000                                           // 0000000778CC: BF800000
	.long 0xbf800000                                           // 0000000778D0: BF800000
	.long 0xbf800000                                           // 0000000778D4: BF800000
	.long 0xbf800000                                           // 0000000778D8: BF800000
	.long 0xbf800000                                           // 0000000778DC: BF800000
	.long 0xbf800000                                           // 0000000778E0: BF800000
	.long 0xbf800000                                           // 0000000778E4: BF800000
	.long 0xbf800000                                           // 0000000778E8: BF800000
	.long 0xbf800000                                           // 0000000778EC: BF800000
	.long 0xbf800000                                           // 0000000778F0: BF800000
	.long 0xbf800000                                           // 0000000778F4: BF800000
	.long 0xbf800000                                           // 0000000778F8: BF800000
	.long 0xbf800000                                           // 0000000778FC: BF800000

	.p2align	8
	.type	add_long_get_local_id_get_global_id,@function
	.size	add_long_get_local_id_get_global_id, add_long_get_local_id_get_global_id_symend-add_long_get_local_id_get_global_id
add_long_get_local_id_get_global_id:
	s_clause 0x1                                               // 000000077900: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077904: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007790C: F4040180 F8000008
	v_and_b32_e32 v6, 0x3ff, v0                                // 000000077914: 360C00FF 000003FF
	v_bfe_u32 v7, v0, 10, 10                                   // 00000007791C: D6100007 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000077924: D610000C 02292900
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007792C: F4040000 F8000048
	s_mov_b32 s33, 0                                           // 000000077934: BEA10080
	v_lshl_or_b32 v0, s2, 3, v6                                // 000000077938: D6560000 04190602
	v_lshl_or_b32 v2, s3, 2, v7                                // 000000077940: D6560002 041D0403
	v_lshl_or_b32 v8, s4, 1, v12                               // 000000077948: D6560008 04310204
	s_waitcnt lgkmcnt(0)                                       // 000000077950: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077954: BF870093
	v_add_co_u32 v0, s2, s8, v0                                // 000000077958: D7000200 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000077960: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000077968: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077970: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000077974: D5207C03 0009000B
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 00000007797C: D73C0004 00020083
	v_add_co_u32 v0, vcc_lo, v0, v6                            // 000000077984: D7006A00 00020D00
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v1, vcc_lo              // 00000007798C: 40020280
	v_add_co_u32 v8, s0, s0, v8                                // 000000077990: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000077998: BF870004
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 00000007799C: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000779A4: 400A0A07
	v_add_co_u32 v6, vcc_lo, v2, v7                            // 0000000779A8: D7006A06 00020F02
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo              // 0000000779B0: 400E0680
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000779B4: D73C0002 00020483
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 0000000779BC: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000779C4: BF870112
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000779C8: D7006A02 00020406
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 0000000779D0: D73C000A 00021083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 0000000779D8: BF870234
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000779DC: 40060607
	v_add_co_u32 v8, vcc_lo, v8, v12                           // 0000000779E0: D7006A08 00021908
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v9, vcc_lo              // 0000000779E8: 40121280
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000779EC: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 0000000779F4: 40161607
	s_clause 0x2                                               // 0000000779F8: BF850002
	global_store_b64 v[4:5], v[0:1], off                       // 0000000779FC: DC6E0000 007C0004
	global_store_b64 v[2:3], v[6:7], off                       // 000000077A04: DC6E0000 007C0602
	global_store_b64 v[10:11], v[8:9], off                     // 000000077A0C: DC6E0000 007C080A
	s_nop 0                                                    // 000000077A14: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077A18: BFB60003
	s_endpgm                                                   // 000000077A1C: BFB00000
add_long_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000077A20: BF800000
	.long 0xbf800000                                           // 000000077A24: BF800000
	.long 0xbf800000                                           // 000000077A28: BF800000
	.long 0xbf800000                                           // 000000077A2C: BF800000
	.long 0xbf800000                                           // 000000077A30: BF800000
	.long 0xbf800000                                           // 000000077A34: BF800000
	.long 0xbf800000                                           // 000000077A38: BF800000
	.long 0xbf800000                                           // 000000077A3C: BF800000
	.long 0xbf800000                                           // 000000077A40: BF800000
	.long 0xbf800000                                           // 000000077A44: BF800000
	.long 0xbf800000                                           // 000000077A48: BF800000
	.long 0xbf800000                                           // 000000077A4C: BF800000
	.long 0xbf800000                                           // 000000077A50: BF800000
	.long 0xbf800000                                           // 000000077A54: BF800000
	.long 0xbf800000                                           // 000000077A58: BF800000
	.long 0xbf800000                                           // 000000077A5C: BF800000
	.long 0xbf800000                                           // 000000077A60: BF800000
	.long 0xbf800000                                           // 000000077A64: BF800000
	.long 0xbf800000                                           // 000000077A68: BF800000
	.long 0xbf800000                                           // 000000077A6C: BF800000
	.long 0xbf800000                                           // 000000077A70: BF800000
	.long 0xbf800000                                           // 000000077A74: BF800000
	.long 0xbf800000                                           // 000000077A78: BF800000
	.long 0xbf800000                                           // 000000077A7C: BF800000
	.long 0xbf800000                                           // 000000077A80: BF800000
	.long 0xbf800000                                           // 000000077A84: BF800000
	.long 0xbf800000                                           // 000000077A88: BF800000
	.long 0xbf800000                                           // 000000077A8C: BF800000
	.long 0xbf800000                                           // 000000077A90: BF800000
	.long 0xbf800000                                           // 000000077A94: BF800000
	.long 0xbf800000                                           // 000000077A98: BF800000
	.long 0xbf800000                                           // 000000077A9C: BF800000
	.long 0xbf800000                                           // 000000077AA0: BF800000
	.long 0xbf800000                                           // 000000077AA4: BF800000
	.long 0xbf800000                                           // 000000077AA8: BF800000
	.long 0xbf800000                                           // 000000077AAC: BF800000
	.long 0xbf800000                                           // 000000077AB0: BF800000
	.long 0xbf800000                                           // 000000077AB4: BF800000
	.long 0xbf800000                                           // 000000077AB8: BF800000
	.long 0xbf800000                                           // 000000077ABC: BF800000
	.long 0xbf800000                                           // 000000077AC0: BF800000
	.long 0xbf800000                                           // 000000077AC4: BF800000
	.long 0xbf800000                                           // 000000077AC8: BF800000
	.long 0xbf800000                                           // 000000077ACC: BF800000
	.long 0xbf800000                                           // 000000077AD0: BF800000
	.long 0xbf800000                                           // 000000077AD4: BF800000
	.long 0xbf800000                                           // 000000077AD8: BF800000
	.long 0xbf800000                                           // 000000077ADC: BF800000
	.long 0xbf800000                                           // 000000077AE0: BF800000
	.long 0xbf800000                                           // 000000077AE4: BF800000
	.long 0xbf800000                                           // 000000077AE8: BF800000
	.long 0xbf800000                                           // 000000077AEC: BF800000
	.long 0xbf800000                                           // 000000077AF0: BF800000
	.long 0xbf800000                                           // 000000077AF4: BF800000
	.long 0xbf800000                                           // 000000077AF8: BF800000
	.long 0xbf800000                                           // 000000077AFC: BF800000

	.p2align	8
	.type	add_long_get_group_id_get_global_id,@function
	.size	add_long_get_group_id_get_global_id, add_long_get_group_id_get_global_id_symend-add_long_get_group_id_get_global_id
add_long_get_group_id_get_global_id:
	s_clause 0x1                                               // 000000077B00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077B04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000077B0C: F4040180 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000077B14: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000077B1C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077B24: D6100000 02292900
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000077B2C: F4040000 F8000048
	s_mov_b32 s33, 0                                           // 000000077B34: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077B38: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000077B40: D6560002 04090803
	v_lshl_or_b32 v8, s4, 1, v0                                // 000000077B48: D6560008 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000077B50: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077B54: BF870093
	v_add_co_u32 v0, s5, s8, v1                                // 000000077B58: D7000500 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 000000077B60: D5207C01 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 000000077B68: D7000502 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077B70: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s5                   // 000000077B74: D5207C03 0015000B
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000077B7C: D73C0004 00020083
	v_add_co_u32 v0, vcc_lo, v0, s2                            // 000000077B84: D7006A00 00000500
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v1, vcc_lo              // 000000077B8C: 40020280
	v_add_co_u32 v8, s0, s0, v8                                // 000000077B90: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000077B98: BF870004
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000077B9C: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000077BA4: 400A0A07
	v_add_co_u32 v6, vcc_lo, v2, s3                            // 000000077BA8: D7006A06 00000702
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo              // 000000077BB0: 400E0680
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000077BB4: D73C0002 00020483
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 000000077BBC: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000077BC4: BF870112
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000077BC8: D7006A02 00020406
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 000000077BD0: D73C000A 00021083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000077BD8: BF870234
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000077BDC: 40060607
	v_add_co_u32 v8, vcc_lo, v8, s4                            // 000000077BE0: D7006A08 00000908
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v9, vcc_lo              // 000000077BE8: 40121280
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 000000077BEC: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000077BF4: 40161607
	s_clause 0x2                                               // 000000077BF8: BF850002
	global_store_b64 v[4:5], v[0:1], off                       // 000000077BFC: DC6E0000 007C0004
	global_store_b64 v[2:3], v[6:7], off                       // 000000077C04: DC6E0000 007C0602
	global_store_b64 v[10:11], v[8:9], off                     // 000000077C0C: DC6E0000 007C080A
	s_nop 0                                                    // 000000077C14: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077C18: BFB60003
	s_endpgm                                                   // 000000077C1C: BFB00000
add_long_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000077C20: BF800000
	.long 0xbf800000                                           // 000000077C24: BF800000
	.long 0xbf800000                                           // 000000077C28: BF800000
	.long 0xbf800000                                           // 000000077C2C: BF800000
	.long 0xbf800000                                           // 000000077C30: BF800000
	.long 0xbf800000                                           // 000000077C34: BF800000
	.long 0xbf800000                                           // 000000077C38: BF800000
	.long 0xbf800000                                           // 000000077C3C: BF800000
	.long 0xbf800000                                           // 000000077C40: BF800000
	.long 0xbf800000                                           // 000000077C44: BF800000
	.long 0xbf800000                                           // 000000077C48: BF800000
	.long 0xbf800000                                           // 000000077C4C: BF800000
	.long 0xbf800000                                           // 000000077C50: BF800000
	.long 0xbf800000                                           // 000000077C54: BF800000
	.long 0xbf800000                                           // 000000077C58: BF800000
	.long 0xbf800000                                           // 000000077C5C: BF800000
	.long 0xbf800000                                           // 000000077C60: BF800000
	.long 0xbf800000                                           // 000000077C64: BF800000
	.long 0xbf800000                                           // 000000077C68: BF800000
	.long 0xbf800000                                           // 000000077C6C: BF800000
	.long 0xbf800000                                           // 000000077C70: BF800000
	.long 0xbf800000                                           // 000000077C74: BF800000
	.long 0xbf800000                                           // 000000077C78: BF800000
	.long 0xbf800000                                           // 000000077C7C: BF800000
	.long 0xbf800000                                           // 000000077C80: BF800000
	.long 0xbf800000                                           // 000000077C84: BF800000
	.long 0xbf800000                                           // 000000077C88: BF800000
	.long 0xbf800000                                           // 000000077C8C: BF800000
	.long 0xbf800000                                           // 000000077C90: BF800000
	.long 0xbf800000                                           // 000000077C94: BF800000
	.long 0xbf800000                                           // 000000077C98: BF800000
	.long 0xbf800000                                           // 000000077C9C: BF800000
	.long 0xbf800000                                           // 000000077CA0: BF800000
	.long 0xbf800000                                           // 000000077CA4: BF800000
	.long 0xbf800000                                           // 000000077CA8: BF800000
	.long 0xbf800000                                           // 000000077CAC: BF800000
	.long 0xbf800000                                           // 000000077CB0: BF800000
	.long 0xbf800000                                           // 000000077CB4: BF800000
	.long 0xbf800000                                           // 000000077CB8: BF800000
	.long 0xbf800000                                           // 000000077CBC: BF800000
	.long 0xbf800000                                           // 000000077CC0: BF800000
	.long 0xbf800000                                           // 000000077CC4: BF800000
	.long 0xbf800000                                           // 000000077CC8: BF800000
	.long 0xbf800000                                           // 000000077CCC: BF800000
	.long 0xbf800000                                           // 000000077CD0: BF800000
	.long 0xbf800000                                           // 000000077CD4: BF800000
	.long 0xbf800000                                           // 000000077CD8: BF800000
	.long 0xbf800000                                           // 000000077CDC: BF800000
	.long 0xbf800000                                           // 000000077CE0: BF800000
	.long 0xbf800000                                           // 000000077CE4: BF800000
	.long 0xbf800000                                           // 000000077CE8: BF800000
	.long 0xbf800000                                           // 000000077CEC: BF800000
	.long 0xbf800000                                           // 000000077CF0: BF800000
	.long 0xbf800000                                           // 000000077CF4: BF800000
	.long 0xbf800000                                           // 000000077CF8: BF800000
	.long 0xbf800000                                           // 000000077CFC: BF800000

	.p2align	8
	.type	add_long_get_local_size_get_global_id,@function
	.size	add_long_get_local_size_get_global_id, add_long_get_local_size_get_global_id_symend-add_long_get_local_size_get_global_id
add_long_get_local_size_get_global_id:
	s_clause 0x1                                               // 000000077D00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077D04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000077D0C: F4040180 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000077D14: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000077D1C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077D24: D6100000 02292900
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000077D2C: F4040000 F8000048
	s_mov_b32 s33, 0                                           // 000000077D34: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077D38: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000077D40: D6560002 04090203
	v_lshl_or_b32 v8, s4, 2, v0                                // 000000077D48: D6560008 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000077D50: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077D54: BF870093
	v_add_co_u32 v0, s2, s8, v1                                // 000000077D58: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000077D60: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000077D68: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077D70: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000077D74: D5207C03 0009000B
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000077D7C: D73C0004 00020083
	v_add_co_u32 v0, vcc_lo, v0, 2                             // 000000077D84: D7006A00 00010500
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v1, vcc_lo              // 000000077D8C: 40020280
	v_add_co_u32 v8, s0, s0, v8                                // 000000077D90: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000077D98: BF870004
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000077D9C: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000077DA4: 400A0A07
	v_add_co_u32 v6, vcc_lo, v2, 2                             // 000000077DA8: D7006A06 00010502
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo              // 000000077DB0: 400E0680
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000077DB4: D73C0002 00020483
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 000000077DBC: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000077DC4: BF870112
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000077DC8: D7006A02 00020406
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 000000077DD0: D73C000A 00021083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000077DD8: BF870234
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000077DDC: 40060607
	v_add_co_u32 v8, vcc_lo, v8, 4                             // 000000077DE0: D7006A08 00010908
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v9, vcc_lo              // 000000077DE8: 40121280
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 000000077DEC: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000077DF4: 40161607
	s_clause 0x2                                               // 000000077DF8: BF850002
	global_store_b64 v[4:5], v[0:1], off                       // 000000077DFC: DC6E0000 007C0004
	global_store_b64 v[2:3], v[6:7], off                       // 000000077E04: DC6E0000 007C0602
	global_store_b64 v[10:11], v[8:9], off                     // 000000077E0C: DC6E0000 007C080A
	s_nop 0                                                    // 000000077E14: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077E18: BFB60003
	s_endpgm                                                   // 000000077E1C: BFB00000
add_long_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 000000077E20: BF800000
	.long 0xbf800000                                           // 000000077E24: BF800000
	.long 0xbf800000                                           // 000000077E28: BF800000
	.long 0xbf800000                                           // 000000077E2C: BF800000
	.long 0xbf800000                                           // 000000077E30: BF800000
	.long 0xbf800000                                           // 000000077E34: BF800000
	.long 0xbf800000                                           // 000000077E38: BF800000
	.long 0xbf800000                                           // 000000077E3C: BF800000
	.long 0xbf800000                                           // 000000077E40: BF800000
	.long 0xbf800000                                           // 000000077E44: BF800000
	.long 0xbf800000                                           // 000000077E48: BF800000
	.long 0xbf800000                                           // 000000077E4C: BF800000
	.long 0xbf800000                                           // 000000077E50: BF800000
	.long 0xbf800000                                           // 000000077E54: BF800000
	.long 0xbf800000                                           // 000000077E58: BF800000
	.long 0xbf800000                                           // 000000077E5C: BF800000
	.long 0xbf800000                                           // 000000077E60: BF800000
	.long 0xbf800000                                           // 000000077E64: BF800000
	.long 0xbf800000                                           // 000000077E68: BF800000
	.long 0xbf800000                                           // 000000077E6C: BF800000
	.long 0xbf800000                                           // 000000077E70: BF800000
	.long 0xbf800000                                           // 000000077E74: BF800000
	.long 0xbf800000                                           // 000000077E78: BF800000
	.long 0xbf800000                                           // 000000077E7C: BF800000
	.long 0xbf800000                                           // 000000077E80: BF800000
	.long 0xbf800000                                           // 000000077E84: BF800000
	.long 0xbf800000                                           // 000000077E88: BF800000
	.long 0xbf800000                                           // 000000077E8C: BF800000
	.long 0xbf800000                                           // 000000077E90: BF800000
	.long 0xbf800000                                           // 000000077E94: BF800000
	.long 0xbf800000                                           // 000000077E98: BF800000
	.long 0xbf800000                                           // 000000077E9C: BF800000
	.long 0xbf800000                                           // 000000077EA0: BF800000
	.long 0xbf800000                                           // 000000077EA4: BF800000
	.long 0xbf800000                                           // 000000077EA8: BF800000
	.long 0xbf800000                                           // 000000077EAC: BF800000
	.long 0xbf800000                                           // 000000077EB0: BF800000
	.long 0xbf800000                                           // 000000077EB4: BF800000
	.long 0xbf800000                                           // 000000077EB8: BF800000
	.long 0xbf800000                                           // 000000077EBC: BF800000
	.long 0xbf800000                                           // 000000077EC0: BF800000
	.long 0xbf800000                                           // 000000077EC4: BF800000
	.long 0xbf800000                                           // 000000077EC8: BF800000
	.long 0xbf800000                                           // 000000077ECC: BF800000
	.long 0xbf800000                                           // 000000077ED0: BF800000
	.long 0xbf800000                                           // 000000077ED4: BF800000
	.long 0xbf800000                                           // 000000077ED8: BF800000
	.long 0xbf800000                                           // 000000077EDC: BF800000
	.long 0xbf800000                                           // 000000077EE0: BF800000
	.long 0xbf800000                                           // 000000077EE4: BF800000
	.long 0xbf800000                                           // 000000077EE8: BF800000
	.long 0xbf800000                                           // 000000077EEC: BF800000
	.long 0xbf800000                                           // 000000077EF0: BF800000
	.long 0xbf800000                                           // 000000077EF4: BF800000
	.long 0xbf800000                                           // 000000077EF8: BF800000
	.long 0xbf800000                                           // 000000077EFC: BF800000

	.p2align	8
	.type	add_long_get_global_id_get_global_id,@function
	.size	add_long_get_global_id_get_global_id, add_long_get_global_id_get_global_id_symend-add_long_get_global_id_get_global_id
add_long_get_global_id_get_global_id:
	s_clause 0x1                                               // 000000077F00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077F04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000077F0C: F4040180 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077F14: CA240080 020000FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 000000077F20: D6100003 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000077F28: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077F30: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000077F38: BF8701B3
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077F3C: D6560001 04050202
	s_mov_b32 s33, 0                                           // 000000077F44: BEA10080
	v_lshl_or_b32 v5, s3, 1, v3                                // 000000077F48: D6560005 040D0203
	v_lshl_or_b32 v9, s4, 2, v0                                // 000000077F50: D6560009 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000077F58: BF89FC07
	v_add_co_u32 v3, s2, s8, v1                                // 000000077F5C: D7000203 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000077F64: BF8700A1
	v_add_co_ci_u32_e64 v4, null, s9, 0, s2                    // 000000077F68: D5207C04 00090009
	v_add_co_u32 v5, s2, s10, v5                               // 000000077F70: D7000205 00020A0A
	v_add_co_ci_u32_e64 v6, null, s11, 0, s2                   // 000000077F78: D5207C06 0009000B
	v_add_co_u32 v9, s2, s6, v9                                // 000000077F80: D7000209 00021206
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000077F88: D73C0000 00020283
	v_add_co_ci_u32_e64 v10, null, s7, 0, s2                   // 000000077F90: D5207C0A 00090007
	s_delay_alu instid0(VALU_DEP_4)                            // 000000077F98: BF870004
	v_lshlrev_b64 v[7:8], 3, v[5:6]                            // 000000077F9C: D73C0007 00020A83
	v_lshlrev_b64 v[2:3], 1, v[3:4]                            // 000000077FA4: D73C0002 00020681
	v_lshlrev_b64 v[4:5], 1, v[5:6]                            // 000000077FAC: D73C0004 00020A81
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000077FB4: D7006A00 00020000
	v_lshlrev_b64 v[11:12], 3, v[9:10]                         // 000000077FBC: D73C000B 00021283
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000077FC4: 40020201
	v_add_co_u32 v6, vcc_lo, s0, v7                            // 000000077FC8: D7006A06 00020E00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v8, vcc_lo             // 000000077FD0: 400E1001
	v_lshlrev_b64 v[8:9], 1, v[9:10]                           // 000000077FD4: D73C0008 00021281
	v_add_co_u32 v10, vcc_lo, s0, v11                          // 000000077FDC: D7006A0A 00021600
	v_add_co_ci_u32_e32 v11, vcc_lo, s1, v12, vcc_lo           // 000000077FE4: 40161801
	s_clause 0x2                                               // 000000077FE8: BF850002
	global_store_b64 v[0:1], v[2:3], off                       // 000000077FEC: DC6E0000 007C0200
	global_store_b64 v[6:7], v[4:5], off                       // 000000077FF4: DC6E0000 007C0406
	global_store_b64 v[10:11], v[8:9], off                     // 000000077FFC: DC6E0000 007C080A
	s_nop 0                                                    // 000000078004: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078008: BFB60003
	s_endpgm                                                   // 00000007800C: BFB00000
add_long_get_global_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000078010: BF800000
	.long 0xbf800000                                           // 000000078014: BF800000
	.long 0xbf800000                                           // 000000078018: BF800000
	.long 0xbf800000                                           // 00000007801C: BF800000
	.long 0xbf800000                                           // 000000078020: BF800000
	.long 0xbf800000                                           // 000000078024: BF800000
	.long 0xbf800000                                           // 000000078028: BF800000
	.long 0xbf800000                                           // 00000007802C: BF800000
	.long 0xbf800000                                           // 000000078030: BF800000
	.long 0xbf800000                                           // 000000078034: BF800000
	.long 0xbf800000                                           // 000000078038: BF800000
	.long 0xbf800000                                           // 00000007803C: BF800000
	.long 0xbf800000                                           // 000000078040: BF800000
	.long 0xbf800000                                           // 000000078044: BF800000
	.long 0xbf800000                                           // 000000078048: BF800000
	.long 0xbf800000                                           // 00000007804C: BF800000
	.long 0xbf800000                                           // 000000078050: BF800000
	.long 0xbf800000                                           // 000000078054: BF800000
	.long 0xbf800000                                           // 000000078058: BF800000
	.long 0xbf800000                                           // 00000007805C: BF800000
	.long 0xbf800000                                           // 000000078060: BF800000
	.long 0xbf800000                                           // 000000078064: BF800000
	.long 0xbf800000                                           // 000000078068: BF800000
	.long 0xbf800000                                           // 00000007806C: BF800000
	.long 0xbf800000                                           // 000000078070: BF800000
	.long 0xbf800000                                           // 000000078074: BF800000
	.long 0xbf800000                                           // 000000078078: BF800000
	.long 0xbf800000                                           // 00000007807C: BF800000
	.long 0xbf800000                                           // 000000078080: BF800000
	.long 0xbf800000                                           // 000000078084: BF800000
	.long 0xbf800000                                           // 000000078088: BF800000
	.long 0xbf800000                                           // 00000007808C: BF800000
	.long 0xbf800000                                           // 000000078090: BF800000
	.long 0xbf800000                                           // 000000078094: BF800000
	.long 0xbf800000                                           // 000000078098: BF800000
	.long 0xbf800000                                           // 00000007809C: BF800000
	.long 0xbf800000                                           // 0000000780A0: BF800000
	.long 0xbf800000                                           // 0000000780A4: BF800000
	.long 0xbf800000                                           // 0000000780A8: BF800000
	.long 0xbf800000                                           // 0000000780AC: BF800000
	.long 0xbf800000                                           // 0000000780B0: BF800000
	.long 0xbf800000                                           // 0000000780B4: BF800000
	.long 0xbf800000                                           // 0000000780B8: BF800000
	.long 0xbf800000                                           // 0000000780BC: BF800000
	.long 0xbf800000                                           // 0000000780C0: BF800000
	.long 0xbf800000                                           // 0000000780C4: BF800000
	.long 0xbf800000                                           // 0000000780C8: BF800000
	.long 0xbf800000                                           // 0000000780CC: BF800000
	.long 0xbf800000                                           // 0000000780D0: BF800000
	.long 0xbf800000                                           // 0000000780D4: BF800000
	.long 0xbf800000                                           // 0000000780D8: BF800000
	.long 0xbf800000                                           // 0000000780DC: BF800000
	.long 0xbf800000                                           // 0000000780E0: BF800000
	.long 0xbf800000                                           // 0000000780E4: BF800000
	.long 0xbf800000                                           // 0000000780E8: BF800000
	.long 0xbf800000                                           // 0000000780EC: BF800000
	.long 0xbf800000                                           // 0000000780F0: BF800000
	.long 0xbf800000                                           // 0000000780F4: BF800000
	.long 0xbf800000                                           // 0000000780F8: BF800000
	.long 0xbf800000                                           // 0000000780FC: BF800000

	.p2align	8
	.type	add_long_get_global_size_get_global_id,@function
	.size	add_long_get_global_size_get_global_id, add_long_get_global_size_get_global_id_symend-add_long_get_global_size_get_global_id
add_long_get_global_size_get_global_id:
	v_mov_b32_e32 v1, 0                                        // 000000078100: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000078104: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007810C: BEA10080
	s_clause 0x1                                               // 000000078110: BF850001
	global_load_b32 v12, v1, s[0:1] offset:34                  // 000000078114: DC520022 0C000001
	global_load_u16 v13, v1, s[0:1] offset:38                  // 00000007811C: DC4A0026 0D000001
	s_clause 0x2                                               // 000000078124: BF850002
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000078128: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078130: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000078138: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000078140: 360200FF 000003FF
	s_clause 0x1                                               // 000000078148: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 00000007814C: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], null                            // 000000078154: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007815C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000078164: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007816C: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000078174: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000078178: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000078180: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 000000078184: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 000000078188: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000078190: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000078194: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000007819C: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 0000000781A4: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 0000000781AC: D7000304 0002080C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000781B4: BF870224
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 0000000781B8: D73C0006 00020083
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 0000000781C0: D5207C05 000D000D
	v_lshlrev_b64 v[8:9], 3, v[2:3]                            // 0000000781C8: D73C0008 00020483
	s_lshl_b32 s3, s7, 1                                       // 0000000781D0: 84038107
	s_lshl_b32 s4, s5, 1                                       // 0000000781D4: 84048105
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000781D8: BF870002
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 0000000781DC: D73C000A 00020883
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 0000000781E4: D7006A06 00020C00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 0000000781EC: 400E0E01
	v_add_co_u32 v8, vcc_lo, s0, v8                            // 0000000781F0: D7006A08 00021000
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 0000000781F8: 40121201
	v_add_co_u32 v10, vcc_lo, s0, v10                          // 0000000781FC: D7006A0A 00021400
	v_add_co_ci_u32_e32 v11, vcc_lo, s1, v11, vcc_lo           // 000000078204: 40161601
	s_waitcnt vmcnt(1)                                         // 000000078208: BF8907F7
	v_and_b32_e32 v14, 0xffff, v12                             // 00000007820C: 361C18FF 0000FFFF
	v_lshrrev_b32_e32 v12, 16, v12                             // 000000078214: 32181890
	s_waitcnt vmcnt(0)                                         // 000000078218: BF8903F7
	v_add_nc_u32_e32 v13, s4, v13                              // 00000007821C: 4A1A1A04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078220: BF870193
	v_add_nc_u32_e32 v14, s2, v14                              // 000000078224: 4A1C1C02
	v_add_nc_u32_e32 v12, s3, v12                              // 000000078228: 4A181803
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007822C: BF8701A2
	v_add_co_u32 v0, vcc_lo, v0, v14                           // 000000078230: D7006A00 00021D00
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v1, vcc_lo              // 000000078238: 40020280
	v_add_co_u32 v2, vcc_lo, v2, v12                           // 00000007823C: D7006A02 00021902
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v3, vcc_lo              // 000000078244: 40060680
	v_add_co_u32 v4, vcc_lo, v4, v13                           // 000000078248: D7006A04 00021B04
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v5, vcc_lo              // 000000078250: 400A0A80
	s_clause 0x2                                               // 000000078254: BF850002
	global_store_b64 v[6:7], v[0:1], off                       // 000000078258: DC6E0000 007C0006
	global_store_b64 v[8:9], v[2:3], off                       // 000000078260: DC6E0000 007C0208
	global_store_b64 v[10:11], v[4:5], off                     // 000000078268: DC6E0000 007C040A
	s_nop 0                                                    // 000000078270: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078274: BFB60003
	s_endpgm                                                   // 000000078278: BFB00000
add_long_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000007827C: BF800000
	.long 0xbf800000                                           // 000000078280: BF800000
	.long 0xbf800000                                           // 000000078284: BF800000
	.long 0xbf800000                                           // 000000078288: BF800000
	.long 0xbf800000                                           // 00000007828C: BF800000
	.long 0xbf800000                                           // 000000078290: BF800000
	.long 0xbf800000                                           // 000000078294: BF800000
	.long 0xbf800000                                           // 000000078298: BF800000
	.long 0xbf800000                                           // 00000007829C: BF800000
	.long 0xbf800000                                           // 0000000782A0: BF800000
	.long 0xbf800000                                           // 0000000782A4: BF800000
	.long 0xbf800000                                           // 0000000782A8: BF800000
	.long 0xbf800000                                           // 0000000782AC: BF800000
	.long 0xbf800000                                           // 0000000782B0: BF800000
	.long 0xbf800000                                           // 0000000782B4: BF800000
	.long 0xbf800000                                           // 0000000782B8: BF800000
	.long 0xbf800000                                           // 0000000782BC: BF800000
	.long 0xbf800000                                           // 0000000782C0: BF800000
	.long 0xbf800000                                           // 0000000782C4: BF800000
	.long 0xbf800000                                           // 0000000782C8: BF800000
	.long 0xbf800000                                           // 0000000782CC: BF800000
	.long 0xbf800000                                           // 0000000782D0: BF800000
	.long 0xbf800000                                           // 0000000782D4: BF800000
	.long 0xbf800000                                           // 0000000782D8: BF800000
	.long 0xbf800000                                           // 0000000782DC: BF800000
	.long 0xbf800000                                           // 0000000782E0: BF800000
	.long 0xbf800000                                           // 0000000782E4: BF800000
	.long 0xbf800000                                           // 0000000782E8: BF800000
	.long 0xbf800000                                           // 0000000782EC: BF800000
	.long 0xbf800000                                           // 0000000782F0: BF800000
	.long 0xbf800000                                           // 0000000782F4: BF800000
	.long 0xbf800000                                           // 0000000782F8: BF800000
	.long 0xbf800000                                           // 0000000782FC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_get_global_id,@function
	.size	add_long_get_num_groups_get_global_id, add_long_get_num_groups_get_global_id_symend-add_long_get_num_groups_get_global_id
add_long_get_num_groups_get_global_id:
	v_mov_b32_e32 v1, 0                                        // 000000078300: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000078304: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007830C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000078314: BEA10080
	s_clause 0x1                                               // 000000078318: BF850001
	global_load_b32 v12, v1, s[0:1] offset:34                  // 00000007831C: DC520022 0C000001
	global_load_u16 v13, v1, s[0:1] offset:38                  // 000000078324: DC4A0026 0D000001
	s_clause 0x1                                               // 00000007832C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078330: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000078338: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000078340: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078348: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000078350: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078358: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007835C: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000078364: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007836C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078370: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 000000078374: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000007837C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000078384: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007838C: BF870191
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000078390: D5207C03 0009000B
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000078398: D73C0006 00020083
	v_add_co_u32 v4, s2, s6, v4                                // 0000000783A0: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000783A8: BF8701A1
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 0000000783AC: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 0000000783B4: F4000080 F8000018
	v_add_co_u32 v6, vcc_lo, s12, v6                           // 0000000783BC: D7006A06 00020C0C
	v_lshlrev_b64 v[8:9], 3, v[2:3]                            // 0000000783C4: D73C0008 00020483
	v_add_co_ci_u32_e32 v7, vcc_lo, s13, v7, vcc_lo            // 0000000783CC: 400E0E0D
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 0000000783D0: D73C000A 00020883
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000783D8: BF870093
	v_add_co_u32 v8, s1, s12, v8                               // 0000000783DC: D7000108 0002100C
	v_add_co_ci_u32_e64 v9, s1, s13, v9, s1                    // 0000000783E4: D5200109 0006120D
	s_waitcnt vmcnt(1)                                         // 0000000783EC: BF8907F7
	v_lshrrev_b32_e32 v14, 16, v12                             // 0000000783F0: 321C1890
	v_cmp_ne_u16_e32 vcc_lo, 0, v12.l                          // 0000000783F4: 7C7A1880
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000783F8: BF870002
	v_cmp_ne_u16_e64 s0, 0, v14.l                              // 0000000783FC: D43D0000 00021C80
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078404: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000078408: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v13.l                          // 00000007840C: 7C7A1A80
	s_addc_u32 s1, s14, 0                                      // 000000078410: 8201800E
	s_cmp_lg_u32 s0, 0                                         // 000000078414: BF078000
	v_add_co_u32 v0, s0, v0, s1                                // 000000078418: D7000000 00000300
	s_delay_alu instid0(VALU_DEP_1)                            // 000000078420: BF870001
	v_add_co_ci_u32_e64 v1, s0, 0, v1, s0                      // 000000078424: D5200001 00020280
	s_addc_u32 s0, s15, 0                                      // 00000007842C: 8200800F
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078430: BF07806A
	v_add_co_u32 v2, vcc_lo, v2, s0                            // 000000078434: D7006A02 00000102
	s_waitcnt lgkmcnt(0)                                       // 00000007843C: BF89FC07
	s_addc_u32 s0, s2, 0                                       // 000000078440: 82008002
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v3, vcc_lo              // 000000078444: 40060680
	v_add_co_u32 v4, vcc_lo, v4, s0                            // 000000078448: D7006A04 00000104
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v5, vcc_lo              // 000000078450: 400A0A80
	v_add_co_u32 v10, vcc_lo, s12, v10                         // 000000078454: D7006A0A 0002140C
	v_add_co_ci_u32_e32 v11, vcc_lo, s13, v11, vcc_lo          // 00000007845C: 4016160D
	s_clause 0x2                                               // 000000078460: BF850002
	global_store_b64 v[6:7], v[0:1], off                       // 000000078464: DC6E0000 007C0006
	global_store_b64 v[8:9], v[2:3], off                       // 00000007846C: DC6E0000 007C0208
	global_store_b64 v[10:11], v[4:5], off                     // 000000078474: DC6E0000 007C040A
	s_nop 0                                                    // 00000007847C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078480: BFB60003
	s_endpgm                                                   // 000000078484: BFB00000
add_long_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 000000078488: BF800000
	.long 0xbf800000                                           // 00000007848C: BF800000
	.long 0xbf800000                                           // 000000078490: BF800000
	.long 0xbf800000                                           // 000000078494: BF800000
	.long 0xbf800000                                           // 000000078498: BF800000
	.long 0xbf800000                                           // 00000007849C: BF800000
	.long 0xbf800000                                           // 0000000784A0: BF800000
	.long 0xbf800000                                           // 0000000784A4: BF800000
	.long 0xbf800000                                           // 0000000784A8: BF800000
	.long 0xbf800000                                           // 0000000784AC: BF800000
	.long 0xbf800000                                           // 0000000784B0: BF800000
	.long 0xbf800000                                           // 0000000784B4: BF800000
	.long 0xbf800000                                           // 0000000784B8: BF800000
	.long 0xbf800000                                           // 0000000784BC: BF800000
	.long 0xbf800000                                           // 0000000784C0: BF800000
	.long 0xbf800000                                           // 0000000784C4: BF800000
	.long 0xbf800000                                           // 0000000784C8: BF800000
	.long 0xbf800000                                           // 0000000784CC: BF800000
	.long 0xbf800000                                           // 0000000784D0: BF800000
	.long 0xbf800000                                           // 0000000784D4: BF800000
	.long 0xbf800000                                           // 0000000784D8: BF800000
	.long 0xbf800000                                           // 0000000784DC: BF800000
	.long 0xbf800000                                           // 0000000784E0: BF800000
	.long 0xbf800000                                           // 0000000784E4: BF800000
	.long 0xbf800000                                           // 0000000784E8: BF800000
	.long 0xbf800000                                           // 0000000784EC: BF800000
	.long 0xbf800000                                           // 0000000784F0: BF800000
	.long 0xbf800000                                           // 0000000784F4: BF800000
	.long 0xbf800000                                           // 0000000784F8: BF800000
	.long 0xbf800000                                           // 0000000784FC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_get_global_id,@function
	.size	add_long_get_work_dim_get_global_id, add_long_get_work_dim_get_global_id_symend-add_long_get_work_dim_get_global_id
add_long_get_work_dim_get_global_id:
	s_clause 0x1                                               // 000000078500: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 000000078504: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007850C: F4080200 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000078514: 360200FF 000003FF
	s_clause 0x1                                               // 00000007851C: BF850001
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000078520: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000078528: F4040000 F8000048
	v_bfe_u32 v2, v0, 10, 10                                   // 000000078530: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078538: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000078540: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000078544: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007854C: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000078550: D6560002 04090203
	v_lshl_or_b32 v8, s4, 2, v0                                // 000000078558: D6560008 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000078560: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 000000078564: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 00000007856C: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000078574: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 000000078578: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000078580: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 000000078588: D5207C03 000D000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 000000078590: BF870243
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000078594: D73C0004 00020083
	v_add_co_u32 v0, vcc_lo, v0, s2                            // 00000007859C: D7006A00 00000500
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v1, vcc_lo              // 0000000785A4: 40020280
	v_add_co_u32 v8, s0, s0, v8                                // 0000000785A8: D7000008 00021000
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 0000000785B0: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000785B8: 400A0A07
	v_add_co_u32 v6, vcc_lo, v2, s2                            // 0000000785BC: D7006A06 00000502
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo              // 0000000785C4: 400E0680
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000785C8: D73C0002 00020483
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 0000000785D0: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000785D8: BF870112
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000785DC: D7006A02 00020406
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 0000000785E4: D73C000A 00021083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 0000000785EC: BF870234
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000785F0: 40060607
	v_add_co_u32 v8, vcc_lo, v8, s2                            // 0000000785F4: D7006A08 00000508
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v9, vcc_lo              // 0000000785FC: 40121280
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 000000078600: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000078608: 40161607
	s_clause 0x2                                               // 00000007860C: BF850002
	global_store_b64 v[4:5], v[0:1], off                       // 000000078610: DC6E0000 007C0004
	global_store_b64 v[2:3], v[6:7], off                       // 000000078618: DC6E0000 007C0602
	global_store_b64 v[10:11], v[8:9], off                     // 000000078620: DC6E0000 007C080A
	s_nop 0                                                    // 000000078628: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007862C: BFB60003
	s_endpgm                                                   // 000000078630: BFB00000
add_long_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 000000078634: BF800000
	.long 0xbf800000                                           // 000000078638: BF800000
	.long 0xbf800000                                           // 00000007863C: BF800000
	.long 0xbf800000                                           // 000000078640: BF800000
	.long 0xbf800000                                           // 000000078644: BF800000
	.long 0xbf800000                                           // 000000078648: BF800000
	.long 0xbf800000                                           // 00000007864C: BF800000
	.long 0xbf800000                                           // 000000078650: BF800000
	.long 0xbf800000                                           // 000000078654: BF800000
	.long 0xbf800000                                           // 000000078658: BF800000
	.long 0xbf800000                                           // 00000007865C: BF800000
	.long 0xbf800000                                           // 000000078660: BF800000
	.long 0xbf800000                                           // 000000078664: BF800000
	.long 0xbf800000                                           // 000000078668: BF800000
	.long 0xbf800000                                           // 00000007866C: BF800000
	.long 0xbf800000                                           // 000000078670: BF800000
	.long 0xbf800000                                           // 000000078674: BF800000
	.long 0xbf800000                                           // 000000078678: BF800000
	.long 0xbf800000                                           // 00000007867C: BF800000
	.long 0xbf800000                                           // 000000078680: BF800000
	.long 0xbf800000                                           // 000000078684: BF800000
	.long 0xbf800000                                           // 000000078688: BF800000
	.long 0xbf800000                                           // 00000007868C: BF800000
	.long 0xbf800000                                           // 000000078690: BF800000
	.long 0xbf800000                                           // 000000078694: BF800000
	.long 0xbf800000                                           // 000000078698: BF800000
	.long 0xbf800000                                           // 00000007869C: BF800000
	.long 0xbf800000                                           // 0000000786A0: BF800000
	.long 0xbf800000                                           // 0000000786A4: BF800000
	.long 0xbf800000                                           // 0000000786A8: BF800000
	.long 0xbf800000                                           // 0000000786AC: BF800000
	.long 0xbf800000                                           // 0000000786B0: BF800000
	.long 0xbf800000                                           // 0000000786B4: BF800000
	.long 0xbf800000                                           // 0000000786B8: BF800000
	.long 0xbf800000                                           // 0000000786BC: BF800000
	.long 0xbf800000                                           // 0000000786C0: BF800000
	.long 0xbf800000                                           // 0000000786C4: BF800000
	.long 0xbf800000                                           // 0000000786C8: BF800000
	.long 0xbf800000                                           // 0000000786CC: BF800000
	.long 0xbf800000                                           // 0000000786D0: BF800000
	.long 0xbf800000                                           // 0000000786D4: BF800000
	.long 0xbf800000                                           // 0000000786D8: BF800000
	.long 0xbf800000                                           // 0000000786DC: BF800000
	.long 0xbf800000                                           // 0000000786E0: BF800000
	.long 0xbf800000                                           // 0000000786E4: BF800000
	.long 0xbf800000                                           // 0000000786E8: BF800000
	.long 0xbf800000                                           // 0000000786EC: BF800000
	.long 0xbf800000                                           // 0000000786F0: BF800000
	.long 0xbf800000                                           // 0000000786F4: BF800000
	.long 0xbf800000                                           // 0000000786F8: BF800000
	.long 0xbf800000                                           // 0000000786FC: BF800000

	.p2align	8
	.type	add_long_x_get_global_size,@function
	.size	add_long_x_get_global_size, add_long_x_get_global_size_symend-add_long_x_get_global_size
add_long_x_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000078700: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000078704: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007870C: BEA10080
	s_clause 0x1                                               // 000000078710: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000078714: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007871C: DC4A0026 07000001
	s_clause 0x3                                               // 000000078724: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 000000078728: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000078730: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078738: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000078740: F4040300 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000078748: 360200FF 000003FF
	s_clause 0x1                                               // 000000078750: BF850001
	s_load_b64 s[14:15], s[0:1], null                          // 000000078754: F4040380 F8000000
	s_load_b32 s0, s[0:1], 0x18                                // 00000007875C: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078764: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007876C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000078774: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 00000007877C: BF8700D3
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000078780: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000078788: BF89FC07
	s_ashr_i32 s1, s5, 31                                      // 00000007878C: 86019F05
	s_lshl_b32 s2, s6, 4                                       // 000000078790: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 000000078794: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000007879C: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 0000000787A4: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000787AC: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 0000000787B0: D5207C03 000D000B
	v_add_co_u32 v4, s3, s12, v4                               // 0000000787B8: D7000304 0002080C
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000787C0: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s13, 0, s3                   // 0000000787C8: D5207C05 000D000D
	s_lshl_b32 s3, s7, 1                                       // 0000000787D0: 84038107
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000787D4: D73C0002 00020483
	s_lshl_b32 s0, s0, 1                                       // 0000000787DC: 84008100
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 0000000787E0: BF870232
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000787E4: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s14, v0                           // 0000000787EC: D7006A00 0002000E
	v_add_co_ci_u32_e32 v1, vcc_lo, s15, v1, vcc_lo            // 0000000787F4: 4002020F
	v_add_co_u32 v2, vcc_lo, s14, v2                           // 0000000787F8: D7006A02 0002040E
	v_add_co_ci_u32_e32 v3, vcc_lo, s15, v3, vcc_lo            // 000000078800: 4006060F
	v_add_co_u32 v4, vcc_lo, s14, v4                           // 000000078804: D7006A04 0002080E
	v_add_co_ci_u32_e32 v5, vcc_lo, s15, v5, vcc_lo            // 00000007880C: 400A0A0F
	s_waitcnt vmcnt(1)                                         // 000000078810: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 000000078814: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000007881C: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000078820: BF8903F7
	v_add_nc_u32_e32 v10, s0, v7                               // 000000078824: 4A140E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078828: BF870193
	v_add_nc_u32_e32 v8, s2, v8                                // 00000007882C: 4A101002
	v_add_nc_u32_e32 v9, s3, v6                                // 000000078830: 4A120C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078834: BF870092
	v_add_co_u32 v6, s0, v8, s5                                // 000000078838: D7000006 00000B08
	v_add_co_ci_u32_e64 v7, null, 0, s1, s0                    // 000000078840: D5207C07 00000280
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078848: BF870093
	v_add_co_u32 v8, s0, v9, s5                                // 00000007884C: D7000008 00000B09
	v_add_co_ci_u32_e64 v9, null, 0, s1, s0                    // 000000078854: D5207C09 00000280
	v_add_co_u32 v10, s0, v10, s5                              // 00000007885C: D700000A 00000B0A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000078864: BF870001
	v_add_co_ci_u32_e64 v11, null, 0, s1, s0                   // 000000078868: D5207C0B 00000280
	s_clause 0x2                                               // 000000078870: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000078874: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007887C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000078884: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007888C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078890: BFB60003
	s_endpgm                                                   // 000000078894: BFB00000
add_long_x_get_global_size_symend:
	.long 0xbf800000                                           // 000000078898: BF800000
	.long 0xbf800000                                           // 00000007889C: BF800000
	.long 0xbf800000                                           // 0000000788A0: BF800000
	.long 0xbf800000                                           // 0000000788A4: BF800000
	.long 0xbf800000                                           // 0000000788A8: BF800000
	.long 0xbf800000                                           // 0000000788AC: BF800000
	.long 0xbf800000                                           // 0000000788B0: BF800000
	.long 0xbf800000                                           // 0000000788B4: BF800000
	.long 0xbf800000                                           // 0000000788B8: BF800000
	.long 0xbf800000                                           // 0000000788BC: BF800000
	.long 0xbf800000                                           // 0000000788C0: BF800000
	.long 0xbf800000                                           // 0000000788C4: BF800000
	.long 0xbf800000                                           // 0000000788C8: BF800000
	.long 0xbf800000                                           // 0000000788CC: BF800000
	.long 0xbf800000                                           // 0000000788D0: BF800000
	.long 0xbf800000                                           // 0000000788D4: BF800000
	.long 0xbf800000                                           // 0000000788D8: BF800000
	.long 0xbf800000                                           // 0000000788DC: BF800000
	.long 0xbf800000                                           // 0000000788E0: BF800000
	.long 0xbf800000                                           // 0000000788E4: BF800000
	.long 0xbf800000                                           // 0000000788E8: BF800000
	.long 0xbf800000                                           // 0000000788EC: BF800000
	.long 0xbf800000                                           // 0000000788F0: BF800000
	.long 0xbf800000                                           // 0000000788F4: BF800000
	.long 0xbf800000                                           // 0000000788F8: BF800000
	.long 0xbf800000                                           // 0000000788FC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_get_global_size,@function
	.size	add_long_get_global_offset_get_global_size, add_long_get_global_offset_get_global_size_symend-add_long_get_global_offset_get_global_size
add_long_get_global_offset_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000078900: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000078904: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007890C: BEA10080
	s_clause 0x1                                               // 000000078910: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000078914: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007891C: DC4A0026 07000001
	s_clause 0x2                                               // 000000078924: BF850002
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000078928: F4080300 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078930: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000078938: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000078940: 360200FF 000003FF
	s_load_b32 s0, s[0:1], 0x18                                // 000000078948: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078950: D6100000 02292900
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000078958: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078960: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000078964: D6560001 04050202
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000007896C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000078974: BF89FC07
	s_lshl_b32 s1, s14, 1                                      // 000000078978: 8401810E
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007897C: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 000000078980: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000078988: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000078990: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000078998: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000007899C: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 0000000789A4: D7000204 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000789AC: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 0000000789B4: D5207C05 00090007
	s_lshl_b32 s2, s15, 4                                      // 0000000789BC: 8402840F
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000789C0: D73C0002 00020483
	s_lshl_b32 s0, s0, 1                                       // 0000000789C8: 84008100
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 0000000789CC: BF870232
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000789D0: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 0000000789D8: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 0000000789E0: 4002020D
	v_add_co_u32 v2, vcc_lo, s12, v2                           // 0000000789E4: D7006A02 0002040C
	v_add_co_ci_u32_e32 v3, vcc_lo, s13, v3, vcc_lo            // 0000000789EC: 4006060D
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 0000000789F0: D7006A04 0002080C
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 0000000789F8: 400A0A0D
	s_waitcnt vmcnt(1)                                         // 0000000789FC: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 000000078A00: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000078A08: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000078A0C: BF8903F7
	v_add_nc_u32_e32 v10, s0, v7                               // 000000078A10: 4A140E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078A14: BF870193
	v_add_nc_u32_e32 v8, s1, v8                                // 000000078A18: 4A101001
	v_add_nc_u32_e32 v9, s2, v6                                // 000000078A1C: 4A120C02
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078A20: BF870092
	v_add_co_u32 v6, s0, s8, v8                                // 000000078A24: D7000006 00021008
	v_add_co_ci_u32_e64 v7, null, s9, 0, s0                    // 000000078A2C: D5207C07 00010009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078A34: BF870093
	v_add_co_u32 v8, s0, s10, v9                               // 000000078A38: D7000008 0002120A
	v_add_co_ci_u32_e64 v9, null, s11, 0, s0                   // 000000078A40: D5207C09 0001000B
	v_add_co_u32 v10, s0, s6, v10                              // 000000078A48: D700000A 00021406
	s_delay_alu instid0(VALU_DEP_1)                            // 000000078A50: BF870001
	v_add_co_ci_u32_e64 v11, null, s7, 0, s0                   // 000000078A54: D5207C0B 00010007
	s_clause 0x2                                               // 000000078A5C: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000078A60: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000078A68: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000078A70: DC6E0000 007C0A04
	s_nop 0                                                    // 000000078A78: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078A7C: BFB60003
	s_endpgm                                                   // 000000078A80: BFB00000
add_long_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 000000078A84: BF800000
	.long 0xbf800000                                           // 000000078A88: BF800000
	.long 0xbf800000                                           // 000000078A8C: BF800000
	.long 0xbf800000                                           // 000000078A90: BF800000
	.long 0xbf800000                                           // 000000078A94: BF800000
	.long 0xbf800000                                           // 000000078A98: BF800000
	.long 0xbf800000                                           // 000000078A9C: BF800000
	.long 0xbf800000                                           // 000000078AA0: BF800000
	.long 0xbf800000                                           // 000000078AA4: BF800000
	.long 0xbf800000                                           // 000000078AA8: BF800000
	.long 0xbf800000                                           // 000000078AAC: BF800000
	.long 0xbf800000                                           // 000000078AB0: BF800000
	.long 0xbf800000                                           // 000000078AB4: BF800000
	.long 0xbf800000                                           // 000000078AB8: BF800000
	.long 0xbf800000                                           // 000000078ABC: BF800000
	.long 0xbf800000                                           // 000000078AC0: BF800000
	.long 0xbf800000                                           // 000000078AC4: BF800000
	.long 0xbf800000                                           // 000000078AC8: BF800000
	.long 0xbf800000                                           // 000000078ACC: BF800000
	.long 0xbf800000                                           // 000000078AD0: BF800000
	.long 0xbf800000                                           // 000000078AD4: BF800000
	.long 0xbf800000                                           // 000000078AD8: BF800000
	.long 0xbf800000                                           // 000000078ADC: BF800000
	.long 0xbf800000                                           // 000000078AE0: BF800000
	.long 0xbf800000                                           // 000000078AE4: BF800000
	.long 0xbf800000                                           // 000000078AE8: BF800000
	.long 0xbf800000                                           // 000000078AEC: BF800000
	.long 0xbf800000                                           // 000000078AF0: BF800000
	.long 0xbf800000                                           // 000000078AF4: BF800000
	.long 0xbf800000                                           // 000000078AF8: BF800000
	.long 0xbf800000                                           // 000000078AFC: BF800000

	.p2align	8
	.type	add_long_get_local_id_get_global_size,@function
	.size	add_long_get_local_id_get_global_size, add_long_get_local_id_get_global_size_symend-add_long_get_local_id_get_global_size
add_long_get_local_id_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000078B00: CA240080 010800FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 000000078B0C: D6100009 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000078B14: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000078B1C: BEA10080
	s_clause 0x1                                               // 000000078B20: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000078B24: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000078B2C: DC4A0026 07000001
	s_clause 0x3                                               // 000000078B34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000078B38: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000078B40: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000078B48: F4040180 F8000048
	s_load_b32 s0, s[0:1], 0x18                                // 000000078B50: F4000000 F8000018
	v_lshl_or_b32 v0, s2, 3, v8                                // 000000078B58: D6560000 04210602
	v_lshl_or_b32 v2, s3, 2, v9                                // 000000078B60: D6560002 04250403
	v_lshl_or_b32 v4, s4, 1, v10                               // 000000078B68: D6560004 04290204
	s_waitcnt lgkmcnt(0)                                       // 000000078B70: BF89FC07
	s_lshl_b32 s1, s10, 3                                      // 000000078B74: 8401830A
	v_add_co_u32 v0, s2, s12, v0                               // 000000078B78: D7000200 0002000C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000078B80: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s13, 0, s2                   // 000000078B84: D5207C01 0009000D
	v_add_co_u32 v2, s2, s14, v2                               // 000000078B8C: D7000202 0002040E
	v_add_co_ci_u32_e64 v3, null, s15, 0, s2                   // 000000078B94: D5207C03 0009000F
	v_add_co_u32 v4, s2, s6, v4                                // 000000078B9C: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000078BA4: BF870154
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000078BA8: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000078BB0: D5207C05 00090007
	s_lshl_b32 s2, s11, 2                                      // 000000078BB8: 8402820B
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000078BBC: D73C0002 00020483
	s_lshl_b32 s0, s0, 1                                       // 000000078BC4: 84008100
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000078BC8: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 000000078BD0: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 000000078BD8: 40020209
	s_delay_alu instid0(VALU_DEP_4)                            // 000000078BDC: BF870004
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 000000078BE0: D7006A02 00020408
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 000000078BE8: 40060609
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 000000078BEC: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 000000078BF4: 400A0A09
	s_waitcnt vmcnt(1)                                         // 000000078BF8: BF8907F7
	v_and_b32_e32 v11, 0xffff, v6                              // 000000078BFC: 36160CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000078C04: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000078C08: BF8903F7
	v_add_nc_u32_e32 v12, s0, v7                               // 000000078C0C: 4A180E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078C10: BF870193
	v_add_nc_u32_e32 v11, s1, v11                              // 000000078C14: 4A161601
	v_add_nc_u32_e32 v13, s2, v6                               // 000000078C18: 4A1A0C02
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078C1C: BF870092
	v_add_co_u32 v6, s0, v11, v8                               // 000000078C20: D7000006 0002110B
	v_add_co_ci_u32_e64 v7, null, 0, 0, s0                     // 000000078C28: D5207C07 00010080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078C30: BF870093
	v_add_co_u32 v8, s0, v13, v9                               // 000000078C34: D7000008 0002130D
	v_add_co_ci_u32_e64 v9, null, 0, 0, s0                     // 000000078C3C: D5207C09 00010080
	v_add_co_u32 v10, s0, v12, v10                             // 000000078C44: D700000A 0002150C
	s_delay_alu instid0(VALU_DEP_1)                            // 000000078C4C: BF870001
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 000000078C50: D5207C0B 00010080
	s_clause 0x2                                               // 000000078C58: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000078C5C: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000078C64: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000078C6C: DC6E0000 007C0A04
	s_nop 0                                                    // 000000078C74: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078C78: BFB60003
	s_endpgm                                                   // 000000078C7C: BFB00000
add_long_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000078C80: BF800000
	.long 0xbf800000                                           // 000000078C84: BF800000
	.long 0xbf800000                                           // 000000078C88: BF800000
	.long 0xbf800000                                           // 000000078C8C: BF800000
	.long 0xbf800000                                           // 000000078C90: BF800000
	.long 0xbf800000                                           // 000000078C94: BF800000
	.long 0xbf800000                                           // 000000078C98: BF800000
	.long 0xbf800000                                           // 000000078C9C: BF800000
	.long 0xbf800000                                           // 000000078CA0: BF800000
	.long 0xbf800000                                           // 000000078CA4: BF800000
	.long 0xbf800000                                           // 000000078CA8: BF800000
	.long 0xbf800000                                           // 000000078CAC: BF800000
	.long 0xbf800000                                           // 000000078CB0: BF800000
	.long 0xbf800000                                           // 000000078CB4: BF800000
	.long 0xbf800000                                           // 000000078CB8: BF800000
	.long 0xbf800000                                           // 000000078CBC: BF800000
	.long 0xbf800000                                           // 000000078CC0: BF800000
	.long 0xbf800000                                           // 000000078CC4: BF800000
	.long 0xbf800000                                           // 000000078CC8: BF800000
	.long 0xbf800000                                           // 000000078CCC: BF800000
	.long 0xbf800000                                           // 000000078CD0: BF800000
	.long 0xbf800000                                           // 000000078CD4: BF800000
	.long 0xbf800000                                           // 000000078CD8: BF800000
	.long 0xbf800000                                           // 000000078CDC: BF800000
	.long 0xbf800000                                           // 000000078CE0: BF800000
	.long 0xbf800000                                           // 000000078CE4: BF800000
	.long 0xbf800000                                           // 000000078CE8: BF800000
	.long 0xbf800000                                           // 000000078CEC: BF800000
	.long 0xbf800000                                           // 000000078CF0: BF800000
	.long 0xbf800000                                           // 000000078CF4: BF800000
	.long 0xbf800000                                           // 000000078CF8: BF800000
	.long 0xbf800000                                           // 000000078CFC: BF800000

	.p2align	8
	.type	add_long_get_group_id_get_global_size,@function
	.size	add_long_get_group_id_get_global_size, add_long_get_group_id_get_global_size_symend-add_long_get_group_id_get_global_size
add_long_get_group_id_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000078D00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000078D04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000078D0C: BEA10080
	s_clause 0x1                                               // 000000078D10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000078D14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000078D1C: DC4A0026 07000001
	s_clause 0x2                                               // 000000078D24: BF850002
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000078D28: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000078D30: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000078D38: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000078D40: 360200FF 000003FF
	s_load_b32 s0, s[0:1], 0x18                                // 000000078D48: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078D50: D6100000 02292900
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000078D58: D6560002 04090803
	s_mov_b32 s1, 0                                            // 000000078D60: BE810080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000078D64: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000078D6C: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000078D70: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000078D78: BF89FC07
	s_lshl_b32 s5, s10, 1                                      // 000000078D7C: 8405810A
	v_add_co_u32 v0, s10, s12, v1                              // 000000078D80: D7000A00 0002020C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000078D88: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s13, 0, s10                  // 000000078D8C: D5207C01 0029000D
	v_add_co_u32 v2, s10, s14, v2                              // 000000078D94: D7000A02 0002040E
	v_add_co_ci_u32_e64 v3, null, s15, 0, s10                  // 000000078D9C: D5207C03 0029000F
	v_add_co_u32 v4, s6, s6, v4                                // 000000078DA4: D7000604 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000078DAC: BF870154
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000078DB0: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s6                    // 000000078DB8: D5207C05 00190007
	s_lshl_b32 s6, s11, 4                                      // 000000078DC0: 8406840B
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000078DC4: D73C0002 00020483
	s_lshl_b32 s0, s0, 1                                       // 000000078DCC: 84008100
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000078DD0: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 000000078DD8: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 000000078DE0: 40020209
	s_delay_alu instid0(VALU_DEP_4)                            // 000000078DE4: BF870004
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 000000078DE8: D7006A02 00020408
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 000000078DF0: 40060609
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 000000078DF4: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 000000078DFC: 400A0A09
	s_waitcnt vmcnt(1)                                         // 000000078E00: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 000000078E04: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000078E0C: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000078E10: BF8903F7
	v_add_nc_u32_e32 v10, s0, v7                               // 000000078E14: 4A140E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078E18: BF870193
	v_add_nc_u32_e32 v8, s5, v8                                // 000000078E1C: 4A101005
	v_add_nc_u32_e32 v9, s6, v6                                // 000000078E20: 4A120C06
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078E24: BF870092
	v_add_co_u32 v6, s0, v8, s2                                // 000000078E28: D7000006 00000508
	v_add_co_ci_u32_e64 v7, null, s1, 0, s0                    // 000000078E30: D5207C07 00010001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078E38: BF870093
	v_add_co_u32 v8, s0, v9, s3                                // 000000078E3C: D7000008 00000709
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 000000078E44: D5207C09 00010001
	v_add_co_u32 v10, s0, v10, s4                              // 000000078E4C: D700000A 0000090A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000078E54: BF870001
	v_add_co_ci_u32_e64 v11, null, s1, 0, s0                   // 000000078E58: D5207C0B 00010001
	s_clause 0x2                                               // 000000078E60: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000078E64: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000078E6C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000078E74: DC6E0000 007C0A04
	s_nop 0                                                    // 000000078E7C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078E80: BFB60003
	s_endpgm                                                   // 000000078E84: BFB00000
add_long_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000078E88: BF800000
	.long 0xbf800000                                           // 000000078E8C: BF800000
	.long 0xbf800000                                           // 000000078E90: BF800000
	.long 0xbf800000                                           // 000000078E94: BF800000
	.long 0xbf800000                                           // 000000078E98: BF800000
	.long 0xbf800000                                           // 000000078E9C: BF800000
	.long 0xbf800000                                           // 000000078EA0: BF800000
	.long 0xbf800000                                           // 000000078EA4: BF800000
	.long 0xbf800000                                           // 000000078EA8: BF800000
	.long 0xbf800000                                           // 000000078EAC: BF800000
	.long 0xbf800000                                           // 000000078EB0: BF800000
	.long 0xbf800000                                           // 000000078EB4: BF800000
	.long 0xbf800000                                           // 000000078EB8: BF800000
	.long 0xbf800000                                           // 000000078EBC: BF800000
	.long 0xbf800000                                           // 000000078EC0: BF800000
	.long 0xbf800000                                           // 000000078EC4: BF800000
	.long 0xbf800000                                           // 000000078EC8: BF800000
	.long 0xbf800000                                           // 000000078ECC: BF800000
	.long 0xbf800000                                           // 000000078ED0: BF800000
	.long 0xbf800000                                           // 000000078ED4: BF800000
	.long 0xbf800000                                           // 000000078ED8: BF800000
	.long 0xbf800000                                           // 000000078EDC: BF800000
	.long 0xbf800000                                           // 000000078EE0: BF800000
	.long 0xbf800000                                           // 000000078EE4: BF800000
	.long 0xbf800000                                           // 000000078EE8: BF800000
	.long 0xbf800000                                           // 000000078EEC: BF800000
	.long 0xbf800000                                           // 000000078EF0: BF800000
	.long 0xbf800000                                           // 000000078EF4: BF800000
	.long 0xbf800000                                           // 000000078EF8: BF800000
	.long 0xbf800000                                           // 000000078EFC: BF800000

	.p2align	8
	.type	add_long_get_local_size_get_global_size,@function
	.size	add_long_get_local_size_get_global_size, add_long_get_local_size_get_global_size_symend-add_long_get_local_size_get_global_size
add_long_get_local_size_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000078F00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000078F04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000078F0C: BEA10080
	s_clause 0x1                                               // 000000078F10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000078F14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000078F1C: DC4A0026 07000001
	s_clause 0x2                                               // 000000078F24: BF850002
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000078F28: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000078F30: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000078F38: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000078F40: 360200FF 000003FF
	s_load_b32 s0, s[0:1], 0x18                                // 000000078F48: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078F50: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000078F58: D6560002 04090203
	s_mov_b32 s1, 0                                            // 000000078F60: BE810080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000078F64: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000078F6C: BF870133
	v_lshl_or_b32 v4, s4, 2, v0                                // 000000078F70: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000078F78: BF89FC07
	s_lshl_b32 s2, s10, 1                                      // 000000078F7C: 8402810A
	v_add_co_u32 v0, s3, s12, v1                               // 000000078F80: D7000300 0002020C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000078F88: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s13, 0, s3                   // 000000078F8C: D5207C01 000D000D
	v_add_co_u32 v2, s3, s14, v2                               // 000000078F94: D7000302 0002040E
	v_add_co_ci_u32_e64 v3, null, s15, 0, s3                   // 000000078F9C: D5207C03 000D000F
	v_add_co_u32 v4, s3, s6, v4                                // 000000078FA4: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000078FAC: BF870154
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000078FB0: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 000000078FB8: D5207C05 000D0007
	s_lshl_b32 s3, s11, 1                                      // 000000078FC0: 8403810B
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000078FC4: D73C0002 00020483
	s_lshl_b32 s0, s0, 2                                       // 000000078FCC: 84008200
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000078FD0: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 000000078FD8: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 000000078FE0: 40020209
	s_delay_alu instid0(VALU_DEP_4)                            // 000000078FE4: BF870004
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 000000078FE8: D7006A02 00020408
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 000000078FF0: 40060609
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 000000078FF4: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 000000078FFC: 400A0A09
	s_waitcnt vmcnt(1)                                         // 000000079000: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 000000079004: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000007900C: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000079010: BF8903F7
	v_add_nc_u32_e32 v10, s0, v7                               // 000000079014: 4A140E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079018: BF870193
	v_add_nc_u32_e32 v8, s2, v8                                // 00000007901C: 4A101002
	v_add_nc_u32_e32 v9, s3, v6                                // 000000079020: 4A120C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079024: BF870092
	v_add_co_u32 v6, s0, v8, 2                                 // 000000079028: D7000006 00010508
	v_add_co_ci_u32_e64 v7, null, s1, 0, s0                    // 000000079030: D5207C07 00010001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079038: BF870093
	v_add_co_u32 v8, s0, v9, 2                                 // 00000007903C: D7000008 00010509
	v_add_co_ci_u32_e64 v9, null, 0, 0, s0                     // 000000079044: D5207C09 00010080
	v_add_co_u32 v10, s0, v10, 4                               // 00000007904C: D700000A 0001090A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000079054: BF870001
	v_add_co_ci_u32_e64 v11, null, s1, 0, s0                   // 000000079058: D5207C0B 00010001
	s_clause 0x2                                               // 000000079060: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000079064: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007906C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000079074: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007907C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079080: BFB60003
	s_endpgm                                                   // 000000079084: BFB00000
add_long_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 000000079088: BF800000
	.long 0xbf800000                                           // 00000007908C: BF800000
	.long 0xbf800000                                           // 000000079090: BF800000
	.long 0xbf800000                                           // 000000079094: BF800000
	.long 0xbf800000                                           // 000000079098: BF800000
	.long 0xbf800000                                           // 00000007909C: BF800000
	.long 0xbf800000                                           // 0000000790A0: BF800000
	.long 0xbf800000                                           // 0000000790A4: BF800000
	.long 0xbf800000                                           // 0000000790A8: BF800000
	.long 0xbf800000                                           // 0000000790AC: BF800000
	.long 0xbf800000                                           // 0000000790B0: BF800000
	.long 0xbf800000                                           // 0000000790B4: BF800000
	.long 0xbf800000                                           // 0000000790B8: BF800000
	.long 0xbf800000                                           // 0000000790BC: BF800000
	.long 0xbf800000                                           // 0000000790C0: BF800000
	.long 0xbf800000                                           // 0000000790C4: BF800000
	.long 0xbf800000                                           // 0000000790C8: BF800000
	.long 0xbf800000                                           // 0000000790CC: BF800000
	.long 0xbf800000                                           // 0000000790D0: BF800000
	.long 0xbf800000                                           // 0000000790D4: BF800000
	.long 0xbf800000                                           // 0000000790D8: BF800000
	.long 0xbf800000                                           // 0000000790DC: BF800000
	.long 0xbf800000                                           // 0000000790E0: BF800000
	.long 0xbf800000                                           // 0000000790E4: BF800000
	.long 0xbf800000                                           // 0000000790E8: BF800000
	.long 0xbf800000                                           // 0000000790EC: BF800000
	.long 0xbf800000                                           // 0000000790F0: BF800000
	.long 0xbf800000                                           // 0000000790F4: BF800000
	.long 0xbf800000                                           // 0000000790F8: BF800000
	.long 0xbf800000                                           // 0000000790FC: BF800000

	.p2align	8
	.type	add_long_get_global_id_get_global_size,@function
	.size	add_long_get_global_id_get_global_size, add_long_get_global_id_get_global_size_symend-add_long_get_global_id_get_global_size
add_long_get_global_id_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000079100: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007910C: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 000000079114: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000007911C: BEA10080
	s_clause 0x1                                               // 000000079120: BF850001
	global_load_b32 v11, v1, s[0:1] offset:34                  // 000000079124: DC520022 0B000001
	global_load_u16 v12, v1, s[0:1] offset:38                  // 00000007912C: DC4A0026 0C000001
	s_clause 0x3                                               // 000000079134: BF850003
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000079138: F4080300 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079140: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000079148: F4040180 F8000048
	s_load_b32 s0, s[0:1], 0x18                                // 000000079150: F4000000 F8000018
	v_lshl_or_b32 v3, s3, 1, v3                                // 000000079158: D6560003 040D0203
	v_lshl_or_b32 v5, s4, 2, v4                                // 000000079160: D6560005 04110404
	v_lshl_or_b32 v0, s2, 1, v2                                // 000000079168: D6560000 04090202
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000079170: BF8700C1
	v_lshlrev_b64 v[1:2], 3, v[0:1]                            // 000000079174: D73C0001 00020083
	s_waitcnt lgkmcnt(0)                                       // 00000007917C: BF89FC07
	s_lshl_b32 s1, s14, 1                                      // 000000079180: 8401810E
	v_add_co_u32 v3, s2, s10, v3                               // 000000079184: D7000203 0002060A
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 00000007918C: D5207C04 0009000B
	v_add_co_u32 v5, s2, s6, v5                                // 000000079194: D7000205 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007919C: BF870191
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 0000000791A0: D5207C06 00090007
	v_lshlrev_b64 v[7:8], 3, v[3:4]                            // 0000000791A8: D73C0007 00020683
	v_add_co_u32 v1, vcc_lo, s12, v1                           // 0000000791B0: D7006A01 0002020C
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 0000000791B8: BF870233
	v_lshlrev_b64 v[9:10], 3, v[5:6]                           // 0000000791BC: D73C0009 00020A83
	v_add_co_ci_u32_e32 v2, vcc_lo, s13, v2, vcc_lo            // 0000000791C4: 4004040D
	s_lshl_b32 s2, s15, 1                                      // 0000000791C8: 8402810F
	v_add_co_u32 v7, vcc_lo, s12, v7                           // 0000000791CC: D7006A07 00020E0C
	s_lshl_b32 s0, s0, 2                                       // 0000000791D4: 84008200
	v_add_co_ci_u32_e32 v8, vcc_lo, s13, v8, vcc_lo            // 0000000791D8: 4010100D
	v_add_co_u32 v9, vcc_lo, s12, v9                           // 0000000791DC: D7006A09 0002120C
	v_add_co_ci_u32_e32 v10, vcc_lo, s13, v10, vcc_lo          // 0000000791E4: 4014140D
	s_waitcnt vmcnt(1)                                         // 0000000791E8: BF8907F7
	v_and_b32_e32 v13, 0xffff, v11                             // 0000000791EC: 361A16FF 0000FFFF
	v_lshrrev_b32_e32 v11, 16, v11                             // 0000000791F4: 32161690
	s_waitcnt vmcnt(0)                                         // 0000000791F8: BF8903F7
	v_add_nc_u32_e32 v14, s0, v12                              // 0000000791FC: 4A1C1800
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079200: BF870193
	v_add_nc_u32_e32 v13, s1, v13                              // 000000079204: 4A1A1A01
	v_add_nc_u32_e32 v11, s2, v11                              // 000000079208: 4A161602
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007920C: BF870092
	v_add_co_u32 v12, s0, v13, s8                              // 000000079210: D700000C 0000110D
	v_add_co_ci_u32_e64 v13, null, 0, s9, s0                   // 000000079218: D5207C0D 00001280
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000079220: BF870223
	v_add_co_u32 v3, vcc_lo, v3, v11                           // 000000079224: D7006A03 00021703
	v_add_co_ci_u32_e32 v4, vcc_lo, 0, v4, vcc_lo              // 00000007922C: 40080880
	v_add_co_u32 v11, vcc_lo, v12, v0                          // 000000079230: D7006A0B 0002010C
	s_delay_alu instid0(VALU_DEP_4)                            // 000000079238: BF870004
	v_add_co_ci_u32_e32 v12, vcc_lo, 0, v13, vcc_lo            // 00000007923C: 40181A80
	v_add_co_u32 v5, vcc_lo, v5, v14                           // 000000079240: D7006A05 00021D05
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v6, vcc_lo              // 000000079248: 400C0C80
	s_clause 0x2                                               // 00000007924C: BF850002
	global_store_b64 v[1:2], v[11:12], off                     // 000000079250: DC6E0000 007C0B01
	global_store_b64 v[7:8], v[3:4], off                       // 000000079258: DC6E0000 007C0307
	global_store_b64 v[9:10], v[5:6], off                      // 000000079260: DC6E0000 007C0509
	s_nop 0                                                    // 000000079268: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007926C: BFB60003
	s_endpgm                                                   // 000000079270: BFB00000
add_long_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000079274: BF800000
	.long 0xbf800000                                           // 000000079278: BF800000
	.long 0xbf800000                                           // 00000007927C: BF800000
	.long 0xbf800000                                           // 000000079280: BF800000
	.long 0xbf800000                                           // 000000079284: BF800000
	.long 0xbf800000                                           // 000000079288: BF800000
	.long 0xbf800000                                           // 00000007928C: BF800000
	.long 0xbf800000                                           // 000000079290: BF800000
	.long 0xbf800000                                           // 000000079294: BF800000
	.long 0xbf800000                                           // 000000079298: BF800000
	.long 0xbf800000                                           // 00000007929C: BF800000
	.long 0xbf800000                                           // 0000000792A0: BF800000
	.long 0xbf800000                                           // 0000000792A4: BF800000
	.long 0xbf800000                                           // 0000000792A8: BF800000
	.long 0xbf800000                                           // 0000000792AC: BF800000
	.long 0xbf800000                                           // 0000000792B0: BF800000
	.long 0xbf800000                                           // 0000000792B4: BF800000
	.long 0xbf800000                                           // 0000000792B8: BF800000
	.long 0xbf800000                                           // 0000000792BC: BF800000
	.long 0xbf800000                                           // 0000000792C0: BF800000
	.long 0xbf800000                                           // 0000000792C4: BF800000
	.long 0xbf800000                                           // 0000000792C8: BF800000
	.long 0xbf800000                                           // 0000000792CC: BF800000
	.long 0xbf800000                                           // 0000000792D0: BF800000
	.long 0xbf800000                                           // 0000000792D4: BF800000
	.long 0xbf800000                                           // 0000000792D8: BF800000
	.long 0xbf800000                                           // 0000000792DC: BF800000
	.long 0xbf800000                                           // 0000000792E0: BF800000
	.long 0xbf800000                                           // 0000000792E4: BF800000
	.long 0xbf800000                                           // 0000000792E8: BF800000
	.long 0xbf800000                                           // 0000000792EC: BF800000
	.long 0xbf800000                                           // 0000000792F0: BF800000
	.long 0xbf800000                                           // 0000000792F4: BF800000
	.long 0xbf800000                                           // 0000000792F8: BF800000
	.long 0xbf800000                                           // 0000000792FC: BF800000

	.p2align	8
	.type	add_long_get_global_size_get_global_size,@function
	.size	add_long_get_global_size_get_global_size, add_long_get_global_size_get_global_size_symend-add_long_get_global_size_get_global_size
add_long_get_global_size_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000079300: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007930C: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079314: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007931C: BEA10080
	s_clause 0x1                                               // 000000079320: BF850001
	global_load_b32 v8, v1, s[0:1] offset:34                   // 000000079324: DC520022 08000001
	global_load_u16 v12, v1, s[0:1] offset:38                  // 00000007932C: DC4A0026 0C000001
	s_clause 0x4                                               // 000000079334: BF850004
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000079338: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079340: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000079348: F4000140 F8000018
	s_load_b64 s[12:13], s[0:1], 0x48                          // 000000079350: F4040300 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000079358: F4040000 F8000000
	v_lshl_or_b32 v2, s2, 4, v2                                // 000000079360: D6560002 04090802
	v_lshl_or_b32 v4, s3, 1, v3                                // 000000079368: D6560004 040D0203
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000079370: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000079378: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 00000007937C: 84028406
	v_add_co_u32 v2, s3, s8, v2                                // 000000079380: D7000302 00020408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000079388: BF8700A1
	v_add_co_ci_u32_e64 v3, null, s9, 0, s3                    // 00000007938C: D5207C03 000D0009
	v_add_co_u32 v4, s4, s10, v4                               // 000000079394: D7000404 0002080A
	v_add_co_ci_u32_e64 v5, null, s11, 0, s4                   // 00000007939C: D5207C05 0011000B
	s_lshl_b32 s4, s5, 1                                       // 0000000793A4: 84048105
	v_add_co_u32 v6, s5, s12, v0                               // 0000000793A8: D7000506 0002000C
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000793B0: D73C0002 00020483
	s_lshl_b32 s3, s7, 1                                       // 0000000793B8: 84038107
	v_add_co_ci_u32_e64 v7, null, s13, 0, s5                   // 0000000793BC: D5207C07 0015000D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000793C4: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000793CC: BF870193
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000793D0: D7006A02 00020400
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 0000000793D8: D73C0006 00020C83
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000793E0: 40060601
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000793E4: BF870224
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000793E8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000793F0: 400A0A01
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 0000000793F4: D7006A06 00020C00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 0000000793FC: 400E0E01
	s_waitcnt vmcnt(1)                                         // 000000079400: BF8907F7
	v_and_b32_e32 v9, 0xffff, v8                               // 000000079404: 361210FF 0000FFFF
	v_lshrrev_b32_e32 v10, 16, v8                              // 00000007940C: 32141090
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079410: BF870092
	v_add_nc_u32_e32 v0, s2, v9                                // 000000079414: 4A001202
	v_lshlrev_b64 v[8:9], 1, v[0:1]                            // 000000079418: D73C0008 00020081
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079420: BF870093
	v_add_nc_u32_e32 v0, s3, v10                               // 000000079424: 4A001403
	v_lshlrev_b64 v[10:11], 1, v[0:1]                          // 000000079428: D73C000A 00020081
	s_waitcnt vmcnt(0)                                         // 000000079430: BF8903F7
	v_add_nc_u32_e32 v0, s4, v12                               // 000000079434: 4A001804
	s_delay_alu instid0(VALU_DEP_1)                            // 000000079438: BF870001
	v_lshlrev_b64 v[0:1], 1, v[0:1]                            // 00000007943C: D73C0000 00020081
	s_clause 0x2                                               // 000000079444: BF850002
	global_store_b64 v[2:3], v[8:9], off                       // 000000079448: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000079450: DC6E0000 007C0A04
	global_store_b64 v[6:7], v[0:1], off                       // 000000079458: DC6E0000 007C0006
	s_nop 0                                                    // 000000079460: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079464: BFB60003
	s_endpgm                                                   // 000000079468: BFB00000
add_long_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000007946C: BF800000
	.long 0xbf800000                                           // 000000079470: BF800000
	.long 0xbf800000                                           // 000000079474: BF800000
	.long 0xbf800000                                           // 000000079478: BF800000
	.long 0xbf800000                                           // 00000007947C: BF800000
	.long 0xbf800000                                           // 000000079480: BF800000
	.long 0xbf800000                                           // 000000079484: BF800000
	.long 0xbf800000                                           // 000000079488: BF800000
	.long 0xbf800000                                           // 00000007948C: BF800000
	.long 0xbf800000                                           // 000000079490: BF800000
	.long 0xbf800000                                           // 000000079494: BF800000
	.long 0xbf800000                                           // 000000079498: BF800000
	.long 0xbf800000                                           // 00000007949C: BF800000
	.long 0xbf800000                                           // 0000000794A0: BF800000
	.long 0xbf800000                                           // 0000000794A4: BF800000
	.long 0xbf800000                                           // 0000000794A8: BF800000
	.long 0xbf800000                                           // 0000000794AC: BF800000
	.long 0xbf800000                                           // 0000000794B0: BF800000
	.long 0xbf800000                                           // 0000000794B4: BF800000
	.long 0xbf800000                                           // 0000000794B8: BF800000
	.long 0xbf800000                                           // 0000000794BC: BF800000
	.long 0xbf800000                                           // 0000000794C0: BF800000
	.long 0xbf800000                                           // 0000000794C4: BF800000
	.long 0xbf800000                                           // 0000000794C8: BF800000
	.long 0xbf800000                                           // 0000000794CC: BF800000
	.long 0xbf800000                                           // 0000000794D0: BF800000
	.long 0xbf800000                                           // 0000000794D4: BF800000
	.long 0xbf800000                                           // 0000000794D8: BF800000
	.long 0xbf800000                                           // 0000000794DC: BF800000
	.long 0xbf800000                                           // 0000000794E0: BF800000
	.long 0xbf800000                                           // 0000000794E4: BF800000
	.long 0xbf800000                                           // 0000000794E8: BF800000
	.long 0xbf800000                                           // 0000000794EC: BF800000
	.long 0xbf800000                                           // 0000000794F0: BF800000
	.long 0xbf800000                                           // 0000000794F4: BF800000
	.long 0xbf800000                                           // 0000000794F8: BF800000
	.long 0xbf800000                                           // 0000000794FC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_get_global_size,@function
	.size	add_long_get_num_groups_get_global_size, add_long_get_num_groups_get_global_size_symend-add_long_get_num_groups_get_global_size
add_long_get_num_groups_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000079500: 7E020280
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000079504: F4080200 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007950C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000079514: BEA10080
	s_clause 0x1                                               // 000000079518: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000007951C: DC520022 06000001
	global_load_u16 v8, v1, s[0:1] offset:38                   // 000000079524: DC4A0026 08000001
	s_clause 0x1                                               // 00000007952C: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000079530: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000079538: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000079540: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079548: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000079550: D6560002 04090203
	s_load_b32 s1, s[0:1], 0x18                                // 000000079558: F4000040 F8000018
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079560: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000079564: D6560001 04050202
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007956C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000079574: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079578: BF870092
	v_add_co_u32 v0, s2, s12, v1                               // 00000007957C: D7000200 0002020C
	v_add_co_ci_u32_e64 v1, null, s13, 0, s2                   // 000000079584: D5207C01 0009000D
	v_add_co_u32 v2, s2, s14, v2                               // 00000007958C: D7000202 0002040E
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079594: BF870191
	v_add_co_ci_u32_e64 v3, null, s15, 0, s2                   // 000000079598: D5207C03 0009000F
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000795A0: D73C0000 00020083
	v_add_co_u32 v4, s2, s6, v4                                // 0000000795A8: D7000204 00020806
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000795B0: BF870223
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000795B4: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 0000000795BC: D5207C05 00090007
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 0000000795C4: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 0000000795CC: 40020209
	s_lshl_b32 s2, s10, 1                                      // 0000000795D0: 8402810A
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000795D4: BF870094
	v_add_co_u32 v2, s0, s8, v2                                // 0000000795D8: D7000002 00020408
	v_add_co_ci_u32_e64 v3, s0, s9, v3, s0                     // 0000000795E0: D5200003 00020609
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000795E8: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 0000000795F0: BF8907F7
	v_lshrrev_b32_e32 v7, 16, v6                               // 0000000795F4: 320E0C90
	v_and_b32_e32 v9, 0xffff, v6                               // 0000000795F8: 36120CFF 0000FFFF
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000079600: 7C7A0C80
	s_waitcnt vmcnt(0)                                         // 000000079604: BF8903F7
	v_cmp_ne_u32_e64 s0, 0, v8                                 // 000000079608: D44D0000 00021080
	s_delay_alu instid0(VALU_DEP_3)                            // 000000079610: BF870003
	v_add_nc_u32_e32 v6, s2, v9                                // 000000079614: 4A0C1202
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079618: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000007961C: 7C7A0E80
	s_addc_u32 s2, s10, 0                                      // 000000079620: 8202800A
	s_lshl_b32 s3, s11, 1                                      // 000000079624: 8403810B
	v_add_co_u32 v6, s2, s2, v6                                // 000000079628: D7000206 00020C02
	v_add_nc_u32_e32 v9, s3, v7                                // 000000079630: 4A120E03
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079634: BF07806A
	v_add_co_ci_u32_e64 v7, null, 0, 0, s2                     // 000000079638: D5207C07 00090080
	s_addc_u32 s2, s11, 0                                      // 000000079640: 8202800B
	s_lshl_b32 s3, s1, 2                                       // 000000079644: 84038201
	s_cmp_lg_u32 s0, 0                                         // 000000079648: BF078000
	v_add_nc_u32_e32 v10, s3, v8                               // 00000007964C: 4A141003
	v_add_co_u32 v8, s0, s2, v9                                // 000000079650: D7000008 00021202
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000079658: BF8700C1
	v_add_co_ci_u32_e64 v9, null, 0, 0, s0                     // 00000007965C: D5207C09 00010080
	s_addc_u32 s0, s1, 0                                       // 000000079664: 82008001
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 000000079668: D7006A04 00020808
	v_add_co_u32 v10, s0, s0, v10                              // 000000079670: D700000A 00021400
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 000000079678: D5207C0B 00010080
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 000000079680: 400A0A09
	s_clause 0x2                                               // 000000079684: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000079688: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000079690: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000079698: DC6E0000 007C0A04
	s_nop 0                                                    // 0000000796A0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000796A4: BFB60003
	s_endpgm                                                   // 0000000796A8: BFB00000
add_long_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 0000000796AC: BF800000
	.long 0xbf800000                                           // 0000000796B0: BF800000
	.long 0xbf800000                                           // 0000000796B4: BF800000
	.long 0xbf800000                                           // 0000000796B8: BF800000
	.long 0xbf800000                                           // 0000000796BC: BF800000
	.long 0xbf800000                                           // 0000000796C0: BF800000
	.long 0xbf800000                                           // 0000000796C4: BF800000
	.long 0xbf800000                                           // 0000000796C8: BF800000
	.long 0xbf800000                                           // 0000000796CC: BF800000
	.long 0xbf800000                                           // 0000000796D0: BF800000
	.long 0xbf800000                                           // 0000000796D4: BF800000
	.long 0xbf800000                                           // 0000000796D8: BF800000
	.long 0xbf800000                                           // 0000000796DC: BF800000
	.long 0xbf800000                                           // 0000000796E0: BF800000
	.long 0xbf800000                                           // 0000000796E4: BF800000
	.long 0xbf800000                                           // 0000000796E8: BF800000
	.long 0xbf800000                                           // 0000000796EC: BF800000
	.long 0xbf800000                                           // 0000000796F0: BF800000
	.long 0xbf800000                                           // 0000000796F4: BF800000
	.long 0xbf800000                                           // 0000000796F8: BF800000
	.long 0xbf800000                                           // 0000000796FC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_get_global_size,@function
	.size	add_long_get_work_dim_get_global_size, add_long_get_work_dim_get_global_size_symend-add_long_get_work_dim_get_global_size
add_long_get_work_dim_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000079700: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000079704: D6100002 02291500
	s_mov_b32 s5, 0                                            // 00000007970C: BE850080
	s_mov_b32 s33, 0                                           // 000000079710: BEA10080
	s_clause 0x1                                               // 000000079714: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000079718: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000079720: DC4A0026 07000001
	s_clause 0x2                                               // 000000079728: BF850002
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000007972C: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000079734: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007973C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000079744: 360200FF 000003FF
	s_clause 0x1                                               // 00000007974C: BF850001
	s_load_b32 s16, s[0:1], 0x18                               // 000000079750: F4000400 F8000018
	s_load_b32 s0, s[0:1], 0x50                                // 000000079758: F4000000 F8000050
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079760: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000079768: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000079770: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000079778: BF870133
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007977C: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000079784: BF89FC07
	s_lshl_b32 s1, s10, 1                                      // 000000079788: 8401810A
	v_add_co_u32 v0, s2, s12, v1                               // 00000007978C: D7000200 0002020C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000079794: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s13, 0, s2                   // 000000079798: D5207C01 0009000D
	v_add_co_u32 v2, s3, s14, v2                               // 0000000797A0: D7000302 0002040E
	v_add_co_ci_u32_e64 v3, null, s15, 0, s3                   // 0000000797A8: D5207C03 000D000F
	v_add_co_u32 v4, s3, s6, v4                                // 0000000797B0: D7000304 00020806
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000797B8: BF870224
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000797BC: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 0000000797C4: D5207C05 000D0007
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000797CC: D73C0002 00020483
	s_lshl_b32 s2, s11, 1                                      // 0000000797D4: 8402810B
	s_lshl_b32 s3, s16, 2                                      // 0000000797D8: 84038210
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000797DC: BF870002
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000797E0: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 0000000797E8: D7006A00 00020008
	s_and_b32 s0, s0, 0xffff                                   // 0000000797F0: 8B00FF00 0000FFFF
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo             // 0000000797F8: 40020209
	v_add_co_u32 v2, vcc_lo, s8, v2                            // 0000000797FC: D7006A02 00020408
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo             // 000000079804: 40060609
	v_add_co_u32 v4, vcc_lo, s8, v4                            // 000000079808: D7006A04 00020808
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo             // 000000079810: 400A0A09
	s_waitcnt vmcnt(1)                                         // 000000079814: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 000000079818: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000079820: 320C0C90
	s_waitcnt vmcnt(0)                                         // 000000079824: BF8903F7
	v_add_nc_u32_e32 v10, s3, v7                               // 000000079828: 4A140E03
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007982C: BF870193
	v_add_nc_u32_e32 v8, s1, v8                                // 000000079830: 4A101001
	v_add_nc_u32_e32 v9, s2, v6                                // 000000079834: 4A120C02
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079838: BF870092
	v_add_co_u32 v6, s1, v8, s0                                // 00000007983C: D7000106 00000108
	v_add_co_ci_u32_e64 v7, null, s5, 0, s1                    // 000000079844: D5207C07 00050005
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007984C: BF870003
	v_add_co_u32 v8, s1, v9, s0                                // 000000079850: D7000108 00000109
	v_add_co_u32 v10, s0, v10, s0                              // 000000079858: D700000A 0000010A
	v_add_co_ci_u32_e64 v9, null, s5, 0, s1                    // 000000079860: D5207C09 00050005
	v_add_co_ci_u32_e64 v11, null, s5, 0, s0                   // 000000079868: D5207C0B 00010005
	s_clause 0x2                                               // 000000079870: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000079874: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007987C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000079884: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007988C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079890: BFB60003
	s_endpgm                                                   // 000000079894: BFB00000
add_long_get_work_dim_get_global_size_symend:
	.long 0xbf800000                                           // 000000079898: BF800000
	.long 0xbf800000                                           // 00000007989C: BF800000
	.long 0xbf800000                                           // 0000000798A0: BF800000
	.long 0xbf800000                                           // 0000000798A4: BF800000
	.long 0xbf800000                                           // 0000000798A8: BF800000
	.long 0xbf800000                                           // 0000000798AC: BF800000
	.long 0xbf800000                                           // 0000000798B0: BF800000
	.long 0xbf800000                                           // 0000000798B4: BF800000
	.long 0xbf800000                                           // 0000000798B8: BF800000
	.long 0xbf800000                                           // 0000000798BC: BF800000
	.long 0xbf800000                                           // 0000000798C0: BF800000
	.long 0xbf800000                                           // 0000000798C4: BF800000
	.long 0xbf800000                                           // 0000000798C8: BF800000
	.long 0xbf800000                                           // 0000000798CC: BF800000
	.long 0xbf800000                                           // 0000000798D0: BF800000
	.long 0xbf800000                                           // 0000000798D4: BF800000
	.long 0xbf800000                                           // 0000000798D8: BF800000
	.long 0xbf800000                                           // 0000000798DC: BF800000
	.long 0xbf800000                                           // 0000000798E0: BF800000
	.long 0xbf800000                                           // 0000000798E4: BF800000
	.long 0xbf800000                                           // 0000000798E8: BF800000
	.long 0xbf800000                                           // 0000000798EC: BF800000
	.long 0xbf800000                                           // 0000000798F0: BF800000
	.long 0xbf800000                                           // 0000000798F4: BF800000
	.long 0xbf800000                                           // 0000000798F8: BF800000
	.long 0xbf800000                                           // 0000000798FC: BF800000

	.p2align	8
	.type	add_long_x_get_num_groups,@function
	.size	add_long_x_get_num_groups, add_long_x_get_num_groups_symend-add_long_x_get_num_groups
add_long_x_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000079900: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000079904: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007990C: BEA10080
	s_clause 0x1                                               // 000000079910: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000079914: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007991C: DC4A0026 07000001
	s_clause 0x3                                               // 000000079924: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 000000079928: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079930: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000079938: F4040180 F8000048
	s_load_b64 s[12:13], s[0:1], null                          // 000000079940: F4040300 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000079948: 360200FF 000003FF
	s_clause 0x1                                               // 000000079950: BF850001
	s_load_b64 s[14:15], s[0:1], 0x10                          // 000000079954: F4040380 F8000010
	s_load_b32 s16, s[0:1], 0x18                               // 00000007995C: F4000400 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079964: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007996C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000079974: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000007997C: BF870133
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000079980: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000079988: BF89FC07
	s_ashr_i32 s4, s5, 31                                      // 00000007998C: 86049F05
	v_add_co_u32 v0, s0, s8, v1                                // 000000079990: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000079998: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 00000007999C: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 0000000799A4: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 0000000799AC: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000799B4: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000799B8: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 0000000799C0: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000799C8: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 0000000799D0: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000799D8: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 0000000799DC: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 0000000799E4: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000799EC: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 0000000799F0: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 0000000799F8: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000079A00: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 000000079A08: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000079A0C: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000079A10: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079A14: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000079A18: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000079A1C: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 000000079A20: 8201800E
	s_add_u32 s2, s1, s5                                       // 000000079A24: 80020501
	s_addc_u32 s3, 0, s4                                       // 000000079A28: 82030480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079A2C: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000079A30: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000079A34: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 000000079A38: 8201800F
	v_mov_b32_e32 v7, s3                                       // 000000079A3C: 7E0E0203
	s_add_u32 s0, s1, s5                                       // 000000079A40: 80000501
	s_addc_u32 s1, 0, s4                                       // 000000079A44: 82010480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079A48: BF07806A
	v_mov_b32_e32 v6, s2                                       // 000000079A4C: 7E0C0202
	s_addc_u32 s2, s16, 0                                      // 000000079A50: 82028010
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 000000079A54: CA100001 09080000
	s_add_u32 s0, s2, s5                                       // 000000079A5C: 80000502
	s_addc_u32 s1, 0, s4                                       // 000000079A60: 82010480
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000079A64: D7006A04 0002080C
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 000000079A6C: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000079A74: 400A0A0D
	s_clause 0x2                                               // 000000079A78: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000079A7C: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000079A84: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000079A8C: DC6E0000 007C0A04
	s_nop 0                                                    // 000000079A94: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079A98: BFB60003
	s_endpgm                                                   // 000000079A9C: BFB00000
add_long_x_get_num_groups_symend:
	.long 0xbf800000                                           // 000000079AA0: BF800000
	.long 0xbf800000                                           // 000000079AA4: BF800000
	.long 0xbf800000                                           // 000000079AA8: BF800000
	.long 0xbf800000                                           // 000000079AAC: BF800000
	.long 0xbf800000                                           // 000000079AB0: BF800000
	.long 0xbf800000                                           // 000000079AB4: BF800000
	.long 0xbf800000                                           // 000000079AB8: BF800000
	.long 0xbf800000                                           // 000000079ABC: BF800000
	.long 0xbf800000                                           // 000000079AC0: BF800000
	.long 0xbf800000                                           // 000000079AC4: BF800000
	.long 0xbf800000                                           // 000000079AC8: BF800000
	.long 0xbf800000                                           // 000000079ACC: BF800000
	.long 0xbf800000                                           // 000000079AD0: BF800000
	.long 0xbf800000                                           // 000000079AD4: BF800000
	.long 0xbf800000                                           // 000000079AD8: BF800000
	.long 0xbf800000                                           // 000000079ADC: BF800000
	.long 0xbf800000                                           // 000000079AE0: BF800000
	.long 0xbf800000                                           // 000000079AE4: BF800000
	.long 0xbf800000                                           // 000000079AE8: BF800000
	.long 0xbf800000                                           // 000000079AEC: BF800000
	.long 0xbf800000                                           // 000000079AF0: BF800000
	.long 0xbf800000                                           // 000000079AF4: BF800000
	.long 0xbf800000                                           // 000000079AF8: BF800000
	.long 0xbf800000                                           // 000000079AFC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_get_num_groups,@function
	.size	add_long_get_global_offset_get_num_groups, add_long_get_global_offset_get_num_groups_symend-add_long_get_global_offset_get_num_groups
add_long_get_global_offset_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000079B00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000079B04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000079B0C: BEA10080
	s_clause 0x1                                               // 000000079B10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000079B14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000079B1C: DC4A0026 07000001
	s_clause 0x1                                               // 000000079B24: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079B28: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000079B30: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000079B38: 360200FF 000003FF
	s_clause 0x1                                               // 000000079B40: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000079B44: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 000000079B4C: F4000140 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079B54: D6100000 02292900
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000079B5C: D6560002 04090803
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000079B64: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000079B6C: BF870123
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000079B70: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000079B78: BF89FC07
	v_add_co_u32 v0, s0, s8, v1                                // 000000079B7C: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000079B84: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 000000079B88: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 000000079B90: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 000000079B98: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000079BA0: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000079BA4: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 000000079BAC: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079BB4: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 000000079BBC: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079BC4: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 000000079BC8: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 000000079BD0: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079BD8: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 000000079BDC: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 000000079BE4: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000079BEC: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 000000079BF4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000079BF8: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000079BFC: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079C00: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000079C04: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000079C08: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 000000079C0C: 8201800E
	s_add_u32 s2, s8, s1                                       // 000000079C10: 80020108
	s_addc_u32 s3, s9, 0                                       // 000000079C14: 82038009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079C18: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000079C1C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000079C20: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 000000079C24: 8201800F
	v_mov_b32_e32 v7, s3                                       // 000000079C28: 7E0E0203
	s_add_u32 s0, s10, s1                                      // 000000079C2C: 8000010A
	s_addc_u32 s1, s11, 0                                      // 000000079C30: 8201800B
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079C34: BF07806A
	v_mov_b32_e32 v6, s2                                       // 000000079C38: 7E0C0202
	s_addc_u32 s2, s5, 0                                       // 000000079C3C: 82028005
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 000000079C40: CA100001 09080000
	s_add_u32 s0, s6, s2                                       // 000000079C48: 80000206
	s_addc_u32 s1, s7, 0                                       // 000000079C4C: 82018007
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000079C50: D7006A04 0002080C
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 000000079C58: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000079C60: 400A0A0D
	s_clause 0x2                                               // 000000079C64: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000079C68: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000079C70: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000079C78: DC6E0000 007C0A04
	s_nop 0                                                    // 000000079C80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079C84: BFB60003
	s_endpgm                                                   // 000000079C88: BFB00000
add_long_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 000000079C8C: BF800000
	.long 0xbf800000                                           // 000000079C90: BF800000
	.long 0xbf800000                                           // 000000079C94: BF800000
	.long 0xbf800000                                           // 000000079C98: BF800000
	.long 0xbf800000                                           // 000000079C9C: BF800000
	.long 0xbf800000                                           // 000000079CA0: BF800000
	.long 0xbf800000                                           // 000000079CA4: BF800000
	.long 0xbf800000                                           // 000000079CA8: BF800000
	.long 0xbf800000                                           // 000000079CAC: BF800000
	.long 0xbf800000                                           // 000000079CB0: BF800000
	.long 0xbf800000                                           // 000000079CB4: BF800000
	.long 0xbf800000                                           // 000000079CB8: BF800000
	.long 0xbf800000                                           // 000000079CBC: BF800000
	.long 0xbf800000                                           // 000000079CC0: BF800000
	.long 0xbf800000                                           // 000000079CC4: BF800000
	.long 0xbf800000                                           // 000000079CC8: BF800000
	.long 0xbf800000                                           // 000000079CCC: BF800000
	.long 0xbf800000                                           // 000000079CD0: BF800000
	.long 0xbf800000                                           // 000000079CD4: BF800000
	.long 0xbf800000                                           // 000000079CD8: BF800000
	.long 0xbf800000                                           // 000000079CDC: BF800000
	.long 0xbf800000                                           // 000000079CE0: BF800000
	.long 0xbf800000                                           // 000000079CE4: BF800000
	.long 0xbf800000                                           // 000000079CE8: BF800000
	.long 0xbf800000                                           // 000000079CEC: BF800000
	.long 0xbf800000                                           // 000000079CF0: BF800000
	.long 0xbf800000                                           // 000000079CF4: BF800000
	.long 0xbf800000                                           // 000000079CF8: BF800000
	.long 0xbf800000                                           // 000000079CFC: BF800000

	.p2align	8
	.type	add_long_get_local_id_get_num_groups,@function
	.size	add_long_get_local_id_get_num_groups, add_long_get_local_id_get_num_groups_symend-add_long_get_local_id_get_num_groups
add_long_get_local_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000079D00: CA240080 010800FF 000003FF
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000079D0C: F4080300 F8000008
	v_bfe_u32 v9, v0, 10, 10                                   // 000000079D14: D6100009 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000079D1C: D610000A 02292900
	s_clause 0x1                                               // 000000079D24: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000079D28: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000079D30: DC4A0026 07000001
	s_clause 0x1                                               // 000000079D38: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079D3C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000079D44: F4040180 F8000048
	v_lshl_or_b32 v0, s2, 3, v8                                // 000000079D4C: D6560000 04210602
	v_lshl_or_b32 v2, s3, 2, v9                                // 000000079D54: D6560002 04250403
	v_lshl_or_b32 v4, s4, 1, v10                               // 000000079D5C: D6560004 04290204
	s_mov_b32 s33, 0                                           // 000000079D64: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079D68: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000079D6C: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000079D74: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000079D78: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000079D80: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000079D88: D5207C03 0009000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000079D90: BF8700A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000079D94: D73C0000 00020083
	v_add_co_u32 v4, s2, s6, v4                                // 000000079D9C: D7000204 00020806
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 000000079DA4: D5207C05 00090007
	s_load_b32 s2, s[0:1], 0x18                                // 000000079DAC: F4000080 F8000018
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000079DB4: BF8701C3
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 000000079DB8: D7006A00 0002000C
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079DC0: D73C0002 00020483
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 000000079DC8: 4002020D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000079DCC: D73C0004 00020883
	v_add_co_u32 v2, s1, s12, v2                               // 000000079DD4: D7000102 0002040C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000079DDC: BF870141
	v_add_co_ci_u32_e64 v3, s1, s13, v3, s1                    // 000000079DE0: D5200103 0006060D
	s_waitcnt vmcnt(1)                                         // 000000079DE8: BF8907F7
	v_lshrrev_b32_e32 v11, 16, v6                              // 000000079DEC: 32160C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000079DF0: 7C7A0C80
	v_cmp_ne_u16_e64 s0, 0, v11.l                              // 000000079DF4: D43D0000 00021680
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079DFC: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000079E00: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000079E04: 7C7A0E80
	s_addc_u32 s1, s14, 0                                      // 000000079E08: 8201800E
	s_cmp_lg_u32 s0, 0                                         // 000000079E0C: BF078000
	v_add_co_u32 v6, s0, s1, v8                                // 000000079E10: D7000006 00021001
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000079E18: BF8700C1
	v_add_co_ci_u32_e64 v7, null, 0, 0, s0                     // 000000079E1C: D5207C07 00010080
	s_addc_u32 s0, s15, 0                                      // 000000079E24: 8200800F
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079E28: BF07806A
	v_add_co_u32 v8, s0, s0, v9                                // 000000079E2C: D7000008 00021200
	v_add_co_ci_u32_e64 v9, null, 0, 0, s0                     // 000000079E34: D5207C09 00010080
	s_waitcnt lgkmcnt(0)                                       // 000000079E3C: BF89FC07
	s_addc_u32 s0, s2, 0                                       // 000000079E40: 82008002
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 000000079E44: D7006A04 0002080C
	v_add_co_u32 v10, s0, s0, v10                              // 000000079E4C: D700000A 00021400
	s_delay_alu instid0(VALU_DEP_1)                            // 000000079E54: BF870001
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 000000079E58: D5207C0B 00010080
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 000000079E60: 400A0A0D
	s_clause 0x2                                               // 000000079E64: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000079E68: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000079E70: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000079E78: DC6E0000 007C0A04
	s_nop 0                                                    // 000000079E80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079E84: BFB60003
	s_endpgm                                                   // 000000079E88: BFB00000
add_long_get_local_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000079E8C: BF800000
	.long 0xbf800000                                           // 000000079E90: BF800000
	.long 0xbf800000                                           // 000000079E94: BF800000
	.long 0xbf800000                                           // 000000079E98: BF800000
	.long 0xbf800000                                           // 000000079E9C: BF800000
	.long 0xbf800000                                           // 000000079EA0: BF800000
	.long 0xbf800000                                           // 000000079EA4: BF800000
	.long 0xbf800000                                           // 000000079EA8: BF800000
	.long 0xbf800000                                           // 000000079EAC: BF800000
	.long 0xbf800000                                           // 000000079EB0: BF800000
	.long 0xbf800000                                           // 000000079EB4: BF800000
	.long 0xbf800000                                           // 000000079EB8: BF800000
	.long 0xbf800000                                           // 000000079EBC: BF800000
	.long 0xbf800000                                           // 000000079EC0: BF800000
	.long 0xbf800000                                           // 000000079EC4: BF800000
	.long 0xbf800000                                           // 000000079EC8: BF800000
	.long 0xbf800000                                           // 000000079ECC: BF800000
	.long 0xbf800000                                           // 000000079ED0: BF800000
	.long 0xbf800000                                           // 000000079ED4: BF800000
	.long 0xbf800000                                           // 000000079ED8: BF800000
	.long 0xbf800000                                           // 000000079EDC: BF800000
	.long 0xbf800000                                           // 000000079EE0: BF800000
	.long 0xbf800000                                           // 000000079EE4: BF800000
	.long 0xbf800000                                           // 000000079EE8: BF800000
	.long 0xbf800000                                           // 000000079EEC: BF800000
	.long 0xbf800000                                           // 000000079EF0: BF800000
	.long 0xbf800000                                           // 000000079EF4: BF800000
	.long 0xbf800000                                           // 000000079EF8: BF800000
	.long 0xbf800000                                           // 000000079EFC: BF800000

	.p2align	8
	.type	add_long_get_group_id_get_num_groups,@function
	.size	add_long_get_group_id_get_num_groups, add_long_get_group_id_get_num_groups_symend-add_long_get_group_id_get_num_groups
add_long_get_group_id_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000079F00: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 000000079F04: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000079F0C: BEA10080
	s_clause 0x1                                               // 000000079F10: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000079F14: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000079F1C: DC4A0026 07000001
	s_clause 0x1                                               // 000000079F24: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079F28: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000079F30: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000079F38: 360200FF 000003FF
	s_clause 0x1                                               // 000000079F40: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000079F44: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 000000079F4C: F4000140 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079F54: D6100000 02292900
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000079F5C: D6560002 04090803
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000079F64: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000079F6C: BF870123
	v_lshl_or_b32 v4, s4, 1, v0                                // 000000079F70: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000079F78: BF89FC07
	v_add_co_u32 v0, s0, s8, v1                                // 000000079F7C: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000079F84: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 000000079F88: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 000000079F90: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 000000079F98: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000079FA0: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000079FA4: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 000000079FAC: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079FB4: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 000000079FBC: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079FC4: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 000000079FC8: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 000000079FD0: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079FD8: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 000000079FDC: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 000000079FE4: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000079FEC: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 000000079FF4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000079FF8: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 000000079FFC: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A000: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007A004: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007A008: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 00000007A00C: 8201800E
	s_add_u32 s6, s1, s2                                       // 00000007A010: 80060201
	s_addc_u32 s7, 0, 0                                        // 00000007A014: 82078080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A018: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007A01C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000007A020: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 00000007A024: 8201800F
	v_mov_b32_e32 v6, s6                                       // 00000007A028: 7E0C0206
	s_add_u32 s0, s1, s3                                       // 00000007A02C: 80000301
	s_addc_u32 s1, 0, 0                                        // 00000007A030: 82018080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A034: BF07806A
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 00000007A038: CA100001 09080000
	s_addc_u32 s2, s5, 0                                       // 00000007A040: 82028005
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000007A044: D7006A04 0002080C
	s_add_u32 s0, s2, s4                                       // 00000007A04C: 80000402
	s_addc_u32 s1, 0, 0                                        // 00000007A050: 82018080
	v_mov_b32_e32 v7, s7                                       // 00000007A054: 7E0E0207
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 00000007A058: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000007A060: 400A0A0D
	s_clause 0x2                                               // 00000007A064: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007A068: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007A070: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007A078: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007A080: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A084: BFB60003
	s_endpgm                                                   // 00000007A088: BFB00000
add_long_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007A08C: BF800000
	.long 0xbf800000                                           // 00000007A090: BF800000
	.long 0xbf800000                                           // 00000007A094: BF800000
	.long 0xbf800000                                           // 00000007A098: BF800000
	.long 0xbf800000                                           // 00000007A09C: BF800000
	.long 0xbf800000                                           // 00000007A0A0: BF800000
	.long 0xbf800000                                           // 00000007A0A4: BF800000
	.long 0xbf800000                                           // 00000007A0A8: BF800000
	.long 0xbf800000                                           // 00000007A0AC: BF800000
	.long 0xbf800000                                           // 00000007A0B0: BF800000
	.long 0xbf800000                                           // 00000007A0B4: BF800000
	.long 0xbf800000                                           // 00000007A0B8: BF800000
	.long 0xbf800000                                           // 00000007A0BC: BF800000
	.long 0xbf800000                                           // 00000007A0C0: BF800000
	.long 0xbf800000                                           // 00000007A0C4: BF800000
	.long 0xbf800000                                           // 00000007A0C8: BF800000
	.long 0xbf800000                                           // 00000007A0CC: BF800000
	.long 0xbf800000                                           // 00000007A0D0: BF800000
	.long 0xbf800000                                           // 00000007A0D4: BF800000
	.long 0xbf800000                                           // 00000007A0D8: BF800000
	.long 0xbf800000                                           // 00000007A0DC: BF800000
	.long 0xbf800000                                           // 00000007A0E0: BF800000
	.long 0xbf800000                                           // 00000007A0E4: BF800000
	.long 0xbf800000                                           // 00000007A0E8: BF800000
	.long 0xbf800000                                           // 00000007A0EC: BF800000
	.long 0xbf800000                                           // 00000007A0F0: BF800000
	.long 0xbf800000                                           // 00000007A0F4: BF800000
	.long 0xbf800000                                           // 00000007A0F8: BF800000
	.long 0xbf800000                                           // 00000007A0FC: BF800000

	.p2align	8
	.type	add_long_get_local_size_get_num_groups,@function
	.size	add_long_get_local_size_get_num_groups, add_long_get_local_size_get_num_groups_symend-add_long_get_local_size_get_num_groups
add_long_get_local_size_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000007A100: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007A104: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007A10C: BEA10080
	s_clause 0x1                                               // 00000007A110: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000007A114: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007A11C: DC4A0026 07000001
	s_clause 0x1                                               // 00000007A124: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A128: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007A130: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007A138: 360200FF 000003FF
	s_clause 0x1                                               // 00000007A140: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000007A144: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 00000007A14C: F4000140 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A154: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007A15C: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007A164: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007A16C: BF870123
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007A170: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007A178: BF89FC07
	v_add_co_u32 v0, s0, s8, v1                                // 00000007A17C: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007A184: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 00000007A188: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 00000007A190: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 00000007A198: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007A1A0: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007A1A4: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 00000007A1AC: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A1B4: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 00000007A1BC: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A1C4: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 00000007A1C8: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 00000007A1D0: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A1D8: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 00000007A1DC: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 00000007A1E4: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007A1EC: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 00000007A1F4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007A1F8: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000007A1FC: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A200: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007A204: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007A208: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 00000007A20C: 8201800E
	s_add_u32 s2, s1, 2                                        // 00000007A210: 80028201
	s_addc_u32 s3, 0, 0                                        // 00000007A214: 82038080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A218: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007A21C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000007A220: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 00000007A224: 8201800F
	v_mov_b32_e32 v7, s3                                       // 00000007A228: 7E0E0203
	s_add_u32 s0, s1, 2                                        // 00000007A22C: 80008201
	s_addc_u32 s1, 0, 0                                        // 00000007A230: 82018080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A234: BF07806A
	v_mov_b32_e32 v6, s2                                       // 00000007A238: 7E0C0202
	s_addc_u32 s2, s5, 0                                       // 00000007A23C: 82028005
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 00000007A240: CA100001 09080000
	s_add_u32 s0, s2, 4                                        // 00000007A248: 80008402
	s_addc_u32 s1, 0, 0                                        // 00000007A24C: 82018080
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000007A250: D7006A04 0002080C
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 00000007A258: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000007A260: 400A0A0D
	s_clause 0x2                                               // 00000007A264: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007A268: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007A270: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007A278: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007A280: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A284: BFB60003
	s_endpgm                                                   // 00000007A288: BFB00000
add_long_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007A28C: BF800000
	.long 0xbf800000                                           // 00000007A290: BF800000
	.long 0xbf800000                                           // 00000007A294: BF800000
	.long 0xbf800000                                           // 00000007A298: BF800000
	.long 0xbf800000                                           // 00000007A29C: BF800000
	.long 0xbf800000                                           // 00000007A2A0: BF800000
	.long 0xbf800000                                           // 00000007A2A4: BF800000
	.long 0xbf800000                                           // 00000007A2A8: BF800000
	.long 0xbf800000                                           // 00000007A2AC: BF800000
	.long 0xbf800000                                           // 00000007A2B0: BF800000
	.long 0xbf800000                                           // 00000007A2B4: BF800000
	.long 0xbf800000                                           // 00000007A2B8: BF800000
	.long 0xbf800000                                           // 00000007A2BC: BF800000
	.long 0xbf800000                                           // 00000007A2C0: BF800000
	.long 0xbf800000                                           // 00000007A2C4: BF800000
	.long 0xbf800000                                           // 00000007A2C8: BF800000
	.long 0xbf800000                                           // 00000007A2CC: BF800000
	.long 0xbf800000                                           // 00000007A2D0: BF800000
	.long 0xbf800000                                           // 00000007A2D4: BF800000
	.long 0xbf800000                                           // 00000007A2D8: BF800000
	.long 0xbf800000                                           // 00000007A2DC: BF800000
	.long 0xbf800000                                           // 00000007A2E0: BF800000
	.long 0xbf800000                                           // 00000007A2E4: BF800000
	.long 0xbf800000                                           // 00000007A2E8: BF800000
	.long 0xbf800000                                           // 00000007A2EC: BF800000
	.long 0xbf800000                                           // 00000007A2F0: BF800000
	.long 0xbf800000                                           // 00000007A2F4: BF800000
	.long 0xbf800000                                           // 00000007A2F8: BF800000
	.long 0xbf800000                                           // 00000007A2FC: BF800000

	.p2align	8
	.type	add_long_get_global_id_get_num_groups,@function
	.size	add_long_get_global_id_get_num_groups, add_long_get_global_id_get_num_groups_symend-add_long_get_global_id_get_num_groups
add_long_get_global_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007A300: CA240080 010200FF 000003FF
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000007A30C: F4080300 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007A314: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000007A31C: D6100004 02292900
	s_clause 0x1                                               // 00000007A324: BF850001
	global_load_b32 v11, v1, s[0:1] offset:34                  // 00000007A328: DC520022 0B000001
	global_load_u16 v12, v1, s[0:1] offset:38                  // 00000007A330: DC4A0026 0C000001
	s_clause 0x1                                               // 00000007A338: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A33C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007A344: F4040180 F8000048
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000007A34C: D6560000 04090202
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000007A354: D6560003 040D0203
	s_load_b32 s1, s[0:1], 0x18                                // 00000007A35C: F4000040 F8000018
	v_lshl_or_b32 v5, s4, 2, v4                                // 00000007A364: D6560005 04110404
	s_mov_b32 s33, 0                                           // 00000007A36C: BEA10080
	v_lshlrev_b64 v[1:2], 3, v[0:1]                            // 00000007A370: D73C0001 00020083
	s_waitcnt lgkmcnt(0)                                       // 00000007A378: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007A37C: BF870111
	v_add_co_u32 v1, vcc_lo, s12, v1                           // 00000007A380: D7006A01 0002020C
	v_add_co_ci_u32_e32 v2, vcc_lo, s13, v2, vcc_lo            // 00000007A388: 4004040D
	v_add_co_u32 v3, s0, s10, v3                               // 00000007A38C: D7000003 0002060A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007A394: BF8700A1
	v_add_co_ci_u32_e64 v4, null, s11, 0, s0                   // 00000007A398: D5207C04 0001000B
	v_add_co_u32 v5, s0, s6, v5                                // 00000007A3A0: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, null, s7, 0, s0                    // 00000007A3A8: D5207C06 00010007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007A3B0: BF870113
	v_lshlrev_b64 v[7:8], 3, v[3:4]                            // 00000007A3B4: D73C0007 00020683
	v_lshlrev_b64 v[9:10], 3, v[5:6]                           // 00000007A3BC: D73C0009 00020A83
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A3C4: BF870092
	v_add_co_u32 v7, s0, s12, v7                               // 00000007A3C8: D7000007 00020E0C
	v_add_co_ci_u32_e64 v8, s0, s13, v8, s0                    // 00000007A3D0: D5200008 0002100D
	s_waitcnt vmcnt(1)                                         // 00000007A3D8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v11.l                          // 00000007A3DC: 7C7A1680
	v_lshrrev_b32_e32 v13, 16, v11                             // 00000007A3E0: 321A1690
	s_waitcnt vmcnt(0)                                         // 00000007A3E4: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v12.l                              // 00000007A3E8: D43D0000 00021880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A3F0: BF07806A
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007A3F4: BF8704A2
	v_cmp_ne_u16_e32 vcc_lo, 0, v13.l                          // 00000007A3F8: 7C7A1A80
	s_addc_u32 s2, s14, 0                                      // 00000007A3FC: 8202800E
	s_add_u32 s2, s2, s8                                       // 00000007A400: 80020802
	s_addc_u32 s3, 0, s9                                       // 00000007A404: 82030980
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A408: BF07806A
	v_add_co_u32 v11, s2, s2, v0                               // 00000007A40C: D700020B 00020002
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007A414: BF870001
	v_add_co_ci_u32_e64 v12, null, s3, 0, s2                   // 00000007A418: D5207C0C 00090003
	s_addc_u32 s2, s15, 0                                      // 00000007A420: 8202800F
	s_cmp_lg_u32 s0, 0                                         // 00000007A424: BF078000
	v_add_co_u32 v3, vcc_lo, v3, s2                            // 00000007A428: D7006A03 00000503
	s_addc_u32 s0, s1, 0                                       // 00000007A430: 82008001
	v_add_co_ci_u32_e32 v4, vcc_lo, 0, v4, vcc_lo              // 00000007A434: 40080880
	v_add_co_u32 v5, vcc_lo, v5, s0                            // 00000007A438: D7006A05 00000105
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v6, vcc_lo              // 00000007A440: 400C0C80
	v_add_co_u32 v9, vcc_lo, s12, v9                           // 00000007A444: D7006A09 0002120C
	v_add_co_ci_u32_e32 v10, vcc_lo, s13, v10, vcc_lo          // 00000007A44C: 4014140D
	s_clause 0x2                                               // 00000007A450: BF850002
	global_store_b64 v[1:2], v[11:12], off                     // 00000007A454: DC6E0000 007C0B01
	global_store_b64 v[7:8], v[3:4], off                       // 00000007A45C: DC6E0000 007C0307
	global_store_b64 v[9:10], v[5:6], off                      // 00000007A464: DC6E0000 007C0509
	s_nop 0                                                    // 00000007A46C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A470: BFB60003
	s_endpgm                                                   // 00000007A474: BFB00000
add_long_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007A478: BF800000
	.long 0xbf800000                                           // 00000007A47C: BF800000
	.long 0xbf800000                                           // 00000007A480: BF800000
	.long 0xbf800000                                           // 00000007A484: BF800000
	.long 0xbf800000                                           // 00000007A488: BF800000
	.long 0xbf800000                                           // 00000007A48C: BF800000
	.long 0xbf800000                                           // 00000007A490: BF800000
	.long 0xbf800000                                           // 00000007A494: BF800000
	.long 0xbf800000                                           // 00000007A498: BF800000
	.long 0xbf800000                                           // 00000007A49C: BF800000
	.long 0xbf800000                                           // 00000007A4A0: BF800000
	.long 0xbf800000                                           // 00000007A4A4: BF800000
	.long 0xbf800000                                           // 00000007A4A8: BF800000
	.long 0xbf800000                                           // 00000007A4AC: BF800000
	.long 0xbf800000                                           // 00000007A4B0: BF800000
	.long 0xbf800000                                           // 00000007A4B4: BF800000
	.long 0xbf800000                                           // 00000007A4B8: BF800000
	.long 0xbf800000                                           // 00000007A4BC: BF800000
	.long 0xbf800000                                           // 00000007A4C0: BF800000
	.long 0xbf800000                                           // 00000007A4C4: BF800000
	.long 0xbf800000                                           // 00000007A4C8: BF800000
	.long 0xbf800000                                           // 00000007A4CC: BF800000
	.long 0xbf800000                                           // 00000007A4D0: BF800000
	.long 0xbf800000                                           // 00000007A4D4: BF800000
	.long 0xbf800000                                           // 00000007A4D8: BF800000
	.long 0xbf800000                                           // 00000007A4DC: BF800000
	.long 0xbf800000                                           // 00000007A4E0: BF800000
	.long 0xbf800000                                           // 00000007A4E4: BF800000
	.long 0xbf800000                                           // 00000007A4E8: BF800000
	.long 0xbf800000                                           // 00000007A4EC: BF800000
	.long 0xbf800000                                           // 00000007A4F0: BF800000
	.long 0xbf800000                                           // 00000007A4F4: BF800000
	.long 0xbf800000                                           // 00000007A4F8: BF800000
	.long 0xbf800000                                           // 00000007A4FC: BF800000

	.p2align	8
	.type	add_long_get_global_size_get_num_groups,@function
	.size	add_long_get_global_size_get_num_groups, add_long_get_global_size_get_num_groups_symend-add_long_get_global_size_get_num_groups
add_long_get_global_size_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000007A500: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007A504: D6100002 02291500
	s_load_b64 s[12:13], s[0:1], null                          // 00000007A50C: F4040300 F8000000
	s_mov_b32 s33, 0                                           // 00000007A514: BEA10080
	s_clause 0x1                                               // 00000007A518: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000007A51C: DC520022 06000001
	global_load_u16 v8, v1, s[0:1] offset:38                   // 00000007A524: DC4A0026 08000001
	s_clause 0x1                                               // 00000007A52C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A530: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007A538: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007A540: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A548: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007A550: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007A558: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007A55C: D6560001 04050802
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000007A564: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007A56C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A570: BF870092
	v_add_co_u32 v0, s2, s8, v1                                // 00000007A574: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000007A57C: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007A584: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007A58C: BF8700A1
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000007A590: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000007A598: D7000204 00020806
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000007A5A0: D5207C05 00090007
	s_load_b64 s[2:3], s[0:1], 0x10                            // 00000007A5A8: F4040080 F8000010
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007A5B0: D73C0000 00020083
	s_load_b32 s1, s[0:1], 0x18                                // 00000007A5B8: F4000040 F8000018
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A5C0: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007A5C8: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007A5D0: BF870213
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000007A5D4: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000007A5DC: 4002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A5E0: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 00000007A5E4: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 00000007A5EC: D5200003 0002060D
	s_waitcnt vmcnt(1)                                         // 00000007A5F4: BF8907F7
	v_lshrrev_b32_e32 v7, 16, v6                               // 00000007A5F8: 320E0C90
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007A5FC: 7C7A0C80
	v_and_b32_e32 v6, 0xffff, v6                               // 00000007A600: 360C0CFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007A608: BF870003
	v_cmp_ne_u16_e64 s0, 0, v7.l                               // 00000007A60C: D43D0000 00020E80
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A614: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007A618: BF8903F7
	v_cmp_ne_u32_e32 vcc_lo, 0, v8                             // 00000007A61C: 7C9A1080
	s_waitcnt lgkmcnt(0)                                       // 00000007A620: BF89FC07
	s_addc_u32 s4, s2, 0                                       // 00000007A624: 82048002
	s_lshl_b32 s2, s2, 4                                       // 00000007A628: 84028402
	s_cmp_lg_u32 s0, 0                                         // 00000007A62C: BF078000
	v_add_nc_u32_e32 v6, s2, v6                                // 00000007A630: 4A0C0C02
	s_addc_u32 s0, s3, 0                                       // 00000007A634: 82008003
	s_lshl_b32 s2, s3, 1                                       // 00000007A638: 84028103
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A63C: BF07806A
	v_add_nc_u32_e32 v9, s2, v7                                // 00000007A640: 4A120E02
	s_addc_u32 s2, s1, 0                                       // 00000007A644: 82028001
	s_lshl_b32 s1, s1, 1                                       // 00000007A648: 84018101
	v_add_co_u32 v6, s3, s4, v6                                // 00000007A64C: D7000306 00020C04
	v_add_nc_u32_e32 v10, s1, v8                               // 00000007A654: 4A141001
	v_add_co_u32 v8, s0, s0, v9                                // 00000007A658: D7000008 00021200
	v_add_co_ci_u32_e64 v7, null, 0, 0, s3                     // 00000007A660: D5207C07 000D0080
	v_add_co_ci_u32_e64 v9, null, 0, 0, s0                     // 00000007A668: D5207C09 00010080
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007A670: BF870004
	v_add_co_u32 v10, s0, s2, v10                              // 00000007A674: D700000A 00021402
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000007A67C: D7006A04 0002080C
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 00000007A684: D5207C0B 00010080
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000007A68C: 400A0A0D
	s_clause 0x2                                               // 00000007A690: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007A694: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007A69C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007A6A4: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007A6AC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A6B0: BFB60003
	s_endpgm                                                   // 00000007A6B4: BFB00000
add_long_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007A6B8: BF800000
	.long 0xbf800000                                           // 00000007A6BC: BF800000
	.long 0xbf800000                                           // 00000007A6C0: BF800000
	.long 0xbf800000                                           // 00000007A6C4: BF800000
	.long 0xbf800000                                           // 00000007A6C8: BF800000
	.long 0xbf800000                                           // 00000007A6CC: BF800000
	.long 0xbf800000                                           // 00000007A6D0: BF800000
	.long 0xbf800000                                           // 00000007A6D4: BF800000
	.long 0xbf800000                                           // 00000007A6D8: BF800000
	.long 0xbf800000                                           // 00000007A6DC: BF800000
	.long 0xbf800000                                           // 00000007A6E0: BF800000
	.long 0xbf800000                                           // 00000007A6E4: BF800000
	.long 0xbf800000                                           // 00000007A6E8: BF800000
	.long 0xbf800000                                           // 00000007A6EC: BF800000
	.long 0xbf800000                                           // 00000007A6F0: BF800000
	.long 0xbf800000                                           // 00000007A6F4: BF800000
	.long 0xbf800000                                           // 00000007A6F8: BF800000
	.long 0xbf800000                                           // 00000007A6FC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_get_num_groups,@function
	.size	add_long_get_num_groups_get_num_groups, add_long_get_num_groups_get_num_groups_symend-add_long_get_num_groups_get_num_groups
add_long_get_num_groups_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000007A700: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007A704: D6100002 02291500
	s_mov_b32 s5, 0                                            // 00000007A70C: BE850080
	s_mov_b32 s33, 0                                           // 00000007A710: BEA10080
	s_clause 0x1                                               // 00000007A714: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000007A718: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007A720: DC4A0026 07000001
	s_clause 0x1                                               // 00000007A728: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A72C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007A734: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007A73C: 360200FF 000003FF
	s_clause 0x1                                               // 00000007A744: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000007A748: F4080300 F8000008
	s_load_b32 s16, s[0:1], 0x18                               // 00000007A750: F4000400 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A758: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007A760: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007A768: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007A770: BF870123
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007A774: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007A77C: BF89FC07
	v_add_co_u32 v0, s0, s8, v1                                // 00000007A780: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007A788: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 00000007A78C: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 00000007A794: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 00000007A79C: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007A7A4: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007A7A8: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 00000007A7B0: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A7B8: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 00000007A7C0: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A7C8: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 00000007A7CC: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 00000007A7D4: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A7DC: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 00000007A7E0: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 00000007A7E8: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007A7F0: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 00000007A7F8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007A7FC: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000007A800: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A804: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007A808: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007A80C: 7C7A0C80
	s_addc_u32 s4, s14, 0                                      // 00000007A810: 8204800E
	s_lshl_b64 s[2:3], s[4:5], 1                               // 00000007A814: 84828104
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A818: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007A81C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000007A820: 7C7A0E80
	s_addc_u32 s4, s15, 0                                      // 00000007A824: 8204800F
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007A828: BF870009
	s_lshl_b64 s[0:1], s[4:5], 1                               // 00000007A82C: 84808104
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A830: BF07806A
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 00000007A834: CA100001 09080000
	s_addc_u32 s4, s16, 0                                      // 00000007A83C: 82048010
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000007A840: D7006A04 0002080C
	s_lshl_b64 s[0:1], s[4:5], 1                               // 00000007A848: 84808104
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v6, s2             // 00000007A84C: CA100003 07060002
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 00000007A854: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000007A85C: 400A0A0D
	s_clause 0x2                                               // 00000007A860: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007A864: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007A86C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007A874: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007A87C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A880: BFB60003
	s_endpgm                                                   // 00000007A884: BFB00000
add_long_get_num_groups_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007A888: BF800000
	.long 0xbf800000                                           // 00000007A88C: BF800000
	.long 0xbf800000                                           // 00000007A890: BF800000
	.long 0xbf800000                                           // 00000007A894: BF800000
	.long 0xbf800000                                           // 00000007A898: BF800000
	.long 0xbf800000                                           // 00000007A89C: BF800000
	.long 0xbf800000                                           // 00000007A8A0: BF800000
	.long 0xbf800000                                           // 00000007A8A4: BF800000
	.long 0xbf800000                                           // 00000007A8A8: BF800000
	.long 0xbf800000                                           // 00000007A8AC: BF800000
	.long 0xbf800000                                           // 00000007A8B0: BF800000
	.long 0xbf800000                                           // 00000007A8B4: BF800000
	.long 0xbf800000                                           // 00000007A8B8: BF800000
	.long 0xbf800000                                           // 00000007A8BC: BF800000
	.long 0xbf800000                                           // 00000007A8C0: BF800000
	.long 0xbf800000                                           // 00000007A8C4: BF800000
	.long 0xbf800000                                           // 00000007A8C8: BF800000
	.long 0xbf800000                                           // 00000007A8CC: BF800000
	.long 0xbf800000                                           // 00000007A8D0: BF800000
	.long 0xbf800000                                           // 00000007A8D4: BF800000
	.long 0xbf800000                                           // 00000007A8D8: BF800000
	.long 0xbf800000                                           // 00000007A8DC: BF800000
	.long 0xbf800000                                           // 00000007A8E0: BF800000
	.long 0xbf800000                                           // 00000007A8E4: BF800000
	.long 0xbf800000                                           // 00000007A8E8: BF800000
	.long 0xbf800000                                           // 00000007A8EC: BF800000
	.long 0xbf800000                                           // 00000007A8F0: BF800000
	.long 0xbf800000                                           // 00000007A8F4: BF800000
	.long 0xbf800000                                           // 00000007A8F8: BF800000
	.long 0xbf800000                                           // 00000007A8FC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_get_num_groups,@function
	.size	add_long_get_work_dim_get_num_groups, add_long_get_work_dim_get_num_groups_symend-add_long_get_work_dim_get_num_groups
add_long_get_work_dim_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000007A900: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007A904: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007A90C: BEA10080
	s_clause 0x1                                               // 00000007A910: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000007A914: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007A91C: DC4A0026 07000001
	s_clause 0x1                                               // 00000007A924: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A928: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007A930: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007A938: 360200FF 000003FF
	s_clause 0x2                                               // 00000007A940: BF850002
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000007A944: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 00000007A94C: F4000140 F8000018
	s_load_b32 s0, s[0:1], 0x50                                // 00000007A954: F4000000 F8000050
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A95C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007A964: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007A96C: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007A974: BF870123
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007A978: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007A980: BF89FC07
	v_add_co_u32 v0, s1, s8, v1                                // 00000007A984: D7000100 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007A98C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s1                    // 00000007A990: D5207C01 00050009
	v_add_co_u32 v2, s1, s10, v2                               // 00000007A998: D7000102 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s1                   // 00000007A9A0: D5207C03 0005000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007A9A8: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007A9AC: D73C0000 00020083
	v_add_co_u32 v4, s1, s6, v4                                // 00000007A9B4: D7000104 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A9BC: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s1                    // 00000007A9C4: D5207C05 00050007
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 00000007A9CC: BF8700D1
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007A9D0: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 00000007A9D8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007A9DC: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000007A9E0: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A9E4: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007A9E8: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 00000007A9EC: 8201800E
	s_and_b32 s4, s0, 0xffff                                   // 00000007A9F0: 8B04FF00 0000FFFF
	v_add_co_u32 v0, s0, s12, v0                               // 00000007A9F8: D7000000 0002000C
	s_add_u32 s2, s1, s4                                       // 00000007AA00: 80020401
	s_addc_u32 s3, 0, 0                                        // 00000007AA04: 82038080
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 00000007AA08: D5200001 0002020D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007AA10: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007AA14: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000007AA18: 7C7A0E80
	v_add_co_u32 v2, s0, s12, v2                               // 00000007AA1C: D7000002 0002040C
	s_addc_u32 s1, s15, 0                                      // 00000007AA24: 8201800F
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 00000007AA28: D5200003 0002060D
	s_add_u32 s0, s1, s4                                       // 00000007AA30: 80000401
	s_addc_u32 s1, 0, 0                                        // 00000007AA34: 82018080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007AA38: BF07806A
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v6, s2             // 00000007AA3C: CA100003 07060002
	s_addc_u32 s2, s5, 0                                       // 00000007AA44: 82028005
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 00000007AA48: CA100001 09080000
	s_add_u32 s0, s2, s4                                       // 00000007AA50: 80000402
	s_addc_u32 s1, 0, 0                                        // 00000007AA54: 82018080
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000007AA58: D7006A04 0002080C
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 00000007AA60: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000007AA68: 400A0A0D
	s_clause 0x2                                               // 00000007AA6C: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007AA70: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007AA78: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007AA80: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007AA88: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AA8C: BFB60003
	s_endpgm                                                   // 00000007AA90: BFB00000
add_long_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007AA94: BF800000
	.long 0xbf800000                                           // 00000007AA98: BF800000
	.long 0xbf800000                                           // 00000007AA9C: BF800000
	.long 0xbf800000                                           // 00000007AAA0: BF800000
	.long 0xbf800000                                           // 00000007AAA4: BF800000
	.long 0xbf800000                                           // 00000007AAA8: BF800000
	.long 0xbf800000                                           // 00000007AAAC: BF800000
	.long 0xbf800000                                           // 00000007AAB0: BF800000
	.long 0xbf800000                                           // 00000007AAB4: BF800000
	.long 0xbf800000                                           // 00000007AAB8: BF800000
	.long 0xbf800000                                           // 00000007AABC: BF800000
	.long 0xbf800000                                           // 00000007AAC0: BF800000
	.long 0xbf800000                                           // 00000007AAC4: BF800000
	.long 0xbf800000                                           // 00000007AAC8: BF800000
	.long 0xbf800000                                           // 00000007AACC: BF800000
	.long 0xbf800000                                           // 00000007AAD0: BF800000
	.long 0xbf800000                                           // 00000007AAD4: BF800000
	.long 0xbf800000                                           // 00000007AAD8: BF800000
	.long 0xbf800000                                           // 00000007AADC: BF800000
	.long 0xbf800000                                           // 00000007AAE0: BF800000
	.long 0xbf800000                                           // 00000007AAE4: BF800000
	.long 0xbf800000                                           // 00000007AAE8: BF800000
	.long 0xbf800000                                           // 00000007AAEC: BF800000
	.long 0xbf800000                                           // 00000007AAF0: BF800000
	.long 0xbf800000                                           // 00000007AAF4: BF800000
	.long 0xbf800000                                           // 00000007AAF8: BF800000
	.long 0xbf800000                                           // 00000007AAFC: BF800000

	.p2align	8
	.type	add_long_x_get_work_dim,@function
	.size	add_long_x_get_work_dim, add_long_x_get_work_dim_symend-add_long_x_get_work_dim
add_long_x_get_work_dim:
	s_clause 0x4                                               // 00000007AB00: BF850004
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007AB04: F4000140 F8000008
	s_load_b32 s12, s[0:1], 0x50                               // 00000007AB0C: F4000300 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007AB14: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 00000007AB1C: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007AB24: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007AB2C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007AB34: D6100002 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000007AB3C: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000007AB44: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007AB48: BF870193
	v_lshl_or_b32 v0, s2, 4, v1                                // 00000007AB4C: D6560000 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007AB54: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 00000007AB5C: BF8700D3
	v_lshl_or_b32 v4, s4, 1, v4                                // 00000007AB60: D6560004 04110204
	s_waitcnt lgkmcnt(0)                                       // 00000007AB68: BF89FC07
	s_ashr_i32 s3, s5, 31                                      // 00000007AB6C: 86039F05
	s_and_b32 s2, s12, 0xffff                                  // 00000007AB70: 8B02FF0C 0000FFFF
	v_add_co_u32 v0, s8, s8, v0                                // 00000007AB78: D7000800 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 00000007AB80: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 00000007AB88: D7000802 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007AB90: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 00000007AB94: D5207C03 0021000B
	v_add_co_u32 v4, s0, s0, v4                                // 00000007AB9C: D7000004 00020800
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007ABA4: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007ABAC: D5207C05 00010001
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000007ABB4: BF8701B4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007ABB8: D73C0002 00020483
	s_add_u32 s2, s2, s5                                       // 00000007ABC0: 80020502
	s_addc_u32 s3, 0, s3                                       // 00000007ABC4: 82030380
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007ABC8: D7006A00 00020006
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007ABD0: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000007ABD8: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007ABDC: D7006A02 00020406
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v6, s2             // 00000007ABE4: CA100003 07060002
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 00000007ABEC: 40060607
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 00000007ABF0: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 00000007ABF8: 400A0A07
	s_clause 0x2                                               // 00000007ABFC: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007AC00: DC6E0000 007C0600
	global_store_b64 v[2:3], v[6:7], off                       // 00000007AC08: DC6E0000 007C0602
	global_store_b64 v[4:5], v[6:7], off                       // 00000007AC10: DC6E0000 007C0604
	s_nop 0                                                    // 00000007AC18: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AC1C: BFB60003
	s_endpgm                                                   // 00000007AC20: BFB00000
add_long_x_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007AC24: BF800000
	.long 0xbf800000                                           // 00000007AC28: BF800000
	.long 0xbf800000                                           // 00000007AC2C: BF800000
	.long 0xbf800000                                           // 00000007AC30: BF800000
	.long 0xbf800000                                           // 00000007AC34: BF800000
	.long 0xbf800000                                           // 00000007AC38: BF800000
	.long 0xbf800000                                           // 00000007AC3C: BF800000
	.long 0xbf800000                                           // 00000007AC40: BF800000
	.long 0xbf800000                                           // 00000007AC44: BF800000
	.long 0xbf800000                                           // 00000007AC48: BF800000
	.long 0xbf800000                                           // 00000007AC4C: BF800000
	.long 0xbf800000                                           // 00000007AC50: BF800000
	.long 0xbf800000                                           // 00000007AC54: BF800000
	.long 0xbf800000                                           // 00000007AC58: BF800000
	.long 0xbf800000                                           // 00000007AC5C: BF800000
	.long 0xbf800000                                           // 00000007AC60: BF800000
	.long 0xbf800000                                           // 00000007AC64: BF800000
	.long 0xbf800000                                           // 00000007AC68: BF800000
	.long 0xbf800000                                           // 00000007AC6C: BF800000
	.long 0xbf800000                                           // 00000007AC70: BF800000
	.long 0xbf800000                                           // 00000007AC74: BF800000
	.long 0xbf800000                                           // 00000007AC78: BF800000
	.long 0xbf800000                                           // 00000007AC7C: BF800000
	.long 0xbf800000                                           // 00000007AC80: BF800000
	.long 0xbf800000                                           // 00000007AC84: BF800000
	.long 0xbf800000                                           // 00000007AC88: BF800000
	.long 0xbf800000                                           // 00000007AC8C: BF800000
	.long 0xbf800000                                           // 00000007AC90: BF800000
	.long 0xbf800000                                           // 00000007AC94: BF800000
	.long 0xbf800000                                           // 00000007AC98: BF800000
	.long 0xbf800000                                           // 00000007AC9C: BF800000
	.long 0xbf800000                                           // 00000007ACA0: BF800000
	.long 0xbf800000                                           // 00000007ACA4: BF800000
	.long 0xbf800000                                           // 00000007ACA8: BF800000
	.long 0xbf800000                                           // 00000007ACAC: BF800000
	.long 0xbf800000                                           // 00000007ACB0: BF800000
	.long 0xbf800000                                           // 00000007ACB4: BF800000
	.long 0xbf800000                                           // 00000007ACB8: BF800000
	.long 0xbf800000                                           // 00000007ACBC: BF800000
	.long 0xbf800000                                           // 00000007ACC0: BF800000
	.long 0xbf800000                                           // 00000007ACC4: BF800000
	.long 0xbf800000                                           // 00000007ACC8: BF800000
	.long 0xbf800000                                           // 00000007ACCC: BF800000
	.long 0xbf800000                                           // 00000007ACD0: BF800000
	.long 0xbf800000                                           // 00000007ACD4: BF800000
	.long 0xbf800000                                           // 00000007ACD8: BF800000
	.long 0xbf800000                                           // 00000007ACDC: BF800000
	.long 0xbf800000                                           // 00000007ACE0: BF800000
	.long 0xbf800000                                           // 00000007ACE4: BF800000
	.long 0xbf800000                                           // 00000007ACE8: BF800000
	.long 0xbf800000                                           // 00000007ACEC: BF800000
	.long 0xbf800000                                           // 00000007ACF0: BF800000
	.long 0xbf800000                                           // 00000007ACF4: BF800000
	.long 0xbf800000                                           // 00000007ACF8: BF800000
	.long 0xbf800000                                           // 00000007ACFC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_get_work_dim,@function
	.size	add_long_get_global_offset_get_work_dim, add_long_get_global_offset_get_work_dim_symend-add_long_get_global_offset_get_work_dim
add_long_get_global_offset_get_work_dim:
	s_clause 0x3                                               // 00000007AD00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007AD04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007AD0C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007AD14: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007AD1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007AD24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007AD2C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 00000007AD34: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000007AD3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007AD40: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007AD44: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007AD4C: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007AD54: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v3                                // 00000007AD58: D6560004 040D0204
	s_waitcnt lgkmcnt(0)                                       // 00000007AD60: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 00000007AD64: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007AD6C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000007AD70: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007AD78: D7000202 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000007AD80: D5207C03 0009000B
	s_and_b32 s4, s5, 0xffff                                   // 00000007AD88: 8B04FF05 0000FFFF
	v_add_co_u32 v4, s5, s0, v4                                // 00000007AD90: D7000504 00020800
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007AD98: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s5                    // 00000007ADA0: D5207C05 00150001
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007ADA8: D73C0002 00020483
	s_add_u32 s2, s8, s4                                       // 00000007ADB0: 80020408
	s_addc_u32 s3, s9, 0                                       // 00000007ADB4: 82038009
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007ADB8: BF870003
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007ADBC: D7006A00 00020006
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007ADC4: D73C0004 00020883
	v_mov_b32_e32 v7, s3                                       // 00000007ADCC: 7E0E0203
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000007ADD0: 40020207
	v_mov_b32_e32 v6, s2                                       // 00000007ADD4: 7E0C0202
	s_add_u32 s2, s10, s4                                      // 00000007ADD8: 8002040A
	s_addc_u32 s3, s11, 0                                      // 00000007ADDC: 8203800B
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007ADE0: D7006A02 00020406
	s_add_u32 s0, s0, s4                                       // 00000007ADE8: 80000400
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 00000007ADEC: 40060607
	s_addc_u32 s1, s1, 0                                       // 00000007ADF0: 82018001
	v_mov_b32_e32 v9, s3                                       // 00000007ADF4: 7E120203
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 00000007ADF8: D7006A04 00020806
	v_dual_mov_b32 v8, s2 :: v_dual_mov_b32 v11, s1            // 00000007AE00: CA100002 080A0001
	v_mov_b32_e32 v10, s0                                      // 00000007AE08: 7E140200
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 00000007AE0C: 400A0A07
	s_clause 0x2                                               // 00000007AE10: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007AE14: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007AE1C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007AE24: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007AE2C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AE30: BFB60003
	s_endpgm                                                   // 00000007AE34: BFB00000
add_long_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007AE38: BF800000
	.long 0xbf800000                                           // 00000007AE3C: BF800000
	.long 0xbf800000                                           // 00000007AE40: BF800000
	.long 0xbf800000                                           // 00000007AE44: BF800000
	.long 0xbf800000                                           // 00000007AE48: BF800000
	.long 0xbf800000                                           // 00000007AE4C: BF800000
	.long 0xbf800000                                           // 00000007AE50: BF800000
	.long 0xbf800000                                           // 00000007AE54: BF800000
	.long 0xbf800000                                           // 00000007AE58: BF800000
	.long 0xbf800000                                           // 00000007AE5C: BF800000
	.long 0xbf800000                                           // 00000007AE60: BF800000
	.long 0xbf800000                                           // 00000007AE64: BF800000
	.long 0xbf800000                                           // 00000007AE68: BF800000
	.long 0xbf800000                                           // 00000007AE6C: BF800000
	.long 0xbf800000                                           // 00000007AE70: BF800000
	.long 0xbf800000                                           // 00000007AE74: BF800000
	.long 0xbf800000                                           // 00000007AE78: BF800000
	.long 0xbf800000                                           // 00000007AE7C: BF800000
	.long 0xbf800000                                           // 00000007AE80: BF800000
	.long 0xbf800000                                           // 00000007AE84: BF800000
	.long 0xbf800000                                           // 00000007AE88: BF800000
	.long 0xbf800000                                           // 00000007AE8C: BF800000
	.long 0xbf800000                                           // 00000007AE90: BF800000
	.long 0xbf800000                                           // 00000007AE94: BF800000
	.long 0xbf800000                                           // 00000007AE98: BF800000
	.long 0xbf800000                                           // 00000007AE9C: BF800000
	.long 0xbf800000                                           // 00000007AEA0: BF800000
	.long 0xbf800000                                           // 00000007AEA4: BF800000
	.long 0xbf800000                                           // 00000007AEA8: BF800000
	.long 0xbf800000                                           // 00000007AEAC: BF800000
	.long 0xbf800000                                           // 00000007AEB0: BF800000
	.long 0xbf800000                                           // 00000007AEB4: BF800000
	.long 0xbf800000                                           // 00000007AEB8: BF800000
	.long 0xbf800000                                           // 00000007AEBC: BF800000
	.long 0xbf800000                                           // 00000007AEC0: BF800000
	.long 0xbf800000                                           // 00000007AEC4: BF800000
	.long 0xbf800000                                           // 00000007AEC8: BF800000
	.long 0xbf800000                                           // 00000007AECC: BF800000
	.long 0xbf800000                                           // 00000007AED0: BF800000
	.long 0xbf800000                                           // 00000007AED4: BF800000
	.long 0xbf800000                                           // 00000007AED8: BF800000
	.long 0xbf800000                                           // 00000007AEDC: BF800000
	.long 0xbf800000                                           // 00000007AEE0: BF800000
	.long 0xbf800000                                           // 00000007AEE4: BF800000
	.long 0xbf800000                                           // 00000007AEE8: BF800000
	.long 0xbf800000                                           // 00000007AEEC: BF800000
	.long 0xbf800000                                           // 00000007AEF0: BF800000
	.long 0xbf800000                                           // 00000007AEF4: BF800000
	.long 0xbf800000                                           // 00000007AEF8: BF800000
	.long 0xbf800000                                           // 00000007AEFC: BF800000

	.p2align	8
	.type	add_long_get_local_id_get_work_dim,@function
	.size	add_long_get_local_id_get_work_dim, add_long_get_local_id_get_work_dim_symend-add_long_get_local_id_get_work_dim
add_long_get_local_id_get_work_dim:
	s_clause 0x3                                               // 00000007AF00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000007AF04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007AF0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007AF14: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007AF1C: F4040000 F8000048
	v_and_b32_e32 v4, 0x3ff, v0                                // 00000007AF24: 360800FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 00000007AF2C: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007AF34: D610000A 02292900
	s_mov_b32 s33, 0                                           // 00000007AF3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007AF40: BF870193
	v_lshl_or_b32 v0, s2, 3, v4                                // 00000007AF44: D6560000 04110602
	v_lshl_or_b32 v2, s3, 2, v6                                // 00000007AF4C: D6560002 04190403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000007AF54: BF8700C3
	v_lshl_or_b32 v8, s4, 1, v10                               // 00000007AF58: D6560008 04290204
	s_waitcnt lgkmcnt(0)                                       // 00000007AF60: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000007AF64: 8B02FF05 0000FFFF
	v_add_co_u32 v0, s3, s8, v0                                // 00000007AF6C: D7000300 00020008
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000007AF74: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000007AF7C: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007AF84: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000007AF88: D5207C03 000D000B
	v_add_co_u32 v8, s0, s0, v8                                // 00000007AF90: D7000008 00021000
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007AF98: D73C0000 00020083
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 00000007AFA0: D5207C09 00010001
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007AFA8: BF870224
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007AFAC: D73C0002 00020483
	v_add_co_u32 v4, s3, s2, v4                                // 00000007AFB4: D7000304 00020802
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007AFBC: D7006A00 00020006
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007AFC4: BF870004
	v_lshlrev_b64 v[8:9], 3, v[8:9]                            // 00000007AFC8: D73C0008 00021083
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000007AFD0: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007AFD4: D7006A02 00020406
	v_add_co_ci_u32_e64 v5, null, 0, 0, s3                     // 00000007AFDC: D5207C05 000D0080
	v_add_co_u32 v6, s3, s2, v6                                // 00000007AFE4: D7000306 00020C02
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 00000007AFEC: 40060607
	v_add_co_u32 v10, s0, s2, v10                              // 00000007AFF0: D700000A 00021402
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 00000007AFF8: D7006A08 00021006
	v_add_co_ci_u32_e64 v7, null, 0, 0, s3                     // 00000007B000: D5207C07 000D0080
	v_add_co_ci_u32_e64 v11, null, 0, 0, s0                    // 00000007B008: D5207C0B 00010080
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 00000007B010: 40121207
	s_clause 0x2                                               // 00000007B014: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 00000007B018: DC6E0000 007C0400
	global_store_b64 v[2:3], v[6:7], off                       // 00000007B020: DC6E0000 007C0602
	global_store_b64 v[8:9], v[10:11], off                     // 00000007B028: DC6E0000 007C0A08
	s_nop 0                                                    // 00000007B030: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B034: BFB60003
	s_endpgm                                                   // 00000007B038: BFB00000
add_long_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007B03C: BF800000
	.long 0xbf800000                                           // 00000007B040: BF800000
	.long 0xbf800000                                           // 00000007B044: BF800000
	.long 0xbf800000                                           // 00000007B048: BF800000
	.long 0xbf800000                                           // 00000007B04C: BF800000
	.long 0xbf800000                                           // 00000007B050: BF800000
	.long 0xbf800000                                           // 00000007B054: BF800000
	.long 0xbf800000                                           // 00000007B058: BF800000
	.long 0xbf800000                                           // 00000007B05C: BF800000
	.long 0xbf800000                                           // 00000007B060: BF800000
	.long 0xbf800000                                           // 00000007B064: BF800000
	.long 0xbf800000                                           // 00000007B068: BF800000
	.long 0xbf800000                                           // 00000007B06C: BF800000
	.long 0xbf800000                                           // 00000007B070: BF800000
	.long 0xbf800000                                           // 00000007B074: BF800000
	.long 0xbf800000                                           // 00000007B078: BF800000
	.long 0xbf800000                                           // 00000007B07C: BF800000
	.long 0xbf800000                                           // 00000007B080: BF800000
	.long 0xbf800000                                           // 00000007B084: BF800000
	.long 0xbf800000                                           // 00000007B088: BF800000
	.long 0xbf800000                                           // 00000007B08C: BF800000
	.long 0xbf800000                                           // 00000007B090: BF800000
	.long 0xbf800000                                           // 00000007B094: BF800000
	.long 0xbf800000                                           // 00000007B098: BF800000
	.long 0xbf800000                                           // 00000007B09C: BF800000
	.long 0xbf800000                                           // 00000007B0A0: BF800000
	.long 0xbf800000                                           // 00000007B0A4: BF800000
	.long 0xbf800000                                           // 00000007B0A8: BF800000
	.long 0xbf800000                                           // 00000007B0AC: BF800000
	.long 0xbf800000                                           // 00000007B0B0: BF800000
	.long 0xbf800000                                           // 00000007B0B4: BF800000
	.long 0xbf800000                                           // 00000007B0B8: BF800000
	.long 0xbf800000                                           // 00000007B0BC: BF800000
	.long 0xbf800000                                           // 00000007B0C0: BF800000
	.long 0xbf800000                                           // 00000007B0C4: BF800000
	.long 0xbf800000                                           // 00000007B0C8: BF800000
	.long 0xbf800000                                           // 00000007B0CC: BF800000
	.long 0xbf800000                                           // 00000007B0D0: BF800000
	.long 0xbf800000                                           // 00000007B0D4: BF800000
	.long 0xbf800000                                           // 00000007B0D8: BF800000
	.long 0xbf800000                                           // 00000007B0DC: BF800000
	.long 0xbf800000                                           // 00000007B0E0: BF800000
	.long 0xbf800000                                           // 00000007B0E4: BF800000
	.long 0xbf800000                                           // 00000007B0E8: BF800000
	.long 0xbf800000                                           // 00000007B0EC: BF800000
	.long 0xbf800000                                           // 00000007B0F0: BF800000
	.long 0xbf800000                                           // 00000007B0F4: BF800000
	.long 0xbf800000                                           // 00000007B0F8: BF800000
	.long 0xbf800000                                           // 00000007B0FC: BF800000

	.p2align	8
	.type	add_long_get_group_id_get_work_dim,@function
	.size	add_long_get_group_id_get_work_dim, add_long_get_group_id_get_work_dim_symend-add_long_get_group_id_get_work_dim
add_long_get_group_id_get_work_dim:
	s_clause 0x3                                               // 00000007B100: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007B10C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007B114: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007B11C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B124: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B12C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 00000007B134: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000007B13C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B140: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007B144: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007B14C: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007B154: BF8701A3
	v_lshl_or_b32 v4, s4, 1, v3                                // 00000007B158: D6560004 040D0204
	s_waitcnt lgkmcnt(0)                                       // 00000007B160: BF89FC07
	v_add_co_u32 v0, s8, s8, v1                                // 00000007B164: D7000800 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007B16C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s8                    // 00000007B170: D5207C01 00210009
	v_add_co_u32 v2, s8, s10, v2                               // 00000007B178: D7000802 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s8                   // 00000007B180: D5207C03 0021000B
	v_add_co_u32 v4, s0, s0, v4                                // 00000007B188: D7000004 00020800
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007B190: BF870004
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007B194: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007B19C: D5207C05 00010001
	s_and_b32 s5, s5, 0xffff                                   // 00000007B1A4: 8B05FF05 0000FFFF
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007B1AC: D73C0002 00020483
	s_add_u32 s8, s5, s2                                       // 00000007B1B4: 80080205
	s_addc_u32 s9, 0, 0                                        // 00000007B1B8: 82098080
	v_mov_b32_e32 v6, s8                                       // 00000007B1BC: 7E0C0208
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007B1C0: D7006A00 00020006
	s_add_u32 s0, s5, s3                                       // 00000007B1C8: 80000305
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007B1CC: D73C0004 00020883
	s_addc_u32 s1, 0, 0                                        // 00000007B1D4: 82018080
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000007B1D8: 40020207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007B1DC: D7006A02 00020406
	v_mov_b32_e32 v9, s1                                       // 00000007B1E4: 7E120201
	v_dual_mov_b32 v7, s9 :: v_dual_mov_b32 v8, s0             // 00000007B1E8: CA100009 07080000
	s_add_u32 s0, s5, s4                                       // 00000007B1F0: 80000405
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 00000007B1F4: 40060607
	s_addc_u32 s1, 0, 0                                        // 00000007B1F8: 82018080
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 00000007B1FC: D7006A04 00020806
	v_mov_b32_e32 v11, s1                                      // 00000007B204: 7E160201
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 00000007B208: 400A0A07
	v_mov_b32_e32 v10, s0                                      // 00000007B20C: 7E140200
	s_clause 0x2                                               // 00000007B210: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007B214: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007B21C: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007B224: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007B22C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B230: BFB60003
	s_endpgm                                                   // 00000007B234: BFB00000
add_long_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007B238: BF800000
	.long 0xbf800000                                           // 00000007B23C: BF800000
	.long 0xbf800000                                           // 00000007B240: BF800000
	.long 0xbf800000                                           // 00000007B244: BF800000
	.long 0xbf800000                                           // 00000007B248: BF800000
	.long 0xbf800000                                           // 00000007B24C: BF800000
	.long 0xbf800000                                           // 00000007B250: BF800000
	.long 0xbf800000                                           // 00000007B254: BF800000
	.long 0xbf800000                                           // 00000007B258: BF800000
	.long 0xbf800000                                           // 00000007B25C: BF800000
	.long 0xbf800000                                           // 00000007B260: BF800000
	.long 0xbf800000                                           // 00000007B264: BF800000
	.long 0xbf800000                                           // 00000007B268: BF800000
	.long 0xbf800000                                           // 00000007B26C: BF800000
	.long 0xbf800000                                           // 00000007B270: BF800000
	.long 0xbf800000                                           // 00000007B274: BF800000
	.long 0xbf800000                                           // 00000007B278: BF800000
	.long 0xbf800000                                           // 00000007B27C: BF800000
	.long 0xbf800000                                           // 00000007B280: BF800000
	.long 0xbf800000                                           // 00000007B284: BF800000
	.long 0xbf800000                                           // 00000007B288: BF800000
	.long 0xbf800000                                           // 00000007B28C: BF800000
	.long 0xbf800000                                           // 00000007B290: BF800000
	.long 0xbf800000                                           // 00000007B294: BF800000
	.long 0xbf800000                                           // 00000007B298: BF800000
	.long 0xbf800000                                           // 00000007B29C: BF800000
	.long 0xbf800000                                           // 00000007B2A0: BF800000
	.long 0xbf800000                                           // 00000007B2A4: BF800000
	.long 0xbf800000                                           // 00000007B2A8: BF800000
	.long 0xbf800000                                           // 00000007B2AC: BF800000
	.long 0xbf800000                                           // 00000007B2B0: BF800000
	.long 0xbf800000                                           // 00000007B2B4: BF800000
	.long 0xbf800000                                           // 00000007B2B8: BF800000
	.long 0xbf800000                                           // 00000007B2BC: BF800000
	.long 0xbf800000                                           // 00000007B2C0: BF800000
	.long 0xbf800000                                           // 00000007B2C4: BF800000
	.long 0xbf800000                                           // 00000007B2C8: BF800000
	.long 0xbf800000                                           // 00000007B2CC: BF800000
	.long 0xbf800000                                           // 00000007B2D0: BF800000
	.long 0xbf800000                                           // 00000007B2D4: BF800000
	.long 0xbf800000                                           // 00000007B2D8: BF800000
	.long 0xbf800000                                           // 00000007B2DC: BF800000
	.long 0xbf800000                                           // 00000007B2E0: BF800000
	.long 0xbf800000                                           // 00000007B2E4: BF800000
	.long 0xbf800000                                           // 00000007B2E8: BF800000
	.long 0xbf800000                                           // 00000007B2EC: BF800000
	.long 0xbf800000                                           // 00000007B2F0: BF800000
	.long 0xbf800000                                           // 00000007B2F4: BF800000
	.long 0xbf800000                                           // 00000007B2F8: BF800000
	.long 0xbf800000                                           // 00000007B2FC: BF800000

	.p2align	8
	.type	add_long_get_local_size_get_work_dim,@function
	.size	add_long_get_local_size_get_work_dim, add_long_get_local_size_get_work_dim_symend-add_long_get_local_size_get_work_dim
add_long_get_local_size_get_work_dim:
	s_clause 0x2                                               // 00000007B300: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000007B304: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B30C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007B314: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B31C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B324: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B32C: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B334: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007B33C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007B340: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007B348: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000007B350: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007B354: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007B35C: BF89FC07
	s_and_b32 s4, s5, 0xffff                                   // 00000007B360: 8B04FF05 0000FFFF
	v_add_co_u32 v0, s2, s8, v1                                // 00000007B368: D7000200 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000007B370: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007B378: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007B380: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000007B384: D5207C03 0009000B
	v_add_co_u32 v4, s2, s6, v4                                // 00000007B38C: D7000204 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007B394: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000007B39C: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000007B3A4: BF8701B4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007B3A8: D73C0002 00020483
	s_add_u32 s2, s4, 2                                        // 00000007B3B0: 80028204
	s_addc_u32 s3, 0, 0                                        // 00000007B3B4: 82038080
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007B3B8: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007B3C0: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007B3C8: 40020201
	v_mov_b32_e32 v7, s3                                       // 00000007B3CC: 7E0E0203
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007B3D0: D7006A02 00020400
	v_mov_b32_e32 v6, s2                                       // 00000007B3D8: 7E0C0202
	s_add_u32 s2, s4, 4                                        // 00000007B3DC: 80028404
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007B3E0: 40060601
	s_addc_u32 s3, 0, 0                                        // 00000007B3E4: 82038080
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000007B3E8: D7006A04 00020800
	v_dual_mov_b32 v9, s3 :: v_dual_mov_b32 v8, s2             // 00000007B3F0: CA100003 09080002
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000007B3F8: 400A0A01
	s_clause 0x2                                               // 00000007B3FC: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007B400: DC6E0000 007C0600
	global_store_b64 v[2:3], v[6:7], off                       // 00000007B408: DC6E0000 007C0602
	global_store_b64 v[4:5], v[8:9], off                       // 00000007B410: DC6E0000 007C0804
	s_nop 0                                                    // 00000007B418: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B41C: BFB60003
	s_endpgm                                                   // 00000007B420: BFB00000
add_long_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007B424: BF800000
	.long 0xbf800000                                           // 00000007B428: BF800000
	.long 0xbf800000                                           // 00000007B42C: BF800000
	.long 0xbf800000                                           // 00000007B430: BF800000
	.long 0xbf800000                                           // 00000007B434: BF800000
	.long 0xbf800000                                           // 00000007B438: BF800000
	.long 0xbf800000                                           // 00000007B43C: BF800000
	.long 0xbf800000                                           // 00000007B440: BF800000
	.long 0xbf800000                                           // 00000007B444: BF800000
	.long 0xbf800000                                           // 00000007B448: BF800000
	.long 0xbf800000                                           // 00000007B44C: BF800000
	.long 0xbf800000                                           // 00000007B450: BF800000
	.long 0xbf800000                                           // 00000007B454: BF800000
	.long 0xbf800000                                           // 00000007B458: BF800000
	.long 0xbf800000                                           // 00000007B45C: BF800000
	.long 0xbf800000                                           // 00000007B460: BF800000
	.long 0xbf800000                                           // 00000007B464: BF800000
	.long 0xbf800000                                           // 00000007B468: BF800000
	.long 0xbf800000                                           // 00000007B46C: BF800000
	.long 0xbf800000                                           // 00000007B470: BF800000
	.long 0xbf800000                                           // 00000007B474: BF800000
	.long 0xbf800000                                           // 00000007B478: BF800000
	.long 0xbf800000                                           // 00000007B47C: BF800000
	.long 0xbf800000                                           // 00000007B480: BF800000
	.long 0xbf800000                                           // 00000007B484: BF800000
	.long 0xbf800000                                           // 00000007B488: BF800000
	.long 0xbf800000                                           // 00000007B48C: BF800000
	.long 0xbf800000                                           // 00000007B490: BF800000
	.long 0xbf800000                                           // 00000007B494: BF800000
	.long 0xbf800000                                           // 00000007B498: BF800000
	.long 0xbf800000                                           // 00000007B49C: BF800000
	.long 0xbf800000                                           // 00000007B4A0: BF800000
	.long 0xbf800000                                           // 00000007B4A4: BF800000
	.long 0xbf800000                                           // 00000007B4A8: BF800000
	.long 0xbf800000                                           // 00000007B4AC: BF800000
	.long 0xbf800000                                           // 00000007B4B0: BF800000
	.long 0xbf800000                                           // 00000007B4B4: BF800000
	.long 0xbf800000                                           // 00000007B4B8: BF800000
	.long 0xbf800000                                           // 00000007B4BC: BF800000
	.long 0xbf800000                                           // 00000007B4C0: BF800000
	.long 0xbf800000                                           // 00000007B4C4: BF800000
	.long 0xbf800000                                           // 00000007B4C8: BF800000
	.long 0xbf800000                                           // 00000007B4CC: BF800000
	.long 0xbf800000                                           // 00000007B4D0: BF800000
	.long 0xbf800000                                           // 00000007B4D4: BF800000
	.long 0xbf800000                                           // 00000007B4D8: BF800000
	.long 0xbf800000                                           // 00000007B4DC: BF800000
	.long 0xbf800000                                           // 00000007B4E0: BF800000
	.long 0xbf800000                                           // 00000007B4E4: BF800000
	.long 0xbf800000                                           // 00000007B4E8: BF800000
	.long 0xbf800000                                           // 00000007B4EC: BF800000
	.long 0xbf800000                                           // 00000007B4F0: BF800000
	.long 0xbf800000                                           // 00000007B4F4: BF800000
	.long 0xbf800000                                           // 00000007B4F8: BF800000
	.long 0xbf800000                                           // 00000007B4FC: BF800000

	.p2align	8
	.type	add_long_get_global_id_get_work_dim,@function
	.size	add_long_get_global_id_get_work_dim, add_long_get_global_id_get_work_dim_symend-add_long_get_global_id_get_work_dim
add_long_get_global_id_get_work_dim:
	s_clause 0x2                                               // 00000007B500: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000007B504: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007B50C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B514: F4080200 F8000038
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007B51C: CA240080 020000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007B528: F4040000 F8000048
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007B530: D6100004 02291500
	v_bfe_u32 v6, v0, 20, 10                                   // 00000007B538: D6100006 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007B540: BF8701A3
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007B544: D6560001 04050202
	s_mov_b32 s33, 0                                           // 00000007B54C: BEA10080
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007B550: D6560004 04110203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B558: BF870193
	v_lshl_or_b32 v8, s4, 2, v6                                // 00000007B55C: D6560008 04190404
	v_lshlrev_b64 v[2:3], 3, v[1:2]                            // 00000007B564: D73C0002 00020283
	s_waitcnt lgkmcnt(0)                                       // 00000007B56C: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000007B570: 8B02FF05 0000FFFF
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000007B578: BF8700C1
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007B57C: D7006A02 00020406
	s_add_u32 s3, s2, s8                                       // 00000007B584: 80030802
	s_addc_u32 s5, 0, s9                                       // 00000007B588: 82050980
	v_add_co_u32 v0, s3, s3, v1                                // 00000007B58C: D7000300 00020203
	v_add_co_ci_u32_e64 v1, null, s5, 0, s3                    // 00000007B594: D5207C01 000D0005
	v_add_co_u32 v4, s3, s10, v4                               // 00000007B59C: D7000304 0002080A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007B5A4: BF8701A1
	v_add_co_ci_u32_e64 v5, null, s11, 0, s3                   // 00000007B5A8: D5207C05 000D000B
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 00000007B5B0: 40060607
	v_add_co_u32 v6, vcc_lo, v4, s2                            // 00000007B5B4: D7006A06 00000504
	v_add_co_u32 v8, s0, s0, v8                                // 00000007B5BC: D7000008 00021000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000007B5C4: BF870134
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v5, vcc_lo              // 00000007B5C8: 400E0A80
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007B5CC: D73C0004 00020883
	v_add_co_ci_u32_e64 v9, null, s1, 0, s0                    // 00000007B5D4: D5207C09 00010001
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 00000007B5DC: D7006A04 00020806
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007B5E4: BF870212
	v_lshlrev_b64 v[10:11], 3, v[8:9]                          // 00000007B5E8: D73C000A 00021083
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 00000007B5F0: 400A0A07
	v_add_co_u32 v8, vcc_lo, v8, s2                            // 00000007B5F4: D7006A08 00000508
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v9, vcc_lo              // 00000007B5FC: 40121280
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007B600: BF870004
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 00000007B604: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 00000007B60C: 40161607
	s_clause 0x2                                               // 00000007B610: BF850002
	global_store_b64 v[2:3], v[0:1], off                       // 00000007B614: DC6E0000 007C0002
	global_store_b64 v[4:5], v[6:7], off                       // 00000007B61C: DC6E0000 007C0604
	global_store_b64 v[10:11], v[8:9], off                     // 00000007B624: DC6E0000 007C080A
	s_nop 0                                                    // 00000007B62C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B630: BFB60003
	s_endpgm                                                   // 00000007B634: BFB00000
add_long_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007B638: BF800000
	.long 0xbf800000                                           // 00000007B63C: BF800000
	.long 0xbf800000                                           // 00000007B640: BF800000
	.long 0xbf800000                                           // 00000007B644: BF800000
	.long 0xbf800000                                           // 00000007B648: BF800000
	.long 0xbf800000                                           // 00000007B64C: BF800000
	.long 0xbf800000                                           // 00000007B650: BF800000
	.long 0xbf800000                                           // 00000007B654: BF800000
	.long 0xbf800000                                           // 00000007B658: BF800000
	.long 0xbf800000                                           // 00000007B65C: BF800000
	.long 0xbf800000                                           // 00000007B660: BF800000
	.long 0xbf800000                                           // 00000007B664: BF800000
	.long 0xbf800000                                           // 00000007B668: BF800000
	.long 0xbf800000                                           // 00000007B66C: BF800000
	.long 0xbf800000                                           // 00000007B670: BF800000
	.long 0xbf800000                                           // 00000007B674: BF800000
	.long 0xbf800000                                           // 00000007B678: BF800000
	.long 0xbf800000                                           // 00000007B67C: BF800000
	.long 0xbf800000                                           // 00000007B680: BF800000
	.long 0xbf800000                                           // 00000007B684: BF800000
	.long 0xbf800000                                           // 00000007B688: BF800000
	.long 0xbf800000                                           // 00000007B68C: BF800000
	.long 0xbf800000                                           // 00000007B690: BF800000
	.long 0xbf800000                                           // 00000007B694: BF800000
	.long 0xbf800000                                           // 00000007B698: BF800000
	.long 0xbf800000                                           // 00000007B69C: BF800000
	.long 0xbf800000                                           // 00000007B6A0: BF800000
	.long 0xbf800000                                           // 00000007B6A4: BF800000
	.long 0xbf800000                                           // 00000007B6A8: BF800000
	.long 0xbf800000                                           // 00000007B6AC: BF800000
	.long 0xbf800000                                           // 00000007B6B0: BF800000
	.long 0xbf800000                                           // 00000007B6B4: BF800000
	.long 0xbf800000                                           // 00000007B6B8: BF800000
	.long 0xbf800000                                           // 00000007B6BC: BF800000
	.long 0xbf800000                                           // 00000007B6C0: BF800000
	.long 0xbf800000                                           // 00000007B6C4: BF800000
	.long 0xbf800000                                           // 00000007B6C8: BF800000
	.long 0xbf800000                                           // 00000007B6CC: BF800000
	.long 0xbf800000                                           // 00000007B6D0: BF800000
	.long 0xbf800000                                           // 00000007B6D4: BF800000
	.long 0xbf800000                                           // 00000007B6D8: BF800000
	.long 0xbf800000                                           // 00000007B6DC: BF800000
	.long 0xbf800000                                           // 00000007B6E0: BF800000
	.long 0xbf800000                                           // 00000007B6E4: BF800000
	.long 0xbf800000                                           // 00000007B6E8: BF800000
	.long 0xbf800000                                           // 00000007B6EC: BF800000
	.long 0xbf800000                                           // 00000007B6F0: BF800000
	.long 0xbf800000                                           // 00000007B6F4: BF800000
	.long 0xbf800000                                           // 00000007B6F8: BF800000
	.long 0xbf800000                                           // 00000007B6FC: BF800000

	.p2align	8
	.type	add_long_get_global_size_get_work_dim,@function
	.size	add_long_get_global_size_get_work_dim, add_long_get_global_size_get_work_dim_symend-add_long_get_global_size_get_work_dim
add_long_get_global_size_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 00000007B700: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B704: D6100002 02291500
	s_mov_b32 s16, 0                                           // 00000007B70C: BE900080
	s_mov_b32 s33, 0                                           // 00000007B710: BEA10080
	s_clause 0x1                                               // 00000007B714: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000007B718: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007B720: DC4A0026 07000001
	s_clause 0x4                                               // 00000007B728: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 00000007B72C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000007B734: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B73C: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], null                          // 00000007B744: F4040300 F8000000
	s_load_b64 s[14:15], s[0:1], 0x48                          // 00000007B74C: F4040380 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B754: 360200FF 000003FF
	s_load_b32 s0, s[0:1], 0x18                                // 00000007B75C: F4000000 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B764: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007B76C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B774: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007B778: D6560001 04050802
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000007B780: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007B788: BF89FC07
	s_and_b32 s1, s5, 0xffff                                   // 00000007B78C: 8B01FF05 0000FFFF
	s_lshl_b32 s2, s6, 4                                       // 00000007B794: 84028406
	v_add_co_u32 v0, s3, s8, v1                                // 00000007B798: D7000300 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007B7A0: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000007B7A4: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000007B7AC: D7000302 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000007B7B4: D5207C03 000D000B
	v_add_co_u32 v4, s3, s14, v4                               // 00000007B7BC: D7000304 0002080E
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000007B7C4: BF870154
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007B7C8: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s15, 0, s3                   // 00000007B7D0: D5207C05 000D000F
	s_lshl_b32 s3, s7, 1                                       // 00000007B7D8: 84038107
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007B7DC: D73C0002 00020483
	s_lshl_b32 s0, s0, 1                                       // 00000007B7E4: 84008100
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007B7E8: D73C0004 00020883
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 00000007B7F0: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 00000007B7F8: 4002020D
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007B7FC: BF870004
	v_add_co_u32 v2, vcc_lo, s12, v2                           // 00000007B800: D7006A02 0002040C
	v_add_co_ci_u32_e32 v3, vcc_lo, s13, v3, vcc_lo            // 00000007B808: 4006060D
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000007B80C: D7006A04 0002080C
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000007B814: 400A0A0D
	s_waitcnt vmcnt(1)                                         // 00000007B818: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 00000007B81C: 36100CFF 0000FFFF
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000007B824: 320C0C90
	s_waitcnt vmcnt(0)                                         // 00000007B828: BF8903F7
	v_add_nc_u32_e32 v10, s0, v7                               // 00000007B82C: 4A140E00
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B830: BF870193
	v_add_nc_u32_e32 v8, s2, v8                                // 00000007B834: 4A101002
	v_add_nc_u32_e32 v9, s3, v6                                // 00000007B838: 4A120C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007B83C: BF870092
	v_add_co_u32 v6, s0, v8, s1                                // 00000007B840: D7000006 00000308
	v_add_co_ci_u32_e64 v7, null, s16, 0, s0                   // 00000007B848: D5207C07 00010010
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007B850: BF870093
	v_add_co_u32 v8, s0, v9, s1                                // 00000007B854: D7000008 00000309
	v_add_co_ci_u32_e64 v9, null, s16, 0, s0                   // 00000007B85C: D5207C09 00010010
	v_add_co_u32 v10, s0, v10, s1                              // 00000007B864: D700000A 0000030A
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007B86C: BF870001
	v_add_co_ci_u32_e64 v11, null, s16, 0, s0                  // 00000007B870: D5207C0B 00010010
	s_clause 0x2                                               // 00000007B878: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007B87C: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007B884: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007B88C: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007B894: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B898: BFB60003
	s_endpgm                                                   // 00000007B89C: BFB00000
add_long_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007B8A0: BF800000
	.long 0xbf800000                                           // 00000007B8A4: BF800000
	.long 0xbf800000                                           // 00000007B8A8: BF800000
	.long 0xbf800000                                           // 00000007B8AC: BF800000
	.long 0xbf800000                                           // 00000007B8B0: BF800000
	.long 0xbf800000                                           // 00000007B8B4: BF800000
	.long 0xbf800000                                           // 00000007B8B8: BF800000
	.long 0xbf800000                                           // 00000007B8BC: BF800000
	.long 0xbf800000                                           // 00000007B8C0: BF800000
	.long 0xbf800000                                           // 00000007B8C4: BF800000
	.long 0xbf800000                                           // 00000007B8C8: BF800000
	.long 0xbf800000                                           // 00000007B8CC: BF800000
	.long 0xbf800000                                           // 00000007B8D0: BF800000
	.long 0xbf800000                                           // 00000007B8D4: BF800000
	.long 0xbf800000                                           // 00000007B8D8: BF800000
	.long 0xbf800000                                           // 00000007B8DC: BF800000
	.long 0xbf800000                                           // 00000007B8E0: BF800000
	.long 0xbf800000                                           // 00000007B8E4: BF800000
	.long 0xbf800000                                           // 00000007B8E8: BF800000
	.long 0xbf800000                                           // 00000007B8EC: BF800000
	.long 0xbf800000                                           // 00000007B8F0: BF800000
	.long 0xbf800000                                           // 00000007B8F4: BF800000
	.long 0xbf800000                                           // 00000007B8F8: BF800000
	.long 0xbf800000                                           // 00000007B8FC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_get_work_dim,@function
	.size	add_long_get_num_groups_get_work_dim, add_long_get_num_groups_get_work_dim_symend-add_long_get_num_groups_get_work_dim
add_long_get_num_groups_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 00000007B900: 7E020280
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B904: D6100002 02291500
	s_mov_b32 s33, 0                                           // 00000007B90C: BEA10080
	s_clause 0x1                                               // 00000007B910: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000007B914: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007B91C: DC4A0026 07000001
	s_clause 0x2                                               // 00000007B924: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000007B928: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B930: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007B938: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B940: 360200FF 000003FF
	s_clause 0x1                                               // 00000007B948: BF850001
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000007B94C: F4080300 F8000008
	s_load_b32 s16, s[0:1], 0x18                               // 00000007B954: F4000400 F8000018
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B95C: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007B964: D6560002 04090203
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007B96C: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000007B974: BF870133
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007B978: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007B980: BF89FC07
	s_and_b32 s4, s5, 0xffff                                   // 00000007B984: 8B04FF05 0000FFFF
	v_add_co_u32 v0, s0, s8, v1                                // 00000007B98C: D7000000 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007B994: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s0                    // 00000007B998: D5207C01 00010009
	v_add_co_u32 v2, s0, s10, v2                               // 00000007B9A0: D7000002 0002040A
	v_add_co_ci_u32_e64 v3, null, s11, 0, s0                   // 00000007B9A8: D5207C03 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007B9B0: BF8701A3
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007B9B4: D73C0000 00020083
	v_add_co_u32 v4, s0, s6, v4                                // 00000007B9BC: D7000004 00020806
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007B9C4: D73C0002 00020483
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 00000007B9CC: D5207C05 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007B9D4: BF870094
	v_add_co_u32 v0, s0, s12, v0                               // 00000007B9D8: D7000000 0002000C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 00000007B9E0: D5200001 0002020D
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007B9E8: BF870094
	v_add_co_u32 v2, s0, s12, v2                               // 00000007B9EC: D7000002 0002040C
	v_add_co_ci_u32_e64 v3, s0, s13, v3, s0                    // 00000007B9F4: D5200003 0002060D
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007B9FC: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 00000007BA04: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007BA08: 7C7A0C80
	v_lshrrev_b32_e32 v6, 16, v6                               // 00000007BA0C: 320C0C90
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007BA10: BF07806A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007BA14: BF8704A1
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000007BA18: 7C7A0C80
	s_addc_u32 s1, s14, 0                                      // 00000007BA1C: 8201800E
	s_add_u32 s2, s1, s4                                       // 00000007BA20: 80020401
	s_addc_u32 s3, 0, 0                                        // 00000007BA24: 82038080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007BA28: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007BA2C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000007BA30: 7C7A0E80
	s_addc_u32 s1, s15, 0                                      // 00000007BA34: 8201800F
	v_mov_b32_e32 v7, s3                                       // 00000007BA38: 7E0E0203
	s_add_u32 s0, s1, s4                                       // 00000007BA3C: 80000401
	s_addc_u32 s1, 0, 0                                        // 00000007BA40: 82018080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007BA44: BF07806A
	v_mov_b32_e32 v6, s2                                       // 00000007BA48: 7E0C0202
	s_addc_u32 s2, s16, 0                                      // 00000007BA4C: 82028010
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v8, s0             // 00000007BA50: CA100001 09080000
	s_add_u32 s0, s2, s4                                       // 00000007BA58: 80000402
	s_addc_u32 s1, 0, 0                                        // 00000007BA5C: 82018080
	v_add_co_u32 v4, vcc_lo, s12, v4                           // 00000007BA60: D7006A04 0002080C
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 00000007BA68: CA100001 0B0A0000
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 00000007BA70: 400A0A0D
	s_clause 0x2                                               // 00000007BA74: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007BA78: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 00000007BA80: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 00000007BA88: DC6E0000 007C0A04
	s_nop 0                                                    // 00000007BA90: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BA94: BFB60003
	s_endpgm                                                   // 00000007BA98: BFB00000
add_long_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007BA9C: BF800000
	.long 0xbf800000                                           // 00000007BAA0: BF800000
	.long 0xbf800000                                           // 00000007BAA4: BF800000
	.long 0xbf800000                                           // 00000007BAA8: BF800000
	.long 0xbf800000                                           // 00000007BAAC: BF800000
	.long 0xbf800000                                           // 00000007BAB0: BF800000
	.long 0xbf800000                                           // 00000007BAB4: BF800000
	.long 0xbf800000                                           // 00000007BAB8: BF800000
	.long 0xbf800000                                           // 00000007BABC: BF800000
	.long 0xbf800000                                           // 00000007BAC0: BF800000
	.long 0xbf800000                                           // 00000007BAC4: BF800000
	.long 0xbf800000                                           // 00000007BAC8: BF800000
	.long 0xbf800000                                           // 00000007BACC: BF800000
	.long 0xbf800000                                           // 00000007BAD0: BF800000
	.long 0xbf800000                                           // 00000007BAD4: BF800000
	.long 0xbf800000                                           // 00000007BAD8: BF800000
	.long 0xbf800000                                           // 00000007BADC: BF800000
	.long 0xbf800000                                           // 00000007BAE0: BF800000
	.long 0xbf800000                                           // 00000007BAE4: BF800000
	.long 0xbf800000                                           // 00000007BAE8: BF800000
	.long 0xbf800000                                           // 00000007BAEC: BF800000
	.long 0xbf800000                                           // 00000007BAF0: BF800000
	.long 0xbf800000                                           // 00000007BAF4: BF800000
	.long 0xbf800000                                           // 00000007BAF8: BF800000
	.long 0xbf800000                                           // 00000007BAFC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_get_work_dim,@function
	.size	add_long_get_work_dim_get_work_dim, add_long_get_work_dim_get_work_dim_symend-add_long_get_work_dim_get_work_dim
add_long_get_work_dim_get_work_dim:
	s_clause 0x2                                               // 00000007BB00: BF850002
	s_load_b32 s12, s[0:1], 0x50                               // 00000007BB04: F4000300 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007BB0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007BB14: F4040180 F8000048
	s_mov_b32 s5, 0                                            // 00000007BB1C: BE850080
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007BB20: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007BB28: D6100002 02291500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BB30: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BB38: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007BB40: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007BB44: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007BB4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000007BB54: BF8700C3
	v_lshl_or_b32 v4, s4, 2, v0                                // 00000007BB58: D6560004 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007BB60: BF89FC07
	s_and_b32 s2, s12, 0xffff                                  // 00000007BB64: 8B02FF0C 0000FFFF
	v_add_co_u32 v0, s3, s8, v1                                // 00000007BB6C: D7000300 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s3                    // 00000007BB74: D5207C01 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 00000007BB7C: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007BB84: BF870221
	v_add_co_ci_u32_e64 v3, null, s11, 0, s3                   // 00000007BB88: D5207C03 000D000B
	v_add_co_u32 v4, s3, s6, v4                                // 00000007BB90: D7000304 00020806
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007BB98: D73C0000 00020083
	v_add_co_ci_u32_e64 v5, null, s7, 0, s3                    // 00000007BBA0: D5207C05 000D0007
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007BBA8: BF8704A4
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007BBAC: D73C0002 00020483
	s_lshl_b32 s4, s2, 1                                       // 00000007BBB4: 84048102
	v_dual_mov_b32 v7, s5 :: v_dual_mov_b32 v6, s4             // 00000007BBB8: CA100005 07060004
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 00000007BBC0: BF870254
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007BBC4: D7006A00 00020000
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007BBCC: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007BBD4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007BBD8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007BBE0: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000007BBE4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000007BBEC: 400A0A01
	s_clause 0x2                                               // 00000007BBF0: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 00000007BBF4: DC6E0000 007C0600
	global_store_b64 v[2:3], v[6:7], off                       // 00000007BBFC: DC6E0000 007C0602
	global_store_b64 v[4:5], v[6:7], off                       // 00000007BC04: DC6E0000 007C0604
	s_nop 0                                                    // 00000007BC0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BC10: BFB60003
	s_endpgm                                                   // 00000007BC14: BFB00000
add_long_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007BC18: BF800000
	.long 0xbf800000                                           // 00000007BC1C: BF800000
	.long 0xbf800000                                           // 00000007BC20: BF800000
	.long 0xbf800000                                           // 00000007BC24: BF800000
	.long 0xbf800000                                           // 00000007BC28: BF800000
	.long 0xbf800000                                           // 00000007BC2C: BF800000
	.long 0xbf800000                                           // 00000007BC30: BF800000
	.long 0xbf800000                                           // 00000007BC34: BF800000
	.long 0xbf800000                                           // 00000007BC38: BF800000
	.long 0xbf800000                                           // 00000007BC3C: BF800000
	.long 0xbf800000                                           // 00000007BC40: BF800000
	.long 0xbf800000                                           // 00000007BC44: BF800000
	.long 0xbf800000                                           // 00000007BC48: BF800000
	.long 0xbf800000                                           // 00000007BC4C: BF800000
	.long 0xbf800000                                           // 00000007BC50: BF800000
	.long 0xbf800000                                           // 00000007BC54: BF800000
	.long 0xbf800000                                           // 00000007BC58: BF800000
	.long 0xbf800000                                           // 00000007BC5C: BF800000
	.long 0xbf800000                                           // 00000007BC60: BF800000
	.long 0xbf800000                                           // 00000007BC64: BF800000
	.long 0xbf800000                                           // 00000007BC68: BF800000
	.long 0xbf800000                                           // 00000007BC6C: BF800000
	.long 0xbf800000                                           // 00000007BC70: BF800000
	.long 0xbf800000                                           // 00000007BC74: BF800000
	.long 0xbf800000                                           // 00000007BC78: BF800000
	.long 0xbf800000                                           // 00000007BC7C: BF800000
	.long 0xbf800000                                           // 00000007BC80: BF800000
	.long 0xbf800000                                           // 00000007BC84: BF800000
	.long 0xbf800000                                           // 00000007BC88: BF800000
	.long 0xbf800000                                           // 00000007BC8C: BF800000
	.long 0xbf800000                                           // 00000007BC90: BF800000
	.long 0xbf800000                                           // 00000007BC94: BF800000
	.long 0xbf800000                                           // 00000007BC98: BF800000
	.long 0xbf800000                                           // 00000007BC9C: BF800000
	.long 0xbf800000                                           // 00000007BCA0: BF800000
	.long 0xbf800000                                           // 00000007BCA4: BF800000
	.long 0xbf800000                                           // 00000007BCA8: BF800000
	.long 0xbf800000                                           // 00000007BCAC: BF800000
	.long 0xbf800000                                           // 00000007BCB0: BF800000
	.long 0xbf800000                                           // 00000007BCB4: BF800000
	.long 0xbf800000                                           // 00000007BCB8: BF800000
	.long 0xbf800000                                           // 00000007BCBC: BF800000
	.long 0xbf800000                                           // 00000007BCC0: BF800000
	.long 0xbf800000                                           // 00000007BCC4: BF800000
	.long 0xbf800000                                           // 00000007BCC8: BF800000
	.long 0xbf800000                                           // 00000007BCCC: BF800000
	.long 0xbf800000                                           // 00000007BCD0: BF800000
	.long 0xbf800000                                           // 00000007BCD4: BF800000
	.long 0xbf800000                                           // 00000007BCD8: BF800000
	.long 0xbf800000                                           // 00000007BCDC: BF800000
	.long 0xbf800000                                           // 00000007BCE0: BF800000
	.long 0xbf800000                                           // 00000007BCE4: BF800000
	.long 0xbf800000                                           // 00000007BCE8: BF800000
	.long 0xbf800000                                           // 00000007BCEC: BF800000
	.long 0xbf800000                                           // 00000007BCF0: BF800000
	.long 0xbf800000                                           // 00000007BCF4: BF800000
	.long 0xbf800000                                           // 00000007BCF8: BF800000
	.long 0xbf800000                                           // 00000007BCFC: BF800000

	.p2align	8
	.type	add_long_x_64,@function
	.size	add_long_x_64, add_long_x_64_symend-add_long_x_64
add_long_x_64:
	s_clause 0x2                                               // 00000007BD00: BF850002
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007BD04: F4040100 F8000038
	s_load_b32 s3, s[0:1], null                                // 00000007BD0C: F40000C0 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BD14: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007BD1C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007BD24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007BD28: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007BD2C: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 00000007BD30: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007BD38: D5207C01 00090005
	s_lshl_b32 s2, s3, 1                                       // 00000007BD40: 84028103
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007BD44: BF870099
	s_ashr_i32 s3, s2, 31                                      // 00000007BD48: 86039F02
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007BD4C: D73C0000 00020083
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 00000007BD54: CA100002 02020003
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007BD5C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007BD60: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007BD68: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007BD6C: DC6E0000 007C0200
	s_nop 0                                                    // 00000007BD74: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BD78: BFB60003
	s_endpgm                                                   // 00000007BD7C: BFB00000
add_long_x_64_symend:
	.long 0xbf800000                                           // 00000007BD80: BF800000
	.long 0xbf800000                                           // 00000007BD84: BF800000
	.long 0xbf800000                                           // 00000007BD88: BF800000
	.long 0xbf800000                                           // 00000007BD8C: BF800000
	.long 0xbf800000                                           // 00000007BD90: BF800000
	.long 0xbf800000                                           // 00000007BD94: BF800000
	.long 0xbf800000                                           // 00000007BD98: BF800000
	.long 0xbf800000                                           // 00000007BD9C: BF800000
	.long 0xbf800000                                           // 00000007BDA0: BF800000
	.long 0xbf800000                                           // 00000007BDA4: BF800000
	.long 0xbf800000                                           // 00000007BDA8: BF800000
	.long 0xbf800000                                           // 00000007BDAC: BF800000
	.long 0xbf800000                                           // 00000007BDB0: BF800000
	.long 0xbf800000                                           // 00000007BDB4: BF800000
	.long 0xbf800000                                           // 00000007BDB8: BF800000
	.long 0xbf800000                                           // 00000007BDBC: BF800000
	.long 0xbf800000                                           // 00000007BDC0: BF800000
	.long 0xbf800000                                           // 00000007BDC4: BF800000
	.long 0xbf800000                                           // 00000007BDC8: BF800000
	.long 0xbf800000                                           // 00000007BDCC: BF800000
	.long 0xbf800000                                           // 00000007BDD0: BF800000
	.long 0xbf800000                                           // 00000007BDD4: BF800000
	.long 0xbf800000                                           // 00000007BDD8: BF800000
	.long 0xbf800000                                           // 00000007BDDC: BF800000
	.long 0xbf800000                                           // 00000007BDE0: BF800000
	.long 0xbf800000                                           // 00000007BDE4: BF800000
	.long 0xbf800000                                           // 00000007BDE8: BF800000
	.long 0xbf800000                                           // 00000007BDEC: BF800000
	.long 0xbf800000                                           // 00000007BDF0: BF800000
	.long 0xbf800000                                           // 00000007BDF4: BF800000
	.long 0xbf800000                                           // 00000007BDF8: BF800000
	.long 0xbf800000                                           // 00000007BDFC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_64,@function
	.size	add_long_get_global_offset_64, add_long_get_global_offset_64_symend-add_long_get_global_offset_64
add_long_get_global_offset_64:
	s_clause 0x1                                               // 00000007BE00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007BE04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BE0C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007BE14: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007BE1C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007BE20: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007BE24: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 00000007BE28: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007BE30: D5207C01 00090005
	s_lshl_b64 s[2:3], s[4:5], 1                               // 00000007BE38: 84828104
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007BE3C: BF870119
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 00000007BE40: CA100002 02020003
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007BE48: D73C0000 00020083
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007BE50: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007BE54: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007BE5C: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007BE60: DC6E0000 007C0200
	s_nop 0                                                    // 00000007BE68: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BE6C: BFB60003
	s_endpgm                                                   // 00000007BE70: BFB00000
add_long_get_global_offset_64_symend:
	.long 0xbf800000                                           // 00000007BE74: BF800000
	.long 0xbf800000                                           // 00000007BE78: BF800000
	.long 0xbf800000                                           // 00000007BE7C: BF800000
	.long 0xbf800000                                           // 00000007BE80: BF800000
	.long 0xbf800000                                           // 00000007BE84: BF800000
	.long 0xbf800000                                           // 00000007BE88: BF800000
	.long 0xbf800000                                           // 00000007BE8C: BF800000
	.long 0xbf800000                                           // 00000007BE90: BF800000
	.long 0xbf800000                                           // 00000007BE94: BF800000
	.long 0xbf800000                                           // 00000007BE98: BF800000
	.long 0xbf800000                                           // 00000007BE9C: BF800000
	.long 0xbf800000                                           // 00000007BEA0: BF800000
	.long 0xbf800000                                           // 00000007BEA4: BF800000
	.long 0xbf800000                                           // 00000007BEA8: BF800000
	.long 0xbf800000                                           // 00000007BEAC: BF800000
	.long 0xbf800000                                           // 00000007BEB0: BF800000
	.long 0xbf800000                                           // 00000007BEB4: BF800000
	.long 0xbf800000                                           // 00000007BEB8: BF800000
	.long 0xbf800000                                           // 00000007BEBC: BF800000
	.long 0xbf800000                                           // 00000007BEC0: BF800000
	.long 0xbf800000                                           // 00000007BEC4: BF800000
	.long 0xbf800000                                           // 00000007BEC8: BF800000
	.long 0xbf800000                                           // 00000007BECC: BF800000
	.long 0xbf800000                                           // 00000007BED0: BF800000
	.long 0xbf800000                                           // 00000007BED4: BF800000
	.long 0xbf800000                                           // 00000007BED8: BF800000
	.long 0xbf800000                                           // 00000007BEDC: BF800000
	.long 0xbf800000                                           // 00000007BEE0: BF800000
	.long 0xbf800000                                           // 00000007BEE4: BF800000
	.long 0xbf800000                                           // 00000007BEE8: BF800000
	.long 0xbf800000                                           // 00000007BEEC: BF800000
	.long 0xbf800000                                           // 00000007BEF0: BF800000
	.long 0xbf800000                                           // 00000007BEF4: BF800000
	.long 0xbf800000                                           // 00000007BEF8: BF800000
	.long 0xbf800000                                           // 00000007BEFC: BF800000

	.p2align	8
	.type	add_long_get_local_id_64,@function
	.size	add_long_get_local_id_64, add_long_get_local_id_64_symend-add_long_get_local_id_64
add_long_get_local_id_64:
	s_clause 0x1                                               // 00000007BF00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007BF04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BF0C: F4040000 F8000008
	v_lshl_or_b32 v1, s2, 6, v0                                // 00000007BF14: D6560001 04010C02
	v_dual_mov_b32 v4, 0 :: v_dual_lshlrev_b32 v3, 1, v0       // 00000007BF1C: CA220080 04020081
	s_mov_b32 s33, 0                                           // 00000007BF24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007BF28: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007BF2C: BF870092
	v_add_co_u32 v1, s2, s4, v1                                // 00000007BF30: D7000201 00020204
	v_add_co_ci_u32_e64 v2, null, s5, 0, s2                    // 00000007BF38: D5207C02 00090005
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007BF40: BF870091
	v_lshlrev_b64 v[1:2], 3, v[1:2]                            // 00000007BF44: D73C0001 00020283
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000007BF4C: D7006A00 00020200
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007BF54: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000007BF58: 40020401
	global_store_b64 v[0:1], v[3:4], off                       // 00000007BF5C: DC6E0000 007C0300
	s_nop 0                                                    // 00000007BF64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BF68: BFB60003
	s_endpgm                                                   // 00000007BF6C: BFB00000
add_long_get_local_id_64_symend:
	.long 0xbf800000                                           // 00000007BF70: BF800000
	.long 0xbf800000                                           // 00000007BF74: BF800000
	.long 0xbf800000                                           // 00000007BF78: BF800000
	.long 0xbf800000                                           // 00000007BF7C: BF800000
	.long 0xbf800000                                           // 00000007BF80: BF800000
	.long 0xbf800000                                           // 00000007BF84: BF800000
	.long 0xbf800000                                           // 00000007BF88: BF800000
	.long 0xbf800000                                           // 00000007BF8C: BF800000
	.long 0xbf800000                                           // 00000007BF90: BF800000
	.long 0xbf800000                                           // 00000007BF94: BF800000
	.long 0xbf800000                                           // 00000007BF98: BF800000
	.long 0xbf800000                                           // 00000007BF9C: BF800000
	.long 0xbf800000                                           // 00000007BFA0: BF800000
	.long 0xbf800000                                           // 00000007BFA4: BF800000
	.long 0xbf800000                                           // 00000007BFA8: BF800000
	.long 0xbf800000                                           // 00000007BFAC: BF800000
	.long 0xbf800000                                           // 00000007BFB0: BF800000
	.long 0xbf800000                                           // 00000007BFB4: BF800000
	.long 0xbf800000                                           // 00000007BFB8: BF800000
	.long 0xbf800000                                           // 00000007BFBC: BF800000
	.long 0xbf800000                                           // 00000007BFC0: BF800000
	.long 0xbf800000                                           // 00000007BFC4: BF800000
	.long 0xbf800000                                           // 00000007BFC8: BF800000
	.long 0xbf800000                                           // 00000007BFCC: BF800000
	.long 0xbf800000                                           // 00000007BFD0: BF800000
	.long 0xbf800000                                           // 00000007BFD4: BF800000
	.long 0xbf800000                                           // 00000007BFD8: BF800000
	.long 0xbf800000                                           // 00000007BFDC: BF800000
	.long 0xbf800000                                           // 00000007BFE0: BF800000
	.long 0xbf800000                                           // 00000007BFE4: BF800000
	.long 0xbf800000                                           // 00000007BFE8: BF800000
	.long 0xbf800000                                           // 00000007BFEC: BF800000
	.long 0xbf800000                                           // 00000007BFF0: BF800000
	.long 0xbf800000                                           // 00000007BFF4: BF800000
	.long 0xbf800000                                           // 00000007BFF8: BF800000
	.long 0xbf800000                                           // 00000007BFFC: BF800000

	.p2align	8
	.type	add_long_get_group_id_64,@function
	.size	add_long_get_group_id_64, add_long_get_group_id_64_symend-add_long_get_group_id_64
add_long_get_group_id_64:
	s_clause 0x1                                               // 00000007C000: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007C004: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C00C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007C014: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007C01C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C020: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C024: BF870091
	v_add_co_u32 v0, s3, s4, v0                                // 00000007C028: D7000300 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s3                    // 00000007C030: D5207C01 000D0005
	s_mov_b32 s3, 0                                            // 00000007C038: BE830080
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C03C: BF870099
	s_lshl_b64 s[2:3], s[2:3], 1                               // 00000007C040: 84828102
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007C044: D73C0000 00020083
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 00000007C04C: CA100002 02020003
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C054: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C058: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C060: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C064: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C06C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C070: BFB60003
	s_endpgm                                                   // 00000007C074: BFB00000
add_long_get_group_id_64_symend:
	.long 0xbf800000                                           // 00000007C078: BF800000
	.long 0xbf800000                                           // 00000007C07C: BF800000
	.long 0xbf800000                                           // 00000007C080: BF800000
	.long 0xbf800000                                           // 00000007C084: BF800000
	.long 0xbf800000                                           // 00000007C088: BF800000
	.long 0xbf800000                                           // 00000007C08C: BF800000
	.long 0xbf800000                                           // 00000007C090: BF800000
	.long 0xbf800000                                           // 00000007C094: BF800000
	.long 0xbf800000                                           // 00000007C098: BF800000
	.long 0xbf800000                                           // 00000007C09C: BF800000
	.long 0xbf800000                                           // 00000007C0A0: BF800000
	.long 0xbf800000                                           // 00000007C0A4: BF800000
	.long 0xbf800000                                           // 00000007C0A8: BF800000
	.long 0xbf800000                                           // 00000007C0AC: BF800000
	.long 0xbf800000                                           // 00000007C0B0: BF800000
	.long 0xbf800000                                           // 00000007C0B4: BF800000
	.long 0xbf800000                                           // 00000007C0B8: BF800000
	.long 0xbf800000                                           // 00000007C0BC: BF800000
	.long 0xbf800000                                           // 00000007C0C0: BF800000
	.long 0xbf800000                                           // 00000007C0C4: BF800000
	.long 0xbf800000                                           // 00000007C0C8: BF800000
	.long 0xbf800000                                           // 00000007C0CC: BF800000
	.long 0xbf800000                                           // 00000007C0D0: BF800000
	.long 0xbf800000                                           // 00000007C0D4: BF800000
	.long 0xbf800000                                           // 00000007C0D8: BF800000
	.long 0xbf800000                                           // 00000007C0DC: BF800000
	.long 0xbf800000                                           // 00000007C0E0: BF800000
	.long 0xbf800000                                           // 00000007C0E4: BF800000
	.long 0xbf800000                                           // 00000007C0E8: BF800000
	.long 0xbf800000                                           // 00000007C0EC: BF800000
	.long 0xbf800000                                           // 00000007C0F0: BF800000
	.long 0xbf800000                                           // 00000007C0F4: BF800000
	.long 0xbf800000                                           // 00000007C0F8: BF800000
	.long 0xbf800000                                           // 00000007C0FC: BF800000

	.p2align	8
	.type	add_long_get_local_size_64,@function
	.size	add_long_get_local_size_64, add_long_get_local_size_64_symend-add_long_get_local_size_64
add_long_get_local_size_64:
	s_clause 0x1                                               // 00000007C100: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007C104: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C10C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007C114: D6560000 04010C02
	v_dual_mov_b32 v2, 0x80 :: v_dual_mov_b32 v3, 0            // 00000007C11C: CA1000FF 02020080 00000080
	s_mov_b32 s33, 0                                           // 00000007C128: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C12C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C130: BF870092
	v_add_co_u32 v0, s2, s4, v0                                // 00000007C134: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007C13C: D5207C01 00090005
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C144: BF870091
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007C148: D73C0000 00020083
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C150: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007C158: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C15C: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C160: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C168: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C16C: BFB60003
	s_endpgm                                                   // 00000007C170: BFB00000
add_long_get_local_size_64_symend:
	.long 0xbf800000                                           // 00000007C174: BF800000
	.long 0xbf800000                                           // 00000007C178: BF800000
	.long 0xbf800000                                           // 00000007C17C: BF800000
	.long 0xbf800000                                           // 00000007C180: BF800000
	.long 0xbf800000                                           // 00000007C184: BF800000
	.long 0xbf800000                                           // 00000007C188: BF800000
	.long 0xbf800000                                           // 00000007C18C: BF800000
	.long 0xbf800000                                           // 00000007C190: BF800000
	.long 0xbf800000                                           // 00000007C194: BF800000
	.long 0xbf800000                                           // 00000007C198: BF800000
	.long 0xbf800000                                           // 00000007C19C: BF800000
	.long 0xbf800000                                           // 00000007C1A0: BF800000
	.long 0xbf800000                                           // 00000007C1A4: BF800000
	.long 0xbf800000                                           // 00000007C1A8: BF800000
	.long 0xbf800000                                           // 00000007C1AC: BF800000
	.long 0xbf800000                                           // 00000007C1B0: BF800000
	.long 0xbf800000                                           // 00000007C1B4: BF800000
	.long 0xbf800000                                           // 00000007C1B8: BF800000
	.long 0xbf800000                                           // 00000007C1BC: BF800000
	.long 0xbf800000                                           // 00000007C1C0: BF800000
	.long 0xbf800000                                           // 00000007C1C4: BF800000
	.long 0xbf800000                                           // 00000007C1C8: BF800000
	.long 0xbf800000                                           // 00000007C1CC: BF800000
	.long 0xbf800000                                           // 00000007C1D0: BF800000
	.long 0xbf800000                                           // 00000007C1D4: BF800000
	.long 0xbf800000                                           // 00000007C1D8: BF800000
	.long 0xbf800000                                           // 00000007C1DC: BF800000
	.long 0xbf800000                                           // 00000007C1E0: BF800000
	.long 0xbf800000                                           // 00000007C1E4: BF800000
	.long 0xbf800000                                           // 00000007C1E8: BF800000
	.long 0xbf800000                                           // 00000007C1EC: BF800000
	.long 0xbf800000                                           // 00000007C1F0: BF800000
	.long 0xbf800000                                           // 00000007C1F4: BF800000
	.long 0xbf800000                                           // 00000007C1F8: BF800000
	.long 0xbf800000                                           // 00000007C1FC: BF800000

	.p2align	8
	.type	add_long_get_global_id_64,@function
	.size	add_long_get_global_id_64, add_long_get_global_id_64_symend-add_long_get_global_id_64
add_long_get_global_id_64:
	s_clause 0x1                                               // 00000007C200: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007C204: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C20C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007C214: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007C21C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C220: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C224: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 00000007C228: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007C230: D5207C01 00090005
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007C238: BF870121
	v_lshlrev_b64 v[2:3], 3, v[0:1]                            // 00000007C23C: D73C0002 00020083
	v_lshlrev_b64 v[0:1], 1, v[0:1]                            // 00000007C244: D73C0000 00020081
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007C24C: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007C254: BF870003
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007C258: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007C25C: DC6E0000 007C0002
	s_nop 0                                                    // 00000007C264: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C268: BFB60003
	s_endpgm                                                   // 00000007C26C: BFB00000
add_long_get_global_id_64_symend:
	.long 0xbf800000                                           // 00000007C270: BF800000
	.long 0xbf800000                                           // 00000007C274: BF800000
	.long 0xbf800000                                           // 00000007C278: BF800000
	.long 0xbf800000                                           // 00000007C27C: BF800000
	.long 0xbf800000                                           // 00000007C280: BF800000
	.long 0xbf800000                                           // 00000007C284: BF800000
	.long 0xbf800000                                           // 00000007C288: BF800000
	.long 0xbf800000                                           // 00000007C28C: BF800000
	.long 0xbf800000                                           // 00000007C290: BF800000
	.long 0xbf800000                                           // 00000007C294: BF800000
	.long 0xbf800000                                           // 00000007C298: BF800000
	.long 0xbf800000                                           // 00000007C29C: BF800000
	.long 0xbf800000                                           // 00000007C2A0: BF800000
	.long 0xbf800000                                           // 00000007C2A4: BF800000
	.long 0xbf800000                                           // 00000007C2A8: BF800000
	.long 0xbf800000                                           // 00000007C2AC: BF800000
	.long 0xbf800000                                           // 00000007C2B0: BF800000
	.long 0xbf800000                                           // 00000007C2B4: BF800000
	.long 0xbf800000                                           // 00000007C2B8: BF800000
	.long 0xbf800000                                           // 00000007C2BC: BF800000
	.long 0xbf800000                                           // 00000007C2C0: BF800000
	.long 0xbf800000                                           // 00000007C2C4: BF800000
	.long 0xbf800000                                           // 00000007C2C8: BF800000
	.long 0xbf800000                                           // 00000007C2CC: BF800000
	.long 0xbf800000                                           // 00000007C2D0: BF800000
	.long 0xbf800000                                           // 00000007C2D4: BF800000
	.long 0xbf800000                                           // 00000007C2D8: BF800000
	.long 0xbf800000                                           // 00000007C2DC: BF800000
	.long 0xbf800000                                           // 00000007C2E0: BF800000
	.long 0xbf800000                                           // 00000007C2E4: BF800000
	.long 0xbf800000                                           // 00000007C2E8: BF800000
	.long 0xbf800000                                           // 00000007C2EC: BF800000
	.long 0xbf800000                                           // 00000007C2F0: BF800000
	.long 0xbf800000                                           // 00000007C2F4: BF800000
	.long 0xbf800000                                           // 00000007C2F8: BF800000
	.long 0xbf800000                                           // 00000007C2FC: BF800000

	.p2align	8
	.type	add_long_get_global_size_64,@function
	.size	add_long_get_global_size_64, add_long_get_global_size_64_symend-add_long_get_global_size_64
add_long_get_global_size_64:
	s_clause 0x3                                               // 00000007C300: BF850003
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007C304: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x10                                // 00000007C30C: F40000C0 F8000010
	s_load_b32 s6, s[0:1], 0x20                                // 00000007C314: F4000180 F8000020
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C31C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007C324: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007C32C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C330: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C334: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 00000007C338: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007C340: D5207C01 00090005
	s_lshl_b32 s2, s3, 6                                       // 00000007C348: 84028603
	s_lshr_b32 s4, s6, 16                                      // 00000007C34C: 85049006
	s_mov_b32 s3, 0                                            // 00000007C350: BE830080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007C354: BF8704A1
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007C358: D73C0000 00020083
	s_add_i32 s2, s2, s4                                       // 00000007C360: 81020402
	s_lshl_b64 s[2:3], s[2:3], 1                               // 00000007C364: 84828102
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007C368: BF870119
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 00000007C36C: CA100002 02020003
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C374: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007C37C: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C380: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C384: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C38C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C390: BFB60003
	s_endpgm                                                   // 00000007C394: BFB00000
add_long_get_global_size_64_symend:
	.long 0xbf800000                                           // 00000007C398: BF800000
	.long 0xbf800000                                           // 00000007C39C: BF800000
	.long 0xbf800000                                           // 00000007C3A0: BF800000
	.long 0xbf800000                                           // 00000007C3A4: BF800000
	.long 0xbf800000                                           // 00000007C3A8: BF800000
	.long 0xbf800000                                           // 00000007C3AC: BF800000
	.long 0xbf800000                                           // 00000007C3B0: BF800000
	.long 0xbf800000                                           // 00000007C3B4: BF800000
	.long 0xbf800000                                           // 00000007C3B8: BF800000
	.long 0xbf800000                                           // 00000007C3BC: BF800000
	.long 0xbf800000                                           // 00000007C3C0: BF800000
	.long 0xbf800000                                           // 00000007C3C4: BF800000
	.long 0xbf800000                                           // 00000007C3C8: BF800000
	.long 0xbf800000                                           // 00000007C3CC: BF800000
	.long 0xbf800000                                           // 00000007C3D0: BF800000
	.long 0xbf800000                                           // 00000007C3D4: BF800000
	.long 0xbf800000                                           // 00000007C3D8: BF800000
	.long 0xbf800000                                           // 00000007C3DC: BF800000
	.long 0xbf800000                                           // 00000007C3E0: BF800000
	.long 0xbf800000                                           // 00000007C3E4: BF800000
	.long 0xbf800000                                           // 00000007C3E8: BF800000
	.long 0xbf800000                                           // 00000007C3EC: BF800000
	.long 0xbf800000                                           // 00000007C3F0: BF800000
	.long 0xbf800000                                           // 00000007C3F4: BF800000
	.long 0xbf800000                                           // 00000007C3F8: BF800000
	.long 0xbf800000                                           // 00000007C3FC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_64,@function
	.size	add_long_get_num_groups_64, add_long_get_num_groups_64_symend-add_long_get_num_groups_64
add_long_get_num_groups_64:
	s_clause 0x3                                               // 00000007C400: BF850003
	s_load_b32 s3, s[0:1], 0x20                                // 00000007C404: F40000C0 F8000020
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007C40C: F4040100 F8000038
	s_load_b32 s6, s[0:1], 0x10                                // 00000007C414: F4000180 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C41C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007C424: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007C42C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C430: BF89FC07
	s_lshr_b32 s2, s3, 16                                      // 00000007C434: 85029003
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C438: BF870091
	v_add_co_u32 v0, s3, s4, v0                                // 00000007C43C: D7000300 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s3                    // 00000007C444: D5207C01 000D0005
	v_cmp_ne_u16_e64 s2, s2, 0                                 // 00000007C44C: D43D0002 00010002
	s_mov_b32 s3, 0                                            // 00000007C454: BE830080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007C458: BF870112
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007C45C: D73C0000 00020083
	s_cmp_lg_u32 s2, 0                                         // 00000007C464: BF078002
	s_addc_u32 s2, s6, 0                                       // 00000007C468: 82028006
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C46C: BF870099
	s_lshl_b64 s[2:3], s[2:3], 1                               // 00000007C470: 84828102
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C474: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007C47C: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C480: 40020201
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 00000007C484: CA100002 02020003
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C48C: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C494: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C498: BFB60003
	s_endpgm                                                   // 00000007C49C: BFB00000
add_long_get_num_groups_64_symend:
	.long 0xbf800000                                           // 00000007C4A0: BF800000
	.long 0xbf800000                                           // 00000007C4A4: BF800000
	.long 0xbf800000                                           // 00000007C4A8: BF800000
	.long 0xbf800000                                           // 00000007C4AC: BF800000
	.long 0xbf800000                                           // 00000007C4B0: BF800000
	.long 0xbf800000                                           // 00000007C4B4: BF800000
	.long 0xbf800000                                           // 00000007C4B8: BF800000
	.long 0xbf800000                                           // 00000007C4BC: BF800000
	.long 0xbf800000                                           // 00000007C4C0: BF800000
	.long 0xbf800000                                           // 00000007C4C4: BF800000
	.long 0xbf800000                                           // 00000007C4C8: BF800000
	.long 0xbf800000                                           // 00000007C4CC: BF800000
	.long 0xbf800000                                           // 00000007C4D0: BF800000
	.long 0xbf800000                                           // 00000007C4D4: BF800000
	.long 0xbf800000                                           // 00000007C4D8: BF800000
	.long 0xbf800000                                           // 00000007C4DC: BF800000
	.long 0xbf800000                                           // 00000007C4E0: BF800000
	.long 0xbf800000                                           // 00000007C4E4: BF800000
	.long 0xbf800000                                           // 00000007C4E8: BF800000
	.long 0xbf800000                                           // 00000007C4EC: BF800000
	.long 0xbf800000                                           // 00000007C4F0: BF800000
	.long 0xbf800000                                           // 00000007C4F4: BF800000
	.long 0xbf800000                                           // 00000007C4F8: BF800000
	.long 0xbf800000                                           // 00000007C4FC: BF800000

	.p2align	8
	.type	add_long_get_work_dim,@function
	.size	add_long_get_work_dim, add_long_get_work_dim_symend-add_long_get_work_dim
add_long_get_work_dim:
	s_clause 0x2                                               // 00000007C500: BF850002
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007C504: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x50                                // 00000007C50C: F40000C0 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C514: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007C51C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007C524: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C528: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C52C: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 00000007C530: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007C538: D5207C01 00090005
	s_and_b32 s2, s3, 0xffff                                   // 00000007C540: 8B02FF03 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C548: BF870099
	s_lshl_b32 s2, s2, 1                                       // 00000007C54C: 84028102
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007C550: D73C0000 00020083
	v_dual_mov_b32 v3, 0 :: v_dual_mov_b32 v2, s2              // 00000007C558: CA100080 03020002
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C560: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C564: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C56C: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C570: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C578: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C57C: BFB60003
	s_endpgm                                                   // 00000007C580: BFB00000
add_long_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007C584: BF800000
	.long 0xbf800000                                           // 00000007C588: BF800000
	.long 0xbf800000                                           // 00000007C58C: BF800000
	.long 0xbf800000                                           // 00000007C590: BF800000
	.long 0xbf800000                                           // 00000007C594: BF800000
	.long 0xbf800000                                           // 00000007C598: BF800000
	.long 0xbf800000                                           // 00000007C59C: BF800000
	.long 0xbf800000                                           // 00000007C5A0: BF800000
	.long 0xbf800000                                           // 00000007C5A4: BF800000
	.long 0xbf800000                                           // 00000007C5A8: BF800000
	.long 0xbf800000                                           // 00000007C5AC: BF800000
	.long 0xbf800000                                           // 00000007C5B0: BF800000
	.long 0xbf800000                                           // 00000007C5B4: BF800000
	.long 0xbf800000                                           // 00000007C5B8: BF800000
	.long 0xbf800000                                           // 00000007C5BC: BF800000
	.long 0xbf800000                                           // 00000007C5C0: BF800000
	.long 0xbf800000                                           // 00000007C5C4: BF800000
	.long 0xbf800000                                           // 00000007C5C8: BF800000
	.long 0xbf800000                                           // 00000007C5CC: BF800000
	.long 0xbf800000                                           // 00000007C5D0: BF800000
	.long 0xbf800000                                           // 00000007C5D4: BF800000
	.long 0xbf800000                                           // 00000007C5D8: BF800000
	.long 0xbf800000                                           // 00000007C5DC: BF800000
	.long 0xbf800000                                           // 00000007C5E0: BF800000
	.long 0xbf800000                                           // 00000007C5E4: BF800000
	.long 0xbf800000                                           // 00000007C5E8: BF800000
	.long 0xbf800000                                           // 00000007C5EC: BF800000
	.long 0xbf800000                                           // 00000007C5F0: BF800000
	.long 0xbf800000                                           // 00000007C5F4: BF800000
	.long 0xbf800000                                           // 00000007C5F8: BF800000
	.long 0xbf800000                                           // 00000007C5FC: BF800000

	.p2align	8
	.type	add_long_x_8_8,@function
	.size	add_long_x_8_8, add_long_x_8_8_symend-add_long_x_8_8
add_long_x_8_8:
	s_clause 0x1                                               // 00000007C600: BF850001
	s_load_b32 s10, s[0:1], null                               // 00000007C604: F4000280 F8000000
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007C60C: F4080100 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007C614: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C61C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C624: D6100002 02291500
	s_mov_b32 s8, s3                                           // 00000007C62C: BE880003
	s_mov_b32 s9, 0                                            // 00000007C630: BE890080
	v_lshl_or_b32 v1, s2, 3, v1                                // 00000007C634: D6560001 04050602
	s_lshl_b64 s[2:3], s[8:9], 3                               // 00000007C63C: 84828308
	s_mov_b32 s33, 0                                           // 00000007C640: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C644: BF89FC07
	s_ashr_i32 s8, s10, 31                                     // 00000007C648: 86089F0A
	v_add_co_u32 v0, s4, s4, v1                                // 00000007C64C: D7000400 00020204
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000007C654: BF8700C1
	v_add_co_ci_u32_e64 v1, null, s5, 0, s4                    // 00000007C658: D5207C01 00110005
	s_add_u32 s4, s6, s10                                      // 00000007C660: 80040A06
	s_addc_u32 s5, s7, s8                                      // 00000007C664: 82050807
	s_add_u32 s2, s4, s2                                       // 00000007C668: 80020204
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007C66C: D73C0000 00020083
	s_addc_u32 s3, s5, s3                                      // 00000007C674: 82030305
	v_add_co_u32 v2, s2, s2, v2                                // 00000007C678: D7000202 00020402
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C680: BF870191
	v_add_co_ci_u32_e64 v3, null, s3, 0, s2                    // 00000007C684: D5207C03 00090003
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C68C: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007C694: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C698: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C69C: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C6A4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C6A8: BFB60003
	s_endpgm                                                   // 00000007C6AC: BFB00000
add_long_x_8_8_symend:
	.long 0xbf800000                                           // 00000007C6B0: BF800000
	.long 0xbf800000                                           // 00000007C6B4: BF800000
	.long 0xbf800000                                           // 00000007C6B8: BF800000
	.long 0xbf800000                                           // 00000007C6BC: BF800000
	.long 0xbf800000                                           // 00000007C6C0: BF800000
	.long 0xbf800000                                           // 00000007C6C4: BF800000
	.long 0xbf800000                                           // 00000007C6C8: BF800000
	.long 0xbf800000                                           // 00000007C6CC: BF800000
	.long 0xbf800000                                           // 00000007C6D0: BF800000
	.long 0xbf800000                                           // 00000007C6D4: BF800000
	.long 0xbf800000                                           // 00000007C6D8: BF800000
	.long 0xbf800000                                           // 00000007C6DC: BF800000
	.long 0xbf800000                                           // 00000007C6E0: BF800000
	.long 0xbf800000                                           // 00000007C6E4: BF800000
	.long 0xbf800000                                           // 00000007C6E8: BF800000
	.long 0xbf800000                                           // 00000007C6EC: BF800000
	.long 0xbf800000                                           // 00000007C6F0: BF800000
	.long 0xbf800000                                           // 00000007C6F4: BF800000
	.long 0xbf800000                                           // 00000007C6F8: BF800000
	.long 0xbf800000                                           // 00000007C6FC: BF800000

	.p2align	8
	.type	add_long_get_global_offset_8_8,@function
	.size	add_long_get_global_offset_8_8, add_long_get_global_offset_8_8_symend-add_long_get_global_offset_8_8
add_long_get_global_offset_8_8:
	s_clause 0x1                                               // 00000007C700: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007C704: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C70C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 3, v0                                // 00000007C714: D6560000 04010602
	s_mov_b32 s33, 0                                           // 00000007C71C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C720: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C724: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 00000007C728: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007C730: D5207C01 00090005
	s_add_u32 s2, s4, s6                                       // 00000007C738: 80020604
	s_addc_u32 s3, s5, s7                                      // 00000007C73C: 82030705
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007C740: BF870119
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 00000007C744: CA100002 02020003
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007C74C: D73C0000 00020083
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007C754: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C758: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C760: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C764: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C76C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C770: BFB60003
	s_endpgm                                                   // 00000007C774: BFB00000
add_long_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 00000007C778: BF800000
	.long 0xbf800000                                           // 00000007C77C: BF800000
	.long 0xbf800000                                           // 00000007C780: BF800000
	.long 0xbf800000                                           // 00000007C784: BF800000
	.long 0xbf800000                                           // 00000007C788: BF800000
	.long 0xbf800000                                           // 00000007C78C: BF800000
	.long 0xbf800000                                           // 00000007C790: BF800000
	.long 0xbf800000                                           // 00000007C794: BF800000
	.long 0xbf800000                                           // 00000007C798: BF800000
	.long 0xbf800000                                           // 00000007C79C: BF800000
	.long 0xbf800000                                           // 00000007C7A0: BF800000
	.long 0xbf800000                                           // 00000007C7A4: BF800000
	.long 0xbf800000                                           // 00000007C7A8: BF800000
	.long 0xbf800000                                           // 00000007C7AC: BF800000
	.long 0xbf800000                                           // 00000007C7B0: BF800000
	.long 0xbf800000                                           // 00000007C7B4: BF800000
	.long 0xbf800000                                           // 00000007C7B8: BF800000
	.long 0xbf800000                                           // 00000007C7BC: BF800000
	.long 0xbf800000                                           // 00000007C7C0: BF800000
	.long 0xbf800000                                           // 00000007C7C4: BF800000
	.long 0xbf800000                                           // 00000007C7C8: BF800000
	.long 0xbf800000                                           // 00000007C7CC: BF800000
	.long 0xbf800000                                           // 00000007C7D0: BF800000
	.long 0xbf800000                                           // 00000007C7D4: BF800000
	.long 0xbf800000                                           // 00000007C7D8: BF800000
	.long 0xbf800000                                           // 00000007C7DC: BF800000
	.long 0xbf800000                                           // 00000007C7E0: BF800000
	.long 0xbf800000                                           // 00000007C7E4: BF800000
	.long 0xbf800000                                           // 00000007C7E8: BF800000
	.long 0xbf800000                                           // 00000007C7EC: BF800000
	.long 0xbf800000                                           // 00000007C7F0: BF800000
	.long 0xbf800000                                           // 00000007C7F4: BF800000
	.long 0xbf800000                                           // 00000007C7F8: BF800000
	.long 0xbf800000                                           // 00000007C7FC: BF800000

	.p2align	8
	.type	add_long_get_local_id_8_8,@function
	.size	add_long_get_local_id_8_8, add_long_get_local_id_8_8_symend-add_long_get_local_id_8_8
add_long_get_local_id_8_8:
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007C800: F4040100 F8000038
	v_dual_mov_b32 v3, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007C808: CA240080 030400FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C814: F4040000 F8000008
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007C81C: D6100005 02291500
	s_mov_b32 s33, 0                                           // 00000007C824: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007C828: BF8700A2
	v_lshl_or_b32 v1, s2, 3, v4                                // 00000007C82C: D6560001 04110602
	s_waitcnt lgkmcnt(0)                                       // 00000007C834: BF89FC07
	v_add_co_u32 v1, s2, s4, v1                                // 00000007C838: D7000201 00020204
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C840: BF870091
	v_add_co_ci_u32_e64 v2, null, s5, 0, s2                    // 00000007C844: D5207C02 00090005
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 00000007C84C: D73C0000 00020283
	v_add_nc_u32_e32 v2, v5, v4                                // 00000007C854: 4A040905
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C858: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C85C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C864: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C868: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C870: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C874: BFB60003
	s_endpgm                                                   // 00000007C878: BFB00000
add_long_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 00000007C87C: BF800000
	.long 0xbf800000                                           // 00000007C880: BF800000
	.long 0xbf800000                                           // 00000007C884: BF800000
	.long 0xbf800000                                           // 00000007C888: BF800000
	.long 0xbf800000                                           // 00000007C88C: BF800000
	.long 0xbf800000                                           // 00000007C890: BF800000
	.long 0xbf800000                                           // 00000007C894: BF800000
	.long 0xbf800000                                           // 00000007C898: BF800000
	.long 0xbf800000                                           // 00000007C89C: BF800000
	.long 0xbf800000                                           // 00000007C8A0: BF800000
	.long 0xbf800000                                           // 00000007C8A4: BF800000
	.long 0xbf800000                                           // 00000007C8A8: BF800000
	.long 0xbf800000                                           // 00000007C8AC: BF800000
	.long 0xbf800000                                           // 00000007C8B0: BF800000
	.long 0xbf800000                                           // 00000007C8B4: BF800000
	.long 0xbf800000                                           // 00000007C8B8: BF800000
	.long 0xbf800000                                           // 00000007C8BC: BF800000
	.long 0xbf800000                                           // 00000007C8C0: BF800000
	.long 0xbf800000                                           // 00000007C8C4: BF800000
	.long 0xbf800000                                           // 00000007C8C8: BF800000
	.long 0xbf800000                                           // 00000007C8CC: BF800000
	.long 0xbf800000                                           // 00000007C8D0: BF800000
	.long 0xbf800000                                           // 00000007C8D4: BF800000
	.long 0xbf800000                                           // 00000007C8D8: BF800000
	.long 0xbf800000                                           // 00000007C8DC: BF800000
	.long 0xbf800000                                           // 00000007C8E0: BF800000
	.long 0xbf800000                                           // 00000007C8E4: BF800000
	.long 0xbf800000                                           // 00000007C8E8: BF800000
	.long 0xbf800000                                           // 00000007C8EC: BF800000
	.long 0xbf800000                                           // 00000007C8F0: BF800000
	.long 0xbf800000                                           // 00000007C8F4: BF800000
	.long 0xbf800000                                           // 00000007C8F8: BF800000
	.long 0xbf800000                                           // 00000007C8FC: BF800000

	.p2align	8
	.type	add_long_get_group_id_8_8,@function
	.size	add_long_get_group_id_8_8, add_long_get_group_id_8_8_symend-add_long_get_group_id_8_8
add_long_get_group_id_8_8:
	s_clause 0x1                                               // 00000007C900: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007C904: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C90C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 3, v0                                // 00000007C914: D6560000 04010602
	s_add_u32 s2, s3, s2                                       // 00000007C91C: 80020203
	s_addc_u32 s3, 0, 0                                        // 00000007C920: 82038080
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000007C924: BF8700C9
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 00000007C928: CA100002 02020003
	s_mov_b32 s33, 0                                           // 00000007C930: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C934: BF89FC07
	v_add_co_u32 v0, s4, s4, v0                                // 00000007C938: D7000400 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s4                    // 00000007C940: D5207C01 00110005
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007C948: BF870091
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007C94C: D73C0000 00020083
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007C954: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007C95C: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007C960: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007C964: DC6E0000 007C0200
	s_nop 0                                                    // 00000007C96C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C970: BFB60003
	s_endpgm                                                   // 00000007C974: BFB00000
add_long_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 00000007C978: BF800000
	.long 0xbf800000                                           // 00000007C97C: BF800000
	.long 0xbf800000                                           // 00000007C980: BF800000
	.long 0xbf800000                                           // 00000007C984: BF800000
	.long 0xbf800000                                           // 00000007C988: BF800000
	.long 0xbf800000                                           // 00000007C98C: BF800000
	.long 0xbf800000                                           // 00000007C990: BF800000
	.long 0xbf800000                                           // 00000007C994: BF800000
	.long 0xbf800000                                           // 00000007C998: BF800000
	.long 0xbf800000                                           // 00000007C99C: BF800000
	.long 0xbf800000                                           // 00000007C9A0: BF800000
	.long 0xbf800000                                           // 00000007C9A4: BF800000
	.long 0xbf800000                                           // 00000007C9A8: BF800000
	.long 0xbf800000                                           // 00000007C9AC: BF800000
	.long 0xbf800000                                           // 00000007C9B0: BF800000
	.long 0xbf800000                                           // 00000007C9B4: BF800000
	.long 0xbf800000                                           // 00000007C9B8: BF800000
	.long 0xbf800000                                           // 00000007C9BC: BF800000
	.long 0xbf800000                                           // 00000007C9C0: BF800000
	.long 0xbf800000                                           // 00000007C9C4: BF800000
	.long 0xbf800000                                           // 00000007C9C8: BF800000
	.long 0xbf800000                                           // 00000007C9CC: BF800000
	.long 0xbf800000                                           // 00000007C9D0: BF800000
	.long 0xbf800000                                           // 00000007C9D4: BF800000
	.long 0xbf800000                                           // 00000007C9D8: BF800000
	.long 0xbf800000                                           // 00000007C9DC: BF800000
	.long 0xbf800000                                           // 00000007C9E0: BF800000
	.long 0xbf800000                                           // 00000007C9E4: BF800000
	.long 0xbf800000                                           // 00000007C9E8: BF800000
	.long 0xbf800000                                           // 00000007C9EC: BF800000
	.long 0xbf800000                                           // 00000007C9F0: BF800000
	.long 0xbf800000                                           // 00000007C9F4: BF800000
	.long 0xbf800000                                           // 00000007C9F8: BF800000
	.long 0xbf800000                                           // 00000007C9FC: BF800000

	.p2align	8
	.type	add_long_get_local_size_8_8,@function
	.size	add_long_get_local_size_8_8, add_long_get_local_size_8_8_symend-add_long_get_local_size_8_8
add_long_get_local_size_8_8:
	s_clause 0x1                                               // 00000007CA00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000007CA04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CA0C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 3, v0                                // 00000007CA14: D6560000 04010602
	v_dual_mov_b32 v2, 16 :: v_dual_mov_b32 v3, 0              // 00000007CA1C: CA100090 02020080
	s_mov_b32 s33, 0                                           // 00000007CA24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007CA28: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007CA2C: BF870092
	v_add_co_u32 v0, s2, s4, v0                                // 00000007CA30: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007CA38: D5207C01 00090005
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007CA40: BF870091
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007CA44: D73C0000 00020083
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007CA4C: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007CA54: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007CA58: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007CA5C: DC6E0000 007C0200
	s_nop 0                                                    // 00000007CA64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CA68: BFB60003
	s_endpgm                                                   // 00000007CA6C: BFB00000
add_long_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 00000007CA70: BF800000
	.long 0xbf800000                                           // 00000007CA74: BF800000
	.long 0xbf800000                                           // 00000007CA78: BF800000
	.long 0xbf800000                                           // 00000007CA7C: BF800000
	.long 0xbf800000                                           // 00000007CA80: BF800000
	.long 0xbf800000                                           // 00000007CA84: BF800000
	.long 0xbf800000                                           // 00000007CA88: BF800000
	.long 0xbf800000                                           // 00000007CA8C: BF800000
	.long 0xbf800000                                           // 00000007CA90: BF800000
	.long 0xbf800000                                           // 00000007CA94: BF800000
	.long 0xbf800000                                           // 00000007CA98: BF800000
	.long 0xbf800000                                           // 00000007CA9C: BF800000
	.long 0xbf800000                                           // 00000007CAA0: BF800000
	.long 0xbf800000                                           // 00000007CAA4: BF800000
	.long 0xbf800000                                           // 00000007CAA8: BF800000
	.long 0xbf800000                                           // 00000007CAAC: BF800000
	.long 0xbf800000                                           // 00000007CAB0: BF800000
	.long 0xbf800000                                           // 00000007CAB4: BF800000
	.long 0xbf800000                                           // 00000007CAB8: BF800000
	.long 0xbf800000                                           // 00000007CABC: BF800000
	.long 0xbf800000                                           // 00000007CAC0: BF800000
	.long 0xbf800000                                           // 00000007CAC4: BF800000
	.long 0xbf800000                                           // 00000007CAC8: BF800000
	.long 0xbf800000                                           // 00000007CACC: BF800000
	.long 0xbf800000                                           // 00000007CAD0: BF800000
	.long 0xbf800000                                           // 00000007CAD4: BF800000
	.long 0xbf800000                                           // 00000007CAD8: BF800000
	.long 0xbf800000                                           // 00000007CADC: BF800000
	.long 0xbf800000                                           // 00000007CAE0: BF800000
	.long 0xbf800000                                           // 00000007CAE4: BF800000
	.long 0xbf800000                                           // 00000007CAE8: BF800000
	.long 0xbf800000                                           // 00000007CAEC: BF800000
	.long 0xbf800000                                           // 00000007CAF0: BF800000
	.long 0xbf800000                                           // 00000007CAF4: BF800000
	.long 0xbf800000                                           // 00000007CAF8: BF800000
	.long 0xbf800000                                           // 00000007CAFC: BF800000

	.p2align	8
	.type	add_long_get_global_id_8_8,@function
	.size	add_long_get_global_id_8_8, add_long_get_global_id_8_8_symend-add_long_get_global_id_8_8
add_long_get_global_id_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007CB00: F4080100 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007CB08: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CB10: F4040000 F8000008
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007CB18: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000007CB20: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007CB24: BF870112
	v_lshl_or_b32 v1, s2, 3, v1                                // 00000007CB28: D6560001 04050602
	v_lshl_or_b32 v2, s3, 3, v0                                // 00000007CB30: D6560002 04010603
	s_waitcnt lgkmcnt(0)                                       // 00000007CB38: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007CB3C: BF870092
	v_add_co_u32 v0, s2, s4, v1                                // 00000007CB40: D7000200 00020204
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 00000007CB48: D5207C01 00090005
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007CB50: BF870093
	v_add_co_u32 v4, s2, s6, v2                                // 00000007CB54: D7000204 00020406
	v_add_co_ci_u32_e64 v5, null, s7, 0, s2                    // 00000007CB5C: D5207C05 00090007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CB64: BF870193
	v_lshlrev_b64 v[2:3], 3, v[0:1]                            // 00000007CB68: D73C0002 00020083
	v_add_co_u32 v0, vcc_lo, v4, v0                            // 00000007CB70: D7006A00 00020104
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CB78: BF870193
	v_add_co_ci_u32_e32 v1, vcc_lo, v5, v1, vcc_lo             // 00000007CB7C: 40020305
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007CB80: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007CB88: BF870004
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007CB8C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007CB90: DC6E0000 007C0002
	s_nop 0                                                    // 00000007CB98: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CB9C: BFB60003
	s_endpgm                                                   // 00000007CBA0: BFB00000
add_long_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 00000007CBA4: BF800000
	.long 0xbf800000                                           // 00000007CBA8: BF800000
	.long 0xbf800000                                           // 00000007CBAC: BF800000
	.long 0xbf800000                                           // 00000007CBB0: BF800000
	.long 0xbf800000                                           // 00000007CBB4: BF800000
	.long 0xbf800000                                           // 00000007CBB8: BF800000
	.long 0xbf800000                                           // 00000007CBBC: BF800000
	.long 0xbf800000                                           // 00000007CBC0: BF800000
	.long 0xbf800000                                           // 00000007CBC4: BF800000
	.long 0xbf800000                                           // 00000007CBC8: BF800000
	.long 0xbf800000                                           // 00000007CBCC: BF800000
	.long 0xbf800000                                           // 00000007CBD0: BF800000
	.long 0xbf800000                                           // 00000007CBD4: BF800000
	.long 0xbf800000                                           // 00000007CBD8: BF800000
	.long 0xbf800000                                           // 00000007CBDC: BF800000
	.long 0xbf800000                                           // 00000007CBE0: BF800000
	.long 0xbf800000                                           // 00000007CBE4: BF800000
	.long 0xbf800000                                           // 00000007CBE8: BF800000
	.long 0xbf800000                                           // 00000007CBEC: BF800000
	.long 0xbf800000                                           // 00000007CBF0: BF800000
	.long 0xbf800000                                           // 00000007CBF4: BF800000
	.long 0xbf800000                                           // 00000007CBF8: BF800000
	.long 0xbf800000                                           // 00000007CBFC: BF800000

	.p2align	8
	.type	add_long_get_global_size_8_8,@function
	.size	add_long_get_global_size_8_8, add_long_get_global_size_8_8_symend-add_long_get_global_size_8_8
add_long_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 00000007CC00: 7E020280
	v_lshl_or_b32 v0, s2, 3, v0                                // 00000007CC04: D6560000 04010602
	s_mov_b32 s33, 0                                           // 00000007CC0C: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 00000007CC10: DC520022 01000001
	s_clause 0x1                                               // 00000007CC18: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007CC1C: F4080100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 00000007CC24: F4040000 F8000038
	s_waitcnt lgkmcnt(0)                                       // 00000007CC2C: BF89FC07
	s_lshl_b32 s2, s7, 3                                       // 00000007CC30: 84028307
	v_add_co_u32 v0, s0, s0, v0                                // 00000007CC34: D7000000 00020000
	s_lshl_b32 s3, s6, 3                                       // 00000007CC3C: 84038306
	s_waitcnt vmcnt(0)                                         // 00000007CC40: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 00000007CC44: 32040290
	v_and_b32_e32 v3, 0xffff, v1                               // 00000007CC48: 360602FF 0000FFFF
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 00000007CC50: D5207C01 00010001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CC58: BF870193
	v_add_nc_u32_e32 v2, s2, v2                                // 00000007CC5C: 4A040402
	v_add_nc_u32_e32 v3, s3, v3                                // 00000007CC60: 4A060603
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007CC64: BF870113
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007CC68: D73C0000 00020083
	v_add_co_u32 v2, s0, v3, v2                                // 00000007CC70: D7000002 00020503
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007CC78: BF870222
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 00000007CC7C: D7006A00 00020004
	v_add_co_ci_u32_e64 v3, null, 0, 0, s0                     // 00000007CC84: D5207C03 00010080
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 00000007CC8C: 40020205
	global_store_b64 v[0:1], v[2:3], off                       // 00000007CC90: DC6E0000 007C0200
	s_nop 0                                                    // 00000007CC98: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CC9C: BFB60003
	s_endpgm                                                   // 00000007CCA0: BFB00000
add_long_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 00000007CCA4: BF800000
	.long 0xbf800000                                           // 00000007CCA8: BF800000
	.long 0xbf800000                                           // 00000007CCAC: BF800000
	.long 0xbf800000                                           // 00000007CCB0: BF800000
	.long 0xbf800000                                           // 00000007CCB4: BF800000
	.long 0xbf800000                                           // 00000007CCB8: BF800000
	.long 0xbf800000                                           // 00000007CCBC: BF800000
	.long 0xbf800000                                           // 00000007CCC0: BF800000
	.long 0xbf800000                                           // 00000007CCC4: BF800000
	.long 0xbf800000                                           // 00000007CCC8: BF800000
	.long 0xbf800000                                           // 00000007CCCC: BF800000
	.long 0xbf800000                                           // 00000007CCD0: BF800000
	.long 0xbf800000                                           // 00000007CCD4: BF800000
	.long 0xbf800000                                           // 00000007CCD8: BF800000
	.long 0xbf800000                                           // 00000007CCDC: BF800000
	.long 0xbf800000                                           // 00000007CCE0: BF800000
	.long 0xbf800000                                           // 00000007CCE4: BF800000
	.long 0xbf800000                                           // 00000007CCE8: BF800000
	.long 0xbf800000                                           // 00000007CCEC: BF800000
	.long 0xbf800000                                           // 00000007CCF0: BF800000
	.long 0xbf800000                                           // 00000007CCF4: BF800000
	.long 0xbf800000                                           // 00000007CCF8: BF800000
	.long 0xbf800000                                           // 00000007CCFC: BF800000

	.p2align	8
	.type	add_long_get_num_groups_8_8,@function
	.size	add_long_get_num_groups_8_8, add_long_get_num_groups_8_8_symend-add_long_get_num_groups_8_8
add_long_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 00000007CD00: 7E020280
	v_lshl_or_b32 v0, s2, 3, v0                                // 00000007CD04: D6560000 04010602
	s_mov_b32 s33, 0                                           // 00000007CD0C: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 00000007CD10: DC520022 01000001
	s_clause 0x1                                               // 00000007CD18: BF850001
	s_load_b64 s[8:9], s[0:1], 0x38                            // 00000007CD1C: F4040200 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007CD24: F4080100 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007CD2C: BF89FC07
	v_add_co_u32 v0, s1, s8, v0                                // 00000007CD30: D7000100 00020008
	s_waitcnt vmcnt(0)                                         // 00000007CD38: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 00000007CD3C: 32040290
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007CD40: 7C7A0280
	v_add_co_ci_u32_e64 v1, null, s9, 0, s1                    // 00000007CD44: D5207C01 00050009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007CD4C: BF870113
	v_cmp_ne_u16_e64 s0, 0, v2.l                               // 00000007CD50: D43D0000 00020480
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007CD58: D73C0000 00020083
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007CD60: BF8700B2
	s_cmp_lg_u32 s0, 0                                         // 00000007CD64: BF078000
	s_addc_u32 s0, s7, 0                                       // 00000007CD68: 82008007
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007CD6C: BF07806A
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 00000007CD70: D7006A00 00020004
	s_addc_u32 s1, s6, 0                                       // 00000007CD78: 82018006
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 00000007CD7C: 40020205
	s_add_u32 s0, s1, s0                                       // 00000007CD80: 80000001
	s_addc_u32 s1, 0, 0                                        // 00000007CD84: 82018080
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007CD88: BF870009
	v_dual_mov_b32 v3, s1 :: v_dual_mov_b32 v2, s0             // 00000007CD8C: CA100001 03020000
	global_store_b64 v[0:1], v[2:3], off                       // 00000007CD94: DC6E0000 007C0200
	s_nop 0                                                    // 00000007CD9C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CDA0: BFB60003
	s_endpgm                                                   // 00000007CDA4: BFB00000
add_long_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 00000007CDA8: BF800000
	.long 0xbf800000                                           // 00000007CDAC: BF800000
	.long 0xbf800000                                           // 00000007CDB0: BF800000
	.long 0xbf800000                                           // 00000007CDB4: BF800000
	.long 0xbf800000                                           // 00000007CDB8: BF800000
	.long 0xbf800000                                           // 00000007CDBC: BF800000
	.long 0xbf800000                                           // 00000007CDC0: BF800000
	.long 0xbf800000                                           // 00000007CDC4: BF800000
	.long 0xbf800000                                           // 00000007CDC8: BF800000
	.long 0xbf800000                                           // 00000007CDCC: BF800000
	.long 0xbf800000                                           // 00000007CDD0: BF800000
	.long 0xbf800000                                           // 00000007CDD4: BF800000
	.long 0xbf800000                                           // 00000007CDD8: BF800000
	.long 0xbf800000                                           // 00000007CDDC: BF800000
	.long 0xbf800000                                           // 00000007CDE0: BF800000
	.long 0xbf800000                                           // 00000007CDE4: BF800000
	.long 0xbf800000                                           // 00000007CDE8: BF800000
	.long 0xbf800000                                           // 00000007CDEC: BF800000
	.long 0xbf800000                                           // 00000007CDF0: BF800000
	.long 0xbf800000                                           // 00000007CDF4: BF800000
	.long 0xbf800000                                           // 00000007CDF8: BF800000
	.long 0xbf800000                                           // 00000007CDFC: BF800000

	.p2align	8
	.type	add_long_get_work_dim_8_8,@function
	.size	add_long_get_work_dim_8_8, add_long_get_work_dim_8_8_symend-add_long_get_work_dim_8_8
add_long_get_work_dim_8_8:
	s_clause 0x1                                               // 00000007CE00: BF850001
	s_load_b32 s10, s[0:1], 0x50                               // 00000007CE04: F4000280 F8000050
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007CE0C: F4080100 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007CE14: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CE1C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007CE24: D6100002 02291500
	s_mov_b32 s8, s3                                           // 00000007CE2C: BE880003
	s_mov_b32 s9, 0                                            // 00000007CE30: BE890080
	v_lshl_or_b32 v1, s2, 3, v1                                // 00000007CE34: D6560001 04050602
	s_lshl_b64 s[2:3], s[8:9], 3                               // 00000007CE3C: 84828308
	s_mov_b32 s33, 0                                           // 00000007CE40: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007CE44: BF89FC07
	s_and_b32 s8, s10, 0xffff                                  // 00000007CE48: 8B08FF0A 0000FFFF
	v_add_co_u32 v0, s4, s4, v1                                // 00000007CE50: D7000400 00020204
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000007CE58: BF8700C1
	v_add_co_ci_u32_e64 v1, null, s5, 0, s4                    // 00000007CE5C: D5207C01 00110005
	s_add_u32 s4, s8, s6                                       // 00000007CE64: 80040608
	s_addc_u32 s5, 0, s7                                       // 00000007CE68: 82050780
	s_add_u32 s2, s4, s2                                       // 00000007CE6C: 80020204
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007CE70: D73C0000 00020083
	s_addc_u32 s3, s5, s3                                      // 00000007CE78: 82030305
	v_add_co_u32 v2, s2, s2, v2                                // 00000007CE7C: D7000202 00020402
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CE84: BF870191
	v_add_co_ci_u32_e64 v3, null, s3, 0, s2                    // 00000007CE88: D5207C03 00090003
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007CE90: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007CE98: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007CE9C: 40020201
	global_store_b64 v[0:1], v[2:3], off                       // 00000007CEA0: DC6E0000 007C0200
	s_nop 0                                                    // 00000007CEA8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CEAC: BFB60003
	s_endpgm                                                   // 00000007CEB0: BFB00000
add_long_get_work_dim_8_8_symend:
	.long 0xbf800000                                           // 00000007CEB4: BF800000
	.long 0xbf800000                                           // 00000007CEB8: BF800000
	.long 0xbf800000                                           // 00000007CEBC: BF800000
	.long 0xbf800000                                           // 00000007CEC0: BF800000
	.long 0xbf800000                                           // 00000007CEC4: BF800000
	.long 0xbf800000                                           // 00000007CEC8: BF800000
	.long 0xbf800000                                           // 00000007CECC: BF800000
	.long 0xbf800000                                           // 00000007CED0: BF800000
	.long 0xbf800000                                           // 00000007CED4: BF800000
	.long 0xbf800000                                           // 00000007CED8: BF800000
	.long 0xbf800000                                           // 00000007CEDC: BF800000
	.long 0xbf800000                                           // 00000007CEE0: BF800000
	.long 0xbf800000                                           // 00000007CEE4: BF800000
	.long 0xbf800000                                           // 00000007CEE8: BF800000
	.long 0xbf800000                                           // 00000007CEEC: BF800000
	.long 0xbf800000                                           // 00000007CEF0: BF800000
	.long 0xbf800000                                           // 00000007CEF4: BF800000
	.long 0xbf800000                                           // 00000007CEF8: BF800000
	.long 0xbf800000                                           // 00000007CEFC: BF800000

	.p2align	8
	.type	add_char_x_x,@function
	.size	add_char_x_x, add_char_x_x_symend-add_char_x_x
add_char_x_x:
	s_clause 0x2                                               // 00000007CF00: BF850002
	s_load_b32 s3, s[0:1], 0x8                                 // 00000007CF04: F40000C0 F8000008
	s_load_b64 s[4:5], s[0:1], null                            // 00000007CF0C: F4040100 F8000000
	s_load_b64 s[0:1], s[0:1], 0x38                            // 00000007CF14: F4040000 F8000038
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007CF1C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007CF24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007CF28: BF89FC07
	s_lshl_b32 s3, s3, 1                                       // 00000007CF2C: 84038103
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007CF30: BF870009
	v_mov_b32_e32 v1, s3                                       // 00000007CF34: 7E020203
	s_add_u32 s0, s4, s0                                       // 00000007CF38: 80000004
	s_addc_u32 s1, s5, s1                                      // 00000007CF3C: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 00000007CF40: DC620000 00000100
	s_nop 0                                                    // 00000007CF48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CF4C: BFB60003
	s_endpgm                                                   // 00000007CF50: BFB00000
add_char_x_x_symend:
	.long 0xbf800000                                           // 00000007CF54: BF800000
	.long 0xbf800000                                           // 00000007CF58: BF800000
	.long 0xbf800000                                           // 00000007CF5C: BF800000
	.long 0xbf800000                                           // 00000007CF60: BF800000
	.long 0xbf800000                                           // 00000007CF64: BF800000
	.long 0xbf800000                                           // 00000007CF68: BF800000
	.long 0xbf800000                                           // 00000007CF6C: BF800000
	.long 0xbf800000                                           // 00000007CF70: BF800000
	.long 0xbf800000                                           // 00000007CF74: BF800000
	.long 0xbf800000                                           // 00000007CF78: BF800000
	.long 0xbf800000                                           // 00000007CF7C: BF800000
	.long 0xbf800000                                           // 00000007CF80: BF800000
	.long 0xbf800000                                           // 00000007CF84: BF800000
	.long 0xbf800000                                           // 00000007CF88: BF800000
	.long 0xbf800000                                           // 00000007CF8C: BF800000
	.long 0xbf800000                                           // 00000007CF90: BF800000
	.long 0xbf800000                                           // 00000007CF94: BF800000
	.long 0xbf800000                                           // 00000007CF98: BF800000
	.long 0xbf800000                                           // 00000007CF9C: BF800000
	.long 0xbf800000                                           // 00000007CFA0: BF800000
	.long 0xbf800000                                           // 00000007CFA4: BF800000
	.long 0xbf800000                                           // 00000007CFA8: BF800000
	.long 0xbf800000                                           // 00000007CFAC: BF800000
	.long 0xbf800000                                           // 00000007CFB0: BF800000
	.long 0xbf800000                                           // 00000007CFB4: BF800000
	.long 0xbf800000                                           // 00000007CFB8: BF800000
	.long 0xbf800000                                           // 00000007CFBC: BF800000
	.long 0xbf800000                                           // 00000007CFC0: BF800000
	.long 0xbf800000                                           // 00000007CFC4: BF800000
	.long 0xbf800000                                           // 00000007CFC8: BF800000
	.long 0xbf800000                                           // 00000007CFCC: BF800000
	.long 0xbf800000                                           // 00000007CFD0: BF800000
	.long 0xbf800000                                           // 00000007CFD4: BF800000
	.long 0xbf800000                                           // 00000007CFD8: BF800000
	.long 0xbf800000                                           // 00000007CFDC: BF800000
	.long 0xbf800000                                           // 00000007CFE0: BF800000
	.long 0xbf800000                                           // 00000007CFE4: BF800000
	.long 0xbf800000                                           // 00000007CFE8: BF800000
	.long 0xbf800000                                           // 00000007CFEC: BF800000
	.long 0xbf800000                                           // 00000007CFF0: BF800000
	.long 0xbf800000                                           // 00000007CFF4: BF800000
	.long 0xbf800000                                           // 00000007CFF8: BF800000
	.long 0xbf800000                                           // 00000007CFFC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_x,@function
	.size	add_char_get_global_offset_x, add_char_get_global_offset_x_symend-add_char_get_global_offset_x
add_char_get_global_offset_x:
	s_clause 0x3                                               // 00000007D000: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D004: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007D00C: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D014: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007D01C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007D024: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D02C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D03C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D040: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007D044: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007D04C: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007D054: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007D058: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007D060: BF89FC07
	s_add_i32 s12, s8, s5                                      // 00000007D064: 810C0508
	s_add_u32 s2, s6, s8                                       // 00000007D068: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007D06C: 82030907
	v_mov_b32_e32 v3, s12                                      // 00000007D070: 7E06020C
	s_add_i32 s12, s10, s5                                     // 00000007D074: 810C050A
	s_add_u32 s8, s6, s10                                      // 00000007D078: 80080A06
	v_mov_b32_e32 v4, s12                                      // 00000007D07C: 7E08020C
	s_addc_u32 s9, s7, s11                                     // 00000007D080: 82090B07
	s_add_i32 s5, s0, s5                                       // 00000007D084: 81050500
	s_add_u32 s0, s6, s0                                       // 00000007D088: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007D08C: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007D090: 82010107
	s_clause 0x2                                               // 00000007D094: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007D098: DC620000 00020301
	global_store_b8 v2, v4, s[8:9]                             // 00000007D0A0: DC620000 00080402
	global_store_b8 v0, v5, s[0:1]                             // 00000007D0A8: DC620000 00000500
	s_nop 0                                                    // 00000007D0B0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D0B4: BFB60003
	s_endpgm                                                   // 00000007D0B8: BFB00000
add_char_get_global_offset_x_symend:
	.long 0xbf800000                                           // 00000007D0BC: BF800000
	.long 0xbf800000                                           // 00000007D0C0: BF800000
	.long 0xbf800000                                           // 00000007D0C4: BF800000
	.long 0xbf800000                                           // 00000007D0C8: BF800000
	.long 0xbf800000                                           // 00000007D0CC: BF800000
	.long 0xbf800000                                           // 00000007D0D0: BF800000
	.long 0xbf800000                                           // 00000007D0D4: BF800000
	.long 0xbf800000                                           // 00000007D0D8: BF800000
	.long 0xbf800000                                           // 00000007D0DC: BF800000
	.long 0xbf800000                                           // 00000007D0E0: BF800000
	.long 0xbf800000                                           // 00000007D0E4: BF800000
	.long 0xbf800000                                           // 00000007D0E8: BF800000
	.long 0xbf800000                                           // 00000007D0EC: BF800000
	.long 0xbf800000                                           // 00000007D0F0: BF800000
	.long 0xbf800000                                           // 00000007D0F4: BF800000
	.long 0xbf800000                                           // 00000007D0F8: BF800000
	.long 0xbf800000                                           // 00000007D0FC: BF800000

	.p2align	8
	.type	add_char_get_local_id_x,@function
	.size	add_char_get_local_id_x, add_char_get_local_id_x_symend-add_char_get_local_id_x
add_char_get_local_id_x:
	s_clause 0x3                                               // 00000007D100: BF850003
	s_load_b32 s5, s[0:1], null                                // 00000007D104: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D10C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D114: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007D11C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007D124: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D12C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D13C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D140: BF870193
	v_lshl_or_b32 v3, s2, 3, v1                                // 00000007D144: D6560003 04050602
	v_lshl_or_b32 v4, s3, 2, v2                                // 00000007D14C: D6560004 04090403
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007D154: BF870003
	v_lshl_or_b32 v5, s4, 1, v0                                // 00000007D158: D6560005 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007D160: BF89FC07
	v_add_nc_u32_e32 v1, s5, v1                                // 00000007D164: 4A020205
	v_add_nc_u32_e32 v2, s5, v2                                // 00000007D168: 4A040405
	s_add_u32 s2, s6, s8                                       // 00000007D16C: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007D170: 82030907
	v_add_nc_u32_e32 v0, s5, v0                                // 00000007D174: 4A000005
	s_add_u32 s4, s6, s10                                      // 00000007D178: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007D17C: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007D180: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007D184: 82010107
	s_clause 0x2                                               // 00000007D188: BF850002
	global_store_b8 v3, v1, s[2:3]                             // 00000007D18C: DC620000 00020103
	global_store_b8 v4, v2, s[4:5]                             // 00000007D194: DC620000 00040204
	global_store_b8 v5, v0, s[0:1]                             // 00000007D19C: DC620000 00000005
	s_nop 0                                                    // 00000007D1A4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D1A8: BFB60003
	s_endpgm                                                   // 00000007D1AC: BFB00000
add_char_get_local_id_x_symend:
	.long 0xbf800000                                           // 00000007D1B0: BF800000
	.long 0xbf800000                                           // 00000007D1B4: BF800000
	.long 0xbf800000                                           // 00000007D1B8: BF800000
	.long 0xbf800000                                           // 00000007D1BC: BF800000
	.long 0xbf800000                                           // 00000007D1C0: BF800000
	.long 0xbf800000                                           // 00000007D1C4: BF800000
	.long 0xbf800000                                           // 00000007D1C8: BF800000
	.long 0xbf800000                                           // 00000007D1CC: BF800000
	.long 0xbf800000                                           // 00000007D1D0: BF800000
	.long 0xbf800000                                           // 00000007D1D4: BF800000
	.long 0xbf800000                                           // 00000007D1D8: BF800000
	.long 0xbf800000                                           // 00000007D1DC: BF800000
	.long 0xbf800000                                           // 00000007D1E0: BF800000
	.long 0xbf800000                                           // 00000007D1E4: BF800000
	.long 0xbf800000                                           // 00000007D1E8: BF800000
	.long 0xbf800000                                           // 00000007D1EC: BF800000
	.long 0xbf800000                                           // 00000007D1F0: BF800000
	.long 0xbf800000                                           // 00000007D1F4: BF800000
	.long 0xbf800000                                           // 00000007D1F8: BF800000
	.long 0xbf800000                                           // 00000007D1FC: BF800000

	.p2align	8
	.type	add_char_get_group_id_x,@function
	.size	add_char_get_group_id_x, add_char_get_group_id_x_symend-add_char_get_group_id_x
add_char_get_group_id_x:
	s_clause 0x3                                               // 00000007D200: BF850003
	s_load_b32 s5, s[0:1], null                                // 00000007D204: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D20C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D214: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007D21C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007D224: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D22C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D234: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D23C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D240: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007D244: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007D24C: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007D254: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007D258: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007D260: BF89FC07
	s_add_i32 s2, s5, s2                                       // 00000007D264: 81020205
	s_add_u32 s8, s6, s8                                       // 00000007D268: 80080806
	s_addc_u32 s9, s7, s9                                      // 00000007D26C: 82090907
	s_add_i32 s12, s5, s3                                      // 00000007D270: 810C0305
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D274: BF870009
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s12            // 00000007D278: CA100002 0304000C
	s_add_u32 s2, s6, s10                                      // 00000007D280: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000007D284: 82030B07
	s_add_i32 s5, s5, s4                                       // 00000007D288: 81050405
	s_add_u32 s0, s6, s0                                       // 00000007D28C: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007D290: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007D294: 82010107
	s_clause 0x2                                               // 00000007D298: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 00000007D29C: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 00000007D2A4: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 00000007D2AC: DC620000 00000500
	s_nop 0                                                    // 00000007D2B4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D2B8: BFB60003
	s_endpgm                                                   // 00000007D2BC: BFB00000
add_char_get_group_id_x_symend:
	.long 0xbf800000                                           // 00000007D2C0: BF800000
	.long 0xbf800000                                           // 00000007D2C4: BF800000
	.long 0xbf800000                                           // 00000007D2C8: BF800000
	.long 0xbf800000                                           // 00000007D2CC: BF800000
	.long 0xbf800000                                           // 00000007D2D0: BF800000
	.long 0xbf800000                                           // 00000007D2D4: BF800000
	.long 0xbf800000                                           // 00000007D2D8: BF800000
	.long 0xbf800000                                           // 00000007D2DC: BF800000
	.long 0xbf800000                                           // 00000007D2E0: BF800000
	.long 0xbf800000                                           // 00000007D2E4: BF800000
	.long 0xbf800000                                           // 00000007D2E8: BF800000
	.long 0xbf800000                                           // 00000007D2EC: BF800000
	.long 0xbf800000                                           // 00000007D2F0: BF800000
	.long 0xbf800000                                           // 00000007D2F4: BF800000
	.long 0xbf800000                                           // 00000007D2F8: BF800000
	.long 0xbf800000                                           // 00000007D2FC: BF800000

	.p2align	8
	.type	add_char_get_local_size_x,@function
	.size	add_char_get_local_size_x, add_char_get_local_size_x_symend-add_char_get_local_size_x
add_char_get_local_size_x:
	s_clause 0x3                                               // 00000007D300: BF850003
	s_load_b32 s5, s[0:1], null                                // 00000007D304: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D30C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D314: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007D31C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007D324: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D32C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D334: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D33C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D340: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007D344: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007D34C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007D354: BF870003
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007D358: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007D360: BF89FC07
	v_add_nc_u16 v3.l, s5, 2                                   // 00000007D364: D7030003 00010405
	s_add_u32 s2, s6, s8                                       // 00000007D36C: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007D370: 82030907
	s_add_u32 s8, s6, s10                                      // 00000007D374: 80080A06
	s_addc_u32 s9, s7, s11                                     // 00000007D378: 82090B07
	s_add_i32 s5, s5, 4                                        // 00000007D37C: 81058405
	s_add_u32 s0, s6, s0                                       // 00000007D380: 80000006
	v_mov_b32_e32 v4, s5                                       // 00000007D384: 7E080205
	s_addc_u32 s1, s7, s1                                      // 00000007D388: 82010107
	s_clause 0x2                                               // 00000007D38C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007D390: DC620000 00020301
	global_store_b8 v2, v3, s[8:9]                             // 00000007D398: DC620000 00080302
	global_store_b8 v0, v4, s[0:1]                             // 00000007D3A0: DC620000 00000400
	s_nop 0                                                    // 00000007D3A8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D3AC: BFB60003
	s_endpgm                                                   // 00000007D3B0: BFB00000
add_char_get_local_size_x_symend:
	.long 0xbf800000                                           // 00000007D3B4: BF800000
	.long 0xbf800000                                           // 00000007D3B8: BF800000
	.long 0xbf800000                                           // 00000007D3BC: BF800000
	.long 0xbf800000                                           // 00000007D3C0: BF800000
	.long 0xbf800000                                           // 00000007D3C4: BF800000
	.long 0xbf800000                                           // 00000007D3C8: BF800000
	.long 0xbf800000                                           // 00000007D3CC: BF800000
	.long 0xbf800000                                           // 00000007D3D0: BF800000
	.long 0xbf800000                                           // 00000007D3D4: BF800000
	.long 0xbf800000                                           // 00000007D3D8: BF800000
	.long 0xbf800000                                           // 00000007D3DC: BF800000
	.long 0xbf800000                                           // 00000007D3E0: BF800000
	.long 0xbf800000                                           // 00000007D3E4: BF800000
	.long 0xbf800000                                           // 00000007D3E8: BF800000
	.long 0xbf800000                                           // 00000007D3EC: BF800000
	.long 0xbf800000                                           // 00000007D3F0: BF800000
	.long 0xbf800000                                           // 00000007D3F4: BF800000
	.long 0xbf800000                                           // 00000007D3F8: BF800000
	.long 0xbf800000                                           // 00000007D3FC: BF800000

	.p2align	8
	.type	add_char_get_global_id_x,@function
	.size	add_char_get_global_id_x, add_char_get_global_id_x_symend-add_char_get_global_id_x
add_char_get_global_id_x:
	s_clause 0x3                                               // 00000007D400: BF850003
	s_load_b32 s5, s[0:1], null                                // 00000007D404: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D40C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007D414: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007D41C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007D424: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D42C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D434: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D43C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D440: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007D444: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007D44C: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007D454: BF870123
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007D458: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007D460: BF89FC07
	v_add_co_u32 v1, s2, s10, v1                               // 00000007D464: D7000201 0002020A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D46C: BF870191
	v_add_co_ci_u32_e64 v2, null, s11, 0, s2                   // 00000007D470: D5207C02 0009000B
	v_add_co_u32 v3, s2, s6, v0                                // 00000007D478: D7000203 00020006
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007D480: BF870003
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000007D484: D7006A00 00020200
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 00000007D48C: D5207C07 00090007
	v_add_nc_u32_e32 v6, s5, v1                                // 00000007D494: 4A0C0205
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000007D498: 40020401
	v_add3_u32 v5, s5, s8, v4                                  // 00000007D49C: D6550005 04101005
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007D4A4: D7006A02 00020600
	v_add_nc_u32_e32 v8, s5, v3                                // 00000007D4AC: 4A100605
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v7, vcc_lo             // 00000007D4B0: 40060E01
	s_clause 0x2                                               // 00000007D4B4: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007D4B8: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 00000007D4C0: DC620000 007C0600
	global_store_b8 v[2:3], v8, off                            // 00000007D4C8: DC620000 007C0802
	s_nop 0                                                    // 00000007D4D0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D4D4: BFB60003
	s_endpgm                                                   // 00000007D4D8: BFB00000
add_char_get_global_id_x_symend:
	.long 0xbf800000                                           // 00000007D4DC: BF800000
	.long 0xbf800000                                           // 00000007D4E0: BF800000
	.long 0xbf800000                                           // 00000007D4E4: BF800000
	.long 0xbf800000                                           // 00000007D4E8: BF800000
	.long 0xbf800000                                           // 00000007D4EC: BF800000
	.long 0xbf800000                                           // 00000007D4F0: BF800000
	.long 0xbf800000                                           // 00000007D4F4: BF800000
	.long 0xbf800000                                           // 00000007D4F8: BF800000
	.long 0xbf800000                                           // 00000007D4FC: BF800000

	.p2align	8
	.type	add_char_get_global_size_x,@function
	.size	add_char_get_global_size_x, add_char_get_global_size_x_symend-add_char_get_global_size_x
add_char_get_global_size_x:
	v_mov_b32_e32 v1, 0                                        // 00000007D500: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007D504: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007D50C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D514: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D51C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007D520: DC520022 02000001
	s_clause 0x5                                               // 00000007D528: BF850005
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000007D52C: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D534: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], null                          // 00000007D53C: F4040300 F8000000
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007D544: F4000140 F8000008
	s_load_b32 s16, s[0:1], 0x18                               // 00000007D54C: F4000400 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 00000007D554: F4040380 F8000048
	v_lshl_or_b32 v3, s2, 4, v3                                // 00000007D55C: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007D564: D6560004 04110203
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007D56C: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007D574: BF89FC07
	s_lshl_b32 s6, s6, 4                                       // 00000007D578: 84068406
	s_add_u32 s8, s12, s8                                      // 00000007D57C: 8008080C
	s_addc_u32 s9, s13, s9                                     // 00000007D580: 8209090D
	s_lshl_b32 s7, s7, 1                                       // 00000007D584: 84078107
	s_add_u32 s2, s12, s10                                     // 00000007D588: 80020A0C
	s_addc_u32 s3, s13, s11                                    // 00000007D58C: 82030B0D
	s_waitcnt vmcnt(0)                                         // 00000007D590: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007D594: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007D598: 4A040406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007D59C: BF870112
	v_add_nc_u32_e32 v5, s7, v5                                // 00000007D5A0: 4A0A0A07
	v_add_nc_u32_e32 v2, s5, v2                                // 00000007D5A4: 4A040405
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007D5A8: BF870002
	v_add_nc_u32_e32 v5, s5, v5                                // 00000007D5AC: 4A0A0A05
	s_clause 0x1                                               // 00000007D5B0: BF850001
	global_store_b8 v3, v2, s[8:9]                             // 00000007D5B4: DC620000 00080203
	global_store_b8 v4, v5, s[2:3]                             // 00000007D5BC: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007D5C4: DC4A0026 01000001
	s_lshl_b32 s0, s16, 1                                      // 00000007D5CC: 84008110
	s_waitcnt vmcnt(0)                                         // 00000007D5D0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007D5D4: 4A020200
	s_add_u32 s0, s12, s14                                     // 00000007D5D8: 80000E0C
	s_addc_u32 s1, s13, s15                                    // 00000007D5DC: 82010F0D
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007D5E0: BF870001
	v_add_nc_u32_e32 v1, s5, v1                                // 00000007D5E4: 4A020205
	global_store_b8 v0, v1, s[0:1]                             // 00000007D5E8: DC620000 00000100
	s_nop 0                                                    // 00000007D5F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D5F4: BFB60003
	s_endpgm                                                   // 00000007D5F8: BFB00000
add_char_get_global_size_x_symend:
	.long 0xbf800000                                           // 00000007D5FC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_x,@function
	.size	add_char_get_num_groups_x, add_char_get_num_groups_x_symend-add_char_get_num_groups_x
add_char_get_num_groups_x:
	v_mov_b32_e32 v1, 0                                        // 00000007D600: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007D604: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007D60C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D614: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D61C: BEA10080
	s_clause 0x1                                               // 00000007D620: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007D624: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007D62C: DC4A0026 01000001
	s_clause 0x4                                               // 00000007D634: BF850004
	s_load_b32 s5, s[0:1], null                                // 00000007D638: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000007D640: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007D648: F4080300 F8000038
	s_load_b32 s16, s[0:1], 0x18                               // 00000007D650: F4000400 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007D658: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 00000007D660: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007D668: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007D670: D6560000 04010404
	s_waitcnt vmcnt(1)                                         // 00000007D678: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007D67C: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007D680: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007D684: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007D688: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007D690: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007D694: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007D698: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 00000007D69C: BF89FC07
	s_addc_u32 s1, s5, s10                                     // 00000007D6A0: 82010A05
	s_add_u32 s2, s8, s12                                      // 00000007D6A4: 80020C08
	s_addc_u32 s3, s9, s13                                     // 00000007D6A8: 82030D09
	v_mov_b32_e32 v1, s1                                       // 00000007D6AC: 7E020201
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007D6B0: BF07806A
	s_addc_u32 s1, s5, s11                                     // 00000007D6B4: 82010B05
	s_add_u32 s10, s8, s14                                     // 00000007D6B8: 800A0E08
	v_mov_b32_e32 v2, s1                                       // 00000007D6BC: 7E040201
	s_addc_u32 s11, s9, s15                                    // 00000007D6C0: 820B0F09
	s_cmp_lg_u32 s0, 0                                         // 00000007D6C4: BF078000
	global_store_b8 v3, v1, s[2:3]                             // 00000007D6C8: DC620000 00020103
	s_addc_u32 s0, s5, s16                                     // 00000007D6D0: 82001005
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D6D4: BF870009
	v_mov_b32_e32 v5, s0                                       // 00000007D6D8: 7E0A0200
	s_add_u32 s0, s8, s6                                       // 00000007D6DC: 80000608
	s_addc_u32 s1, s9, s7                                      // 00000007D6E0: 82010709
	s_clause 0x1                                               // 00000007D6E4: BF850001
	global_store_b8 v4, v2, s[10:11]                           // 00000007D6E8: DC620000 000A0204
	global_store_b8 v0, v5, s[0:1]                             // 00000007D6F0: DC620000 00000500
	s_nop 0                                                    // 00000007D6F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D6FC: BFB60003
	s_endpgm                                                   // 00000007D700: BFB00000
add_char_get_num_groups_x_symend:
	.long 0xbf800000                                           // 00000007D704: BF800000
	.long 0xbf800000                                           // 00000007D708: BF800000
	.long 0xbf800000                                           // 00000007D70C: BF800000
	.long 0xbf800000                                           // 00000007D710: BF800000
	.long 0xbf800000                                           // 00000007D714: BF800000
	.long 0xbf800000                                           // 00000007D718: BF800000
	.long 0xbf800000                                           // 00000007D71C: BF800000
	.long 0xbf800000                                           // 00000007D720: BF800000
	.long 0xbf800000                                           // 00000007D724: BF800000
	.long 0xbf800000                                           // 00000007D728: BF800000
	.long 0xbf800000                                           // 00000007D72C: BF800000
	.long 0xbf800000                                           // 00000007D730: BF800000
	.long 0xbf800000                                           // 00000007D734: BF800000
	.long 0xbf800000                                           // 00000007D738: BF800000
	.long 0xbf800000                                           // 00000007D73C: BF800000
	.long 0xbf800000                                           // 00000007D740: BF800000
	.long 0xbf800000                                           // 00000007D744: BF800000
	.long 0xbf800000                                           // 00000007D748: BF800000
	.long 0xbf800000                                           // 00000007D74C: BF800000
	.long 0xbf800000                                           // 00000007D750: BF800000
	.long 0xbf800000                                           // 00000007D754: BF800000
	.long 0xbf800000                                           // 00000007D758: BF800000
	.long 0xbf800000                                           // 00000007D75C: BF800000
	.long 0xbf800000                                           // 00000007D760: BF800000
	.long 0xbf800000                                           // 00000007D764: BF800000
	.long 0xbf800000                                           // 00000007D768: BF800000
	.long 0xbf800000                                           // 00000007D76C: BF800000
	.long 0xbf800000                                           // 00000007D770: BF800000
	.long 0xbf800000                                           // 00000007D774: BF800000
	.long 0xbf800000                                           // 00000007D778: BF800000
	.long 0xbf800000                                           // 00000007D77C: BF800000
	.long 0xbf800000                                           // 00000007D780: BF800000
	.long 0xbf800000                                           // 00000007D784: BF800000
	.long 0xbf800000                                           // 00000007D788: BF800000
	.long 0xbf800000                                           // 00000007D78C: BF800000
	.long 0xbf800000                                           // 00000007D790: BF800000
	.long 0xbf800000                                           // 00000007D794: BF800000
	.long 0xbf800000                                           // 00000007D798: BF800000
	.long 0xbf800000                                           // 00000007D79C: BF800000
	.long 0xbf800000                                           // 00000007D7A0: BF800000
	.long 0xbf800000                                           // 00000007D7A4: BF800000
	.long 0xbf800000                                           // 00000007D7A8: BF800000
	.long 0xbf800000                                           // 00000007D7AC: BF800000
	.long 0xbf800000                                           // 00000007D7B0: BF800000
	.long 0xbf800000                                           // 00000007D7B4: BF800000
	.long 0xbf800000                                           // 00000007D7B8: BF800000
	.long 0xbf800000                                           // 00000007D7BC: BF800000
	.long 0xbf800000                                           // 00000007D7C0: BF800000
	.long 0xbf800000                                           // 00000007D7C4: BF800000
	.long 0xbf800000                                           // 00000007D7C8: BF800000
	.long 0xbf800000                                           // 00000007D7CC: BF800000
	.long 0xbf800000                                           // 00000007D7D0: BF800000
	.long 0xbf800000                                           // 00000007D7D4: BF800000
	.long 0xbf800000                                           // 00000007D7D8: BF800000
	.long 0xbf800000                                           // 00000007D7DC: BF800000
	.long 0xbf800000                                           // 00000007D7E0: BF800000
	.long 0xbf800000                                           // 00000007D7E4: BF800000
	.long 0xbf800000                                           // 00000007D7E8: BF800000
	.long 0xbf800000                                           // 00000007D7EC: BF800000
	.long 0xbf800000                                           // 00000007D7F0: BF800000
	.long 0xbf800000                                           // 00000007D7F4: BF800000
	.long 0xbf800000                                           // 00000007D7F8: BF800000
	.long 0xbf800000                                           // 00000007D7FC: BF800000

	.p2align	8
	.type	add_char_get_work_dim_x,@function
	.size	add_char_get_work_dim_x, add_char_get_work_dim_x_symend-add_char_get_work_dim_x
add_char_get_work_dim_x:
	s_clause 0x3                                               // 00000007D800: BF850003
	s_load_b32 s3, s[0:1], 0x50                                // 00000007D804: F40000C0 F8000050
	s_load_b32 s6, s[0:1], null                                // 00000007D80C: F4000180 F8000000
	s_load_b64 s[4:5], s[0:1], 0x8                             // 00000007D814: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 00000007D81C: F4040000 F8000038
	v_lshl_or_b32 v0, s2, 1, v0                                // 00000007D824: D6560000 04010202
	s_mov_b32 s33, 0                                           // 00000007D82C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007D830: BF89FC07
	s_add_i32 s3, s3, s6                                       // 00000007D834: 81030603
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D838: BF870009
	v_mov_b32_e32 v1, s3                                       // 00000007D83C: 7E020203
	s_add_u32 s0, s4, s0                                       // 00000007D840: 80000004
	s_addc_u32 s1, s5, s1                                      // 00000007D844: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 00000007D848: DC620000 00000100
	s_nop 0                                                    // 00000007D850: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D854: BFB60003
	s_endpgm                                                   // 00000007D858: BFB00000
add_char_get_work_dim_x_symend:
	.long 0xbf800000                                           // 00000007D85C: BF800000
	.long 0xbf800000                                           // 00000007D860: BF800000
	.long 0xbf800000                                           // 00000007D864: BF800000
	.long 0xbf800000                                           // 00000007D868: BF800000
	.long 0xbf800000                                           // 00000007D86C: BF800000
	.long 0xbf800000                                           // 00000007D870: BF800000
	.long 0xbf800000                                           // 00000007D874: BF800000
	.long 0xbf800000                                           // 00000007D878: BF800000
	.long 0xbf800000                                           // 00000007D87C: BF800000
	.long 0xbf800000                                           // 00000007D880: BF800000
	.long 0xbf800000                                           // 00000007D884: BF800000
	.long 0xbf800000                                           // 00000007D888: BF800000
	.long 0xbf800000                                           // 00000007D88C: BF800000
	.long 0xbf800000                                           // 00000007D890: BF800000
	.long 0xbf800000                                           // 00000007D894: BF800000
	.long 0xbf800000                                           // 00000007D898: BF800000
	.long 0xbf800000                                           // 00000007D89C: BF800000
	.long 0xbf800000                                           // 00000007D8A0: BF800000
	.long 0xbf800000                                           // 00000007D8A4: BF800000
	.long 0xbf800000                                           // 00000007D8A8: BF800000
	.long 0xbf800000                                           // 00000007D8AC: BF800000
	.long 0xbf800000                                           // 00000007D8B0: BF800000
	.long 0xbf800000                                           // 00000007D8B4: BF800000
	.long 0xbf800000                                           // 00000007D8B8: BF800000
	.long 0xbf800000                                           // 00000007D8BC: BF800000
	.long 0xbf800000                                           // 00000007D8C0: BF800000
	.long 0xbf800000                                           // 00000007D8C4: BF800000
	.long 0xbf800000                                           // 00000007D8C8: BF800000
	.long 0xbf800000                                           // 00000007D8CC: BF800000
	.long 0xbf800000                                           // 00000007D8D0: BF800000
	.long 0xbf800000                                           // 00000007D8D4: BF800000
	.long 0xbf800000                                           // 00000007D8D8: BF800000
	.long 0xbf800000                                           // 00000007D8DC: BF800000
	.long 0xbf800000                                           // 00000007D8E0: BF800000
	.long 0xbf800000                                           // 00000007D8E4: BF800000
	.long 0xbf800000                                           // 00000007D8E8: BF800000
	.long 0xbf800000                                           // 00000007D8EC: BF800000
	.long 0xbf800000                                           // 00000007D8F0: BF800000
	.long 0xbf800000                                           // 00000007D8F4: BF800000
	.long 0xbf800000                                           // 00000007D8F8: BF800000
	.long 0xbf800000                                           // 00000007D8FC: BF800000

	.p2align	8
	.type	add_char_x_get_global_offset,@function
	.size	add_char_x_get_global_offset, add_char_x_get_global_offset_symend-add_char_x_get_global_offset
add_char_x_get_global_offset:
	s_clause 0x3                                               // 00000007D900: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007D904: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D90C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 00000007D914: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007D91C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007D924: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D92C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D934: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D93C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D940: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007D944: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007D94C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007D954: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007D958: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007D960: BF89FC07
	s_add_i32 s12, s8, s5                                      // 00000007D964: 810C0508
	s_add_u32 s2, s6, s8                                       // 00000007D968: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007D96C: 82030907
	v_mov_b32_e32 v3, s12                                      // 00000007D970: 7E06020C
	s_add_i32 s12, s10, s5                                     // 00000007D974: 810C050A
	s_add_u32 s8, s6, s10                                      // 00000007D978: 80080A06
	v_mov_b32_e32 v4, s12                                      // 00000007D97C: 7E08020C
	s_addc_u32 s9, s7, s11                                     // 00000007D980: 82090B07
	s_add_i32 s5, s0, s5                                       // 00000007D984: 81050500
	s_add_u32 s0, s6, s0                                       // 00000007D988: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007D98C: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007D990: 82010107
	s_clause 0x2                                               // 00000007D994: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007D998: DC620000 00020301
	global_store_b8 v2, v4, s[8:9]                             // 00000007D9A0: DC620000 00080402
	global_store_b8 v0, v5, s[0:1]                             // 00000007D9A8: DC620000 00000500
	s_nop 0                                                    // 00000007D9B0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D9B4: BFB60003
	s_endpgm                                                   // 00000007D9B8: BFB00000
add_char_x_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007D9BC: BF800000
	.long 0xbf800000                                           // 00000007D9C0: BF800000
	.long 0xbf800000                                           // 00000007D9C4: BF800000
	.long 0xbf800000                                           // 00000007D9C8: BF800000
	.long 0xbf800000                                           // 00000007D9CC: BF800000
	.long 0xbf800000                                           // 00000007D9D0: BF800000
	.long 0xbf800000                                           // 00000007D9D4: BF800000
	.long 0xbf800000                                           // 00000007D9D8: BF800000
	.long 0xbf800000                                           // 00000007D9DC: BF800000
	.long 0xbf800000                                           // 00000007D9E0: BF800000
	.long 0xbf800000                                           // 00000007D9E4: BF800000
	.long 0xbf800000                                           // 00000007D9E8: BF800000
	.long 0xbf800000                                           // 00000007D9EC: BF800000
	.long 0xbf800000                                           // 00000007D9F0: BF800000
	.long 0xbf800000                                           // 00000007D9F4: BF800000
	.long 0xbf800000                                           // 00000007D9F8: BF800000
	.long 0xbf800000                                           // 00000007D9FC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_get_global_offset,@function
	.size	add_char_get_global_offset_get_global_offset, add_char_get_global_offset_get_global_offset_symend-add_char_get_global_offset_get_global_offset
add_char_get_global_offset_get_global_offset:
	s_clause 0x2                                               // 00000007DA00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007DA04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007DA0C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007DA14: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007DA1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007DA24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DA2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007DA34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DA38: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007DA3C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007DA44: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007DA4C: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007DA50: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007DA58: BF89FC07
	s_lshl_b32 s5, s8, 1                                       // 00000007DA5C: 84058108
	s_add_u32 s2, s6, s8                                       // 00000007DA60: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007DA64: 82030907
	v_mov_b32_e32 v3, s5                                       // 00000007DA68: 7E060205
	s_lshl_b32 s5, s10, 1                                      // 00000007DA6C: 8405810A
	s_add_u32 s8, s6, s10                                      // 00000007DA70: 80080A06
	v_mov_b32_e32 v4, s5                                       // 00000007DA74: 7E080205
	s_addc_u32 s9, s7, s11                                     // 00000007DA78: 82090B07
	s_lshl_b32 s5, s0, 1                                       // 00000007DA7C: 84058100
	s_add_u32 s0, s6, s0                                       // 00000007DA80: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007DA84: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007DA88: 82010107
	s_clause 0x2                                               // 00000007DA8C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007DA90: DC620000 00020301
	global_store_b8 v2, v4, s[8:9]                             // 00000007DA98: DC620000 00080402
	global_store_b8 v0, v5, s[0:1]                             // 00000007DAA0: DC620000 00000500
	s_nop 0                                                    // 00000007DAA8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DAAC: BFB60003
	s_endpgm                                                   // 00000007DAB0: BFB00000
add_char_get_global_offset_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007DAB4: BF800000
	.long 0xbf800000                                           // 00000007DAB8: BF800000
	.long 0xbf800000                                           // 00000007DABC: BF800000
	.long 0xbf800000                                           // 00000007DAC0: BF800000
	.long 0xbf800000                                           // 00000007DAC4: BF800000
	.long 0xbf800000                                           // 00000007DAC8: BF800000
	.long 0xbf800000                                           // 00000007DACC: BF800000
	.long 0xbf800000                                           // 00000007DAD0: BF800000
	.long 0xbf800000                                           // 00000007DAD4: BF800000
	.long 0xbf800000                                           // 00000007DAD8: BF800000
	.long 0xbf800000                                           // 00000007DADC: BF800000
	.long 0xbf800000                                           // 00000007DAE0: BF800000
	.long 0xbf800000                                           // 00000007DAE4: BF800000
	.long 0xbf800000                                           // 00000007DAE8: BF800000
	.long 0xbf800000                                           // 00000007DAEC: BF800000
	.long 0xbf800000                                           // 00000007DAF0: BF800000
	.long 0xbf800000                                           // 00000007DAF4: BF800000
	.long 0xbf800000                                           // 00000007DAF8: BF800000
	.long 0xbf800000                                           // 00000007DAFC: BF800000

	.p2align	8
	.type	add_char_get_local_id_get_global_offset,@function
	.size	add_char_get_local_id_get_global_offset, add_char_get_local_id_get_global_offset_symend-add_char_get_local_id_get_global_offset
add_char_get_local_id_get_global_offset:
	s_clause 0x2                                               // 00000007DB00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007DB04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007DB0C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007DB14: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007DB1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007DB24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DB2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007DB34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DB38: BF870193
	v_lshl_or_b32 v3, s2, 3, v1                                // 00000007DB3C: D6560003 04050602
	v_lshl_or_b32 v4, s3, 2, v2                                // 00000007DB44: D6560004 04090403
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007DB4C: BF870003
	v_lshl_or_b32 v5, s4, 1, v0                                // 00000007DB50: D6560005 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007DB58: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007DB5C: 4A020208
	s_add_u32 s2, s6, s8                                       // 00000007DB60: 80020806
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007DB64: 4A04040A
	s_addc_u32 s3, s7, s9                                      // 00000007DB68: 82030907
	v_add_nc_u32_e32 v0, s0, v0                                // 00000007DB6C: 4A000000
	s_add_u32 s4, s6, s10                                      // 00000007DB70: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007DB74: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007DB78: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007DB7C: 82010107
	s_clause 0x2                                               // 00000007DB80: BF850002
	global_store_b8 v3, v1, s[2:3]                             // 00000007DB84: DC620000 00020103
	global_store_b8 v4, v2, s[4:5]                             // 00000007DB8C: DC620000 00040204
	global_store_b8 v5, v0, s[0:1]                             // 00000007DB94: DC620000 00000005
	s_nop 0                                                    // 00000007DB9C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DBA0: BFB60003
	s_endpgm                                                   // 00000007DBA4: BFB00000
add_char_get_local_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007DBA8: BF800000
	.long 0xbf800000                                           // 00000007DBAC: BF800000
	.long 0xbf800000                                           // 00000007DBB0: BF800000
	.long 0xbf800000                                           // 00000007DBB4: BF800000
	.long 0xbf800000                                           // 00000007DBB8: BF800000
	.long 0xbf800000                                           // 00000007DBBC: BF800000
	.long 0xbf800000                                           // 00000007DBC0: BF800000
	.long 0xbf800000                                           // 00000007DBC4: BF800000
	.long 0xbf800000                                           // 00000007DBC8: BF800000
	.long 0xbf800000                                           // 00000007DBCC: BF800000
	.long 0xbf800000                                           // 00000007DBD0: BF800000
	.long 0xbf800000                                           // 00000007DBD4: BF800000
	.long 0xbf800000                                           // 00000007DBD8: BF800000
	.long 0xbf800000                                           // 00000007DBDC: BF800000
	.long 0xbf800000                                           // 00000007DBE0: BF800000
	.long 0xbf800000                                           // 00000007DBE4: BF800000
	.long 0xbf800000                                           // 00000007DBE8: BF800000
	.long 0xbf800000                                           // 00000007DBEC: BF800000
	.long 0xbf800000                                           // 00000007DBF0: BF800000
	.long 0xbf800000                                           // 00000007DBF4: BF800000
	.long 0xbf800000                                           // 00000007DBF8: BF800000
	.long 0xbf800000                                           // 00000007DBFC: BF800000

	.p2align	8
	.type	add_char_get_group_id_get_global_offset,@function
	.size	add_char_get_group_id_get_global_offset, add_char_get_group_id_get_global_offset_symend-add_char_get_group_id_get_global_offset
add_char_get_group_id_get_global_offset:
	s_clause 0x2                                               // 00000007DC00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007DC04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007DC0C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007DC14: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007DC1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007DC24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DC2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007DC34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DC38: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007DC3C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007DC44: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007DC4C: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007DC50: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007DC58: BF89FC07
	s_add_i32 s2, s8, s2                                       // 00000007DC5C: 81020208
	s_add_u32 s8, s6, s8                                       // 00000007DC60: 80080806
	s_addc_u32 s9, s7, s9                                      // 00000007DC64: 82090907
	s_add_i32 s5, s10, s3                                      // 00000007DC68: 8105030A
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007DC6C: BF870009
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s5             // 00000007DC70: CA100002 03040005
	s_add_u32 s2, s6, s10                                      // 00000007DC78: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000007DC7C: 82030B07
	s_add_i32 s5, s0, s4                                       // 00000007DC80: 81050400
	s_add_u32 s0, s6, s0                                       // 00000007DC84: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007DC88: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007DC8C: 82010107
	s_clause 0x2                                               // 00000007DC90: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 00000007DC94: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 00000007DC9C: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 00000007DCA4: DC620000 00000500
	s_nop 0                                                    // 00000007DCAC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DCB0: BFB60003
	s_endpgm                                                   // 00000007DCB4: BFB00000
add_char_get_group_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007DCB8: BF800000
	.long 0xbf800000                                           // 00000007DCBC: BF800000
	.long 0xbf800000                                           // 00000007DCC0: BF800000
	.long 0xbf800000                                           // 00000007DCC4: BF800000
	.long 0xbf800000                                           // 00000007DCC8: BF800000
	.long 0xbf800000                                           // 00000007DCCC: BF800000
	.long 0xbf800000                                           // 00000007DCD0: BF800000
	.long 0xbf800000                                           // 00000007DCD4: BF800000
	.long 0xbf800000                                           // 00000007DCD8: BF800000
	.long 0xbf800000                                           // 00000007DCDC: BF800000
	.long 0xbf800000                                           // 00000007DCE0: BF800000
	.long 0xbf800000                                           // 00000007DCE4: BF800000
	.long 0xbf800000                                           // 00000007DCE8: BF800000
	.long 0xbf800000                                           // 00000007DCEC: BF800000
	.long 0xbf800000                                           // 00000007DCF0: BF800000
	.long 0xbf800000                                           // 00000007DCF4: BF800000
	.long 0xbf800000                                           // 00000007DCF8: BF800000
	.long 0xbf800000                                           // 00000007DCFC: BF800000

	.p2align	8
	.type	add_char_get_local_size_get_global_offset,@function
	.size	add_char_get_local_size_get_global_offset, add_char_get_local_size_get_global_offset_symend-add_char_get_local_size_get_global_offset
add_char_get_local_size_get_global_offset:
	s_clause 0x2                                               // 00000007DD00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007DD04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007DD0C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007DD14: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007DD1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007DD24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DD2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007DD34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DD38: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007DD3C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007DD44: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007DD4C: BF870003
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007DD50: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007DD58: BF89FC07
	s_add_i32 s5, s8, 2                                        // 00000007DD5C: 81058208
	s_add_u32 s2, s6, s8                                       // 00000007DD60: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007DD64: 82030907
	v_mov_b32_e32 v3, s5                                       // 00000007DD68: 7E060205
	s_add_i32 s5, s10, 2                                       // 00000007DD6C: 8105820A
	s_add_u32 s8, s6, s10                                      // 00000007DD70: 80080A06
	v_mov_b32_e32 v4, s5                                       // 00000007DD74: 7E080205
	s_addc_u32 s9, s7, s11                                     // 00000007DD78: 82090B07
	s_add_i32 s5, s0, 4                                        // 00000007DD7C: 81058400
	s_add_u32 s0, s6, s0                                       // 00000007DD80: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007DD84: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007DD88: 82010107
	s_clause 0x2                                               // 00000007DD8C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007DD90: DC620000 00020301
	global_store_b8 v2, v4, s[8:9]                             // 00000007DD98: DC620000 00080402
	global_store_b8 v0, v5, s[0:1]                             // 00000007DDA0: DC620000 00000500
	s_nop 0                                                    // 00000007DDA8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DDAC: BFB60003
	s_endpgm                                                   // 00000007DDB0: BFB00000
add_char_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007DDB4: BF800000
	.long 0xbf800000                                           // 00000007DDB8: BF800000
	.long 0xbf800000                                           // 00000007DDBC: BF800000
	.long 0xbf800000                                           // 00000007DDC0: BF800000
	.long 0xbf800000                                           // 00000007DDC4: BF800000
	.long 0xbf800000                                           // 00000007DDC8: BF800000
	.long 0xbf800000                                           // 00000007DDCC: BF800000
	.long 0xbf800000                                           // 00000007DDD0: BF800000
	.long 0xbf800000                                           // 00000007DDD4: BF800000
	.long 0xbf800000                                           // 00000007DDD8: BF800000
	.long 0xbf800000                                           // 00000007DDDC: BF800000
	.long 0xbf800000                                           // 00000007DDE0: BF800000
	.long 0xbf800000                                           // 00000007DDE4: BF800000
	.long 0xbf800000                                           // 00000007DDE8: BF800000
	.long 0xbf800000                                           // 00000007DDEC: BF800000
	.long 0xbf800000                                           // 00000007DDF0: BF800000
	.long 0xbf800000                                           // 00000007DDF4: BF800000
	.long 0xbf800000                                           // 00000007DDF8: BF800000
	.long 0xbf800000                                           // 00000007DDFC: BF800000

	.p2align	8
	.type	add_char_get_global_id_get_global_offset,@function
	.size	add_char_get_global_id_get_global_offset, add_char_get_global_id_get_global_offset_symend-add_char_get_global_id_get_global_offset
add_char_get_global_id_get_global_offset:
	s_clause 0x2                                               // 00000007DE00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007DE04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007DE0C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007DE14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007DE1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007DE24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DE2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007DE34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DE38: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007DE3C: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007DE44: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007DE4C: BF870123
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007DE50: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007DE58: BF89FC07
	v_add_co_u32 v1, s2, s10, v1                               // 00000007DE5C: D7000201 0002020A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DE64: BF870191
	v_add_co_ci_u32_e64 v2, null, s11, 0, s2                   // 00000007DE68: D5207C02 0009000B
	v_add_co_u32 v3, s2, s6, v0                                // 00000007DE70: D7000203 00020006
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007DE78: BF870211
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 00000007DE7C: D5207C06 00090007
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000007DE84: D7006A00 00020200
	v_add_nc_u32_e32 v7, s10, v1                               // 00000007DE8C: 4A0E020A
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000007DE90: 40020401
	v_lshl_add_u32 v5, s8, 1, v4                               // 00000007DE94: D6460005 04110208
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007DE9C: D7006A02 00020600
	v_add_nc_u32_e32 v8, s6, v3                                // 00000007DEA4: 4A100606
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v6, vcc_lo             // 00000007DEA8: 40060C01
	s_clause 0x2                                               // 00000007DEAC: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007DEB0: DC620000 00000504
	global_store_b8 v[0:1], v7, off                            // 00000007DEB8: DC620000 007C0700
	global_store_b8 v[2:3], v8, off                            // 00000007DEC0: DC620000 007C0802
	s_nop 0                                                    // 00000007DEC8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DECC: BFB60003
	s_endpgm                                                   // 00000007DED0: BFB00000
add_char_get_global_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007DED4: BF800000
	.long 0xbf800000                                           // 00000007DED8: BF800000
	.long 0xbf800000                                           // 00000007DEDC: BF800000
	.long 0xbf800000                                           // 00000007DEE0: BF800000
	.long 0xbf800000                                           // 00000007DEE4: BF800000
	.long 0xbf800000                                           // 00000007DEE8: BF800000
	.long 0xbf800000                                           // 00000007DEEC: BF800000
	.long 0xbf800000                                           // 00000007DEF0: BF800000
	.long 0xbf800000                                           // 00000007DEF4: BF800000
	.long 0xbf800000                                           // 00000007DEF8: BF800000
	.long 0xbf800000                                           // 00000007DEFC: BF800000

	.p2align	8
	.type	add_char_get_global_size_get_global_offset,@function
	.size	add_char_get_global_size_get_global_offset, add_char_get_global_size_get_global_offset_symend-add_char_get_global_size_get_global_offset
add_char_get_global_size_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 00000007DF00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007DF04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007DF0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DF14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007DF1C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007DF20: DC520022 02000001
	s_clause 0x4                                               // 00000007DF28: BF850004
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000007DF2C: F4040180 F8000010
	s_load_b64 s[12:13], s[0:1], null                          // 00000007DF34: F4040300 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007DF3C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000007DF44: F4000140 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 00000007DF4C: F4040380 F8000048
	v_lshl_or_b32 v3, s2, 4, v3                                // 00000007DF54: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007DF5C: D6560004 04110203
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007DF64: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007DF6C: BF89FC07
	s_lshl_b32 s6, s6, 4                                       // 00000007DF70: 84068406
	s_add_u32 s16, s12, s8                                     // 00000007DF74: 8010080C
	s_addc_u32 s17, s13, s9                                    // 00000007DF78: 8211090D
	s_lshl_b32 s7, s7, 1                                       // 00000007DF7C: 84078107
	s_add_u32 s2, s12, s10                                     // 00000007DF80: 80020A0C
	s_addc_u32 s3, s13, s11                                    // 00000007DF84: 82030B0D
	s_waitcnt vmcnt(0)                                         // 00000007DF88: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007DF8C: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007DF90: 4A040406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007DF94: BF870112
	v_add_nc_u32_e32 v5, s7, v5                                // 00000007DF98: 4A0A0A07
	v_add_nc_u32_e32 v2, s8, v2                                // 00000007DF9C: 4A040408
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007DFA0: BF870002
	v_add_nc_u32_e32 v5, s10, v5                               // 00000007DFA4: 4A0A0A0A
	s_clause 0x1                                               // 00000007DFA8: BF850001
	global_store_b8 v3, v2, s[16:17]                           // 00000007DFAC: DC620000 00100203
	global_store_b8 v4, v5, s[2:3]                             // 00000007DFB4: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007DFBC: DC4A0026 01000001
	s_lshl_b32 s0, s5, 1                                       // 00000007DFC4: 84008105
	s_waitcnt vmcnt(0)                                         // 00000007DFC8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007DFCC: 4A020200
	s_add_u32 s0, s12, s14                                     // 00000007DFD0: 80000E0C
	s_addc_u32 s1, s13, s15                                    // 00000007DFD4: 82010F0D
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007DFD8: BF870001
	v_add_nc_u32_e32 v1, s14, v1                               // 00000007DFDC: 4A02020E
	global_store_b8 v0, v1, s[0:1]                             // 00000007DFE0: DC620000 00000100
	s_nop 0                                                    // 00000007DFE8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DFEC: BFB60003
	s_endpgm                                                   // 00000007DFF0: BFB00000
add_char_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007DFF4: BF800000
	.long 0xbf800000                                           // 00000007DFF8: BF800000
	.long 0xbf800000                                           // 00000007DFFC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_get_global_offset,@function
	.size	add_char_get_num_groups_get_global_offset, add_char_get_num_groups_get_global_offset_symend-add_char_get_num_groups_get_global_offset
add_char_get_num_groups_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 00000007E000: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007E004: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007E00C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E014: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E01C: BEA10080
	s_clause 0x1                                               // 00000007E020: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007E024: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007E02C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007E034: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E038: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x8                          // 00000007E040: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 00000007E048: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007E050: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 00000007E058: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007E060: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007E068: D6560000 04010404
	s_waitcnt vmcnt(1)                                         // 00000007E070: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007E074: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007E078: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007E07C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007E080: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007E088: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007E08C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007E090: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 00000007E094: BF89FC07
	s_addc_u32 s1, s8, s14                                     // 00000007E098: 82010E08
	s_add_u32 s2, s12, s8                                      // 00000007E09C: 8002080C
	s_addc_u32 s3, s13, s9                                     // 00000007E0A0: 8203090D
	v_mov_b32_e32 v1, s1                                       // 00000007E0A4: 7E020201
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007E0A8: BF07806A
	s_addc_u32 s1, s10, s15                                    // 00000007E0AC: 82010F0A
	s_add_u32 s8, s12, s10                                     // 00000007E0B0: 80080A0C
	v_mov_b32_e32 v2, s1                                       // 00000007E0B4: 7E040201
	s_addc_u32 s9, s13, s11                                    // 00000007E0B8: 82090B0D
	s_cmp_lg_u32 s0, 0                                         // 00000007E0BC: BF078000
	global_store_b8 v3, v1, s[2:3]                             // 00000007E0C0: DC620000 00020103
	s_addc_u32 s0, s6, s5                                      // 00000007E0C8: 82000506
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E0CC: BF870009
	v_mov_b32_e32 v5, s0                                       // 00000007E0D0: 7E0A0200
	s_add_u32 s0, s12, s6                                      // 00000007E0D4: 8000060C
	s_addc_u32 s1, s13, s7                                     // 00000007E0D8: 8201070D
	s_clause 0x1                                               // 00000007E0DC: BF850001
	global_store_b8 v4, v2, s[8:9]                             // 00000007E0E0: DC620000 00080204
	global_store_b8 v0, v5, s[0:1]                             // 00000007E0E8: DC620000 00000500
	s_nop 0                                                    // 00000007E0F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E0F4: BFB60003
	s_endpgm                                                   // 00000007E0F8: BFB00000
add_char_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007E0FC: BF800000

	.p2align	8
	.type	add_char_get_work_dim_get_global_offset,@function
	.size	add_char_get_work_dim_get_global_offset, add_char_get_work_dim_get_global_offset_symend-add_char_get_work_dim_get_global_offset
add_char_get_work_dim_get_global_offset:
	s_clause 0x3                                               // 00000007E100: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007E10C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E114: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007E11C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E124: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E12C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E13C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E140: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007E144: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007E14C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007E154: BF870003
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007E158: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007E160: BF89FC07
	s_add_i32 s12, s8, s5                                      // 00000007E164: 810C0508
	s_add_u32 s2, s6, s8                                       // 00000007E168: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007E16C: 82030907
	v_mov_b32_e32 v3, s12                                      // 00000007E170: 7E06020C
	s_add_i32 s12, s10, s5                                     // 00000007E174: 810C050A
	s_add_u32 s8, s6, s10                                      // 00000007E178: 80080A06
	v_mov_b32_e32 v4, s12                                      // 00000007E17C: 7E08020C
	s_addc_u32 s9, s7, s11                                     // 00000007E180: 82090B07
	s_add_i32 s5, s0, s5                                       // 00000007E184: 81050500
	s_add_u32 s0, s6, s0                                       // 00000007E188: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007E18C: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007E190: 82010107
	s_clause 0x2                                               // 00000007E194: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007E198: DC620000 00020301
	global_store_b8 v2, v4, s[8:9]                             // 00000007E1A0: DC620000 00080402
	global_store_b8 v0, v5, s[0:1]                             // 00000007E1A8: DC620000 00000500
	s_nop 0                                                    // 00000007E1B0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E1B4: BFB60003
	s_endpgm                                                   // 00000007E1B8: BFB00000
add_char_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007E1BC: BF800000
	.long 0xbf800000                                           // 00000007E1C0: BF800000
	.long 0xbf800000                                           // 00000007E1C4: BF800000
	.long 0xbf800000                                           // 00000007E1C8: BF800000
	.long 0xbf800000                                           // 00000007E1CC: BF800000
	.long 0xbf800000                                           // 00000007E1D0: BF800000
	.long 0xbf800000                                           // 00000007E1D4: BF800000
	.long 0xbf800000                                           // 00000007E1D8: BF800000
	.long 0xbf800000                                           // 00000007E1DC: BF800000
	.long 0xbf800000                                           // 00000007E1E0: BF800000
	.long 0xbf800000                                           // 00000007E1E4: BF800000
	.long 0xbf800000                                           // 00000007E1E8: BF800000
	.long 0xbf800000                                           // 00000007E1EC: BF800000
	.long 0xbf800000                                           // 00000007E1F0: BF800000
	.long 0xbf800000                                           // 00000007E1F4: BF800000
	.long 0xbf800000                                           // 00000007E1F8: BF800000
	.long 0xbf800000                                           // 00000007E1FC: BF800000

	.p2align	8
	.type	add_char_x_get_local_id,@function
	.size	add_char_x_get_local_id, add_char_x_get_local_id_symend-add_char_x_get_local_id
add_char_x_get_local_id:
	s_clause 0x3                                               // 00000007E200: BF850003
	s_load_b64 s[6:7], s[0:1], null                            // 00000007E204: F4040180 F8000000
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007E20C: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E214: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007E21C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E224: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E22C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E234: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E23C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E240: BF870193
	v_lshl_or_b32 v3, s2, 4, v1                                // 00000007E244: D6560003 04050802
	v_lshl_or_b32 v4, s3, 1, v2                                // 00000007E24C: D6560004 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007E254: BF870003
	v_lshl_or_b32 v5, s4, 1, v0                                // 00000007E258: D6560005 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007E260: BF89FC07
	v_add_nc_u32_e32 v1, s5, v1                                // 00000007E264: 4A020205
	s_add_u32 s2, s6, s8                                       // 00000007E268: 80020806
	v_add_nc_u32_e32 v2, s5, v2                                // 00000007E26C: 4A040405
	s_addc_u32 s3, s7, s9                                      // 00000007E270: 82030907
	v_add_nc_u32_e32 v0, s5, v0                                // 00000007E274: 4A000005
	s_add_u32 s4, s6, s10                                      // 00000007E278: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007E27C: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007E280: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007E284: 82010107
	s_clause 0x2                                               // 00000007E288: BF850002
	global_store_b8 v3, v1, s[2:3]                             // 00000007E28C: DC620000 00020103
	global_store_b8 v4, v2, s[4:5]                             // 00000007E294: DC620000 00040204
	global_store_b8 v5, v0, s[0:1]                             // 00000007E29C: DC620000 00000005
	s_nop 0                                                    // 00000007E2A4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E2A8: BFB60003
	s_endpgm                                                   // 00000007E2AC: BFB00000
add_char_x_get_local_id_symend:
	.long 0xbf800000                                           // 00000007E2B0: BF800000
	.long 0xbf800000                                           // 00000007E2B4: BF800000
	.long 0xbf800000                                           // 00000007E2B8: BF800000
	.long 0xbf800000                                           // 00000007E2BC: BF800000
	.long 0xbf800000                                           // 00000007E2C0: BF800000
	.long 0xbf800000                                           // 00000007E2C4: BF800000
	.long 0xbf800000                                           // 00000007E2C8: BF800000
	.long 0xbf800000                                           // 00000007E2CC: BF800000
	.long 0xbf800000                                           // 00000007E2D0: BF800000
	.long 0xbf800000                                           // 00000007E2D4: BF800000
	.long 0xbf800000                                           // 00000007E2D8: BF800000
	.long 0xbf800000                                           // 00000007E2DC: BF800000
	.long 0xbf800000                                           // 00000007E2E0: BF800000
	.long 0xbf800000                                           // 00000007E2E4: BF800000
	.long 0xbf800000                                           // 00000007E2E8: BF800000
	.long 0xbf800000                                           // 00000007E2EC: BF800000
	.long 0xbf800000                                           // 00000007E2F0: BF800000
	.long 0xbf800000                                           // 00000007E2F4: BF800000
	.long 0xbf800000                                           // 00000007E2F8: BF800000
	.long 0xbf800000                                           // 00000007E2FC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_get_local_id,@function
	.size	add_char_get_global_offset_get_local_id, add_char_get_global_offset_get_local_id_symend-add_char_get_global_offset_get_local_id
add_char_get_global_offset_get_local_id:
	s_clause 0x2                                               // 00000007E300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E304: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E30C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007E314: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E31C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E324: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E32C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E334: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E338: BF870193
	v_lshl_or_b32 v3, s2, 1, v1                                // 00000007E33C: D6560003 04050202
	v_lshl_or_b32 v4, s3, 4, v2                                // 00000007E344: D6560004 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007E34C: BF870003
	v_lshl_or_b32 v5, s4, 1, v0                                // 00000007E350: D6560005 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007E358: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007E35C: 4A020208
	s_add_u32 s2, s6, s8                                       // 00000007E360: 80020806
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007E364: 4A04040A
	s_addc_u32 s3, s7, s9                                      // 00000007E368: 82030907
	v_add_nc_u32_e32 v0, s0, v0                                // 00000007E36C: 4A000000
	s_add_u32 s4, s6, s10                                      // 00000007E370: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007E374: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007E378: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007E37C: 82010107
	s_clause 0x2                                               // 00000007E380: BF850002
	global_store_b8 v3, v1, s[2:3]                             // 00000007E384: DC620000 00020103
	global_store_b8 v4, v2, s[4:5]                             // 00000007E38C: DC620000 00040204
	global_store_b8 v5, v0, s[0:1]                             // 00000007E394: DC620000 00000005
	s_nop 0                                                    // 00000007E39C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E3A0: BFB60003
	s_endpgm                                                   // 00000007E3A4: BFB00000
add_char_get_global_offset_get_local_id_symend:
	.long 0xbf800000                                           // 00000007E3A8: BF800000
	.long 0xbf800000                                           // 00000007E3AC: BF800000
	.long 0xbf800000                                           // 00000007E3B0: BF800000
	.long 0xbf800000                                           // 00000007E3B4: BF800000
	.long 0xbf800000                                           // 00000007E3B8: BF800000
	.long 0xbf800000                                           // 00000007E3BC: BF800000
	.long 0xbf800000                                           // 00000007E3C0: BF800000
	.long 0xbf800000                                           // 00000007E3C4: BF800000
	.long 0xbf800000                                           // 00000007E3C8: BF800000
	.long 0xbf800000                                           // 00000007E3CC: BF800000
	.long 0xbf800000                                           // 00000007E3D0: BF800000
	.long 0xbf800000                                           // 00000007E3D4: BF800000
	.long 0xbf800000                                           // 00000007E3D8: BF800000
	.long 0xbf800000                                           // 00000007E3DC: BF800000
	.long 0xbf800000                                           // 00000007E3E0: BF800000
	.long 0xbf800000                                           // 00000007E3E4: BF800000
	.long 0xbf800000                                           // 00000007E3E8: BF800000
	.long 0xbf800000                                           // 00000007E3EC: BF800000
	.long 0xbf800000                                           // 00000007E3F0: BF800000
	.long 0xbf800000                                           // 00000007E3F4: BF800000
	.long 0xbf800000                                           // 00000007E3F8: BF800000
	.long 0xbf800000                                           // 00000007E3FC: BF800000

	.p2align	8
	.type	add_char_get_local_id_get_local_id,@function
	.size	add_char_get_local_id_get_local_id, add_char_get_local_id_get_local_id_symend-add_char_get_local_id_get_local_id
add_char_get_local_id_get_local_id:
	s_clause 0x2                                               // 00000007E400: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E404: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E40C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007E414: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E41C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E424: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E42C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E434: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007E438: BF870003
	v_lshlrev_b16 v3.l, 1, v1.l                                // 00000007E43C: D7380003 00020281
	v_lshl_or_b32 v1, s2, 3, v1                                // 00000007E444: D6560001 04050602
	v_lshlrev_b16 v4.l, 1, v2.l                                // 00000007E44C: D7380004 00020481
	v_lshl_or_b32 v2, s3, 2, v2                                // 00000007E454: D6560002 04090403
	v_lshlrev_b16 v5.l, 1, v0.l                                // 00000007E45C: D7380005 00020081
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007E464: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007E46C: BF89FC07
	s_add_u32 s2, s6, s8                                       // 00000007E470: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007E474: 82030907
	s_add_u32 s4, s6, s10                                      // 00000007E478: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007E47C: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007E480: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007E484: 82010107
	s_clause 0x2                                               // 00000007E488: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007E48C: DC620000 00020301
	global_store_b8 v2, v4, s[4:5]                             // 00000007E494: DC620000 00040402
	global_store_b8 v0, v5, s[0:1]                             // 00000007E49C: DC620000 00000500
	s_nop 0                                                    // 00000007E4A4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E4A8: BFB60003
	s_endpgm                                                   // 00000007E4AC: BFB00000
add_char_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007E4B0: BF800000
	.long 0xbf800000                                           // 00000007E4B4: BF800000
	.long 0xbf800000                                           // 00000007E4B8: BF800000
	.long 0xbf800000                                           // 00000007E4BC: BF800000
	.long 0xbf800000                                           // 00000007E4C0: BF800000
	.long 0xbf800000                                           // 00000007E4C4: BF800000
	.long 0xbf800000                                           // 00000007E4C8: BF800000
	.long 0xbf800000                                           // 00000007E4CC: BF800000
	.long 0xbf800000                                           // 00000007E4D0: BF800000
	.long 0xbf800000                                           // 00000007E4D4: BF800000
	.long 0xbf800000                                           // 00000007E4D8: BF800000
	.long 0xbf800000                                           // 00000007E4DC: BF800000
	.long 0xbf800000                                           // 00000007E4E0: BF800000
	.long 0xbf800000                                           // 00000007E4E4: BF800000
	.long 0xbf800000                                           // 00000007E4E8: BF800000
	.long 0xbf800000                                           // 00000007E4EC: BF800000
	.long 0xbf800000                                           // 00000007E4F0: BF800000
	.long 0xbf800000                                           // 00000007E4F4: BF800000
	.long 0xbf800000                                           // 00000007E4F8: BF800000
	.long 0xbf800000                                           // 00000007E4FC: BF800000

	.p2align	8
	.type	add_char_get_group_id_get_local_id,@function
	.size	add_char_get_group_id_get_local_id, add_char_get_group_id_get_local_id_symend-add_char_get_group_id_get_local_id
add_char_get_group_id_get_local_id:
	s_clause 0x2                                               // 00000007E500: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E504: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E50C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007E514: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E51C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E524: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E52C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E534: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007E538: BF870003
	v_add_nc_u16 v3.l, s2, v1.l                                // 00000007E53C: D7030003 00020202
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007E544: D6560001 04050202
	v_add_nc_u16 v4.l, s3, v2.l                                // 00000007E54C: D7030004 00020403
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007E554: D6560002 04090803
	v_add_nc_u16 v5.l, s4, v0.l                                // 00000007E55C: D7030005 00020004
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007E564: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007E56C: BF89FC07
	s_add_u32 s2, s6, s8                                       // 00000007E570: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007E574: 82030907
	s_add_u32 s4, s6, s10                                      // 00000007E578: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007E57C: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007E580: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007E584: 82010107
	s_clause 0x2                                               // 00000007E588: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007E58C: DC620000 00020301
	global_store_b8 v2, v4, s[4:5]                             // 00000007E594: DC620000 00040402
	global_store_b8 v0, v5, s[0:1]                             // 00000007E59C: DC620000 00000500
	s_nop 0                                                    // 00000007E5A4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E5A8: BFB60003
	s_endpgm                                                   // 00000007E5AC: BFB00000
add_char_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007E5B0: BF800000
	.long 0xbf800000                                           // 00000007E5B4: BF800000
	.long 0xbf800000                                           // 00000007E5B8: BF800000
	.long 0xbf800000                                           // 00000007E5BC: BF800000
	.long 0xbf800000                                           // 00000007E5C0: BF800000
	.long 0xbf800000                                           // 00000007E5C4: BF800000
	.long 0xbf800000                                           // 00000007E5C8: BF800000
	.long 0xbf800000                                           // 00000007E5CC: BF800000
	.long 0xbf800000                                           // 00000007E5D0: BF800000
	.long 0xbf800000                                           // 00000007E5D4: BF800000
	.long 0xbf800000                                           // 00000007E5D8: BF800000
	.long 0xbf800000                                           // 00000007E5DC: BF800000
	.long 0xbf800000                                           // 00000007E5E0: BF800000
	.long 0xbf800000                                           // 00000007E5E4: BF800000
	.long 0xbf800000                                           // 00000007E5E8: BF800000
	.long 0xbf800000                                           // 00000007E5EC: BF800000
	.long 0xbf800000                                           // 00000007E5F0: BF800000
	.long 0xbf800000                                           // 00000007E5F4: BF800000
	.long 0xbf800000                                           // 00000007E5F8: BF800000
	.long 0xbf800000                                           // 00000007E5FC: BF800000

	.p2align	8
	.type	add_char_get_local_size_get_local_id,@function
	.size	add_char_get_local_size_get_local_id, add_char_get_local_size_get_local_id_symend-add_char_get_local_size_get_local_id
add_char_get_local_size_get_local_id:
	s_clause 0x2                                               // 00000007E600: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E604: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E60C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007E614: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E61C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E624: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E62C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E634: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007E638: BF870003
	v_or_b32_e32 v3, 2, v1                                     // 00000007E63C: 38060282
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007E640: D6560001 04050202
	v_or_b32_e32 v4, 2, v2                                     // 00000007E648: 38080482
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007E64C: D6560002 04090203
	v_or_b32_e32 v5, 4, v0                                     // 00000007E654: 380A0084
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007E658: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007E660: BF89FC07
	s_add_u32 s2, s6, s8                                       // 00000007E664: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007E668: 82030907
	s_add_u32 s4, s6, s10                                      // 00000007E66C: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007E670: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007E674: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007E678: 82010107
	s_clause 0x2                                               // 00000007E67C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007E680: DC620000 00020301
	global_store_b8 v2, v4, s[4:5]                             // 00000007E688: DC620000 00040402
	global_store_b8 v0, v5, s[0:1]                             // 00000007E690: DC620000 00000500
	s_nop 0                                                    // 00000007E698: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E69C: BFB60003
	s_endpgm                                                   // 00000007E6A0: BFB00000
add_char_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 00000007E6A4: BF800000
	.long 0xbf800000                                           // 00000007E6A8: BF800000
	.long 0xbf800000                                           // 00000007E6AC: BF800000
	.long 0xbf800000                                           // 00000007E6B0: BF800000
	.long 0xbf800000                                           // 00000007E6B4: BF800000
	.long 0xbf800000                                           // 00000007E6B8: BF800000
	.long 0xbf800000                                           // 00000007E6BC: BF800000
	.long 0xbf800000                                           // 00000007E6C0: BF800000
	.long 0xbf800000                                           // 00000007E6C4: BF800000
	.long 0xbf800000                                           // 00000007E6C8: BF800000
	.long 0xbf800000                                           // 00000007E6CC: BF800000
	.long 0xbf800000                                           // 00000007E6D0: BF800000
	.long 0xbf800000                                           // 00000007E6D4: BF800000
	.long 0xbf800000                                           // 00000007E6D8: BF800000
	.long 0xbf800000                                           // 00000007E6DC: BF800000
	.long 0xbf800000                                           // 00000007E6E0: BF800000
	.long 0xbf800000                                           // 00000007E6E4: BF800000
	.long 0xbf800000                                           // 00000007E6E8: BF800000
	.long 0xbf800000                                           // 00000007E6EC: BF800000
	.long 0xbf800000                                           // 00000007E6F0: BF800000
	.long 0xbf800000                                           // 00000007E6F4: BF800000
	.long 0xbf800000                                           // 00000007E6F8: BF800000
	.long 0xbf800000                                           // 00000007E6FC: BF800000

	.p2align	8
	.type	add_char_get_global_id_get_local_id,@function
	.size	add_char_get_global_id_get_local_id, add_char_get_global_id_get_local_id_symend-add_char_get_global_id_get_local_id
add_char_get_global_id_get_local_id:
	s_clause 0x2                                               // 00000007E700: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007E70C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007E714: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E71C: D6100002 02291500
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E724: 360200FF 000003FF
	v_bfe_u32 v3, v0, 20, 10                                   // 00000007E72C: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000007E734: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E738: BF870193
	v_lshl_or_b32 v0, s3, 1, v2                                // 00000007E73C: D6560000 04090203
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007E744: D6560004 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007E74C: BF8701A3
	v_lshl_or_b32 v5, s4, 2, v3                                // 00000007E750: D6560005 040D0404
	s_waitcnt lgkmcnt(0)                                       // 00000007E758: BF89FC07
	v_add_co_u32 v0, s2, s10, v0                               // 00000007E75C: D7000200 0002000A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007E764: BF8700B3
	v_add3_u32 v6, s8, v4, v1                                  // 00000007E768: D6550006 04060808
	v_add_co_ci_u32_e64 v1, null, s11, 0, s2                   // 00000007E770: D5207C01 0009000B
	v_add_co_u32 v5, s2, s6, v5                                // 00000007E778: D7000205 00020A06
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 00000007E780: D5207C07 00090007
	v_add_nc_u32_e32 v8, v0, v2                                // 00000007E788: 4A100500
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007E78C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007E794: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v5                            // 00000007E798: D7006A02 00020A00
	v_add_nc_u32_e32 v9, v5, v3                                // 00000007E7A0: 4A120705
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v7, vcc_lo             // 00000007E7A4: 40060E01
	s_clause 0x2                                               // 00000007E7A8: BF850002
	global_store_b8 v4, v6, s[0:1]                             // 00000007E7AC: DC620000 00000604
	global_store_b8 v[0:1], v8, off                            // 00000007E7B4: DC620000 007C0800
	global_store_b8 v[2:3], v9, off                            // 00000007E7BC: DC620000 007C0902
	s_nop 0                                                    // 00000007E7C4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E7C8: BFB60003
	s_endpgm                                                   // 00000007E7CC: BFB00000
add_char_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007E7D0: BF800000
	.long 0xbf800000                                           // 00000007E7D4: BF800000
	.long 0xbf800000                                           // 00000007E7D8: BF800000
	.long 0xbf800000                                           // 00000007E7DC: BF800000
	.long 0xbf800000                                           // 00000007E7E0: BF800000
	.long 0xbf800000                                           // 00000007E7E4: BF800000
	.long 0xbf800000                                           // 00000007E7E8: BF800000
	.long 0xbf800000                                           // 00000007E7EC: BF800000
	.long 0xbf800000                                           // 00000007E7F0: BF800000
	.long 0xbf800000                                           // 00000007E7F4: BF800000
	.long 0xbf800000                                           // 00000007E7F8: BF800000
	.long 0xbf800000                                           // 00000007E7FC: BF800000

	.p2align	8
	.type	add_char_get_global_size_get_local_id,@function
	.size	add_char_get_global_size_get_local_id, add_char_get_global_size_get_local_id_symend-add_char_get_global_size_get_local_id
add_char_get_global_size_get_local_id:
	v_mov_b32_e32 v1, 0                                        // 00000007E800: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007E804: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007E80C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E814: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E81C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007E820: DC520022 02000001
	s_clause 0x4                                               // 00000007E828: BF850004
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000007E82C: F4040180 F8000010
	s_load_b64 s[12:13], s[0:1], null                          // 00000007E834: F4040300 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E83C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000007E844: F4000140 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 00000007E84C: F4040380 F8000048
	v_lshl_or_b32 v6, s2, 4, v3                                // 00000007E854: D6560006 040D0802
	v_lshl_or_b32 v7, s3, 1, v4                                // 00000007E85C: D6560007 04110203
	s_waitcnt lgkmcnt(0)                                       // 00000007E864: BF89FC07
	s_lshl_b32 s6, s6, 4                                       // 00000007E868: 84068406
	s_add_u32 s8, s12, s8                                      // 00000007E86C: 8008080C
	s_addc_u32 s9, s13, s9                                     // 00000007E870: 8209090D
	s_lshl_b32 s7, s7, 1                                       // 00000007E874: 84078107
	s_add_u32 s2, s12, s10                                     // 00000007E878: 80020A0C
	s_addc_u32 s3, s13, s11                                    // 00000007E87C: 82030B0D
	s_waitcnt vmcnt(0)                                         // 00000007E880: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007E884: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007E888: 4A040406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007E88C: BF870112
	v_add_nc_u32_e32 v5, s7, v5                                // 00000007E890: 4A0A0A07
	v_add_nc_u16 v2.l, v2.l, v3.l                              // 00000007E894: D7030002 00020702
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007E89C: BF870002
	v_add_nc_u16 v3.l, v5.l, v4.l                              // 00000007E8A0: D7030003 00020905
	s_clause 0x1                                               // 00000007E8A8: BF850001
	global_store_b8 v6, v2, s[8:9]                             // 00000007E8AC: DC620000 00080206
	global_store_b8 v7, v3, s[2:3]                             // 00000007E8B4: DC620000 00020307
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007E8BC: DC4A0026 01000001
	s_lshl_b32 s0, s5, 1                                       // 00000007E8C4: 84008105
	s_waitcnt vmcnt(0)                                         // 00000007E8C8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007E8CC: 4A020200
	s_add_u32 s0, s12, s14                                     // 00000007E8D0: 80000E0C
	s_addc_u32 s1, s13, s15                                    // 00000007E8D4: 82010F0D
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007E8D8: BF870001
	v_add_nc_u16 v1.l, v1.l, v0.l                              // 00000007E8DC: D7030001 00020101
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007E8E4: D6560000 04010204
	global_store_b8 v0, v1, s[0:1]                             // 00000007E8EC: DC620000 00000100
	s_nop 0                                                    // 00000007E8F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E8F8: BFB60003
	s_endpgm                                                   // 00000007E8FC: BFB00000
add_char_get_global_size_get_local_id_symend:

	.p2align	8
	.type	add_char_get_num_groups_get_local_id,@function
	.size	add_char_get_num_groups_get_local_id, add_char_get_num_groups_get_local_id_symend-add_char_get_num_groups_get_local_id
add_char_get_num_groups_get_local_id:
	v_mov_b32_e32 v1, 0                                        // 00000007E900: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007E904: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007E90C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E914: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E91C: BEA10080
	s_clause 0x1                                               // 00000007E920: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007E924: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007E92C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007E934: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000007E938: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007E940: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000007E948: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007E950: F4040180 F8000048
	v_lshl_or_b32 v5, s2, 1, v3                                // 00000007E958: D6560005 040D0202
	s_waitcnt vmcnt(1)                                         // 00000007E960: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007E964: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007E968: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007E96C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007E970: D43D0000 00020280
	v_lshl_or_b32 v1, s3, 1, v4                                // 00000007E978: D6560001 04110203
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007E980: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007E984: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 00000007E988: BF89FC07
	s_addc_u32 s1, s10, 0                                      // 00000007E98C: 8201800A
	s_add_u32 s12, s8, s12                                     // 00000007E990: 800C0C08
	s_addc_u32 s13, s9, s13                                    // 00000007E994: 820D0D09
	v_add_nc_u16 v2.l, s1, v3.l                                // 00000007E998: D7030002 00020601
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007E9A0: BF07806A
	s_addc_u32 s10, s11, 0                                     // 00000007E9A4: 820A800B
	s_add_u32 s2, s8, s14                                      // 00000007E9A8: 80020E08
	s_addc_u32 s3, s9, s15                                     // 00000007E9AC: 82030F09
	s_cmp_lg_u32 s0, 0                                         // 00000007E9B0: BF078000
	v_add_nc_u16 v3.l, s10, v4.l                               // 00000007E9B4: D7030003 0002080A
	s_addc_u32 s0, s5, 0                                       // 00000007E9BC: 82008005
	global_store_b8 v5, v2, s[12:13]                           // 00000007E9C0: DC620000 000C0205
	v_add_nc_u16 v4.l, s0, v0.l                                // 00000007E9C8: D7030004 00020000
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007E9D0: D6560000 04010404
	s_add_u32 s0, s8, s6                                       // 00000007E9D8: 80000608
	s_addc_u32 s1, s9, s7                                      // 00000007E9DC: 82010709
	s_clause 0x1                                               // 00000007E9E0: BF850001
	global_store_b8 v1, v3, s[2:3]                             // 00000007E9E4: DC620000 00020301
	global_store_b8 v0, v4, s[0:1]                             // 00000007E9EC: DC620000 00000400
	s_nop 0                                                    // 00000007E9F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E9F8: BFB60003
	s_endpgm                                                   // 00000007E9FC: BFB00000
add_char_get_num_groups_get_local_id_symend:

	.p2align	8
	.type	add_char_get_work_dim_get_local_id,@function
	.size	add_char_get_work_dim_get_local_id, add_char_get_work_dim_get_local_id_symend-add_char_get_work_dim_get_local_id
add_char_get_work_dim_get_local_id:
	s_clause 0x3                                               // 00000007EA00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000007EA04: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007EA0C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007EA14: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007EA1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007EA24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007EA2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EA34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007EA3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007EA40: BF870193
	v_lshl_or_b32 v3, s2, 1, v1                                // 00000007EA44: D6560003 04050202
	v_lshl_or_b32 v4, s3, 1, v2                                // 00000007EA4C: D6560004 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007EA54: BF870003
	v_lshl_or_b32 v5, s4, 2, v0                                // 00000007EA58: D6560005 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007EA60: BF89FC07
	v_add_nc_u16 v1.l, s5, v1.l                                // 00000007EA64: D7030001 00020205
	v_add_nc_u16 v2.l, s5, v2.l                                // 00000007EA6C: D7030002 00020405
	s_add_u32 s2, s6, s8                                       // 00000007EA74: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007EA78: 82030907
	v_add_nc_u16 v0.l, s5, v0.l                                // 00000007EA7C: D7030000 00020005
	s_add_u32 s4, s6, s10                                      // 00000007EA84: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007EA88: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007EA8C: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007EA90: 82010107
	s_clause 0x2                                               // 00000007EA94: BF850002
	global_store_b8 v3, v1, s[2:3]                             // 00000007EA98: DC620000 00020103
	global_store_b8 v4, v2, s[4:5]                             // 00000007EAA0: DC620000 00040204
	global_store_b8 v5, v0, s[0:1]                             // 00000007EAA8: DC620000 00000005
	s_nop 0                                                    // 00000007EAB0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EAB4: BFB60003
	s_endpgm                                                   // 00000007EAB8: BFB00000
add_char_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 00000007EABC: BF800000
	.long 0xbf800000                                           // 00000007EAC0: BF800000
	.long 0xbf800000                                           // 00000007EAC4: BF800000
	.long 0xbf800000                                           // 00000007EAC8: BF800000
	.long 0xbf800000                                           // 00000007EACC: BF800000
	.long 0xbf800000                                           // 00000007EAD0: BF800000
	.long 0xbf800000                                           // 00000007EAD4: BF800000
	.long 0xbf800000                                           // 00000007EAD8: BF800000
	.long 0xbf800000                                           // 00000007EADC: BF800000
	.long 0xbf800000                                           // 00000007EAE0: BF800000
	.long 0xbf800000                                           // 00000007EAE4: BF800000
	.long 0xbf800000                                           // 00000007EAE8: BF800000
	.long 0xbf800000                                           // 00000007EAEC: BF800000
	.long 0xbf800000                                           // 00000007EAF0: BF800000
	.long 0xbf800000                                           // 00000007EAF4: BF800000
	.long 0xbf800000                                           // 00000007EAF8: BF800000
	.long 0xbf800000                                           // 00000007EAFC: BF800000

	.p2align	8
	.type	add_char_x_get_group_id,@function
	.size	add_char_x_get_group_id, add_char_x_get_group_id_symend-add_char_x_get_group_id
add_char_x_get_group_id:
	s_clause 0x3                                               // 00000007EB00: BF850003
	s_load_b64 s[6:7], s[0:1], null                            // 00000007EB04: F4040180 F8000000
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007EB0C: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007EB14: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007EB1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007EB24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007EB2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EB34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007EB3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007EB40: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007EB44: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007EB4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007EB54: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007EB58: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007EB60: BF89FC07
	s_add_i32 s2, s5, s2                                       // 00000007EB64: 81020205
	s_add_u32 s8, s6, s8                                       // 00000007EB68: 80080806
	s_addc_u32 s9, s7, s9                                      // 00000007EB6C: 82090907
	s_add_i32 s12, s5, s3                                      // 00000007EB70: 810C0305
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007EB74: BF870009
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s12            // 00000007EB78: CA100002 0304000C
	s_add_u32 s2, s6, s10                                      // 00000007EB80: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000007EB84: 82030B07
	s_add_i32 s5, s5, s4                                       // 00000007EB88: 81050405
	s_add_u32 s0, s6, s0                                       // 00000007EB8C: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007EB90: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007EB94: 82010107
	s_clause 0x2                                               // 00000007EB98: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 00000007EB9C: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 00000007EBA4: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 00000007EBAC: DC620000 00000500
	s_nop 0                                                    // 00000007EBB4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EBB8: BFB60003
	s_endpgm                                                   // 00000007EBBC: BFB00000
add_char_x_get_group_id_symend:
	.long 0xbf800000                                           // 00000007EBC0: BF800000
	.long 0xbf800000                                           // 00000007EBC4: BF800000
	.long 0xbf800000                                           // 00000007EBC8: BF800000
	.long 0xbf800000                                           // 00000007EBCC: BF800000
	.long 0xbf800000                                           // 00000007EBD0: BF800000
	.long 0xbf800000                                           // 00000007EBD4: BF800000
	.long 0xbf800000                                           // 00000007EBD8: BF800000
	.long 0xbf800000                                           // 00000007EBDC: BF800000
	.long 0xbf800000                                           // 00000007EBE0: BF800000
	.long 0xbf800000                                           // 00000007EBE4: BF800000
	.long 0xbf800000                                           // 00000007EBE8: BF800000
	.long 0xbf800000                                           // 00000007EBEC: BF800000
	.long 0xbf800000                                           // 00000007EBF0: BF800000
	.long 0xbf800000                                           // 00000007EBF4: BF800000
	.long 0xbf800000                                           // 00000007EBF8: BF800000
	.long 0xbf800000                                           // 00000007EBFC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_get_group_id,@function
	.size	add_char_get_global_offset_get_group_id, add_char_get_global_offset_get_group_id_symend-add_char_get_global_offset_get_group_id
add_char_get_global_offset_get_group_id:
	s_clause 0x2                                               // 00000007EC00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007EC04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007EC0C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007EC14: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007EC1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007EC24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EC2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007EC34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007EC38: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007EC3C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007EC44: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007EC4C: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007EC50: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007EC58: BF89FC07
	s_add_i32 s2, s8, s2                                       // 00000007EC5C: 81020208
	s_add_u32 s8, s6, s8                                       // 00000007EC60: 80080806
	s_addc_u32 s9, s7, s9                                      // 00000007EC64: 82090907
	s_add_i32 s5, s10, s3                                      // 00000007EC68: 8105030A
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007EC6C: BF870009
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s5             // 00000007EC70: CA100002 03040005
	s_add_u32 s2, s6, s10                                      // 00000007EC78: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000007EC7C: 82030B07
	s_add_i32 s5, s0, s4                                       // 00000007EC80: 81050400
	s_add_u32 s0, s6, s0                                       // 00000007EC84: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007EC88: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007EC8C: 82010107
	s_clause 0x2                                               // 00000007EC90: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 00000007EC94: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 00000007EC9C: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 00000007ECA4: DC620000 00000500
	s_nop 0                                                    // 00000007ECAC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007ECB0: BFB60003
	s_endpgm                                                   // 00000007ECB4: BFB00000
add_char_get_global_offset_get_group_id_symend:
	.long 0xbf800000                                           // 00000007ECB8: BF800000
	.long 0xbf800000                                           // 00000007ECBC: BF800000
	.long 0xbf800000                                           // 00000007ECC0: BF800000
	.long 0xbf800000                                           // 00000007ECC4: BF800000
	.long 0xbf800000                                           // 00000007ECC8: BF800000
	.long 0xbf800000                                           // 00000007ECCC: BF800000
	.long 0xbf800000                                           // 00000007ECD0: BF800000
	.long 0xbf800000                                           // 00000007ECD4: BF800000
	.long 0xbf800000                                           // 00000007ECD8: BF800000
	.long 0xbf800000                                           // 00000007ECDC: BF800000
	.long 0xbf800000                                           // 00000007ECE0: BF800000
	.long 0xbf800000                                           // 00000007ECE4: BF800000
	.long 0xbf800000                                           // 00000007ECE8: BF800000
	.long 0xbf800000                                           // 00000007ECEC: BF800000
	.long 0xbf800000                                           // 00000007ECF0: BF800000
	.long 0xbf800000                                           // 00000007ECF4: BF800000
	.long 0xbf800000                                           // 00000007ECF8: BF800000
	.long 0xbf800000                                           // 00000007ECFC: BF800000

	.p2align	8
	.type	add_char_get_local_id_get_group_id,@function
	.size	add_char_get_local_id_get_group_id, add_char_get_local_id_get_group_id_symend-add_char_get_local_id_get_group_id
add_char_get_local_id_get_group_id:
	s_clause 0x2                                               // 00000007ED00: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007ED04: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007ED0C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007ED14: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007ED1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007ED24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007ED2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007ED34: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007ED38: BF870003
	v_add_nc_u16 v3.l, s2, v1.l                                // 00000007ED3C: D7030003 00020202
	v_lshl_or_b32 v1, s2, 3, v1                                // 00000007ED44: D6560001 04050602
	v_add_nc_u16 v4.l, s3, v2.l                                // 00000007ED4C: D7030004 00020403
	v_lshl_or_b32 v2, s3, 2, v2                                // 00000007ED54: D6560002 04090403
	v_add_nc_u16 v5.l, s4, v0.l                                // 00000007ED5C: D7030005 00020004
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007ED64: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007ED6C: BF89FC07
	s_add_u32 s2, s6, s8                                       // 00000007ED70: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007ED74: 82030907
	s_add_u32 s4, s6, s10                                      // 00000007ED78: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007ED7C: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007ED80: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007ED84: 82010107
	s_clause 0x2                                               // 00000007ED88: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007ED8C: DC620000 00020301
	global_store_b8 v2, v4, s[4:5]                             // 00000007ED94: DC620000 00040402
	global_store_b8 v0, v5, s[0:1]                             // 00000007ED9C: DC620000 00000500
	s_nop 0                                                    // 00000007EDA4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EDA8: BFB60003
	s_endpgm                                                   // 00000007EDAC: BFB00000
add_char_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007EDB0: BF800000
	.long 0xbf800000                                           // 00000007EDB4: BF800000
	.long 0xbf800000                                           // 00000007EDB8: BF800000
	.long 0xbf800000                                           // 00000007EDBC: BF800000
	.long 0xbf800000                                           // 00000007EDC0: BF800000
	.long 0xbf800000                                           // 00000007EDC4: BF800000
	.long 0xbf800000                                           // 00000007EDC8: BF800000
	.long 0xbf800000                                           // 00000007EDCC: BF800000
	.long 0xbf800000                                           // 00000007EDD0: BF800000
	.long 0xbf800000                                           // 00000007EDD4: BF800000
	.long 0xbf800000                                           // 00000007EDD8: BF800000
	.long 0xbf800000                                           // 00000007EDDC: BF800000
	.long 0xbf800000                                           // 00000007EDE0: BF800000
	.long 0xbf800000                                           // 00000007EDE4: BF800000
	.long 0xbf800000                                           // 00000007EDE8: BF800000
	.long 0xbf800000                                           // 00000007EDEC: BF800000
	.long 0xbf800000                                           // 00000007EDF0: BF800000
	.long 0xbf800000                                           // 00000007EDF4: BF800000
	.long 0xbf800000                                           // 00000007EDF8: BF800000
	.long 0xbf800000                                           // 00000007EDFC: BF800000

	.p2align	8
	.type	add_char_get_group_id_get_group_id,@function
	.size	add_char_get_group_id_get_group_id, add_char_get_group_id_get_group_id_symend-add_char_get_group_id_get_group_id
add_char_get_group_id_get_group_id:
	s_clause 0x2                                               // 00000007EE00: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007EE04: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007EE0C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007EE14: F4040000 F8000048
	s_lshl_b32 s2, s2, 1                                       // 00000007EE1C: 84028102
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007EE20: D6100002 02291500
	v_mov_b32_e32 v3, s2                                       // 00000007EE28: 7E060202
	s_mov_b32 s33, 0                                           // 00000007EE2C: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007EE30: BF8704D2
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007EE34: D6560002 04090803
	s_waitcnt lgkmcnt(0)                                       // 00000007EE3C: BF89FC07
	s_add_u32 s8, s6, s8                                       // 00000007EE40: 80080806
	s_addc_u32 s9, s7, s9                                      // 00000007EE44: 82090907
	s_lshl_b32 s5, s3, 1                                       // 00000007EE48: 84058103
	v_dual_mov_b32 v4, s5 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007EE4C: CA240005 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EE58: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EE60: BF870002
	v_or_b32_e32 v1, s2, v1                                    // 00000007EE64: 38020202
	s_add_u32 s2, s6, s10                                      // 00000007EE68: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000007EE6C: 82030B07
	s_lshl_b32 s4, s4, 1                                       // 00000007EE70: 84048104
	s_add_u32 s0, s6, s0                                       // 00000007EE74: 80000006
	v_or_b32_e32 v0, s4, v0                                    // 00000007EE78: 38000004
	v_mov_b32_e32 v5, s4                                       // 00000007EE7C: 7E0A0204
	s_addc_u32 s1, s7, s1                                      // 00000007EE80: 82010107
	s_clause 0x2                                               // 00000007EE84: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 00000007EE88: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 00000007EE90: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 00000007EE98: DC620000 00000500
	s_nop 0                                                    // 00000007EEA0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EEA4: BFB60003
	s_endpgm                                                   // 00000007EEA8: BFB00000
add_char_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007EEAC: BF800000
	.long 0xbf800000                                           // 00000007EEB0: BF800000
	.long 0xbf800000                                           // 00000007EEB4: BF800000
	.long 0xbf800000                                           // 00000007EEB8: BF800000
	.long 0xbf800000                                           // 00000007EEBC: BF800000
	.long 0xbf800000                                           // 00000007EEC0: BF800000
	.long 0xbf800000                                           // 00000007EEC4: BF800000
	.long 0xbf800000                                           // 00000007EEC8: BF800000
	.long 0xbf800000                                           // 00000007EECC: BF800000
	.long 0xbf800000                                           // 00000007EED0: BF800000
	.long 0xbf800000                                           // 00000007EED4: BF800000
	.long 0xbf800000                                           // 00000007EED8: BF800000
	.long 0xbf800000                                           // 00000007EEDC: BF800000
	.long 0xbf800000                                           // 00000007EEE0: BF800000
	.long 0xbf800000                                           // 00000007EEE4: BF800000
	.long 0xbf800000                                           // 00000007EEE8: BF800000
	.long 0xbf800000                                           // 00000007EEEC: BF800000
	.long 0xbf800000                                           // 00000007EEF0: BF800000
	.long 0xbf800000                                           // 00000007EEF4: BF800000
	.long 0xbf800000                                           // 00000007EEF8: BF800000
	.long 0xbf800000                                           // 00000007EEFC: BF800000

	.p2align	8
	.type	add_char_get_local_size_get_group_id,@function
	.size	add_char_get_local_size_get_group_id, add_char_get_local_size_get_group_id_symend-add_char_get_local_size_get_group_id
add_char_get_local_size_get_group_id:
	s_clause 0x2                                               // 00000007EF00: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007EF04: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007EF0C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007EF14: F4040000 F8000048
	s_add_i32 s5, s2, 2                                        // 00000007EF1C: 81058202
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007EF20: D6100002 02291500
	v_mov_b32_e32 v3, s5                                       // 00000007EF28: 7E060205
	s_mov_b32 s33, 0                                           // 00000007EF2C: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007EF30: BF8704D2
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007EF34: D6560002 04090203
	s_waitcnt lgkmcnt(0)                                       // 00000007EF3C: BF89FC07
	s_add_u32 s8, s6, s8                                       // 00000007EF40: 80080806
	s_addc_u32 s9, s7, s9                                      // 00000007EF44: 82090907
	s_add_i32 s5, s3, 2                                        // 00000007EF48: 81058203
	v_dual_mov_b32 v4, s5 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007EF4C: CA240005 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EF58: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EF60: BF870002
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007EF64: D6560001 04050202
	s_add_u32 s2, s6, s10                                      // 00000007EF6C: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000007EF70: 82030B07
	s_add_i32 s5, s4, 4                                        // 00000007EF74: 81058404
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007EF78: D6560000 04010404
	v_mov_b32_e32 v5, s5                                       // 00000007EF80: 7E0A0205
	s_add_u32 s0, s6, s0                                       // 00000007EF84: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007EF88: 82010107
	s_clause 0x2                                               // 00000007EF8C: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 00000007EF90: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 00000007EF98: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 00000007EFA0: DC620000 00000500
	s_nop 0                                                    // 00000007EFA8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EFAC: BFB60003
	s_endpgm                                                   // 00000007EFB0: BFB00000
add_char_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000007EFB4: BF800000
	.long 0xbf800000                                           // 00000007EFB8: BF800000
	.long 0xbf800000                                           // 00000007EFBC: BF800000
	.long 0xbf800000                                           // 00000007EFC0: BF800000
	.long 0xbf800000                                           // 00000007EFC4: BF800000
	.long 0xbf800000                                           // 00000007EFC8: BF800000
	.long 0xbf800000                                           // 00000007EFCC: BF800000
	.long 0xbf800000                                           // 00000007EFD0: BF800000
	.long 0xbf800000                                           // 00000007EFD4: BF800000
	.long 0xbf800000                                           // 00000007EFD8: BF800000
	.long 0xbf800000                                           // 00000007EFDC: BF800000
	.long 0xbf800000                                           // 00000007EFE0: BF800000
	.long 0xbf800000                                           // 00000007EFE4: BF800000
	.long 0xbf800000                                           // 00000007EFE8: BF800000
	.long 0xbf800000                                           // 00000007EFEC: BF800000
	.long 0xbf800000                                           // 00000007EFF0: BF800000
	.long 0xbf800000                                           // 00000007EFF4: BF800000
	.long 0xbf800000                                           // 00000007EFF8: BF800000
	.long 0xbf800000                                           // 00000007EFFC: BF800000

	.p2align	8
	.type	add_char_get_global_id_get_group_id,@function
	.size	add_char_get_global_id_get_group_id, add_char_get_global_id_get_group_id_symend-add_char_get_global_id_get_group_id
add_char_get_global_id_get_group_id:
	s_clause 0x2                                               // 00000007F000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F004: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007F00C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007F014: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F01C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F024: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F02C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F034: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F038: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007F03C: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007F044: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007F04C: BF8701A3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007F050: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007F058: BF89FC07
	v_add3_u32 v5, s2, s8, v4                                  // 00000007F05C: D6550005 04101002
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007F064: BF870093
	v_add_co_u32 v1, s2, s10, v1                               // 00000007F068: D7000201 0002020A
	v_add_co_ci_u32_e64 v2, null, s11, 0, s2                   // 00000007F070: D5207C02 0009000B
	v_add_co_u32 v3, s2, s6, v0                                // 00000007F078: D7000203 00020006
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007F080: BF870211
	v_add_co_ci_u32_e64 v6, null, s7, 0, s2                    // 00000007F084: D5207C06 00090007
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000007F08C: D7006A00 00020200
	v_add_nc_u32_e32 v7, s3, v1                                // 00000007F094: 4A0E0203
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000007F098: 40020401
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007F09C: D7006A02 00020600
	v_add_nc_u32_e32 v8, s4, v3                                // 00000007F0A4: 4A100604
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v6, vcc_lo             // 00000007F0A8: 40060C01
	s_clause 0x2                                               // 00000007F0AC: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007F0B0: DC620000 00000504
	global_store_b8 v[0:1], v7, off                            // 00000007F0B8: DC620000 007C0700
	global_store_b8 v[2:3], v8, off                            // 00000007F0C0: DC620000 007C0802
	s_nop 0                                                    // 00000007F0C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F0CC: BFB60003
	s_endpgm                                                   // 00000007F0D0: BFB00000
add_char_get_global_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007F0D4: BF800000
	.long 0xbf800000                                           // 00000007F0D8: BF800000
	.long 0xbf800000                                           // 00000007F0DC: BF800000
	.long 0xbf800000                                           // 00000007F0E0: BF800000
	.long 0xbf800000                                           // 00000007F0E4: BF800000
	.long 0xbf800000                                           // 00000007F0E8: BF800000
	.long 0xbf800000                                           // 00000007F0EC: BF800000
	.long 0xbf800000                                           // 00000007F0F0: BF800000
	.long 0xbf800000                                           // 00000007F0F4: BF800000
	.long 0xbf800000                                           // 00000007F0F8: BF800000
	.long 0xbf800000                                           // 00000007F0FC: BF800000

	.p2align	8
	.type	add_char_get_global_size_get_group_id,@function
	.size	add_char_get_global_size_get_group_id, add_char_get_global_size_get_group_id_symend-add_char_get_global_size_get_group_id
add_char_get_global_size_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 00000007F100: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007F104: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007F10C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F114: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F11C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007F120: DC520022 02000001
	s_clause 0x4                                               // 00000007F128: BF850004
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000007F12C: F4040180 F8000010
	s_load_b64 s[12:13], s[0:1], null                          // 00000007F134: F4040300 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F13C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000007F144: F4000140 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 00000007F14C: F4040380 F8000048
	v_lshl_or_b32 v3, s2, 4, v3                                // 00000007F154: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007F15C: D6560004 04110203
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007F164: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007F16C: BF89FC07
	s_lshl_b32 s6, s6, 4                                       // 00000007F170: 84068406
	s_add_u32 s8, s12, s8                                      // 00000007F174: 8008080C
	s_addc_u32 s9, s13, s9                                     // 00000007F178: 8209090D
	s_lshl_b32 s7, s7, 1                                       // 00000007F17C: 84078107
	s_waitcnt vmcnt(0)                                         // 00000007F180: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007F184: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007F188: 4A040406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007F18C: BF870112
	v_add_nc_u32_e32 v5, s7, v5                                // 00000007F190: 4A0A0A07
	v_add_nc_u32_e32 v2, s2, v2                                // 00000007F194: 4A040402
	s_add_u32 s2, s12, s10                                     // 00000007F198: 80020A0C
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007F19C: BF870002
	v_add_nc_u32_e32 v5, s3, v5                                // 00000007F1A0: 4A0A0A03
	s_addc_u32 s3, s13, s11                                    // 00000007F1A4: 82030B0D
	s_clause 0x1                                               // 00000007F1A8: BF850001
	global_store_b8 v3, v2, s[8:9]                             // 00000007F1AC: DC620000 00080203
	global_store_b8 v4, v5, s[2:3]                             // 00000007F1B4: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007F1BC: DC4A0026 01000001
	s_lshl_b32 s0, s5, 1                                       // 00000007F1C4: 84008105
	s_waitcnt vmcnt(0)                                         // 00000007F1C8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007F1CC: 4A020200
	s_add_u32 s0, s12, s14                                     // 00000007F1D0: 80000E0C
	s_addc_u32 s1, s13, s15                                    // 00000007F1D4: 82010F0D
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007F1D8: BF870001
	v_add_nc_u32_e32 v1, s4, v1                                // 00000007F1DC: 4A020204
	global_store_b8 v0, v1, s[0:1]                             // 00000007F1E0: DC620000 00000100
	s_nop 0                                                    // 00000007F1E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F1EC: BFB60003
	s_endpgm                                                   // 00000007F1F0: BFB00000
add_char_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000007F1F4: BF800000
	.long 0xbf800000                                           // 00000007F1F8: BF800000
	.long 0xbf800000                                           // 00000007F1FC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_get_group_id,@function
	.size	add_char_get_num_groups_get_group_id, add_char_get_num_groups_get_group_id_symend-add_char_get_num_groups_get_group_id
add_char_get_num_groups_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 00000007F200: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007F204: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007F20C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F214: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F21C: BEA10080
	s_clause 0x1                                               // 00000007F220: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007F224: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007F22C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007F234: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000007F238: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007F240: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000007F248: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007F250: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 00000007F258: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007F260: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007F268: D6560000 04010404
	s_waitcnt vmcnt(1)                                         // 00000007F270: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007F274: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007F278: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007F27C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007F280: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007F288: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007F28C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007F290: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 00000007F294: BF89FC07
	s_addc_u32 s1, s2, s10                                     // 00000007F298: 82010A02
	s_add_u32 s12, s8, s12                                     // 00000007F29C: 800C0C08
	s_addc_u32 s13, s9, s13                                    // 00000007F2A0: 820D0D09
	v_mov_b32_e32 v1, s1                                       // 00000007F2A4: 7E020201
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007F2A8: BF07806A
	s_addc_u32 s1, s3, s11                                     // 00000007F2AC: 82010B03
	s_add_u32 s2, s8, s14                                      // 00000007F2B0: 80020E08
	v_mov_b32_e32 v2, s1                                       // 00000007F2B4: 7E040201
	s_addc_u32 s3, s9, s15                                     // 00000007F2B8: 82030F09
	s_cmp_lg_u32 s0, 0                                         // 00000007F2BC: BF078000
	global_store_b8 v3, v1, s[12:13]                           // 00000007F2C0: DC620000 000C0103
	s_addc_u32 s0, s4, s5                                      // 00000007F2C8: 82000504
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007F2CC: BF870009
	v_mov_b32_e32 v5, s0                                       // 00000007F2D0: 7E0A0200
	s_add_u32 s0, s8, s6                                       // 00000007F2D4: 80000608
	s_addc_u32 s1, s9, s7                                      // 00000007F2D8: 82010709
	s_clause 0x1                                               // 00000007F2DC: BF850001
	global_store_b8 v4, v2, s[2:3]                             // 00000007F2E0: DC620000 00020204
	global_store_b8 v0, v5, s[0:1]                             // 00000007F2E8: DC620000 00000500
	s_nop 0                                                    // 00000007F2F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F2F4: BFB60003
	s_endpgm                                                   // 00000007F2F8: BFB00000
add_char_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 00000007F2FC: BF800000

	.p2align	8
	.type	add_char_get_work_dim_get_group_id,@function
	.size	add_char_get_work_dim_get_group_id, add_char_get_work_dim_get_group_id_symend-add_char_get_work_dim_get_group_id
add_char_get_work_dim_get_group_id:
	s_clause 0x3                                               // 00000007F300: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000007F304: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F30C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F314: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007F31C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F324: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F32C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F334: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F33C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F340: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007F344: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007F34C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 00000007F354: BF8704B3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007F358: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007F360: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 00000007F364: 8B05FF05 0000FFFF
	s_add_i32 s2, s5, s2                                       // 00000007F36C: 81020205
	s_add_u32 s8, s6, s8                                       // 00000007F370: 80080806
	s_addc_u32 s9, s7, s9                                      // 00000007F374: 82090907
	s_add_i32 s12, s5, s3                                      // 00000007F378: 810C0305
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007F37C: BF870009
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s12            // 00000007F380: CA100002 0304000C
	s_add_u32 s2, s6, s10                                      // 00000007F388: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000007F38C: 82030B07
	s_add_i32 s5, s5, s4                                       // 00000007F390: 81050405
	s_add_u32 s0, s6, s0                                       // 00000007F394: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007F398: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007F39C: 82010107
	s_clause 0x2                                               // 00000007F3A0: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 00000007F3A4: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 00000007F3AC: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 00000007F3B4: DC620000 00000500
	s_nop 0                                                    // 00000007F3BC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F3C0: BFB60003
	s_endpgm                                                   // 00000007F3C4: BFB00000
add_char_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 00000007F3C8: BF800000
	.long 0xbf800000                                           // 00000007F3CC: BF800000
	.long 0xbf800000                                           // 00000007F3D0: BF800000
	.long 0xbf800000                                           // 00000007F3D4: BF800000
	.long 0xbf800000                                           // 00000007F3D8: BF800000
	.long 0xbf800000                                           // 00000007F3DC: BF800000
	.long 0xbf800000                                           // 00000007F3E0: BF800000
	.long 0xbf800000                                           // 00000007F3E4: BF800000
	.long 0xbf800000                                           // 00000007F3E8: BF800000
	.long 0xbf800000                                           // 00000007F3EC: BF800000
	.long 0xbf800000                                           // 00000007F3F0: BF800000
	.long 0xbf800000                                           // 00000007F3F4: BF800000
	.long 0xbf800000                                           // 00000007F3F8: BF800000
	.long 0xbf800000                                           // 00000007F3FC: BF800000

	.p2align	8
	.type	add_char_x_get_local_size,@function
	.size	add_char_x_get_local_size, add_char_x_get_local_size_symend-add_char_x_get_local_size
add_char_x_get_local_size:
	s_clause 0x3                                               // 00000007F400: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007F404: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 00000007F40C: F4040180 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F414: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007F41C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F424: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F42C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F434: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F43C: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007F440: BF870112
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007F444: D6560002 04090203
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007F44C: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007F454: BF89FC07
	s_add_i32 s4, s5, 16                                       // 00000007F458: 81049005
	v_add_nc_u16 v3.l, s5, 2                                   // 00000007F45C: D7030003 00010405
	v_mov_b32_e32 v4, s4                                       // 00000007F464: 7E080204
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007F468: D6560001 04050802
	s_add_u32 s2, s6, s8                                       // 00000007F470: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007F474: 82030907
	s_add_u32 s4, s6, s10                                      // 00000007F478: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007F47C: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007F480: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007F484: 82010107
	s_clause 0x2                                               // 00000007F488: BF850002
	global_store_b8 v1, v4, s[2:3]                             // 00000007F48C: DC620000 00020401
	global_store_b8 v2, v3, s[4:5]                             // 00000007F494: DC620000 00040302
	global_store_b8 v0, v3, s[0:1]                             // 00000007F49C: DC620000 00000300
	s_nop 0                                                    // 00000007F4A4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F4A8: BFB60003
	s_endpgm                                                   // 00000007F4AC: BFB00000
add_char_x_get_local_size_symend:
	.long 0xbf800000                                           // 00000007F4B0: BF800000
	.long 0xbf800000                                           // 00000007F4B4: BF800000
	.long 0xbf800000                                           // 00000007F4B8: BF800000
	.long 0xbf800000                                           // 00000007F4BC: BF800000
	.long 0xbf800000                                           // 00000007F4C0: BF800000
	.long 0xbf800000                                           // 00000007F4C4: BF800000
	.long 0xbf800000                                           // 00000007F4C8: BF800000
	.long 0xbf800000                                           // 00000007F4CC: BF800000
	.long 0xbf800000                                           // 00000007F4D0: BF800000
	.long 0xbf800000                                           // 00000007F4D4: BF800000
	.long 0xbf800000                                           // 00000007F4D8: BF800000
	.long 0xbf800000                                           // 00000007F4DC: BF800000
	.long 0xbf800000                                           // 00000007F4E0: BF800000
	.long 0xbf800000                                           // 00000007F4E4: BF800000
	.long 0xbf800000                                           // 00000007F4E8: BF800000
	.long 0xbf800000                                           // 00000007F4EC: BF800000
	.long 0xbf800000                                           // 00000007F4F0: BF800000
	.long 0xbf800000                                           // 00000007F4F4: BF800000
	.long 0xbf800000                                           // 00000007F4F8: BF800000
	.long 0xbf800000                                           // 00000007F4FC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_get_local_size,@function
	.size	add_char_get_global_offset_get_local_size, add_char_get_global_offset_get_local_size_symend-add_char_get_global_offset_get_local_size
add_char_get_global_offset_get_local_size:
	s_clause 0x2                                               // 00000007F500: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F504: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F50C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007F514: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F51C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F524: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F52C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F534: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F538: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007F53C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007F544: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007F54C: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007F550: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007F558: BF89FC07
	s_add_i32 s5, s8, 2                                        // 00000007F55C: 81058208
	s_add_u32 s2, s6, s8                                       // 00000007F560: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007F564: 82030907
	v_mov_b32_e32 v3, s5                                       // 00000007F568: 7E060205
	s_add_i32 s5, s10, 16                                      // 00000007F56C: 8105900A
	s_add_u32 s8, s6, s10                                      // 00000007F570: 80080A06
	v_mov_b32_e32 v4, s5                                       // 00000007F574: 7E080205
	s_addc_u32 s9, s7, s11                                     // 00000007F578: 82090B07
	s_add_i32 s5, s0, 2                                        // 00000007F57C: 81058200
	s_add_u32 s0, s6, s0                                       // 00000007F580: 80000006
	v_mov_b32_e32 v5, s5                                       // 00000007F584: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000007F588: 82010107
	s_clause 0x2                                               // 00000007F58C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007F590: DC620000 00020301
	global_store_b8 v2, v4, s[8:9]                             // 00000007F598: DC620000 00080402
	global_store_b8 v0, v5, s[0:1]                             // 00000007F5A0: DC620000 00000500
	s_nop 0                                                    // 00000007F5A8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F5AC: BFB60003
	s_endpgm                                                   // 00000007F5B0: BFB00000
add_char_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 00000007F5B4: BF800000
	.long 0xbf800000                                           // 00000007F5B8: BF800000
	.long 0xbf800000                                           // 00000007F5BC: BF800000
	.long 0xbf800000                                           // 00000007F5C0: BF800000
	.long 0xbf800000                                           // 00000007F5C4: BF800000
	.long 0xbf800000                                           // 00000007F5C8: BF800000
	.long 0xbf800000                                           // 00000007F5CC: BF800000
	.long 0xbf800000                                           // 00000007F5D0: BF800000
	.long 0xbf800000                                           // 00000007F5D4: BF800000
	.long 0xbf800000                                           // 00000007F5D8: BF800000
	.long 0xbf800000                                           // 00000007F5DC: BF800000
	.long 0xbf800000                                           // 00000007F5E0: BF800000
	.long 0xbf800000                                           // 00000007F5E4: BF800000
	.long 0xbf800000                                           // 00000007F5E8: BF800000
	.long 0xbf800000                                           // 00000007F5EC: BF800000
	.long 0xbf800000                                           // 00000007F5F0: BF800000
	.long 0xbf800000                                           // 00000007F5F4: BF800000
	.long 0xbf800000                                           // 00000007F5F8: BF800000
	.long 0xbf800000                                           // 00000007F5FC: BF800000

	.p2align	8
	.type	add_char_get_local_id_get_local_size,@function
	.size	add_char_get_local_id_get_local_size, add_char_get_local_id_get_local_size_symend-add_char_get_local_id_get_local_size
add_char_get_local_id_get_local_size:
	s_clause 0x2                                               // 00000007F600: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F604: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F60C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007F614: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F61C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F624: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F62C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F634: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007F638: BF870003
	v_or_b32_e32 v3, 8, v1                                     // 00000007F63C: 38060288
	v_lshl_or_b32 v1, s2, 3, v1                                // 00000007F640: D6560001 04050602
	v_or_b32_e32 v4, 4, v2                                     // 00000007F648: 38080484
	v_lshl_or_b32 v2, s3, 2, v2                                // 00000007F64C: D6560002 04090403
	v_or_b32_e32 v5, 2, v0                                     // 00000007F654: 380A0082
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007F658: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007F660: BF89FC07
	s_add_u32 s2, s6, s8                                       // 00000007F664: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007F668: 82030907
	s_add_u32 s4, s6, s10                                      // 00000007F66C: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007F670: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007F674: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007F678: 82010107
	s_clause 0x2                                               // 00000007F67C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007F680: DC620000 00020301
	global_store_b8 v2, v4, s[4:5]                             // 00000007F688: DC620000 00040402
	global_store_b8 v0, v5, s[0:1]                             // 00000007F690: DC620000 00000500
	s_nop 0                                                    // 00000007F698: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F69C: BFB60003
	s_endpgm                                                   // 00000007F6A0: BFB00000
add_char_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007F6A4: BF800000
	.long 0xbf800000                                           // 00000007F6A8: BF800000
	.long 0xbf800000                                           // 00000007F6AC: BF800000
	.long 0xbf800000                                           // 00000007F6B0: BF800000
	.long 0xbf800000                                           // 00000007F6B4: BF800000
	.long 0xbf800000                                           // 00000007F6B8: BF800000
	.long 0xbf800000                                           // 00000007F6BC: BF800000
	.long 0xbf800000                                           // 00000007F6C0: BF800000
	.long 0xbf800000                                           // 00000007F6C4: BF800000
	.long 0xbf800000                                           // 00000007F6C8: BF800000
	.long 0xbf800000                                           // 00000007F6CC: BF800000
	.long 0xbf800000                                           // 00000007F6D0: BF800000
	.long 0xbf800000                                           // 00000007F6D4: BF800000
	.long 0xbf800000                                           // 00000007F6D8: BF800000
	.long 0xbf800000                                           // 00000007F6DC: BF800000
	.long 0xbf800000                                           // 00000007F6E0: BF800000
	.long 0xbf800000                                           // 00000007F6E4: BF800000
	.long 0xbf800000                                           // 00000007F6E8: BF800000
	.long 0xbf800000                                           // 00000007F6EC: BF800000
	.long 0xbf800000                                           // 00000007F6F0: BF800000
	.long 0xbf800000                                           // 00000007F6F4: BF800000
	.long 0xbf800000                                           // 00000007F6F8: BF800000
	.long 0xbf800000                                           // 00000007F6FC: BF800000

	.p2align	8
	.type	add_char_get_group_id_get_local_size,@function
	.size	add_char_get_group_id_get_local_size, add_char_get_group_id_get_local_size_symend-add_char_get_group_id_get_local_size
add_char_get_group_id_get_local_size:
	s_clause 0x2                                               // 00000007F700: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F704: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F70C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007F714: F4040000 F8000048
	s_add_i32 s5, s2, 2                                        // 00000007F71C: 81058202
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F720: D6100002 02291500
	v_mov_b32_e32 v3, s5                                       // 00000007F728: 7E060205
	s_mov_b32 s33, 0                                           // 00000007F72C: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007F730: BF8704D2
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007F734: D6560002 04090803
	s_waitcnt lgkmcnt(0)                                       // 00000007F73C: BF89FC07
	s_add_u32 s8, s6, s8                                       // 00000007F740: 80080806
	s_addc_u32 s9, s7, s9                                      // 00000007F744: 82090907
	s_add_i32 s5, s3, 16                                       // 00000007F748: 81059003
	v_dual_mov_b32 v4, s5 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007F74C: CA240005 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F758: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007F760: BF870002
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007F764: D6560001 04050202
	s_add_u32 s2, s6, s10                                      // 00000007F76C: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000007F770: 82030B07
	s_add_i32 s5, s4, 2                                        // 00000007F774: 81058204
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007F778: D6560000 04010204
	v_mov_b32_e32 v5, s5                                       // 00000007F780: 7E0A0205
	s_add_u32 s0, s6, s0                                       // 00000007F784: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007F788: 82010107
	s_clause 0x2                                               // 00000007F78C: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 00000007F790: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 00000007F798: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 00000007F7A0: DC620000 00000500
	s_nop 0                                                    // 00000007F7A8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F7AC: BFB60003
	s_endpgm                                                   // 00000007F7B0: BFB00000
add_char_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007F7B4: BF800000
	.long 0xbf800000                                           // 00000007F7B8: BF800000
	.long 0xbf800000                                           // 00000007F7BC: BF800000
	.long 0xbf800000                                           // 00000007F7C0: BF800000
	.long 0xbf800000                                           // 00000007F7C4: BF800000
	.long 0xbf800000                                           // 00000007F7C8: BF800000
	.long 0xbf800000                                           // 00000007F7CC: BF800000
	.long 0xbf800000                                           // 00000007F7D0: BF800000
	.long 0xbf800000                                           // 00000007F7D4: BF800000
	.long 0xbf800000                                           // 00000007F7D8: BF800000
	.long 0xbf800000                                           // 00000007F7DC: BF800000
	.long 0xbf800000                                           // 00000007F7E0: BF800000
	.long 0xbf800000                                           // 00000007F7E4: BF800000
	.long 0xbf800000                                           // 00000007F7E8: BF800000
	.long 0xbf800000                                           // 00000007F7EC: BF800000
	.long 0xbf800000                                           // 00000007F7F0: BF800000
	.long 0xbf800000                                           // 00000007F7F4: BF800000
	.long 0xbf800000                                           // 00000007F7F8: BF800000
	.long 0xbf800000                                           // 00000007F7FC: BF800000

	.p2align	8
	.type	add_char_get_local_size_get_local_size,@function
	.size	add_char_get_local_size_get_local_size, add_char_get_local_size_get_local_size_symend-add_char_get_local_size_get_local_size
add_char_get_local_size_get_local_size:
	s_clause 0x2                                               // 00000007F800: BF850002
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F804: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F80C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007F814: F4040000 F8000048
	v_dual_mov_b32 v4, 8 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007F81C: CA240088 040000FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F828: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F830: D6100000 02292900
	v_mov_b32_e32 v3, 4                                        // 00000007F838: 7E060284
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007F83C: BF870004
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007F840: D6560001 04050202
	s_mov_b32 s33, 0                                           // 00000007F848: BEA10080
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007F84C: D6560002 04090203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007F854: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007F85C: BF89FC07
	s_add_u32 s2, s6, s8                                       // 00000007F860: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007F864: 82030907
	s_add_u32 s4, s6, s10                                      // 00000007F868: 80040A06
	s_addc_u32 s5, s7, s11                                     // 00000007F86C: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000007F870: 80000006
	s_addc_u32 s1, s7, s1                                      // 00000007F874: 82010107
	s_clause 0x2                                               // 00000007F878: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007F87C: DC620000 00020301
	global_store_b8 v2, v3, s[4:5]                             // 00000007F884: DC620000 00040302
	global_store_b8 v0, v4, s[0:1]                             // 00000007F88C: DC620000 00000400
	s_nop 0                                                    // 00000007F894: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F898: BFB60003
	s_endpgm                                                   // 00000007F89C: BFB00000
add_char_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000007F8A0: BF800000
	.long 0xbf800000                                           // 00000007F8A4: BF800000
	.long 0xbf800000                                           // 00000007F8A8: BF800000
	.long 0xbf800000                                           // 00000007F8AC: BF800000
	.long 0xbf800000                                           // 00000007F8B0: BF800000
	.long 0xbf800000                                           // 00000007F8B4: BF800000
	.long 0xbf800000                                           // 00000007F8B8: BF800000
	.long 0xbf800000                                           // 00000007F8BC: BF800000
	.long 0xbf800000                                           // 00000007F8C0: BF800000
	.long 0xbf800000                                           // 00000007F8C4: BF800000
	.long 0xbf800000                                           // 00000007F8C8: BF800000
	.long 0xbf800000                                           // 00000007F8CC: BF800000
	.long 0xbf800000                                           // 00000007F8D0: BF800000
	.long 0xbf800000                                           // 00000007F8D4: BF800000
	.long 0xbf800000                                           // 00000007F8D8: BF800000
	.long 0xbf800000                                           // 00000007F8DC: BF800000
	.long 0xbf800000                                           // 00000007F8E0: BF800000
	.long 0xbf800000                                           // 00000007F8E4: BF800000
	.long 0xbf800000                                           // 00000007F8E8: BF800000
	.long 0xbf800000                                           // 00000007F8EC: BF800000
	.long 0xbf800000                                           // 00000007F8F0: BF800000
	.long 0xbf800000                                           // 00000007F8F4: BF800000
	.long 0xbf800000                                           // 00000007F8F8: BF800000
	.long 0xbf800000                                           // 00000007F8FC: BF800000

	.p2align	8
	.type	add_char_get_global_id_get_local_size,@function
	.size	add_char_get_global_id_get_local_size, add_char_get_global_id_get_local_size_symend-add_char_get_global_id_get_local_size
add_char_get_global_id_get_local_size:
	s_clause 0x2                                               // 00000007F900: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F904: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007F90C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007F914: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F91C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F924: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F92C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F934: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F938: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007F93C: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007F944: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007F94C: BF870123
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007F950: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007F958: BF89FC07
	v_add_co_u32 v1, s2, s10, v1                               // 00000007F95C: D7000201 0002020A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 00000007F964: BF870231
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 00000007F968: D5207C03 0009000B
	v_add_nc_u32_e32 v2, s8, v4                                // 00000007F970: 4A040808
	v_add_co_u32 v5, s2, s6, v0                                // 00000007F974: D7000205 00020006
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000007F97C: D7006A00 00020200
	v_add_nc_u16 v7.l, v1.l, 2                                 // 00000007F984: D7030007 00010501
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo             // 00000007F98C: 40020601
	v_add_co_ci_u32_e64 v3, null, s7, 0, s2                    // 00000007F990: D5207C03 00090007
	v_add_nc_u16 v6.l, v2.l, 2                                 // 00000007F998: D7030006 00010502
	v_add_co_u32 v2, vcc_lo, s0, v5                            // 00000007F9A0: D7006A02 00020A00
	v_add_nc_u16 v8.l, v5.l, 4                                 // 00000007F9A8: D7030008 00010905
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007F9B0: BF870004
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007F9B4: 40060601
	s_clause 0x2                                               // 00000007F9B8: BF850002
	global_store_b8 v4, v6, s[0:1]                             // 00000007F9BC: DC620000 00000604
	global_store_b8 v[0:1], v7, off                            // 00000007F9C4: DC620000 007C0700
	global_store_b8 v[2:3], v8, off                            // 00000007F9CC: DC620000 007C0802
	s_nop 0                                                    // 00000007F9D4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F9D8: BFB60003
	s_endpgm                                                   // 00000007F9DC: BFB00000
add_char_get_global_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007F9E0: BF800000
	.long 0xbf800000                                           // 00000007F9E4: BF800000
	.long 0xbf800000                                           // 00000007F9E8: BF800000
	.long 0xbf800000                                           // 00000007F9EC: BF800000
	.long 0xbf800000                                           // 00000007F9F0: BF800000
	.long 0xbf800000                                           // 00000007F9F4: BF800000
	.long 0xbf800000                                           // 00000007F9F8: BF800000
	.long 0xbf800000                                           // 00000007F9FC: BF800000

	.p2align	8
	.type	add_char_get_global_size_get_local_size,@function
	.size	add_char_get_global_size_get_local_size, add_char_get_global_size_get_local_size_symend-add_char_get_global_size_get_local_size
add_char_get_global_size_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 00000007FA00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007FA04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007FA0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FA14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FA1C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FA20: DC520022 02000001
	s_clause 0x4                                               // 00000007FA28: BF850004
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000007FA2C: F4040180 F8000010
	s_load_b64 s[12:13], s[0:1], null                          // 00000007FA34: F4040300 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FA3C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000007FA44: F4000140 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 00000007FA4C: F4040380 F8000048
	v_lshl_or_b32 v3, s2, 4, v3                                // 00000007FA54: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007FA5C: D6560004 04110203
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007FA64: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007FA6C: BF89FC07
	s_lshl_b32 s6, s6, 4                                       // 00000007FA70: 84068406
	s_add_u32 s8, s12, s8                                      // 00000007FA74: 8008080C
	s_addc_u32 s9, s13, s9                                     // 00000007FA78: 8209090D
	s_lshl_b32 s7, s7, 1                                       // 00000007FA7C: 84078107
	s_add_u32 s2, s12, s10                                     // 00000007FA80: 80020A0C
	s_addc_u32 s3, s13, s11                                    // 00000007FA84: 82030B0D
	s_waitcnt vmcnt(0)                                         // 00000007FA88: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007FA8C: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007FA90: 4A040406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007FA94: BF870112
	v_add_nc_u32_e32 v5, s7, v5                                // 00000007FA98: 4A0A0A07
	v_add_nc_u32_e32 v2, 16, v2                                // 00000007FA9C: 4A040490
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FAA0: BF870002
	v_add_nc_u32_e32 v5, 2, v5                                 // 00000007FAA4: 4A0A0A82
	s_clause 0x1                                               // 00000007FAA8: BF850001
	global_store_b8 v3, v2, s[8:9]                             // 00000007FAAC: DC620000 00080203
	global_store_b8 v4, v5, s[2:3]                             // 00000007FAB4: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FABC: DC4A0026 01000001
	s_lshl_b32 s0, s5, 1                                       // 00000007FAC4: 84008105
	s_waitcnt vmcnt(0)                                         // 00000007FAC8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007FACC: 4A020200
	s_add_u32 s0, s12, s14                                     // 00000007FAD0: 80000E0C
	s_addc_u32 s1, s13, s15                                    // 00000007FAD4: 82010F0D
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007FAD8: BF870001
	v_add_nc_u32_e32 v1, 2, v1                                 // 00000007FADC: 4A020282
	global_store_b8 v0, v1, s[0:1]                             // 00000007FAE0: DC620000 00000100
	s_nop 0                                                    // 00000007FAE8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FAEC: BFB60003
	s_endpgm                                                   // 00000007FAF0: BFB00000
add_char_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000007FAF4: BF800000
	.long 0xbf800000                                           // 00000007FAF8: BF800000
	.long 0xbf800000                                           // 00000007FAFC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_get_local_size,@function
	.size	add_char_get_num_groups_get_local_size, add_char_get_num_groups_get_local_size_symend-add_char_get_num_groups_get_local_size
add_char_get_num_groups_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 00000007FB00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007FB04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007FB0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FB14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FB1C: BEA10080
	s_clause 0x1                                               // 00000007FB20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FB24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FB2C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007FB34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000007FB38: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007FB40: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000007FB48: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007FB50: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 00000007FB58: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000007FB60: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007FB68: D6560000 04010404
	s_waitcnt vmcnt(1)                                         // 00000007FB70: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FB74: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007FB78: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007FB7C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007FB80: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FB88: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FB8C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FB90: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 00000007FB94: BF89FC07
	s_addc_u32 s1, s10, 2                                      // 00000007FB98: 8201820A
	s_add_u32 s2, s8, s12                                      // 00000007FB9C: 80020C08
	s_addc_u32 s3, s9, s13                                     // 00000007FBA0: 82030D09
	v_mov_b32_e32 v1, s1                                       // 00000007FBA4: 7E020201
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FBA8: BF07806A
	s_addc_u32 s1, s11, 2                                      // 00000007FBAC: 8201820B
	s_add_u32 s10, s8, s14                                     // 00000007FBB0: 800A0E08
	v_mov_b32_e32 v2, s1                                       // 00000007FBB4: 7E040201
	s_addc_u32 s11, s9, s15                                    // 00000007FBB8: 820B0F09
	s_cmp_lg_u32 s0, 0                                         // 00000007FBBC: BF078000
	global_store_b8 v3, v1, s[2:3]                             // 00000007FBC0: DC620000 00020103
	s_addc_u32 s0, s5, 4                                       // 00000007FBC8: 82008405
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007FBCC: BF870009
	v_mov_b32_e32 v5, s0                                       // 00000007FBD0: 7E0A0200
	s_add_u32 s0, s8, s6                                       // 00000007FBD4: 80000608
	s_addc_u32 s1, s9, s7                                      // 00000007FBD8: 82010709
	s_clause 0x1                                               // 00000007FBDC: BF850001
	global_store_b8 v4, v2, s[10:11]                           // 00000007FBE0: DC620000 000A0204
	global_store_b8 v0, v5, s[0:1]                             // 00000007FBE8: DC620000 00000500
	s_nop 0                                                    // 00000007FBF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FBF4: BFB60003
	s_endpgm                                                   // 00000007FBF8: BFB00000
add_char_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 00000007FBFC: BF800000

	.p2align	8
	.type	add_char_get_work_dim_get_local_size,@function
	.size	add_char_get_work_dim_get_local_size, add_char_get_work_dim_get_local_size_symend-add_char_get_work_dim_get_local_size
add_char_get_work_dim_get_local_size:
	s_clause 0x3                                               // 00000007FC00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000007FC04: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FC0C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FC14: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007FC1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007FC24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007FC2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FC34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FC3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007FC40: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007FC44: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007FC4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007FC54: BF870003
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007FC58: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007FC60: BF89FC07
	v_add_nc_u16 v3.l, s5, 2                                   // 00000007FC64: D7030003 00010405
	s_add_u32 s2, s6, s8                                       // 00000007FC6C: 80020806
	s_addc_u32 s3, s7, s9                                      // 00000007FC70: 82030907
	s_add_u32 s8, s6, s10                                      // 00000007FC74: 80080A06
	s_addc_u32 s9, s7, s11                                     // 00000007FC78: 82090B07
	s_add_i32 s5, s5, 4                                        // 00000007FC7C: 81058405
	s_add_u32 s0, s6, s0                                       // 00000007FC80: 80000006
	v_mov_b32_e32 v4, s5                                       // 00000007FC84: 7E080205
	s_addc_u32 s1, s7, s1                                      // 00000007FC88: 82010107
	s_clause 0x2                                               // 00000007FC8C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 00000007FC90: DC620000 00020301
	global_store_b8 v2, v3, s[8:9]                             // 00000007FC98: DC620000 00080302
	global_store_b8 v0, v4, s[0:1]                             // 00000007FCA0: DC620000 00000400
	s_nop 0                                                    // 00000007FCA8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FCAC: BFB60003
	s_endpgm                                                   // 00000007FCB0: BFB00000
add_char_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 00000007FCB4: BF800000
	.long 0xbf800000                                           // 00000007FCB8: BF800000
	.long 0xbf800000                                           // 00000007FCBC: BF800000
	.long 0xbf800000                                           // 00000007FCC0: BF800000
	.long 0xbf800000                                           // 00000007FCC4: BF800000
	.long 0xbf800000                                           // 00000007FCC8: BF800000
	.long 0xbf800000                                           // 00000007FCCC: BF800000
	.long 0xbf800000                                           // 00000007FCD0: BF800000
	.long 0xbf800000                                           // 00000007FCD4: BF800000
	.long 0xbf800000                                           // 00000007FCD8: BF800000
	.long 0xbf800000                                           // 00000007FCDC: BF800000
	.long 0xbf800000                                           // 00000007FCE0: BF800000
	.long 0xbf800000                                           // 00000007FCE4: BF800000
	.long 0xbf800000                                           // 00000007FCE8: BF800000
	.long 0xbf800000                                           // 00000007FCEC: BF800000
	.long 0xbf800000                                           // 00000007FCF0: BF800000
	.long 0xbf800000                                           // 00000007FCF4: BF800000
	.long 0xbf800000                                           // 00000007FCF8: BF800000
	.long 0xbf800000                                           // 00000007FCFC: BF800000

	.p2align	8
	.type	add_char_x_get_global_id,@function
	.size	add_char_x_get_global_id, add_char_x_get_global_id_symend-add_char_x_get_global_id
add_char_x_get_global_id:
	s_clause 0x3                                               // 00000007FD00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FD04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007FD0C: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 00000007FD14: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007FD1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007FD24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007FD2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FD34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FD3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007FD40: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007FD44: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007FD4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007FD54: BF8701A3
	v_lshl_or_b32 v3, s4, 1, v0                                // 00000007FD58: D6560003 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007FD60: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 00000007FD64: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007FD6C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000007FD70: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007FD78: D7000202 0002040A
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 00000007FD80: D5207C04 0009000B
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007FD88: BF870004
	v_add_nc_u32_e32 v6, s5, v0                                // 00000007FD8C: 4A0C0005
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007FD90: D7006A00 00020006
	v_add_co_u32 v5, s0, s0, v3                                // 00000007FD98: D7000005 00020600
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000007FDA0: 40020207
	v_add_nc_u32_e32 v7, s5, v2                                // 00000007FDA4: 4A0E0405
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007FDA8: D7006A02 00020406
	v_add_co_ci_u32_e64 v8, null, s1, 0, s0                    // 00000007FDB0: D5207C08 00010001
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v4, vcc_lo             // 00000007FDB8: 40060807
	v_add_co_u32 v4, vcc_lo, s6, v5                            // 00000007FDBC: D7006A04 00020A06
	v_add_nc_u32_e32 v9, s5, v5                                // 00000007FDC4: 4A120A05
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007FDC8: BF870004
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v8, vcc_lo             // 00000007FDCC: 400A1007
	s_clause 0x2                                               // 00000007FDD0: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007FDD4: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007FDDC: DC620000 007C0702
	global_store_b8 v[4:5], v9, off                            // 00000007FDE4: DC620000 007C0904
	s_nop 0                                                    // 00000007FDEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FDF0: BFB60003
	s_endpgm                                                   // 00000007FDF4: BFB00000
add_char_x_get_global_id_symend:
	.long 0xbf800000                                           // 00000007FDF8: BF800000
	.long 0xbf800000                                           // 00000007FDFC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_get_global_id,@function
	.size	add_char_get_global_offset_get_global_id, add_char_get_global_offset_get_global_id_symend-add_char_get_global_offset_get_global_id
add_char_get_global_offset_get_global_id:
	s_clause 0x2                                               // 00000007FE00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FE04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FE0C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007FE14: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007FE1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007FE24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FE2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FE34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007FE38: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007FE3C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007FE44: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007FE4C: BF8701A3
	v_lshl_or_b32 v3, s4, 1, v0                                // 00000007FE50: D6560003 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007FE58: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 00000007FE5C: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007FE64: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 00000007FE68: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007FE70: D7000202 0002040A
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 00000007FE78: D5207C04 0009000B
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007FE80: BF870004
	v_add_nc_u32_e32 v6, s8, v0                                // 00000007FE84: 4A0C0008
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007FE88: D7006A00 00020006
	v_add_co_u32 v5, s2, s0, v3                                // 00000007FE90: D7000205 00020600
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000007FE98: 40020207
	v_add_nc_u32_e32 v7, s10, v2                               // 00000007FE9C: 4A0E040A
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007FEA0: D7006A02 00020406
	v_add_co_ci_u32_e64 v8, null, s1, 0, s2                    // 00000007FEA8: D5207C08 00090001
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v4, vcc_lo             // 00000007FEB0: 40060807
	v_add_co_u32 v4, vcc_lo, s6, v5                            // 00000007FEB4: D7006A04 00020A06
	v_add_nc_u32_e32 v9, s0, v5                                // 00000007FEBC: 4A120A00
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007FEC0: BF870004
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v8, vcc_lo             // 00000007FEC4: 400A1007
	s_clause 0x2                                               // 00000007FEC8: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007FECC: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007FED4: DC620000 007C0702
	global_store_b8 v[4:5], v9, off                            // 00000007FEDC: DC620000 007C0904
	s_nop 0                                                    // 00000007FEE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FEE8: BFB60003
	s_endpgm                                                   // 00000007FEEC: BFB00000
add_char_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 00000007FEF0: BF800000
	.long 0xbf800000                                           // 00000007FEF4: BF800000
	.long 0xbf800000                                           // 00000007FEF8: BF800000
	.long 0xbf800000                                           // 00000007FEFC: BF800000

	.p2align	8
	.type	add_char_get_local_id_get_global_id,@function
	.size	add_char_get_local_id_get_global_id, add_char_get_local_id_get_global_id_symend-add_char_get_local_id_get_global_id
add_char_get_local_id_get_global_id:
	s_clause 0x2                                               // 00000007FF00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FF04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FF0C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000007FF14: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007FF1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007FF24: D6100002 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000007FF2C: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000007FF34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007FF38: BF870193
	v_lshl_or_b32 v0, s2, 3, v1                                // 00000007FF3C: D6560000 04050602
	v_lshl_or_b32 v3, s3, 2, v2                                // 00000007FF44: D6560003 04090403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007FF4C: BF8701A3
	v_lshl_or_b32 v5, s4, 1, v4                                // 00000007FF50: D6560005 04110204
	s_waitcnt lgkmcnt(0)                                       // 00000007FF58: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 00000007FF5C: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007FF64: BF8700A1
	v_add_co_ci_u32_e64 v6, null, s9, 0, s2                    // 00000007FF68: D5207C06 00090009
	v_add_co_u32 v3, s2, s10, v3                               // 00000007FF70: D7000203 0002060A
	v_add_co_ci_u32_e64 v7, null, s11, 0, s2                   // 00000007FF78: D5207C07 0009000B
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007FF80: BF870004
	v_add_nc_u32_e32 v8, v0, v1                                // 00000007FF84: 4A100300
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007FF88: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v6, vcc_lo             // 00000007FF90: 40020C07
	v_add_nc_u32_e32 v6, v3, v2                                // 00000007FF94: 4A0C0503
	v_add_co_u32 v5, s0, s0, v5                                // 00000007FF98: D7000005 00020A00
	v_add_co_u32 v2, vcc_lo, s6, v3                            // 00000007FFA0: D7006A02 00020606
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v7, vcc_lo             // 00000007FFA8: 40060E07
	v_add_co_ci_u32_e64 v7, null, s1, 0, s0                    // 00000007FFAC: D5207C07 00010001
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007FFB4: BF8701A4
	v_add_nc_u32_e32 v9, v5, v4                                // 00000007FFB8: 4A120905
	v_add_co_u32 v4, vcc_lo, s6, v5                            // 00000007FFBC: D7006A04 00020A06
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v7, vcc_lo             // 00000007FFC4: 400A0E07
	s_clause 0x2                                               // 00000007FFC8: BF850002
	global_store_b8 v[0:1], v8, off                            // 00000007FFCC: DC620000 007C0800
	global_store_b8 v[2:3], v6, off                            // 00000007FFD4: DC620000 007C0602
	global_store_b8 v[4:5], v9, off                            // 00000007FFDC: DC620000 007C0904
	s_nop 0                                                    // 00000007FFE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FFE8: BFB60003
	s_endpgm                                                   // 00000007FFEC: BFB00000
add_char_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000007FFF0: BF800000
	.long 0xbf800000                                           // 00000007FFF4: BF800000
	.long 0xbf800000                                           // 00000007FFF8: BF800000
	.long 0xbf800000                                           // 00000007FFFC: BF800000

	.p2align	8
	.type	add_char_get_group_id_get_global_id,@function
	.size	add_char_get_group_id_get_global_id, add_char_get_group_id_get_global_id_symend-add_char_get_group_id_get_global_id
add_char_get_group_id_get_global_id:
	s_clause 0x2                                               // 000000080000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080004: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000008000C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000080014: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000008001C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080024: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000008002C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080034: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080038: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000008003C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000080044: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000008004C: BF8701A3
	v_lshl_or_b32 v3, s4, 1, v0                                // 000000080050: D6560003 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000080058: BF89FC07
	v_add_co_u32 v0, s5, s8, v1                                // 00000008005C: D7000500 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000080064: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s5                    // 000000080068: D5207C01 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 000000080070: D7000502 0002040A
	v_add_co_ci_u32_e64 v4, null, s11, 0, s5                   // 000000080078: D5207C04 0015000B
	s_delay_alu instid0(VALU_DEP_4)                            // 000000080080: BF870004
	v_add_nc_u32_e32 v6, s2, v0                                // 000000080084: 4A0C0002
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000080088: D7006A00 00020006
	v_add_co_u32 v5, s0, s0, v3                                // 000000080090: D7000005 00020600
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000080098: 40020207
	v_add_nc_u32_e32 v7, s3, v2                                // 00000008009C: 4A0E0403
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000800A0: D7006A02 00020406
	v_add_co_ci_u32_e64 v8, null, s1, 0, s0                    // 0000000800A8: D5207C08 00010001
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v4, vcc_lo             // 0000000800B0: 40060807
	v_add_co_u32 v4, vcc_lo, s6, v5                            // 0000000800B4: D7006A04 00020A06
	v_add_nc_u32_e32 v9, s4, v5                                // 0000000800BC: 4A120A04
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000800C0: BF870004
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v8, vcc_lo             // 0000000800C4: 400A1007
	s_clause 0x2                                               // 0000000800C8: BF850002
	global_store_b8 v[0:1], v6, off                            // 0000000800CC: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 0000000800D4: DC620000 007C0702
	global_store_b8 v[4:5], v9, off                            // 0000000800DC: DC620000 007C0904
	s_nop 0                                                    // 0000000800E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000800E8: BFB60003
	s_endpgm                                                   // 0000000800EC: BFB00000
add_char_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 0000000800F0: BF800000
	.long 0xbf800000                                           // 0000000800F4: BF800000
	.long 0xbf800000                                           // 0000000800F8: BF800000
	.long 0xbf800000                                           // 0000000800FC: BF800000

	.p2align	8
	.type	add_char_get_local_size_get_global_id,@function
	.size	add_char_get_local_size_get_global_id, add_char_get_local_size_get_global_id_symend-add_char_get_local_size_get_global_id
add_char_get_local_size_get_global_id:
	s_clause 0x2                                               // 000000080100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080104: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000008010C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000080114: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000008011C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080124: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000008012C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080134: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080138: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000008013C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000080144: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000008014C: BF8701A3
	v_lshl_or_b32 v3, s4, 2, v0                                // 000000080150: D6560003 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000080158: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 00000008015C: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000080164: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000080168: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000080170: D7000202 0002040A
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 000000080178: D5207C04 0009000B
	s_delay_alu instid0(VALU_DEP_4)                            // 000000080180: BF870004
	v_add_nc_u16 v6.l, v0.l, 2                                 // 000000080184: D7030006 00010500
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000008018C: D7006A00 00020006
	v_add_co_u32 v5, s0, s0, v3                                // 000000080194: D7000005 00020600
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000008019C: 40020207
	v_add_nc_u16 v7.l, v2.l, 2                                 // 0000000801A0: D7030007 00010502
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000801A8: D7006A02 00020406
	v_add_co_ci_u32_e64 v8, null, s1, 0, s0                    // 0000000801B0: D5207C08 00010001
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v4, vcc_lo             // 0000000801B8: 40060807
	v_add_co_u32 v4, vcc_lo, s6, v5                            // 0000000801BC: D7006A04 00020A06
	v_add_nc_u16 v9.l, v5.l, 4                                 // 0000000801C4: D7030009 00010905
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000801CC: BF870004
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v8, vcc_lo             // 0000000801D0: 400A1007
	s_clause 0x2                                               // 0000000801D4: BF850002
	global_store_b8 v[0:1], v6, off                            // 0000000801D8: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 0000000801E0: DC620000 007C0702
	global_store_b8 v[4:5], v9, off                            // 0000000801E8: DC620000 007C0904
	s_nop 0                                                    // 0000000801F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000801F4: BFB60003
	s_endpgm                                                   // 0000000801F8: BFB00000
add_char_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 0000000801FC: BF800000

	.p2align	8
	.type	add_char_get_global_id_get_global_id,@function
	.size	add_char_get_global_id_get_global_id, add_char_get_global_id_get_global_id_symend-add_char_get_global_id_get_global_id
add_char_get_global_id_get_global_id:
	s_clause 0x2                                               // 000000080200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080204: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000008020C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000080214: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000008021C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080224: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000008022C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080234: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080238: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000008023C: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 000000080244: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000008024C: BF870123
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000080250: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000080258: BF89FC07
	v_add_co_u32 v1, s2, s10, v1                               // 00000008025C: D7000201 0002020A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000080264: BF870231
	v_add_co_ci_u32_e64 v3, null, s11, 0, s2                   // 000000080268: D5207C03 0009000B
	v_add_nc_u32_e32 v2, s8, v4                                // 000000080270: 4A040808
	v_add_co_u32 v5, s2, s6, v0                                // 000000080274: D7000205 00020006
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000008027C: D7006A00 00020200
	v_lshlrev_b16 v7.l, 1, v1.l                                // 000000080284: D7380007 00020281
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo             // 00000008028C: 40020601
	v_add_co_ci_u32_e64 v3, null, s7, 0, s2                    // 000000080290: D5207C03 00090007
	v_lshlrev_b16 v6.l, 1, v2.l                                // 000000080298: D7380006 00020481
	v_add_co_u32 v2, vcc_lo, s0, v5                            // 0000000802A0: D7006A02 00020A00
	v_lshlrev_b16 v8.l, 1, v5.l                                // 0000000802A8: D7380008 00020A81
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000802B0: BF870004
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000802B4: 40060601
	s_clause 0x2                                               // 0000000802B8: BF850002
	global_store_b8 v4, v6, s[0:1]                             // 0000000802BC: DC620000 00000604
	global_store_b8 v[0:1], v7, off                            // 0000000802C4: DC620000 007C0700
	global_store_b8 v[2:3], v8, off                            // 0000000802CC: DC620000 007C0802
	s_nop 0                                                    // 0000000802D4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000802D8: BFB60003
	s_endpgm                                                   // 0000000802DC: BFB00000
add_char_get_global_id_get_global_id_symend:
	.long 0xbf800000                                           // 0000000802E0: BF800000
	.long 0xbf800000                                           // 0000000802E4: BF800000
	.long 0xbf800000                                           // 0000000802E8: BF800000
	.long 0xbf800000                                           // 0000000802EC: BF800000
	.long 0xbf800000                                           // 0000000802F0: BF800000
	.long 0xbf800000                                           // 0000000802F4: BF800000
	.long 0xbf800000                                           // 0000000802F8: BF800000
	.long 0xbf800000                                           // 0000000802FC: BF800000

	.p2align	8
	.type	add_char_get_global_size_get_global_id,@function
	.size	add_char_get_global_size_get_global_id, add_char_get_global_size_get_global_id_symend-add_char_get_global_size_get_global_id
add_char_get_global_size_get_global_id:
	v_mov_b32_e32 v5, 0                                        // 000000080300: 7E0A0280
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000080304: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008030C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080314: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008031C: BEA10080
	global_load_b32 v6, v5, s[0:1] offset:34                   // 000000080320: DC520022 06000005
	s_clause 0x2                                               // 000000080328: BF850002
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000008032C: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080334: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], null                          // 00000008033C: F4040300 F8000000
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000080344: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000008034C: D6560002 04090203
	s_clause 0x1                                               // 000000080354: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 000000080358: F4000140 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 000000080360: F4040380 F8000048
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000080368: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000080370: BF89FC07
	s_lshl_b32 s2, s6, 4                                       // 000000080374: 84028406
	v_add_co_u32 v7, s3, s8, v1                                // 000000080378: D7000307 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000080380: BF8700A1
	v_add_co_ci_u32_e64 v3, null, s9, 0, s3                    // 000000080384: D5207C03 000D0009
	v_add_co_u32 v8, s6, s10, v2                               // 00000008038C: D7000608 0002040A
	v_add_co_ci_u32_e64 v4, null, s11, 0, s6                   // 000000080394: D5207C04 0019000B
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000008039C: BF870214
	v_add_co_u32 v1, vcc_lo, s12, v7                           // 0000000803A0: D7006A01 00020E0C
	v_add_co_ci_u32_e32 v2, vcc_lo, s13, v3, vcc_lo            // 0000000803A8: 4004060D
	s_lshl_b32 s3, s7, 1                                       // 0000000803AC: 84038107
	v_add_co_u32 v3, vcc_lo, s12, v8                           // 0000000803B0: D7006A03 0002100C
	v_add_co_ci_u32_e32 v4, vcc_lo, s13, v4, vcc_lo            // 0000000803B8: 4008080D
	s_waitcnt vmcnt(0)                                         // 0000000803BC: BF8903F7
	v_lshrrev_b32_e32 v9, 16, v6                               // 0000000803C0: 32120C90
	v_add3_u32 v6, s2, v6, v7                                  // 0000000803C4: D6550006 041E0C02
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000803CC: BF870002
	v_add3_u32 v7, s3, v9, v8                                  // 0000000803D0: D6550007 04221203
	s_clause 0x1                                               // 0000000803D8: BF850001
	global_store_b8 v[1:2], v6, off                            // 0000000803DC: DC620000 007C0601
	global_store_b8 v[3:4], v7, off                            // 0000000803E4: DC620000 007C0703
	global_load_u16 v1, v5, s[0:1] offset:38                   // 0000000803EC: DC4A0026 01000005
	v_add_co_u32 v0, s0, s14, v0                               // 0000000803F4: D7000000 0002000E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 0000000803FC: BF870131
	v_add_co_ci_u32_e64 v2, null, s15, 0, s0                   // 000000080400: D5207C02 0001000F
	s_lshl_b32 s1, s5, 1                                       // 000000080408: 84018105
	s_waitcnt vmcnt(0)                                         // 00000008040C: BF8903F7
	v_add3_u32 v3, s1, v1, v0                                  // 000000080410: D6550003 04020201
	v_add_co_u32 v0, vcc_lo, s12, v0                           // 000000080418: D7006A00 0002000C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v2, vcc_lo            // 000000080420: 4002040D
	global_store_b8 v[0:1], v3, off                            // 000000080424: DC620000 007C0300
	s_nop 0                                                    // 00000008042C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080430: BFB60003
	s_endpgm                                                   // 000000080434: BFB00000
add_char_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 000000080438: BF800000
	.long 0xbf800000                                           // 00000008043C: BF800000
	.long 0xbf800000                                           // 000000080440: BF800000
	.long 0xbf800000                                           // 000000080444: BF800000
	.long 0xbf800000                                           // 000000080448: BF800000
	.long 0xbf800000                                           // 00000008044C: BF800000
	.long 0xbf800000                                           // 000000080450: BF800000
	.long 0xbf800000                                           // 000000080454: BF800000
	.long 0xbf800000                                           // 000000080458: BF800000
	.long 0xbf800000                                           // 00000008045C: BF800000
	.long 0xbf800000                                           // 000000080460: BF800000
	.long 0xbf800000                                           // 000000080464: BF800000
	.long 0xbf800000                                           // 000000080468: BF800000
	.long 0xbf800000                                           // 00000008046C: BF800000
	.long 0xbf800000                                           // 000000080470: BF800000
	.long 0xbf800000                                           // 000000080474: BF800000
	.long 0xbf800000                                           // 000000080478: BF800000
	.long 0xbf800000                                           // 00000008047C: BF800000
	.long 0xbf800000                                           // 000000080480: BF800000
	.long 0xbf800000                                           // 000000080484: BF800000
	.long 0xbf800000                                           // 000000080488: BF800000
	.long 0xbf800000                                           // 00000008048C: BF800000
	.long 0xbf800000                                           // 000000080490: BF800000
	.long 0xbf800000                                           // 000000080494: BF800000
	.long 0xbf800000                                           // 000000080498: BF800000
	.long 0xbf800000                                           // 00000008049C: BF800000
	.long 0xbf800000                                           // 0000000804A0: BF800000
	.long 0xbf800000                                           // 0000000804A4: BF800000
	.long 0xbf800000                                           // 0000000804A8: BF800000
	.long 0xbf800000                                           // 0000000804AC: BF800000
	.long 0xbf800000                                           // 0000000804B0: BF800000
	.long 0xbf800000                                           // 0000000804B4: BF800000
	.long 0xbf800000                                           // 0000000804B8: BF800000
	.long 0xbf800000                                           // 0000000804BC: BF800000
	.long 0xbf800000                                           // 0000000804C0: BF800000
	.long 0xbf800000                                           // 0000000804C4: BF800000
	.long 0xbf800000                                           // 0000000804C8: BF800000
	.long 0xbf800000                                           // 0000000804CC: BF800000
	.long 0xbf800000                                           // 0000000804D0: BF800000
	.long 0xbf800000                                           // 0000000804D4: BF800000
	.long 0xbf800000                                           // 0000000804D8: BF800000
	.long 0xbf800000                                           // 0000000804DC: BF800000
	.long 0xbf800000                                           // 0000000804E0: BF800000
	.long 0xbf800000                                           // 0000000804E4: BF800000
	.long 0xbf800000                                           // 0000000804E8: BF800000
	.long 0xbf800000                                           // 0000000804EC: BF800000
	.long 0xbf800000                                           // 0000000804F0: BF800000
	.long 0xbf800000                                           // 0000000804F4: BF800000
	.long 0xbf800000                                           // 0000000804F8: BF800000
	.long 0xbf800000                                           // 0000000804FC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_get_global_id,@function
	.size	add_char_get_num_groups_get_global_id, add_char_get_num_groups_get_global_id_symend-add_char_get_num_groups_get_global_id
add_char_get_num_groups_get_global_id:
	v_mov_b32_e32 v1, 0                                        // 000000080500: 7E020280
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000080504: F4080300 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008050C: D6100002 02291500
	s_mov_b32 s33, 0                                           // 000000080514: BEA10080
	s_clause 0x1                                               // 000000080518: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000008051C: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 000000080524: DC4A0026 07000001
	s_clause 0x1                                               // 00000008052C: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080530: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000080538: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000080540: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080548: D6100000 02292900
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000080550: D6560002 04090203
	s_load_b32 s0, s[0:1], 0x18                                // 000000080558: F4000000 F8000018
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080560: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000080564: D6560001 04050202
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000008056C: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000080574: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000080578: BF870092
	v_add_co_u32 v8, s1, s8, v1                                // 00000008057C: D7000108 00020208
	v_add_co_ci_u32_e64 v1, null, s9, 0, s1                    // 000000080584: D5207C01 00050009
	v_add_co_u32 v9, s1, s10, v2                               // 00000008058C: D7000109 0002040A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080594: BF870001
	v_add_co_ci_u32_e64 v3, null, s11, 0, s1                   // 000000080598: D5207C03 0005000B
	v_add_co_u32 v10, s1, s6, v0                               // 0000000805A0: D700010A 00020006
	v_add_co_u32 v0, vcc_lo, s12, v8                           // 0000000805A8: D7006A00 0002100C
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo            // 0000000805B0: 4002020D
	v_add_co_ci_u32_e64 v5, null, s7, 0, s1                    // 0000000805B4: D5207C05 00050007
	v_add_co_u32 v2, vcc_lo, s12, v9                           // 0000000805BC: D7006A02 0002120C
	v_add_co_ci_u32_e32 v3, vcc_lo, s13, v3, vcc_lo            // 0000000805C4: 4006060D
	v_add_co_u32 v4, vcc_lo, s12, v10                          // 0000000805C8: D7006A04 0002140C
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 0000000805D0: BF870154
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v5, vcc_lo            // 0000000805D4: 400A0A0D
	s_waitcnt vmcnt(1)                                         // 0000000805D8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 0000000805DC: 7C7A0C80
	v_lshrrev_b32_e32 v11, 16, v6                              // 0000000805E0: 32160C90
	v_add_co_ci_u32_e32 v6, vcc_lo, s14, v8, vcc_lo            // 0000000805E4: 400C100E
	v_cmp_ne_u16_e32 vcc_lo, 0, v11.l                          // 0000000805E8: 7C7A1680
	v_add_co_ci_u32_e32 v8, vcc_lo, s15, v9, vcc_lo            // 0000000805EC: 4010120F
	s_waitcnt vmcnt(0)                                         // 0000000805F0: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000805F4: 7C7A0E80
	v_add_co_ci_u32_e32 v7, vcc_lo, s0, v10, vcc_lo            // 0000000805F8: 400E1400
	s_clause 0x2                                               // 0000000805FC: BF850002
	global_store_b8 v[0:1], v6, off                            // 000000080600: DC620000 007C0600
	global_store_b8 v[2:3], v8, off                            // 000000080608: DC620000 007C0802
	global_store_b8 v[4:5], v7, off                            // 000000080610: DC620000 007C0704
	s_nop 0                                                    // 000000080618: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008061C: BFB60003
	s_endpgm                                                   // 000000080620: BFB00000
add_char_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 000000080624: BF800000
	.long 0xbf800000                                           // 000000080628: BF800000
	.long 0xbf800000                                           // 00000008062C: BF800000
	.long 0xbf800000                                           // 000000080630: BF800000
	.long 0xbf800000                                           // 000000080634: BF800000
	.long 0xbf800000                                           // 000000080638: BF800000
	.long 0xbf800000                                           // 00000008063C: BF800000
	.long 0xbf800000                                           // 000000080640: BF800000
	.long 0xbf800000                                           // 000000080644: BF800000
	.long 0xbf800000                                           // 000000080648: BF800000
	.long 0xbf800000                                           // 00000008064C: BF800000
	.long 0xbf800000                                           // 000000080650: BF800000
	.long 0xbf800000                                           // 000000080654: BF800000
	.long 0xbf800000                                           // 000000080658: BF800000
	.long 0xbf800000                                           // 00000008065C: BF800000
	.long 0xbf800000                                           // 000000080660: BF800000
	.long 0xbf800000                                           // 000000080664: BF800000
	.long 0xbf800000                                           // 000000080668: BF800000
	.long 0xbf800000                                           // 00000008066C: BF800000
	.long 0xbf800000                                           // 000000080670: BF800000
	.long 0xbf800000                                           // 000000080674: BF800000
	.long 0xbf800000                                           // 000000080678: BF800000
	.long 0xbf800000                                           // 00000008067C: BF800000
	.long 0xbf800000                                           // 000000080680: BF800000
	.long 0xbf800000                                           // 000000080684: BF800000
	.long 0xbf800000                                           // 000000080688: BF800000
	.long 0xbf800000                                           // 00000008068C: BF800000
	.long 0xbf800000                                           // 000000080690: BF800000
	.long 0xbf800000                                           // 000000080694: BF800000
	.long 0xbf800000                                           // 000000080698: BF800000
	.long 0xbf800000                                           // 00000008069C: BF800000
	.long 0xbf800000                                           // 0000000806A0: BF800000
	.long 0xbf800000                                           // 0000000806A4: BF800000
	.long 0xbf800000                                           // 0000000806A8: BF800000
	.long 0xbf800000                                           // 0000000806AC: BF800000
	.long 0xbf800000                                           // 0000000806B0: BF800000
	.long 0xbf800000                                           // 0000000806B4: BF800000
	.long 0xbf800000                                           // 0000000806B8: BF800000
	.long 0xbf800000                                           // 0000000806BC: BF800000
	.long 0xbf800000                                           // 0000000806C0: BF800000
	.long 0xbf800000                                           // 0000000806C4: BF800000
	.long 0xbf800000                                           // 0000000806C8: BF800000
	.long 0xbf800000                                           // 0000000806CC: BF800000
	.long 0xbf800000                                           // 0000000806D0: BF800000
	.long 0xbf800000                                           // 0000000806D4: BF800000
	.long 0xbf800000                                           // 0000000806D8: BF800000
	.long 0xbf800000                                           // 0000000806DC: BF800000
	.long 0xbf800000                                           // 0000000806E0: BF800000
	.long 0xbf800000                                           // 0000000806E4: BF800000
	.long 0xbf800000                                           // 0000000806E8: BF800000
	.long 0xbf800000                                           // 0000000806EC: BF800000
	.long 0xbf800000                                           // 0000000806F0: BF800000
	.long 0xbf800000                                           // 0000000806F4: BF800000
	.long 0xbf800000                                           // 0000000806F8: BF800000
	.long 0xbf800000                                           // 0000000806FC: BF800000

	.p2align	8
	.type	add_char_get_work_dim_get_global_id,@function
	.size	add_char_get_work_dim_get_global_id, add_char_get_work_dim_get_global_id_symend-add_char_get_work_dim_get_global_id
add_char_get_work_dim_get_global_id:
	s_clause 0x3                                               // 000000080700: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080704: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000008070C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080714: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000008071C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000080724: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008072C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080734: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008073C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080740: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000080744: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000008074C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000080754: BF8701A3
	v_lshl_or_b32 v3, s4, 2, v0                                // 000000080758: D6560003 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000080760: BF89FC07
	v_add_co_u32 v0, s2, s8, v1                                // 000000080764: D7000200 00020208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000008076C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s9, 0, s2                    // 000000080770: D5207C01 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000080778: D7000202 0002040A
	v_add_co_ci_u32_e64 v4, null, s11, 0, s2                   // 000000080780: D5207C04 0009000B
	s_delay_alu instid0(VALU_DEP_4)                            // 000000080788: BF870004
	v_add_nc_u32_e32 v6, s5, v0                                // 00000008078C: 4A0C0005
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000080790: D7006A00 00020006
	v_add_co_u32 v5, s0, s0, v3                                // 000000080798: D7000005 00020600
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000807A0: 40020207
	v_add_nc_u32_e32 v7, s5, v2                                // 0000000807A4: 4A0E0405
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000807A8: D7006A02 00020406
	v_add_co_ci_u32_e64 v8, null, s1, 0, s0                    // 0000000807B0: D5207C08 00010001
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v4, vcc_lo             // 0000000807B8: 40060807
	v_add_co_u32 v4, vcc_lo, s6, v5                            // 0000000807BC: D7006A04 00020A06
	v_add_nc_u32_e32 v9, s5, v5                                // 0000000807C4: 4A120A05
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000807C8: BF870004
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v8, vcc_lo             // 0000000807CC: 400A1007
	s_clause 0x2                                               // 0000000807D0: BF850002
	global_store_b8 v[0:1], v6, off                            // 0000000807D4: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 0000000807DC: DC620000 007C0702
	global_store_b8 v[4:5], v9, off                            // 0000000807E4: DC620000 007C0904
	s_nop 0                                                    // 0000000807EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000807F0: BFB60003
	s_endpgm                                                   // 0000000807F4: BFB00000
add_char_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 0000000807F8: BF800000
	.long 0xbf800000                                           // 0000000807FC: BF800000

	.p2align	8
	.type	add_char_x_get_global_size,@function
	.size	add_char_x_get_global_size, add_char_x_get_global_size_symend-add_char_x_get_global_size
add_char_x_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000080800: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080804: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008080C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080814: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008081C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080820: DC520022 02000001
	s_clause 0x5                                               // 000000080828: BF850005
	s_load_b64 s[6:7], s[0:1], 0x10                            // 00000008082C: F4040180 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080834: F4080200 F8000038
	s_load_b64 s[12:13], s[0:1], null                          // 00000008083C: F4040300 F8000000
	s_load_b32 s5, s[0:1], 0x8                                 // 000000080844: F4000140 F8000008
	s_load_b32 s16, s[0:1], 0x18                               // 00000008084C: F4000400 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 000000080854: F4040380 F8000048
	v_lshl_or_b32 v3, s2, 4, v3                                // 00000008085C: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000080864: D6560004 04110203
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000008086C: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000080874: BF89FC07
	s_lshl_b32 s6, s6, 4                                       // 000000080878: 84068406
	s_add_u32 s8, s12, s8                                      // 00000008087C: 8008080C
	s_addc_u32 s9, s13, s9                                     // 000000080880: 8209090D
	s_lshl_b32 s7, s7, 1                                       // 000000080884: 84078107
	s_add_u32 s2, s12, s10                                     // 000000080888: 80020A0C
	s_addc_u32 s3, s13, s11                                    // 00000008088C: 82030B0D
	s_waitcnt vmcnt(0)                                         // 000000080890: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080894: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 000000080898: 4A040406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000008089C: BF870112
	v_add_nc_u32_e32 v5, s7, v5                                // 0000000808A0: 4A0A0A07
	v_add_nc_u32_e32 v2, s5, v2                                // 0000000808A4: 4A040405
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000808A8: BF870002
	v_add_nc_u32_e32 v5, s5, v5                                // 0000000808AC: 4A0A0A05
	s_clause 0x1                                               // 0000000808B0: BF850001
	global_store_b8 v3, v2, s[8:9]                             // 0000000808B4: DC620000 00080203
	global_store_b8 v4, v5, s[2:3]                             // 0000000808BC: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 0000000808C4: DC4A0026 01000001
	s_lshl_b32 s0, s16, 1                                      // 0000000808CC: 84008110
	s_waitcnt vmcnt(0)                                         // 0000000808D0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 0000000808D4: 4A020200
	s_add_u32 s0, s12, s14                                     // 0000000808D8: 80000E0C
	s_addc_u32 s1, s13, s15                                    // 0000000808DC: 82010F0D
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000808E0: BF870001
	v_add_nc_u32_e32 v1, s5, v1                                // 0000000808E4: 4A020205
	global_store_b8 v0, v1, s[0:1]                             // 0000000808E8: DC620000 00000100
	s_nop 0                                                    // 0000000808F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000808F4: BFB60003
	s_endpgm                                                   // 0000000808F8: BFB00000
add_char_x_get_global_size_symend:
	.long 0xbf800000                                           // 0000000808FC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_get_global_size,@function
	.size	add_char_get_global_offset_get_global_size, add_char_get_global_offset_get_global_size_symend-add_char_get_global_offset_get_global_size
add_char_get_global_offset_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000080900: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080904: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008090C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080914: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008091C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080920: DC520022 02000001
	s_clause 0x3                                               // 000000080928: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000008092C: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080934: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 00000008093C: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000080944: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 00000008094C: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 4, v4                                // 000000080954: D6560004 04110803
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000008095C: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000080964: BF89FC07
	s_lshl_b32 s10, s10, 1                                     // 000000080968: 840A810A
	s_add_u32 s16, s8, s12                                     // 00000008096C: 80100C08
	s_addc_u32 s17, s9, s13                                    // 000000080970: 82110D09
	s_lshl_b32 s11, s11, 4                                     // 000000080974: 840B840B
	s_add_u32 s2, s8, s14                                      // 000000080978: 80020E08
	s_addc_u32 s3, s9, s15                                     // 00000008097C: 82030F09
	s_waitcnt vmcnt(0)                                         // 000000080980: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080984: 320A0490
	v_add_nc_u32_e32 v2, s10, v2                               // 000000080988: 4A04040A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000008098C: BF870112
	v_add_nc_u32_e32 v5, s11, v5                               // 000000080990: 4A0A0A0B
	v_add_nc_u32_e32 v2, s12, v2                               // 000000080994: 4A04040C
	s_delay_alu instid0(VALU_DEP_2)                            // 000000080998: BF870002
	v_add_nc_u32_e32 v5, s14, v5                               // 00000008099C: 4A0A0A0E
	s_clause 0x1                                               // 0000000809A0: BF850001
	global_store_b8 v3, v2, s[16:17]                           // 0000000809A4: DC620000 00100203
	global_store_b8 v4, v5, s[2:3]                             // 0000000809AC: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 0000000809B4: DC4A0026 01000001
	s_lshl_b32 s0, s5, 1                                       // 0000000809BC: 84008105
	s_waitcnt vmcnt(0)                                         // 0000000809C0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 0000000809C4: 4A020200
	s_add_u32 s0, s8, s6                                       // 0000000809C8: 80000608
	s_addc_u32 s1, s9, s7                                      // 0000000809CC: 82010709
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000809D0: BF870001
	v_add_nc_u32_e32 v1, s6, v1                                // 0000000809D4: 4A020206
	global_store_b8 v0, v1, s[0:1]                             // 0000000809D8: DC620000 00000100
	s_nop 0                                                    // 0000000809E0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000809E4: BFB60003
	s_endpgm                                                   // 0000000809E8: BFB00000
add_char_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 0000000809EC: BF800000
	.long 0xbf800000                                           // 0000000809F0: BF800000
	.long 0xbf800000                                           // 0000000809F4: BF800000
	.long 0xbf800000                                           // 0000000809F8: BF800000
	.long 0xbf800000                                           // 0000000809FC: BF800000

	.p2align	8
	.type	add_char_get_local_id_get_global_size,@function
	.size	add_char_get_local_id_get_global_size, add_char_get_local_id_get_global_size_symend-add_char_get_local_id_get_global_size
add_char_get_local_id_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000080A00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080A04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000080A0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080A14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080A1C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080A20: DC520022 02000001
	s_clause 0x3                                               // 000000080A28: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000080A2C: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080A34: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000080A3C: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000080A44: F4040180 F8000048
	v_lshl_or_b32 v6, s2, 3, v3                                // 000000080A4C: D6560006 040D0602
	v_lshl_or_b32 v7, s3, 2, v4                                // 000000080A54: D6560007 04110403
	s_waitcnt lgkmcnt(0)                                       // 000000080A5C: BF89FC07
	s_lshl_b32 s10, s10, 3                                     // 000000080A60: 840A830A
	s_add_u32 s12, s8, s12                                     // 000000080A64: 800C0C08
	s_addc_u32 s13, s9, s13                                    // 000000080A68: 820D0D09
	s_lshl_b32 s11, s11, 2                                     // 000000080A6C: 840B820B
	s_add_u32 s2, s8, s14                                      // 000000080A70: 80020E08
	s_addc_u32 s3, s9, s15                                     // 000000080A74: 82030F09
	s_waitcnt vmcnt(0)                                         // 000000080A78: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080A7C: 320A0490
	v_add_nc_u32_e32 v2, s10, v2                               // 000000080A80: 4A04040A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000080A84: BF870112
	v_add_nc_u32_e32 v5, s11, v5                               // 000000080A88: 4A0A0A0B
	v_add_nc_u16 v2.l, v2.l, v3.l                              // 000000080A8C: D7030002 00020702
	s_delay_alu instid0(VALU_DEP_2)                            // 000000080A94: BF870002
	v_add_nc_u16 v3.l, v5.l, v4.l                              // 000000080A98: D7030003 00020905
	s_clause 0x1                                               // 000000080AA0: BF850001
	global_store_b8 v6, v2, s[12:13]                           // 000000080AA4: DC620000 000C0206
	global_store_b8 v7, v3, s[2:3]                             // 000000080AAC: DC620000 00020307
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080AB4: DC4A0026 01000001
	s_lshl_b32 s0, s5, 1                                       // 000000080ABC: 84008105
	s_waitcnt vmcnt(0)                                         // 000000080AC0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 000000080AC4: 4A020200
	s_add_u32 s0, s8, s6                                       // 000000080AC8: 80000608
	s_addc_u32 s1, s9, s7                                      // 000000080ACC: 82010709
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080AD0: BF870001
	v_add_nc_u16 v1.l, v1.l, v0.l                              // 000000080AD4: D7030001 00020101
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000080ADC: D6560000 04010204
	global_store_b8 v0, v1, s[0:1]                             // 000000080AE4: DC620000 00000100
	s_nop 0                                                    // 000000080AEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080AF0: BFB60003
	s_endpgm                                                   // 000000080AF4: BFB00000
add_char_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000080AF8: BF800000
	.long 0xbf800000                                           // 000000080AFC: BF800000

	.p2align	8
	.type	add_char_get_group_id_get_global_size,@function
	.size	add_char_get_group_id_get_global_size, add_char_get_group_id_get_global_size_symend-add_char_get_group_id_get_global_size
add_char_get_group_id_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000080B00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080B04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000080B0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080B14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080B1C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080B20: DC520022 02000001
	s_clause 0x3                                               // 000000080B28: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000080B2C: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080B34: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000080B3C: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000080B44: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000080B4C: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 4, v4                                // 000000080B54: D6560004 04110803
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000080B5C: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000080B64: BF89FC07
	s_lshl_b32 s10, s10, 1                                     // 000000080B68: 840A810A
	s_add_u32 s12, s8, s12                                     // 000000080B6C: 800C0C08
	s_addc_u32 s13, s9, s13                                    // 000000080B70: 820D0D09
	s_lshl_b32 s11, s11, 4                                     // 000000080B74: 840B840B
	s_waitcnt vmcnt(0)                                         // 000000080B78: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080B7C: 320A0490
	v_add_nc_u32_e32 v2, s10, v2                               // 000000080B80: 4A04040A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000080B84: BF870112
	v_add_nc_u32_e32 v5, s11, v5                               // 000000080B88: 4A0A0A0B
	v_add_nc_u32_e32 v2, s2, v2                                // 000000080B8C: 4A040402
	s_add_u32 s2, s8, s14                                      // 000000080B90: 80020E08
	s_delay_alu instid0(VALU_DEP_2)                            // 000000080B94: BF870002
	v_add_nc_u32_e32 v5, s3, v5                                // 000000080B98: 4A0A0A03
	s_addc_u32 s3, s9, s15                                     // 000000080B9C: 82030F09
	s_clause 0x1                                               // 000000080BA0: BF850001
	global_store_b8 v3, v2, s[12:13]                           // 000000080BA4: DC620000 000C0203
	global_store_b8 v4, v5, s[2:3]                             // 000000080BAC: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080BB4: DC4A0026 01000001
	s_lshl_b32 s0, s5, 1                                       // 000000080BBC: 84008105
	s_waitcnt vmcnt(0)                                         // 000000080BC0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 000000080BC4: 4A020200
	s_add_u32 s0, s8, s6                                       // 000000080BC8: 80000608
	s_addc_u32 s1, s9, s7                                      // 000000080BCC: 82010709
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080BD0: BF870001
	v_add_nc_u32_e32 v1, s4, v1                                // 000000080BD4: 4A020204
	global_store_b8 v0, v1, s[0:1]                             // 000000080BD8: DC620000 00000100
	s_nop 0                                                    // 000000080BE0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080BE4: BFB60003
	s_endpgm                                                   // 000000080BE8: BFB00000
add_char_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000080BEC: BF800000
	.long 0xbf800000                                           // 000000080BF0: BF800000
	.long 0xbf800000                                           // 000000080BF4: BF800000
	.long 0xbf800000                                           // 000000080BF8: BF800000
	.long 0xbf800000                                           // 000000080BFC: BF800000

	.p2align	8
	.type	add_char_get_local_size_get_global_size,@function
	.size	add_char_get_local_size_get_global_size, add_char_get_local_size_get_global_size_symend-add_char_get_local_size_get_global_size
add_char_get_local_size_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000080C00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080C04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000080C0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080C14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080C1C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080C20: DC520022 02000001
	s_clause 0x3                                               // 000000080C28: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000080C2C: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080C34: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000080C3C: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000080C44: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000080C4C: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000080C54: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000080C5C: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000080C64: BF89FC07
	s_lshl_b32 s10, s10, 1                                     // 000000080C68: 840A810A
	s_add_u32 s12, s8, s12                                     // 000000080C6C: 800C0C08
	s_addc_u32 s13, s9, s13                                    // 000000080C70: 820D0D09
	s_lshl_b32 s11, s11, 1                                     // 000000080C74: 840B810B
	s_add_u32 s2, s8, s14                                      // 000000080C78: 80020E08
	s_addc_u32 s3, s9, s15                                     // 000000080C7C: 82030F09
	s_waitcnt vmcnt(0)                                         // 000000080C80: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080C84: 320A0490
	v_add_nc_u32_e32 v2, s10, v2                               // 000000080C88: 4A04040A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000080C8C: BF870112
	v_add_nc_u32_e32 v5, s11, v5                               // 000000080C90: 4A0A0A0B
	v_add_nc_u32_e32 v2, 2, v2                                 // 000000080C94: 4A040482
	s_delay_alu instid0(VALU_DEP_2)                            // 000000080C98: BF870002
	v_add_nc_u32_e32 v5, 2, v5                                 // 000000080C9C: 4A0A0A82
	s_clause 0x1                                               // 000000080CA0: BF850001
	global_store_b8 v3, v2, s[12:13]                           // 000000080CA4: DC620000 000C0203
	global_store_b8 v4, v5, s[2:3]                             // 000000080CAC: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080CB4: DC4A0026 01000001
	s_lshl_b32 s0, s5, 2                                       // 000000080CBC: 84008205
	s_waitcnt vmcnt(0)                                         // 000000080CC0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 000000080CC4: 4A020200
	s_add_u32 s0, s8, s6                                       // 000000080CC8: 80000608
	s_addc_u32 s1, s9, s7                                      // 000000080CCC: 82010709
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080CD0: BF870001
	v_add_nc_u32_e32 v1, 4, v1                                 // 000000080CD4: 4A020284
	global_store_b8 v0, v1, s[0:1]                             // 000000080CD8: DC620000 00000100
	s_nop 0                                                    // 000000080CE0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080CE4: BFB60003
	s_endpgm                                                   // 000000080CE8: BFB00000
add_char_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 000000080CEC: BF800000
	.long 0xbf800000                                           // 000000080CF0: BF800000
	.long 0xbf800000                                           // 000000080CF4: BF800000
	.long 0xbf800000                                           // 000000080CF8: BF800000
	.long 0xbf800000                                           // 000000080CFC: BF800000

	.p2align	8
	.type	add_char_get_global_id_get_global_size,@function
	.size	add_char_get_global_id_get_global_size, add_char_get_global_id_get_global_size_symend-add_char_get_global_id_get_global_size
add_char_get_global_id_get_global_size:
	v_dual_mov_b32 v3, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000080D00: CA240080 030400FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080D0C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080D14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080D1C: BEA10080
	global_load_b32 v1, v3, s[0:1] offset:34                   // 000000080D20: DC520022 01000003
	s_clause 0x1                                               // 000000080D28: BF850001
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000080D2C: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080D34: F4080300 F8000038
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000080D3C: D6560002 04090203
	v_lshl_or_b32 v4, s2, 1, v4                                // 000000080D44: D6560004 04110202
	s_clause 0x1                                               // 000000080D4C: BF850001
	s_load_b32 s5, s[0:1], 0x18                                // 000000080D50: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000080D58: F4040180 F8000048
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000080D60: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000080D68: BF89FC07
	s_lshl_b32 s2, s10, 1                                      // 000000080D6C: 8402810A
	v_add_co_u32 v5, s10, s14, v2                              // 000000080D70: D7000A05 0002040E
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080D78: BF870001
	v_add_co_ci_u32_e64 v2, null, s15, 0, s10                  // 000000080D7C: D5207C02 0029000F
	s_lshl_b32 s3, s11, 1                                      // 000000080D84: 8403810B
	s_waitcnt vmcnt(0)                                         // 000000080D88: BF8903F7
	v_add_nc_u32_e32 v7, s2, v1                                // 000000080D8C: 4A0E0202
	v_lshrrev_b32_e32 v6, 16, v1                               // 000000080D90: 320C0290
	v_add_co_u32 v1, vcc_lo, s8, v5                            // 000000080D94: D7006A01 00020A08
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo             // 000000080D9C: 40040409
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000080DA0: BF870214
	v_add3_u32 v7, v7, s12, v4                                 // 000000080DA4: D6550007 04101907
	v_add3_u32 v5, s3, v6, v5                                  // 000000080DAC: D6550005 04160C03
	s_clause 0x1                                               // 000000080DB4: BF850001
	global_store_b8 v4, v7, s[8:9]                             // 000000080DB8: DC620000 00080704
	global_store_b8 v[1:2], v5, off                            // 000000080DC0: DC620000 007C0501
	global_load_u16 v1, v3, s[0:1] offset:38                   // 000000080DC8: DC4A0026 01000003
	v_add_co_u32 v0, s0, s6, v0                                // 000000080DD0: D7000000 00020006
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000080DD8: BF870131
	v_add_co_ci_u32_e64 v2, null, s7, 0, s0                    // 000000080DDC: D5207C02 00010007
	s_lshl_b32 s1, s5, 2                                       // 000000080DE4: 84018205
	s_waitcnt vmcnt(0)                                         // 000000080DE8: BF8903F7
	v_add3_u32 v3, s1, v1, v0                                  // 000000080DEC: D6550003 04020201
	v_add_co_u32 v0, vcc_lo, s8, v0                            // 000000080DF4: D7006A00 00020008
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v2, vcc_lo             // 000000080DFC: 40020409
	global_store_b8 v[0:1], v3, off                            // 000000080E00: DC620000 007C0300
	s_nop 0                                                    // 000000080E08: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080E0C: BFB60003
	s_endpgm                                                   // 000000080E10: BFB00000
add_char_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000080E14: BF800000
	.long 0xbf800000                                           // 000000080E18: BF800000
	.long 0xbf800000                                           // 000000080E1C: BF800000
	.long 0xbf800000                                           // 000000080E20: BF800000
	.long 0xbf800000                                           // 000000080E24: BF800000
	.long 0xbf800000                                           // 000000080E28: BF800000
	.long 0xbf800000                                           // 000000080E2C: BF800000
	.long 0xbf800000                                           // 000000080E30: BF800000
	.long 0xbf800000                                           // 000000080E34: BF800000
	.long 0xbf800000                                           // 000000080E38: BF800000
	.long 0xbf800000                                           // 000000080E3C: BF800000
	.long 0xbf800000                                           // 000000080E40: BF800000
	.long 0xbf800000                                           // 000000080E44: BF800000
	.long 0xbf800000                                           // 000000080E48: BF800000
	.long 0xbf800000                                           // 000000080E4C: BF800000
	.long 0xbf800000                                           // 000000080E50: BF800000
	.long 0xbf800000                                           // 000000080E54: BF800000
	.long 0xbf800000                                           // 000000080E58: BF800000
	.long 0xbf800000                                           // 000000080E5C: BF800000
	.long 0xbf800000                                           // 000000080E60: BF800000
	.long 0xbf800000                                           // 000000080E64: BF800000
	.long 0xbf800000                                           // 000000080E68: BF800000
	.long 0xbf800000                                           // 000000080E6C: BF800000
	.long 0xbf800000                                           // 000000080E70: BF800000
	.long 0xbf800000                                           // 000000080E74: BF800000
	.long 0xbf800000                                           // 000000080E78: BF800000
	.long 0xbf800000                                           // 000000080E7C: BF800000
	.long 0xbf800000                                           // 000000080E80: BF800000
	.long 0xbf800000                                           // 000000080E84: BF800000
	.long 0xbf800000                                           // 000000080E88: BF800000
	.long 0xbf800000                                           // 000000080E8C: BF800000
	.long 0xbf800000                                           // 000000080E90: BF800000
	.long 0xbf800000                                           // 000000080E94: BF800000
	.long 0xbf800000                                           // 000000080E98: BF800000
	.long 0xbf800000                                           // 000000080E9C: BF800000
	.long 0xbf800000                                           // 000000080EA0: BF800000
	.long 0xbf800000                                           // 000000080EA4: BF800000
	.long 0xbf800000                                           // 000000080EA8: BF800000
	.long 0xbf800000                                           // 000000080EAC: BF800000
	.long 0xbf800000                                           // 000000080EB0: BF800000
	.long 0xbf800000                                           // 000000080EB4: BF800000
	.long 0xbf800000                                           // 000000080EB8: BF800000
	.long 0xbf800000                                           // 000000080EBC: BF800000
	.long 0xbf800000                                           // 000000080EC0: BF800000
	.long 0xbf800000                                           // 000000080EC4: BF800000
	.long 0xbf800000                                           // 000000080EC8: BF800000
	.long 0xbf800000                                           // 000000080ECC: BF800000
	.long 0xbf800000                                           // 000000080ED0: BF800000
	.long 0xbf800000                                           // 000000080ED4: BF800000
	.long 0xbf800000                                           // 000000080ED8: BF800000
	.long 0xbf800000                                           // 000000080EDC: BF800000
	.long 0xbf800000                                           // 000000080EE0: BF800000
	.long 0xbf800000                                           // 000000080EE4: BF800000
	.long 0xbf800000                                           // 000000080EE8: BF800000
	.long 0xbf800000                                           // 000000080EEC: BF800000
	.long 0xbf800000                                           // 000000080EF0: BF800000
	.long 0xbf800000                                           // 000000080EF4: BF800000
	.long 0xbf800000                                           // 000000080EF8: BF800000
	.long 0xbf800000                                           // 000000080EFC: BF800000

	.p2align	8
	.type	add_char_get_global_size_get_global_size,@function
	.size	add_char_get_global_size_get_global_size, add_char_get_global_size_get_global_size_symend-add_char_get_global_size_get_global_size
add_char_get_global_size_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000080F00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080F04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000080F0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080F14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080F1C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080F20: DC520022 02000001
	s_clause 0x4                                               // 000000080F28: BF850004
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000080F2C: F4040180 F8000010
	s_load_b64 s[12:13], s[0:1], null                          // 000000080F34: F4040300 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080F3C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000080F44: F4000140 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 000000080F4C: F4040380 F8000048
	v_lshl_or_b32 v3, s2, 4, v3                                // 000000080F54: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000080F5C: D6560004 04110203
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000080F64: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000080F6C: BF89FC07
	s_lshl_b32 s6, s6, 4                                       // 000000080F70: 84068406
	s_add_u32 s8, s12, s8                                      // 000000080F74: 8008080C
	s_addc_u32 s9, s13, s9                                     // 000000080F78: 8209090D
	s_lshl_b32 s7, s7, 1                                       // 000000080F7C: 84078107
	s_add_u32 s2, s12, s10                                     // 000000080F80: 80020A0C
	s_addc_u32 s3, s13, s11                                    // 000000080F84: 82030B0D
	s_waitcnt vmcnt(0)                                         // 000000080F88: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080F8C: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 000000080F90: 4A040406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000080F94: BF870112
	v_add_nc_u32_e32 v5, s7, v5                                // 000000080F98: 4A0A0A07
	v_lshlrev_b32_e32 v2, 1, v2                                // 000000080F9C: 30040481
	s_delay_alu instid0(VALU_DEP_2)                            // 000000080FA0: BF870002
	v_lshlrev_b32_e32 v5, 1, v5                                // 000000080FA4: 300A0A81
	s_clause 0x1                                               // 000000080FA8: BF850001
	global_store_b8 v3, v2, s[8:9]                             // 000000080FAC: DC620000 00080203
	global_store_b8 v4, v5, s[2:3]                             // 000000080FB4: DC620000 00020504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080FBC: DC4A0026 01000001
	s_lshl_b32 s0, s5, 1                                       // 000000080FC4: 84008105
	s_waitcnt vmcnt(0)                                         // 000000080FC8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 000000080FCC: 4A020200
	s_add_u32 s0, s12, s14                                     // 000000080FD0: 80000E0C
	s_addc_u32 s1, s13, s15                                    // 000000080FD4: 82010F0D
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080FD8: BF870001
	v_lshlrev_b32_e32 v1, 1, v1                                // 000000080FDC: 30020281
	global_store_b8 v0, v1, s[0:1]                             // 000000080FE0: DC620000 00000100
	s_nop 0                                                    // 000000080FE8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080FEC: BFB60003
	s_endpgm                                                   // 000000080FF0: BFB00000
add_char_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 000000080FF4: BF800000
	.long 0xbf800000                                           // 000000080FF8: BF800000
	.long 0xbf800000                                           // 000000080FFC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_get_global_size,@function
	.size	add_char_get_num_groups_get_global_size, add_char_get_num_groups_get_global_size_symend-add_char_get_num_groups_get_global_size
add_char_get_num_groups_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000081000: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081004: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008100C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081014: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008101C: BEA10080
	s_clause 0x1                                               // 000000081020: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081024: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008102C: DC4A0026 01000001
	s_clause 0x3                                               // 000000081034: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000081038: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081040: F4080300 F8000038
	s_load_b32 s6, s[0:1], 0x18                                // 000000081048: F4000180 F8000018
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000081050: F4040000 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000081058: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000081060: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000081068: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000081070: BF89FC07
	s_lshl_b32 s7, s10, 1                                      // 000000081074: 8407810A
	s_add_u32 s2, s8, s12                                      // 000000081078: 80020C08
	s_addc_u32 s3, s9, s13                                     // 00000008107C: 82030D09
	s_lshl_b32 s12, s11, 1                                     // 000000081080: 840C810B
	s_add_u32 s4, s8, s14                                      // 000000081084: 80040E08
	s_addc_u32 s5, s9, s15                                     // 000000081088: 82050F09
	s_lshl_b32 s13, s6, 2                                      // 00000008108C: 840D8206
	s_add_u32 s0, s8, s0                                       // 000000081090: 80000008
	s_addc_u32 s1, s9, s1                                      // 000000081094: 82010109
	s_waitcnt vmcnt(1)                                         // 000000081098: BF8907F7
	v_add_nc_u32_e32 v6, s7, v2                                // 00000008109C: 4A0C0407
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 0000000810A0: 7C7A0480
	v_lshrrev_b32_e32 v5, 16, v2                               // 0000000810A4: 320A0490
	s_waitcnt vmcnt(0)                                         // 0000000810A8: BF8903F7
	v_add_nc_u32_e32 v7, s13, v1                               // 0000000810AC: 4A0E020D
	v_add_co_ci_u32_e32 v2, vcc_lo, s10, v6, vcc_lo            // 0000000810B0: 40040C0A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 0000000810B4: BF870123
	v_add_nc_u32_e32 v8, s12, v5                               // 0000000810B8: 4A100A0C
	v_cmp_ne_u16_e32 vcc_lo, 0, v5.l                           // 0000000810BC: 7C7A0A80
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v8, vcc_lo            // 0000000810C0: 400A100B
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 0000000810C4: 7C7A0280
	v_add_co_ci_u32_e32 v1, vcc_lo, s6, v7, vcc_lo             // 0000000810C8: 40020E06
	s_clause 0x2                                               // 0000000810CC: BF850002
	global_store_b8 v3, v2, s[2:3]                             // 0000000810D0: DC620000 00020203
	global_store_b8 v4, v5, s[4:5]                             // 0000000810D8: DC620000 00040504
	global_store_b8 v0, v1, s[0:1]                             // 0000000810E0: DC620000 00000100
	s_nop 0                                                    // 0000000810E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000810EC: BFB60003
	s_endpgm                                                   // 0000000810F0: BFB00000
add_char_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 0000000810F4: BF800000
	.long 0xbf800000                                           // 0000000810F8: BF800000
	.long 0xbf800000                                           // 0000000810FC: BF800000

	.p2align	8
	.type	add_char_get_work_dim_get_global_size,@function
	.size	add_char_get_work_dim_get_global_size, add_char_get_work_dim_get_global_size_symend-add_char_get_work_dim_get_global_size
add_char_get_work_dim_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000081100: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081104: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008110C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081114: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008111C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081120: DC520022 02000001
	s_clause 0x2                                               // 000000081128: BF850002
	s_load_b128 s[8:11], s[0:1], 0x8                           // 00000008112C: F4080200 F8000008
	s_load_b32 s5, s[0:1], 0x50                                // 000000081134: F4000140 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000008113C: F4080300 F8000038
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000081144: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 00000008114C: D6560004 04110203
	s_clause 0x1                                               // 000000081154: BF850001
	s_load_b32 s16, s[0:1], 0x18                               // 000000081158: F4000400 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000081160: F4040180 F8000048
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000081168: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000081170: BF89FC07
	s_lshl_b32 s2, s10, 1                                      // 000000081174: 8402810A
	s_and_b32 s5, s5, 0xffff                                   // 000000081178: 8B05FF05 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000081180: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000081184: 320A0490
	v_add_nc_u32_e32 v2, s2, v2                                // 000000081188: 4A040402
	s_add_u32 s2, s8, s12                                      // 00000008118C: 80020C08
	s_addc_u32 s3, s9, s13                                     // 000000081190: 82030D09
	s_lshl_b32 s10, s11, 1                                     // 000000081194: 840A810B
	v_add_nc_u32_e32 v5, s5, v5                                // 000000081198: 4A0A0A05
	v_add_nc_u32_e32 v2, s5, v2                                // 00000008119C: 4A040405
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000811A0: BF870002
	v_add_nc_u32_e32 v5, s10, v5                               // 0000000811A4: 4A0A0A0A
	s_add_u32 s10, s8, s14                                     // 0000000811A8: 800A0E08
	s_addc_u32 s11, s9, s15                                    // 0000000811AC: 820B0F09
	s_clause 0x1                                               // 0000000811B0: BF850001
	global_store_b8 v3, v2, s[2:3]                             // 0000000811B4: DC620000 00020203
	global_store_b8 v4, v5, s[10:11]                           // 0000000811BC: DC620000 000A0504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 0000000811C4: DC4A0026 01000001
	s_lshl_b32 s0, s16, 2                                      // 0000000811CC: 84008210
	s_waitcnt vmcnt(0)                                         // 0000000811D0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 0000000811D4: 4A020200
	s_add_u32 s0, s8, s6                                       // 0000000811D8: 80000608
	s_addc_u32 s1, s9, s7                                      // 0000000811DC: 82010709
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000811E0: BF870001
	v_add_nc_u32_e32 v1, s5, v1                                // 0000000811E4: 4A020205
	global_store_b8 v0, v1, s[0:1]                             // 0000000811E8: DC620000 00000100
	s_nop 0                                                    // 0000000811F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000811F4: BFB60003
	s_endpgm                                                   // 0000000811F8: BFB00000
add_char_get_work_dim_get_global_size_symend:
	.long 0xbf800000                                           // 0000000811FC: BF800000

	.p2align	8
	.type	add_char_x_get_num_groups,@function
	.size	add_char_x_get_num_groups, add_char_x_get_num_groups_symend-add_char_x_get_num_groups
add_char_x_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081200: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081204: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008120C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081214: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008121C: BEA10080
	s_clause 0x1                                               // 000000081220: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081224: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008122C: DC4A0026 01000001
	s_clause 0x5                                               // 000000081234: BF850005
	s_load_b64 s[6:7], s[0:1], null                            // 000000081238: F4040180 F8000000
	s_load_b32 s5, s[0:1], 0x8                                 // 000000081240: F4000140 F8000008
	s_load_b64 s[12:13], s[0:1], 0x10                          // 000000081248: F4040300 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081250: F4080200 F8000038
	s_load_b32 s16, s[0:1], 0x18                               // 000000081258: F4000400 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 000000081260: F4040380 F8000048
	v_lshl_or_b32 v3, s2, 4, v3                                // 000000081268: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000081270: D6560004 04110203
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000081278: D6560000 04010204
	s_waitcnt vmcnt(1)                                         // 000000081280: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081284: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000081288: 32040490
	s_waitcnt vmcnt(0)                                         // 00000008128C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000081290: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081298: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000008129C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 0000000812A0: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 0000000812A4: BF89FC07
	s_addc_u32 s1, s5, s12                                     // 0000000812A8: 82010C05
	s_add_u32 s2, s6, s8                                       // 0000000812AC: 80020806
	s_addc_u32 s3, s7, s9                                      // 0000000812B0: 82030907
	v_mov_b32_e32 v1, s1                                       // 0000000812B4: 7E020201
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000812B8: BF07806A
	s_addc_u32 s1, s5, s13                                     // 0000000812BC: 82010D05
	s_add_u32 s8, s6, s10                                      // 0000000812C0: 80080A06
	v_mov_b32_e32 v2, s1                                       // 0000000812C4: 7E040201
	s_addc_u32 s9, s7, s11                                     // 0000000812C8: 82090B07
	s_cmp_lg_u32 s0, 0                                         // 0000000812CC: BF078000
	global_store_b8 v3, v1, s[2:3]                             // 0000000812D0: DC620000 00020103
	s_addc_u32 s0, s5, s16                                     // 0000000812D8: 82001005
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000812DC: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000812E0: 7E0A0200
	s_add_u32 s0, s6, s14                                      // 0000000812E4: 80000E06
	s_addc_u32 s1, s7, s15                                     // 0000000812E8: 82010F07
	s_clause 0x1                                               // 0000000812EC: BF850001
	global_store_b8 v4, v2, s[8:9]                             // 0000000812F0: DC620000 00080204
	global_store_b8 v0, v5, s[0:1]                             // 0000000812F8: DC620000 00000500
	s_nop 0                                                    // 000000081300: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081304: BFB60003
	s_endpgm                                                   // 000000081308: BFB00000
add_char_x_get_num_groups_symend:
	.long 0xbf800000                                           // 00000008130C: BF800000
	.long 0xbf800000                                           // 000000081310: BF800000
	.long 0xbf800000                                           // 000000081314: BF800000
	.long 0xbf800000                                           // 000000081318: BF800000
	.long 0xbf800000                                           // 00000008131C: BF800000
	.long 0xbf800000                                           // 000000081320: BF800000
	.long 0xbf800000                                           // 000000081324: BF800000
	.long 0xbf800000                                           // 000000081328: BF800000
	.long 0xbf800000                                           // 00000008132C: BF800000
	.long 0xbf800000                                           // 000000081330: BF800000
	.long 0xbf800000                                           // 000000081334: BF800000
	.long 0xbf800000                                           // 000000081338: BF800000
	.long 0xbf800000                                           // 00000008133C: BF800000
	.long 0xbf800000                                           // 000000081340: BF800000
	.long 0xbf800000                                           // 000000081344: BF800000
	.long 0xbf800000                                           // 000000081348: BF800000
	.long 0xbf800000                                           // 00000008134C: BF800000
	.long 0xbf800000                                           // 000000081350: BF800000
	.long 0xbf800000                                           // 000000081354: BF800000
	.long 0xbf800000                                           // 000000081358: BF800000
	.long 0xbf800000                                           // 00000008135C: BF800000
	.long 0xbf800000                                           // 000000081360: BF800000
	.long 0xbf800000                                           // 000000081364: BF800000
	.long 0xbf800000                                           // 000000081368: BF800000
	.long 0xbf800000                                           // 00000008136C: BF800000
	.long 0xbf800000                                           // 000000081370: BF800000
	.long 0xbf800000                                           // 000000081374: BF800000
	.long 0xbf800000                                           // 000000081378: BF800000
	.long 0xbf800000                                           // 00000008137C: BF800000
	.long 0xbf800000                                           // 000000081380: BF800000
	.long 0xbf800000                                           // 000000081384: BF800000
	.long 0xbf800000                                           // 000000081388: BF800000
	.long 0xbf800000                                           // 00000008138C: BF800000
	.long 0xbf800000                                           // 000000081390: BF800000
	.long 0xbf800000                                           // 000000081394: BF800000
	.long 0xbf800000                                           // 000000081398: BF800000
	.long 0xbf800000                                           // 00000008139C: BF800000
	.long 0xbf800000                                           // 0000000813A0: BF800000
	.long 0xbf800000                                           // 0000000813A4: BF800000
	.long 0xbf800000                                           // 0000000813A8: BF800000
	.long 0xbf800000                                           // 0000000813AC: BF800000
	.long 0xbf800000                                           // 0000000813B0: BF800000
	.long 0xbf800000                                           // 0000000813B4: BF800000
	.long 0xbf800000                                           // 0000000813B8: BF800000
	.long 0xbf800000                                           // 0000000813BC: BF800000
	.long 0xbf800000                                           // 0000000813C0: BF800000
	.long 0xbf800000                                           // 0000000813C4: BF800000
	.long 0xbf800000                                           // 0000000813C8: BF800000
	.long 0xbf800000                                           // 0000000813CC: BF800000
	.long 0xbf800000                                           // 0000000813D0: BF800000
	.long 0xbf800000                                           // 0000000813D4: BF800000
	.long 0xbf800000                                           // 0000000813D8: BF800000
	.long 0xbf800000                                           // 0000000813DC: BF800000
	.long 0xbf800000                                           // 0000000813E0: BF800000
	.long 0xbf800000                                           // 0000000813E4: BF800000
	.long 0xbf800000                                           // 0000000813E8: BF800000
	.long 0xbf800000                                           // 0000000813EC: BF800000
	.long 0xbf800000                                           // 0000000813F0: BF800000
	.long 0xbf800000                                           // 0000000813F4: BF800000
	.long 0xbf800000                                           // 0000000813F8: BF800000
	.long 0xbf800000                                           // 0000000813FC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_get_num_groups,@function
	.size	add_char_get_global_offset_get_num_groups, add_char_get_global_offset_get_num_groups_symend-add_char_get_global_offset_get_num_groups
add_char_get_global_offset_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081400: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081404: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008140C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081414: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008141C: BEA10080
	s_clause 0x1                                               // 000000081420: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081424: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008142C: DC4A0026 01000001
	s_clause 0x3                                               // 000000081434: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081438: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000081440: F4080300 F8000008
	s_load_b32 s5, s[0:1], 0x18                                // 000000081448: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000081450: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000081458: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 4, v4                                // 000000081460: D6560004 04110803
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000081468: D6560000 04010204
	s_waitcnt vmcnt(1)                                         // 000000081470: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081474: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000081478: 32040490
	s_waitcnt vmcnt(0)                                         // 00000008147C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000081480: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081488: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000008148C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081490: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 000000081494: BF89FC07
	s_addc_u32 s1, s8, s14                                     // 000000081498: 82010E08
	s_add_u32 s2, s12, s8                                      // 00000008149C: 8002080C
	s_addc_u32 s3, s13, s9                                     // 0000000814A0: 8203090D
	v_mov_b32_e32 v1, s1                                       // 0000000814A4: 7E020201
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000814A8: BF07806A
	s_addc_u32 s1, s10, s15                                    // 0000000814AC: 82010F0A
	s_add_u32 s8, s12, s10                                     // 0000000814B0: 80080A0C
	v_mov_b32_e32 v2, s1                                       // 0000000814B4: 7E040201
	s_addc_u32 s9, s13, s11                                    // 0000000814B8: 82090B0D
	s_cmp_lg_u32 s0, 0                                         // 0000000814BC: BF078000
	global_store_b8 v3, v1, s[2:3]                             // 0000000814C0: DC620000 00020103
	s_addc_u32 s0, s6, s5                                      // 0000000814C8: 82000506
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000814CC: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000814D0: 7E0A0200
	s_add_u32 s0, s12, s6                                      // 0000000814D4: 8000060C
	s_addc_u32 s1, s13, s7                                     // 0000000814D8: 8201070D
	s_clause 0x1                                               // 0000000814DC: BF850001
	global_store_b8 v4, v2, s[8:9]                             // 0000000814E0: DC620000 00080204
	global_store_b8 v0, v5, s[0:1]                             // 0000000814E8: DC620000 00000500
	s_nop 0                                                    // 0000000814F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000814F4: BFB60003
	s_endpgm                                                   // 0000000814F8: BFB00000
add_char_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 0000000814FC: BF800000

	.p2align	8
	.type	add_char_get_local_id_get_num_groups,@function
	.size	add_char_get_local_id_get_num_groups, add_char_get_local_id_get_num_groups_symend-add_char_get_local_id_get_num_groups
add_char_get_local_id_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081500: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081504: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008150C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081514: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008151C: BEA10080
	s_clause 0x1                                               // 000000081520: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081524: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008152C: DC4A0026 01000001
	s_clause 0x3                                               // 000000081534: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000081538: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081540: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000081548: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000081550: F4040180 F8000048
	v_lshl_or_b32 v5, s2, 3, v3                                // 000000081558: D6560005 040D0602
	s_waitcnt vmcnt(1)                                         // 000000081560: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081564: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000081568: 32040490
	s_waitcnt vmcnt(0)                                         // 00000008156C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000081570: D43D0000 00020280
	v_lshl_or_b32 v1, s3, 2, v4                                // 000000081578: D6560001 04110403
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081580: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081584: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 000000081588: BF89FC07
	s_addc_u32 s1, s10, 0                                      // 00000008158C: 8201800A
	s_add_u32 s12, s8, s12                                     // 000000081590: 800C0C08
	s_addc_u32 s13, s9, s13                                    // 000000081594: 820D0D09
	v_add_nc_u16 v2.l, s1, v3.l                                // 000000081598: D7030002 00020601
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000815A0: BF07806A
	s_addc_u32 s10, s11, 0                                     // 0000000815A4: 820A800B
	s_add_u32 s2, s8, s14                                      // 0000000815A8: 80020E08
	s_addc_u32 s3, s9, s15                                     // 0000000815AC: 82030F09
	s_cmp_lg_u32 s0, 0                                         // 0000000815B0: BF078000
	v_add_nc_u16 v3.l, s10, v4.l                               // 0000000815B4: D7030003 0002080A
	s_addc_u32 s0, s5, 0                                       // 0000000815BC: 82008005
	global_store_b8 v5, v2, s[12:13]                           // 0000000815C0: DC620000 000C0205
	v_add_nc_u16 v4.l, s0, v0.l                                // 0000000815C8: D7030004 00020000
	v_lshl_or_b32 v0, s4, 1, v0                                // 0000000815D0: D6560000 04010204
	s_add_u32 s0, s8, s6                                       // 0000000815D8: 80000608
	s_addc_u32 s1, s9, s7                                      // 0000000815DC: 82010709
	s_clause 0x1                                               // 0000000815E0: BF850001
	global_store_b8 v1, v3, s[2:3]                             // 0000000815E4: DC620000 00020301
	global_store_b8 v0, v4, s[0:1]                             // 0000000815EC: DC620000 00000400
	s_nop 0                                                    // 0000000815F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000815F8: BFB60003
	s_endpgm                                                   // 0000000815FC: BFB00000
add_char_get_local_id_get_num_groups_symend:

	.p2align	8
	.type	add_char_get_group_id_get_num_groups,@function
	.size	add_char_get_group_id_get_num_groups, add_char_get_group_id_get_num_groups_symend-add_char_get_group_id_get_num_groups
add_char_get_group_id_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081600: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081604: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008160C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081614: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008161C: BEA10080
	s_clause 0x1                                               // 000000081620: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081624: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008162C: DC4A0026 01000001
	s_clause 0x3                                               // 000000081634: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000081638: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081640: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000081648: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000081650: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000081658: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 4, v4                                // 000000081660: D6560004 04110803
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000081668: D6560000 04010204
	s_waitcnt vmcnt(1)                                         // 000000081670: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081674: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000081678: 32040490
	s_waitcnt vmcnt(0)                                         // 00000008167C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000081680: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081688: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000008168C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081690: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 000000081694: BF89FC07
	s_addc_u32 s1, s2, s10                                     // 000000081698: 82010A02
	s_add_u32 s12, s8, s12                                     // 00000008169C: 800C0C08
	s_addc_u32 s13, s9, s13                                    // 0000000816A0: 820D0D09
	v_mov_b32_e32 v1, s1                                       // 0000000816A4: 7E020201
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000816A8: BF07806A
	s_addc_u32 s1, s3, s11                                     // 0000000816AC: 82010B03
	s_add_u32 s2, s8, s14                                      // 0000000816B0: 80020E08
	v_mov_b32_e32 v2, s1                                       // 0000000816B4: 7E040201
	s_addc_u32 s3, s9, s15                                     // 0000000816B8: 82030F09
	s_cmp_lg_u32 s0, 0                                         // 0000000816BC: BF078000
	global_store_b8 v3, v1, s[12:13]                           // 0000000816C0: DC620000 000C0103
	s_addc_u32 s0, s4, s5                                      // 0000000816C8: 82000504
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000816CC: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000816D0: 7E0A0200
	s_add_u32 s0, s8, s6                                       // 0000000816D4: 80000608
	s_addc_u32 s1, s9, s7                                      // 0000000816D8: 82010709
	s_clause 0x1                                               // 0000000816DC: BF850001
	global_store_b8 v4, v2, s[2:3]                             // 0000000816E0: DC620000 00020204
	global_store_b8 v0, v5, s[0:1]                             // 0000000816E8: DC620000 00000500
	s_nop 0                                                    // 0000000816F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000816F4: BFB60003
	s_endpgm                                                   // 0000000816F8: BFB00000
add_char_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 0000000816FC: BF800000

	.p2align	8
	.type	add_char_get_local_size_get_num_groups,@function
	.size	add_char_get_local_size_get_num_groups, add_char_get_local_size_get_num_groups_symend-add_char_get_local_size_get_num_groups
add_char_get_local_size_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081700: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081704: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008170C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081714: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008171C: BEA10080
	s_clause 0x1                                               // 000000081720: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081724: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008172C: DC4A0026 01000001
	s_clause 0x3                                               // 000000081734: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000081738: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081740: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000081748: F4000140 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000081750: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000081758: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000081760: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000081768: D6560000 04010404
	s_waitcnt vmcnt(1)                                         // 000000081770: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081774: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000081778: 32040490
	s_waitcnt vmcnt(0)                                         // 00000008177C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000081780: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081788: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000008178C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081790: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 000000081794: BF89FC07
	s_addc_u32 s1, s10, 2                                      // 000000081798: 8201820A
	s_add_u32 s2, s8, s12                                      // 00000008179C: 80020C08
	s_addc_u32 s3, s9, s13                                     // 0000000817A0: 82030D09
	v_mov_b32_e32 v1, s1                                       // 0000000817A4: 7E020201
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000817A8: BF07806A
	s_addc_u32 s1, s11, 2                                      // 0000000817AC: 8201820B
	s_add_u32 s10, s8, s14                                     // 0000000817B0: 800A0E08
	v_mov_b32_e32 v2, s1                                       // 0000000817B4: 7E040201
	s_addc_u32 s11, s9, s15                                    // 0000000817B8: 820B0F09
	s_cmp_lg_u32 s0, 0                                         // 0000000817BC: BF078000
	global_store_b8 v3, v1, s[2:3]                             // 0000000817C0: DC620000 00020103
	s_addc_u32 s0, s5, 4                                       // 0000000817C8: 82008405
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000817CC: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000817D0: 7E0A0200
	s_add_u32 s0, s8, s6                                       // 0000000817D4: 80000608
	s_addc_u32 s1, s9, s7                                      // 0000000817D8: 82010709
	s_clause 0x1                                               // 0000000817DC: BF850001
	global_store_b8 v4, v2, s[10:11]                           // 0000000817E0: DC620000 000A0204
	global_store_b8 v0, v5, s[0:1]                             // 0000000817E8: DC620000 00000500
	s_nop 0                                                    // 0000000817F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000817F4: BFB60003
	s_endpgm                                                   // 0000000817F8: BFB00000
add_char_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 0000000817FC: BF800000

	.p2align	8
	.type	add_char_get_global_id_get_num_groups,@function
	.size	add_char_get_global_id_get_num_groups, add_char_get_global_id_get_num_groups_symend-add_char_get_global_id_get_num_groups
add_char_get_global_id_get_num_groups:
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081800: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 000000081808: BEA10080
	s_delay_alu instid0(VALU_DEP_1)                            // 00000008180C: BF870001
	v_lshl_or_b32 v5, s2, 1, v3                                // 000000081810: D6560005 040D0202
	v_mov_b32_e32 v1, 0                                        // 000000081818: 7E020280
	s_clause 0x1                                               // 00000008181C: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081820: DC520022 02000001
	global_load_u16 v4, v1, s[0:1] offset:38                   // 000000081828: DC4A0026 04000001
	s_clause 0x2                                               // 000000081830: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081834: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000008183C: F4040180 F8000048
	s_load_b128 s[12:15], s[0:1], 0x8                          // 000000081844: F4080300 F8000008
	v_bfe_u32 v1, v0, 10, 10                                   // 00000008184C: D6100001 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081854: D6100000 02292900
	s_load_b32 s1, s[0:1], 0x18                                // 00000008185C: F4000040 F8000018
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000081864: BF870112
	v_lshl_or_b32 v1, s3, 1, v1                                // 000000081868: D6560001 04050203
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000081870: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000081878: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000008187C: BF870092
	v_add_co_u32 v6, s0, s10, v1                               // 000000081880: D7000006 0002020A
	v_add_co_ci_u32_e64 v1, null, s11, 0, s0                   // 000000081888: D5207C01 0001000B
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000081890: BF870093
	v_add_co_u32 v7, s0, s6, v0                                // 000000081894: D7000007 00020006
	v_add_co_ci_u32_e64 v3, null, s7, 0, s0                    // 00000008189C: D5207C03 00010007
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000818A4: BF870094
	v_add_co_u32 v0, s0, s12, v6                               // 0000000818A8: D7000000 00020C0C
	v_add_co_ci_u32_e64 v1, s0, s13, v1, s0                    // 0000000818B0: D5200001 0002020D
	s_waitcnt vmcnt(1)                                         // 0000000818B8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 0000000818BC: 7C7A0480
	v_lshrrev_b32_e32 v8, 16, v2                               // 0000000818C0: 32100490
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000818C4: BF07806A
	v_add_co_u32 v2, vcc_lo, s12, v7                           // 0000000818C8: D7006A02 00020E0C
	v_add_co_ci_u32_e32 v3, vcc_lo, s13, v3, vcc_lo            // 0000000818D0: 4006060D
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 0000000818D4: BF8704A3
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000818D8: 7C7A1080
	s_addc_u32 s0, s8, s14                                     // 0000000818DC: 82000E08
	v_add_nc_u32_e32 v8, s0, v5                                // 0000000818E0: 4A100A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s15, v6, vcc_lo            // 0000000818E4: 400C0C0F
	s_waitcnt vmcnt(0)                                         // 0000000818E8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v4.l                           // 0000000818EC: 7C7A0880
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v7, vcc_lo             // 0000000818F0: 40080E01
	s_clause 0x2                                               // 0000000818F4: BF850002
	global_store_b8 v5, v8, s[12:13]                           // 0000000818F8: DC620000 000C0805
	global_store_b8 v[0:1], v6, off                            // 000000081900: DC620000 007C0600
	global_store_b8 v[2:3], v4, off                            // 000000081908: DC620000 007C0402
	s_nop 0                                                    // 000000081910: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081914: BFB60003
	s_endpgm                                                   // 000000081918: BFB00000
add_char_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000008191C: BF800000
	.long 0xbf800000                                           // 000000081920: BF800000
	.long 0xbf800000                                           // 000000081924: BF800000
	.long 0xbf800000                                           // 000000081928: BF800000
	.long 0xbf800000                                           // 00000008192C: BF800000
	.long 0xbf800000                                           // 000000081930: BF800000
	.long 0xbf800000                                           // 000000081934: BF800000
	.long 0xbf800000                                           // 000000081938: BF800000
	.long 0xbf800000                                           // 00000008193C: BF800000
	.long 0xbf800000                                           // 000000081940: BF800000
	.long 0xbf800000                                           // 000000081944: BF800000
	.long 0xbf800000                                           // 000000081948: BF800000
	.long 0xbf800000                                           // 00000008194C: BF800000
	.long 0xbf800000                                           // 000000081950: BF800000
	.long 0xbf800000                                           // 000000081954: BF800000
	.long 0xbf800000                                           // 000000081958: BF800000
	.long 0xbf800000                                           // 00000008195C: BF800000
	.long 0xbf800000                                           // 000000081960: BF800000
	.long 0xbf800000                                           // 000000081964: BF800000
	.long 0xbf800000                                           // 000000081968: BF800000
	.long 0xbf800000                                           // 00000008196C: BF800000
	.long 0xbf800000                                           // 000000081970: BF800000
	.long 0xbf800000                                           // 000000081974: BF800000
	.long 0xbf800000                                           // 000000081978: BF800000
	.long 0xbf800000                                           // 00000008197C: BF800000
	.long 0xbf800000                                           // 000000081980: BF800000
	.long 0xbf800000                                           // 000000081984: BF800000
	.long 0xbf800000                                           // 000000081988: BF800000
	.long 0xbf800000                                           // 00000008198C: BF800000
	.long 0xbf800000                                           // 000000081990: BF800000
	.long 0xbf800000                                           // 000000081994: BF800000
	.long 0xbf800000                                           // 000000081998: BF800000
	.long 0xbf800000                                           // 00000008199C: BF800000
	.long 0xbf800000                                           // 0000000819A0: BF800000
	.long 0xbf800000                                           // 0000000819A4: BF800000
	.long 0xbf800000                                           // 0000000819A8: BF800000
	.long 0xbf800000                                           // 0000000819AC: BF800000
	.long 0xbf800000                                           // 0000000819B0: BF800000
	.long 0xbf800000                                           // 0000000819B4: BF800000
	.long 0xbf800000                                           // 0000000819B8: BF800000
	.long 0xbf800000                                           // 0000000819BC: BF800000
	.long 0xbf800000                                           // 0000000819C0: BF800000
	.long 0xbf800000                                           // 0000000819C4: BF800000
	.long 0xbf800000                                           // 0000000819C8: BF800000
	.long 0xbf800000                                           // 0000000819CC: BF800000
	.long 0xbf800000                                           // 0000000819D0: BF800000
	.long 0xbf800000                                           // 0000000819D4: BF800000
	.long 0xbf800000                                           // 0000000819D8: BF800000
	.long 0xbf800000                                           // 0000000819DC: BF800000
	.long 0xbf800000                                           // 0000000819E0: BF800000
	.long 0xbf800000                                           // 0000000819E4: BF800000
	.long 0xbf800000                                           // 0000000819E8: BF800000
	.long 0xbf800000                                           // 0000000819EC: BF800000
	.long 0xbf800000                                           // 0000000819F0: BF800000
	.long 0xbf800000                                           // 0000000819F4: BF800000
	.long 0xbf800000                                           // 0000000819F8: BF800000
	.long 0xbf800000                                           // 0000000819FC: BF800000

	.p2align	8
	.type	add_char_get_global_size_get_num_groups,@function
	.size	add_char_get_global_size_get_num_groups, add_char_get_global_size_get_num_groups_symend-add_char_get_global_size_get_num_groups
add_char_get_global_size_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081A00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081A04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000081A0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081A14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000081A1C: BEA10080
	s_clause 0x1                                               // 000000081A20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081A24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000081A2C: DC4A0026 01000001
	s_clause 0x4                                               // 000000081A34: BF850004
	s_load_b64 s[6:7], s[0:1], null                            // 000000081A38: F4040180 F8000000
	s_load_b64 s[12:13], s[0:1], 0x10                          // 000000081A40: F4040300 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081A48: F4080200 F8000038
	s_load_b32 s14, s[0:1], 0x18                               // 000000081A50: F4000380 F8000018
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000081A58: F4040000 F8000048
	v_lshl_or_b32 v3, s2, 4, v3                                // 000000081A60: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000081A68: D6560004 04110203
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000081A70: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000081A78: BF89FC07
	s_lshl_b32 s15, s12, 4                                     // 000000081A7C: 840F840C
	s_add_u32 s2, s6, s8                                       // 000000081A80: 80020806
	s_addc_u32 s3, s7, s9                                      // 000000081A84: 82030907
	s_lshl_b32 s8, s13, 1                                      // 000000081A88: 8408810D
	s_add_u32 s4, s6, s10                                      // 000000081A8C: 80040A06
	s_addc_u32 s5, s7, s11                                     // 000000081A90: 82050B07
	s_lshl_b32 s9, s14, 1                                      // 000000081A94: 8409810E
	s_add_u32 s0, s6, s0                                       // 000000081A98: 80000006
	s_addc_u32 s1, s7, s1                                      // 000000081A9C: 82010107
	s_waitcnt vmcnt(1)                                         // 000000081AA0: BF8907F7
	v_add_nc_u32_e32 v6, s15, v2                               // 000000081AA4: 4A0C040F
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081AA8: 7C7A0480
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000081AAC: 320A0490
	s_waitcnt vmcnt(0)                                         // 000000081AB0: BF8903F7
	v_add_nc_u32_e32 v7, s9, v1                                // 000000081AB4: 4A0E0209
	v_add_co_ci_u32_e32 v2, vcc_lo, s12, v6, vcc_lo            // 000000081AB8: 40040C0C
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000081ABC: BF870123
	v_add_nc_u32_e32 v8, s8, v5                                // 000000081AC0: 4A100A08
	v_cmp_ne_u16_e32 vcc_lo, 0, v5.l                           // 000000081AC4: 7C7A0A80
	v_add_co_ci_u32_e32 v5, vcc_lo, s13, v8, vcc_lo            // 000000081AC8: 400A100D
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 000000081ACC: 7C7A0280
	v_add_co_ci_u32_e32 v1, vcc_lo, s14, v7, vcc_lo            // 000000081AD0: 40020E0E
	s_clause 0x2                                               // 000000081AD4: BF850002
	global_store_b8 v3, v2, s[2:3]                             // 000000081AD8: DC620000 00020203
	global_store_b8 v4, v5, s[4:5]                             // 000000081AE0: DC620000 00040504
	global_store_b8 v0, v1, s[0:1]                             // 000000081AE8: DC620000 00000100
	s_nop 0                                                    // 000000081AF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081AF4: BFB60003
	s_endpgm                                                   // 000000081AF8: BFB00000
add_char_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 000000081AFC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_get_num_groups,@function
	.size	add_char_get_num_groups_get_num_groups, add_char_get_num_groups_get_num_groups_symend-add_char_get_num_groups_get_num_groups
add_char_get_num_groups_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081B00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081B04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000081B0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081B14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000081B1C: BEA10080
	s_clause 0x1                                               // 000000081B20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081B24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000081B2C: DC4A0026 01000001
	s_clause 0x3                                               // 000000081B34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000081B38: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081B40: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x18                                // 000000081B48: F4000140 F8000018
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000081B50: F4040000 F8000048
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000081B58: D6560000 04010404
	s_waitcnt vmcnt(1)                                         // 000000081B60: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081B64: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000081B68: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081B6C: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000081B70: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081B74: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 000000081B78: BF89FC07
	s_addc_u32 s6, s10, 0                                      // 000000081B7C: 8206800A
	v_lshl_or_b32 v2, s2, 1, v3                                // 000000081B80: D6560002 040D0202
	s_lshl_b32 s2, s6, 1                                       // 000000081B88: 84028106
	s_add_u32 s6, s8, s12                                      // 000000081B8C: 80060C08
	s_addc_u32 s7, s9, s13                                     // 000000081B90: 82070D09
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081B94: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000081B98: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 000000081B9C: 7C7A0280
	s_addc_u32 s10, s11, 0                                     // 000000081BA0: 820A800B
	v_mov_b32_e32 v1, s2                                       // 000000081BA4: 7E020202
	s_lshl_b32 s2, s10, 1                                      // 000000081BA8: 8402810A
	s_add_u32 s10, s8, s14                                     // 000000081BAC: 800A0E08
	s_addc_u32 s11, s9, s15                                    // 000000081BB0: 820B0F09
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081BB4: BF07806A
	v_lshl_or_b32 v3, s3, 1, v4                                // 000000081BB8: D6560003 04110203
	v_mov_b32_e32 v4, s2                                       // 000000081BC0: 7E080202
	s_addc_u32 s3, s5, 0                                       // 000000081BC4: 82038005
	global_store_b8 v2, v1, s[6:7]                             // 000000081BC8: DC620000 00060102
	s_lshl_b32 s2, s3, 1                                       // 000000081BD0: 84028103
	s_add_u32 s0, s8, s0                                       // 000000081BD4: 80000008
	v_mov_b32_e32 v5, s2                                       // 000000081BD8: 7E0A0202
	s_addc_u32 s1, s9, s1                                      // 000000081BDC: 82010109
	s_clause 0x1                                               // 000000081BE0: BF850001
	global_store_b8 v3, v4, s[10:11]                           // 000000081BE4: DC620000 000A0403
	global_store_b8 v0, v5, s[0:1]                             // 000000081BEC: DC620000 00000500
	s_nop 0                                                    // 000000081BF4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081BF8: BFB60003
	s_endpgm                                                   // 000000081BFC: BFB00000
add_char_get_num_groups_get_num_groups_symend:

	.p2align	8
	.type	add_char_get_work_dim_get_num_groups,@function
	.size	add_char_get_work_dim_get_num_groups, add_char_get_work_dim_get_num_groups_symend-add_char_get_work_dim_get_num_groups
add_char_get_work_dim_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081C00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081C04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000081C0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081C14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000081C1C: BEA10080
	s_clause 0x1                                               // 000000081C20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081C24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000081C2C: DC4A0026 01000001
	s_clause 0x4                                               // 000000081C34: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 000000081C38: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000081C40: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081C48: F4080300 F8000038
	s_load_b32 s16, s[0:1], 0x18                               // 000000081C50: F4000400 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000081C58: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000081C60: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000081C68: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000081C70: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000081C78: BF89FC07
	s_and_b32 s1, s5, 0xffff                                   // 000000081C7C: 8B01FF05 0000FFFF
	s_waitcnt vmcnt(1)                                         // 000000081C84: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081C88: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000081C8C: 32040490
	s_waitcnt vmcnt(0)                                         // 000000081C90: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000081C94: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081C9C: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 000000081CA0: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081CA4: 7C7A0480
	s_addc_u32 s5, s1, s10                                     // 000000081CA8: 82050A01
	s_add_u32 s2, s8, s12                                      // 000000081CAC: 80020C08
	s_addc_u32 s3, s9, s13                                     // 000000081CB0: 82030D09
	v_mov_b32_e32 v1, s5                                       // 000000081CB4: 7E020205
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081CB8: BF07806A
	s_addc_u32 s5, s1, s11                                     // 000000081CBC: 82050B01
	s_add_u32 s10, s8, s14                                     // 000000081CC0: 800A0E08
	v_mov_b32_e32 v2, s5                                       // 000000081CC4: 7E040205
	s_addc_u32 s11, s9, s15                                    // 000000081CC8: 820B0F09
	s_cmp_lg_u32 s0, 0                                         // 000000081CCC: BF078000
	global_store_b8 v3, v1, s[2:3]                             // 000000081CD0: DC620000 00020103
	s_addc_u32 s0, s1, s16                                     // 000000081CD8: 82001001
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000081CDC: BF870009
	v_mov_b32_e32 v5, s0                                       // 000000081CE0: 7E0A0200
	s_add_u32 s0, s8, s6                                       // 000000081CE4: 80000608
	s_addc_u32 s1, s9, s7                                      // 000000081CE8: 82010709
	s_clause 0x1                                               // 000000081CEC: BF850001
	global_store_b8 v4, v2, s[10:11]                           // 000000081CF0: DC620000 000A0204
	global_store_b8 v0, v5, s[0:1]                             // 000000081CF8: DC620000 00000500
	s_nop 0                                                    // 000000081D00: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081D04: BFB60003
	s_endpgm                                                   // 000000081D08: BFB00000
add_char_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 000000081D0C: BF800000
	.long 0xbf800000                                           // 000000081D10: BF800000
	.long 0xbf800000                                           // 000000081D14: BF800000
	.long 0xbf800000                                           // 000000081D18: BF800000
	.long 0xbf800000                                           // 000000081D1C: BF800000
	.long 0xbf800000                                           // 000000081D20: BF800000
	.long 0xbf800000                                           // 000000081D24: BF800000
	.long 0xbf800000                                           // 000000081D28: BF800000
	.long 0xbf800000                                           // 000000081D2C: BF800000
	.long 0xbf800000                                           // 000000081D30: BF800000
	.long 0xbf800000                                           // 000000081D34: BF800000
	.long 0xbf800000                                           // 000000081D38: BF800000
	.long 0xbf800000                                           // 000000081D3C: BF800000
	.long 0xbf800000                                           // 000000081D40: BF800000
	.long 0xbf800000                                           // 000000081D44: BF800000
	.long 0xbf800000                                           // 000000081D48: BF800000
	.long 0xbf800000                                           // 000000081D4C: BF800000
	.long 0xbf800000                                           // 000000081D50: BF800000
	.long 0xbf800000                                           // 000000081D54: BF800000
	.long 0xbf800000                                           // 000000081D58: BF800000
	.long 0xbf800000                                           // 000000081D5C: BF800000
	.long 0xbf800000                                           // 000000081D60: BF800000
	.long 0xbf800000                                           // 000000081D64: BF800000
	.long 0xbf800000                                           // 000000081D68: BF800000
	.long 0xbf800000                                           // 000000081D6C: BF800000
	.long 0xbf800000                                           // 000000081D70: BF800000
	.long 0xbf800000                                           // 000000081D74: BF800000
	.long 0xbf800000                                           // 000000081D78: BF800000
	.long 0xbf800000                                           // 000000081D7C: BF800000
	.long 0xbf800000                                           // 000000081D80: BF800000
	.long 0xbf800000                                           // 000000081D84: BF800000
	.long 0xbf800000                                           // 000000081D88: BF800000
	.long 0xbf800000                                           // 000000081D8C: BF800000
	.long 0xbf800000                                           // 000000081D90: BF800000
	.long 0xbf800000                                           // 000000081D94: BF800000
	.long 0xbf800000                                           // 000000081D98: BF800000
	.long 0xbf800000                                           // 000000081D9C: BF800000
	.long 0xbf800000                                           // 000000081DA0: BF800000
	.long 0xbf800000                                           // 000000081DA4: BF800000
	.long 0xbf800000                                           // 000000081DA8: BF800000
	.long 0xbf800000                                           // 000000081DAC: BF800000
	.long 0xbf800000                                           // 000000081DB0: BF800000
	.long 0xbf800000                                           // 000000081DB4: BF800000
	.long 0xbf800000                                           // 000000081DB8: BF800000
	.long 0xbf800000                                           // 000000081DBC: BF800000
	.long 0xbf800000                                           // 000000081DC0: BF800000
	.long 0xbf800000                                           // 000000081DC4: BF800000
	.long 0xbf800000                                           // 000000081DC8: BF800000
	.long 0xbf800000                                           // 000000081DCC: BF800000
	.long 0xbf800000                                           // 000000081DD0: BF800000
	.long 0xbf800000                                           // 000000081DD4: BF800000
	.long 0xbf800000                                           // 000000081DD8: BF800000
	.long 0xbf800000                                           // 000000081DDC: BF800000
	.long 0xbf800000                                           // 000000081DE0: BF800000
	.long 0xbf800000                                           // 000000081DE4: BF800000
	.long 0xbf800000                                           // 000000081DE8: BF800000
	.long 0xbf800000                                           // 000000081DEC: BF800000
	.long 0xbf800000                                           // 000000081DF0: BF800000
	.long 0xbf800000                                           // 000000081DF4: BF800000
	.long 0xbf800000                                           // 000000081DF8: BF800000
	.long 0xbf800000                                           // 000000081DFC: BF800000

	.p2align	8
	.type	add_char_x_get_work_dim,@function
	.size	add_char_x_get_work_dim, add_char_x_get_work_dim_symend-add_char_x_get_work_dim
add_char_x_get_work_dim:
	s_clause 0x4                                               // 000000081E00: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 000000081E04: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], null                            // 000000081E0C: F4040180 F8000000
	s_load_b32 s12, s[0:1], 0x8                                // 000000081E14: F4000300 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081E1C: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000081E24: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000081E2C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000081E34: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081E3C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000081E44: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000081E48: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000081E4C: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000081E54: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 000000081E5C: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000081E60: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000081E68: BF89FC07
	s_add_i32 s4, s5, s12                                      // 000000081E6C: 81040C05
	s_add_u32 s2, s6, s8                                       // 000000081E70: 80020806
	v_mov_b32_e32 v3, s4                                       // 000000081E74: 7E060204
	s_addc_u32 s3, s7, s9                                      // 000000081E78: 82030907
	s_add_u32 s4, s6, s10                                      // 000000081E7C: 80040A06
	s_addc_u32 s5, s7, s11                                     // 000000081E80: 82050B07
	s_add_u32 s0, s6, s0                                       // 000000081E84: 80000006
	s_addc_u32 s1, s7, s1                                      // 000000081E88: 82010107
	s_clause 0x2                                               // 000000081E8C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 000000081E90: DC620000 00020301
	global_store_b8 v2, v3, s[4:5]                             // 000000081E98: DC620000 00040302
	global_store_b8 v0, v3, s[0:1]                             // 000000081EA0: DC620000 00000300
	s_nop 0                                                    // 000000081EA8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081EAC: BFB60003
	s_endpgm                                                   // 000000081EB0: BFB00000
add_char_x_get_work_dim_symend:
	.long 0xbf800000                                           // 000000081EB4: BF800000
	.long 0xbf800000                                           // 000000081EB8: BF800000
	.long 0xbf800000                                           // 000000081EBC: BF800000
	.long 0xbf800000                                           // 000000081EC0: BF800000
	.long 0xbf800000                                           // 000000081EC4: BF800000
	.long 0xbf800000                                           // 000000081EC8: BF800000
	.long 0xbf800000                                           // 000000081ECC: BF800000
	.long 0xbf800000                                           // 000000081ED0: BF800000
	.long 0xbf800000                                           // 000000081ED4: BF800000
	.long 0xbf800000                                           // 000000081ED8: BF800000
	.long 0xbf800000                                           // 000000081EDC: BF800000
	.long 0xbf800000                                           // 000000081EE0: BF800000
	.long 0xbf800000                                           // 000000081EE4: BF800000
	.long 0xbf800000                                           // 000000081EE8: BF800000
	.long 0xbf800000                                           // 000000081EEC: BF800000
	.long 0xbf800000                                           // 000000081EF0: BF800000
	.long 0xbf800000                                           // 000000081EF4: BF800000
	.long 0xbf800000                                           // 000000081EF8: BF800000
	.long 0xbf800000                                           // 000000081EFC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_get_work_dim,@function
	.size	add_char_get_global_offset_get_work_dim, add_char_get_global_offset_get_work_dim_symend-add_char_get_global_offset_get_work_dim
add_char_get_global_offset_get_work_dim:
	s_clause 0x3                                               // 000000081F00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081F04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 000000081F0C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000081F14: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000081F1C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000081F24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000081F2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081F34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000081F3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000081F40: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000081F44: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000081F4C: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3)                            // 000000081F54: BF870003
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000081F58: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000081F60: BF89FC07
	s_add_i32 s12, s8, s5                                      // 000000081F64: 810C0508
	s_add_u32 s2, s6, s8                                       // 000000081F68: 80020806
	s_addc_u32 s3, s7, s9                                      // 000000081F6C: 82030907
	v_mov_b32_e32 v3, s12                                      // 000000081F70: 7E06020C
	s_add_i32 s12, s10, s5                                     // 000000081F74: 810C050A
	s_add_u32 s8, s6, s10                                      // 000000081F78: 80080A06
	v_mov_b32_e32 v4, s12                                      // 000000081F7C: 7E08020C
	s_addc_u32 s9, s7, s11                                     // 000000081F80: 82090B07
	s_add_i32 s5, s0, s5                                       // 000000081F84: 81050500
	s_add_u32 s0, s6, s0                                       // 000000081F88: 80000006
	v_mov_b32_e32 v5, s5                                       // 000000081F8C: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 000000081F90: 82010107
	s_clause 0x2                                               // 000000081F94: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 000000081F98: DC620000 00020301
	global_store_b8 v2, v4, s[8:9]                             // 000000081FA0: DC620000 00080402
	global_store_b8 v0, v5, s[0:1]                             // 000000081FA8: DC620000 00000500
	s_nop 0                                                    // 000000081FB0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081FB4: BFB60003
	s_endpgm                                                   // 000000081FB8: BFB00000
add_char_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 000000081FBC: BF800000
	.long 0xbf800000                                           // 000000081FC0: BF800000
	.long 0xbf800000                                           // 000000081FC4: BF800000
	.long 0xbf800000                                           // 000000081FC8: BF800000
	.long 0xbf800000                                           // 000000081FCC: BF800000
	.long 0xbf800000                                           // 000000081FD0: BF800000
	.long 0xbf800000                                           // 000000081FD4: BF800000
	.long 0xbf800000                                           // 000000081FD8: BF800000
	.long 0xbf800000                                           // 000000081FDC: BF800000
	.long 0xbf800000                                           // 000000081FE0: BF800000
	.long 0xbf800000                                           // 000000081FE4: BF800000
	.long 0xbf800000                                           // 000000081FE8: BF800000
	.long 0xbf800000                                           // 000000081FEC: BF800000
	.long 0xbf800000                                           // 000000081FF0: BF800000
	.long 0xbf800000                                           // 000000081FF4: BF800000
	.long 0xbf800000                                           // 000000081FF8: BF800000
	.long 0xbf800000                                           // 000000081FFC: BF800000

	.p2align	8
	.type	add_char_get_local_id_get_work_dim,@function
	.size	add_char_get_local_id_get_work_dim, add_char_get_local_id_get_work_dim_symend-add_char_get_local_id_get_work_dim
add_char_get_local_id_get_work_dim:
	s_clause 0x3                                               // 000000082000: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000082004: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000008200C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000082014: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000008201C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000082024: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008202C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000082034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008203C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000082040: BF870193
	v_lshl_or_b32 v3, s2, 3, v1                                // 000000082044: D6560003 04050602
	v_lshl_or_b32 v4, s3, 2, v2                                // 00000008204C: D6560004 04090403
	s_delay_alu instid0(VALU_DEP_3)                            // 000000082054: BF870003
	v_lshl_or_b32 v5, s4, 1, v0                                // 000000082058: D6560005 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000082060: BF89FC07
	v_add_nc_u16 v1.l, s5, v1.l                                // 000000082064: D7030001 00020205
	v_add_nc_u16 v2.l, s5, v2.l                                // 00000008206C: D7030002 00020405
	s_add_u32 s2, s6, s8                                       // 000000082074: 80020806
	s_addc_u32 s3, s7, s9                                      // 000000082078: 82030907
	v_add_nc_u16 v0.l, s5, v0.l                                // 00000008207C: D7030000 00020005
	s_add_u32 s4, s6, s10                                      // 000000082084: 80040A06
	s_addc_u32 s5, s7, s11                                     // 000000082088: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000008208C: 80000006
	s_addc_u32 s1, s7, s1                                      // 000000082090: 82010107
	s_clause 0x2                                               // 000000082094: BF850002
	global_store_b8 v3, v1, s[2:3]                             // 000000082098: DC620000 00020103
	global_store_b8 v4, v2, s[4:5]                             // 0000000820A0: DC620000 00040204
	global_store_b8 v5, v0, s[0:1]                             // 0000000820A8: DC620000 00000005
	s_nop 0                                                    // 0000000820B0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000820B4: BFB60003
	s_endpgm                                                   // 0000000820B8: BFB00000
add_char_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000820BC: BF800000
	.long 0xbf800000                                           // 0000000820C0: BF800000
	.long 0xbf800000                                           // 0000000820C4: BF800000
	.long 0xbf800000                                           // 0000000820C8: BF800000
	.long 0xbf800000                                           // 0000000820CC: BF800000
	.long 0xbf800000                                           // 0000000820D0: BF800000
	.long 0xbf800000                                           // 0000000820D4: BF800000
	.long 0xbf800000                                           // 0000000820D8: BF800000
	.long 0xbf800000                                           // 0000000820DC: BF800000
	.long 0xbf800000                                           // 0000000820E0: BF800000
	.long 0xbf800000                                           // 0000000820E4: BF800000
	.long 0xbf800000                                           // 0000000820E8: BF800000
	.long 0xbf800000                                           // 0000000820EC: BF800000
	.long 0xbf800000                                           // 0000000820F0: BF800000
	.long 0xbf800000                                           // 0000000820F4: BF800000
	.long 0xbf800000                                           // 0000000820F8: BF800000
	.long 0xbf800000                                           // 0000000820FC: BF800000

	.p2align	8
	.type	add_char_get_group_id_get_work_dim,@function
	.size	add_char_get_group_id_get_work_dim, add_char_get_group_id_get_work_dim_symend-add_char_get_group_id_get_work_dim
add_char_get_group_id_get_work_dim:
	s_clause 0x3                                               // 000000082100: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000082104: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000008210C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000082114: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000008211C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000082124: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008212C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000082134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008213C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000082140: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000082144: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000008214C: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 000000082154: BF8704B3
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000082158: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000082160: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 000000082164: 8B05FF05 0000FFFF
	s_add_i32 s2, s5, s2                                       // 00000008216C: 81020205
	s_add_u32 s8, s6, s8                                       // 000000082170: 80080806
	s_addc_u32 s9, s7, s9                                      // 000000082174: 82090907
	s_add_i32 s12, s5, s3                                      // 000000082178: 810C0305
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000008217C: BF870009
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s12            // 000000082180: CA100002 0304000C
	s_add_u32 s2, s6, s10                                      // 000000082188: 80020A06
	s_addc_u32 s3, s7, s11                                     // 00000008218C: 82030B07
	s_add_i32 s5, s5, s4                                       // 000000082190: 81050405
	s_add_u32 s0, s6, s0                                       // 000000082194: 80000006
	v_mov_b32_e32 v5, s5                                       // 000000082198: 7E0A0205
	s_addc_u32 s1, s7, s1                                      // 00000008219C: 82010107
	s_clause 0x2                                               // 0000000821A0: BF850002
	global_store_b8 v1, v3, s[8:9]                             // 0000000821A4: DC620000 00080301
	global_store_b8 v2, v4, s[2:3]                             // 0000000821AC: DC620000 00020402
	global_store_b8 v0, v5, s[0:1]                             // 0000000821B4: DC620000 00000500
	s_nop 0                                                    // 0000000821BC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000821C0: BFB60003
	s_endpgm                                                   // 0000000821C4: BFB00000
add_char_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000821C8: BF800000
	.long 0xbf800000                                           // 0000000821CC: BF800000
	.long 0xbf800000                                           // 0000000821D0: BF800000
	.long 0xbf800000                                           // 0000000821D4: BF800000
	.long 0xbf800000                                           // 0000000821D8: BF800000
	.long 0xbf800000                                           // 0000000821DC: BF800000
	.long 0xbf800000                                           // 0000000821E0: BF800000
	.long 0xbf800000                                           // 0000000821E4: BF800000
	.long 0xbf800000                                           // 0000000821E8: BF800000
	.long 0xbf800000                                           // 0000000821EC: BF800000
	.long 0xbf800000                                           // 0000000821F0: BF800000
	.long 0xbf800000                                           // 0000000821F4: BF800000
	.long 0xbf800000                                           // 0000000821F8: BF800000
	.long 0xbf800000                                           // 0000000821FC: BF800000

	.p2align	8
	.type	add_char_get_local_size_get_work_dim,@function
	.size	add_char_get_local_size_get_work_dim, add_char_get_local_size_get_work_dim_symend-add_char_get_local_size_get_work_dim
add_char_get_local_size_get_work_dim:
	s_clause 0x3                                               // 000000082200: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000082204: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000008220C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000082214: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000008221C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000082224: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008222C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000082234: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008223C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000082240: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000082244: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000008224C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 000000082254: BF870003
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000082258: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000082260: BF89FC07
	v_add_nc_u16 v3.l, s5, 2                                   // 000000082264: D7030003 00010405
	s_add_u32 s2, s6, s8                                       // 00000008226C: 80020806
	s_addc_u32 s3, s7, s9                                      // 000000082270: 82030907
	s_add_u32 s8, s6, s10                                      // 000000082274: 80080A06
	s_addc_u32 s9, s7, s11                                     // 000000082278: 82090B07
	s_add_i32 s5, s5, 4                                        // 00000008227C: 81058405
	s_add_u32 s0, s6, s0                                       // 000000082280: 80000006
	v_mov_b32_e32 v4, s5                                       // 000000082284: 7E080205
	s_addc_u32 s1, s7, s1                                      // 000000082288: 82010107
	s_clause 0x2                                               // 00000008228C: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 000000082290: DC620000 00020301
	global_store_b8 v2, v3, s[8:9]                             // 000000082298: DC620000 00080302
	global_store_b8 v0, v4, s[0:1]                             // 0000000822A0: DC620000 00000400
	s_nop 0                                                    // 0000000822A8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000822AC: BFB60003
	s_endpgm                                                   // 0000000822B0: BFB00000
add_char_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000822B4: BF800000
	.long 0xbf800000                                           // 0000000822B8: BF800000
	.long 0xbf800000                                           // 0000000822BC: BF800000
	.long 0xbf800000                                           // 0000000822C0: BF800000
	.long 0xbf800000                                           // 0000000822C4: BF800000
	.long 0xbf800000                                           // 0000000822C8: BF800000
	.long 0xbf800000                                           // 0000000822CC: BF800000
	.long 0xbf800000                                           // 0000000822D0: BF800000
	.long 0xbf800000                                           // 0000000822D4: BF800000
	.long 0xbf800000                                           // 0000000822D8: BF800000
	.long 0xbf800000                                           // 0000000822DC: BF800000
	.long 0xbf800000                                           // 0000000822E0: BF800000
	.long 0xbf800000                                           // 0000000822E4: BF800000
	.long 0xbf800000                                           // 0000000822E8: BF800000
	.long 0xbf800000                                           // 0000000822EC: BF800000
	.long 0xbf800000                                           // 0000000822F0: BF800000
	.long 0xbf800000                                           // 0000000822F4: BF800000
	.long 0xbf800000                                           // 0000000822F8: BF800000
	.long 0xbf800000                                           // 0000000822FC: BF800000

	.p2align	8
	.type	add_char_get_global_id_get_work_dim,@function
	.size	add_char_get_global_id_get_work_dim, add_char_get_global_id_get_work_dim_symend-add_char_get_global_id_get_work_dim
add_char_get_global_id_get_work_dim:
	s_clause 0x3                                               // 000000082300: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000082304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000008230C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000082314: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008231C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000082324: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008232C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000082334: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008233C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000082340: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 000000082344: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000008234C: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000082354: BF870123
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000082358: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000082360: BF89FC07
	v_add_co_u32 v1, s2, s10, v1                               // 000000082364: D7000201 0002020A
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000008236C: BF870191
	v_add_co_ci_u32_e64 v2, null, s11, 0, s2                   // 000000082370: D5207C02 0009000B
	v_add_co_u32 v3, s2, s6, v0                                // 000000082378: D7000203 00020006
	s_delay_alu instid0(VALU_DEP_3)                            // 000000082380: BF870003
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 000000082384: D7006A00 00020200
	v_add_co_ci_u32_e64 v7, null, s7, 0, s2                    // 00000008238C: D5207C07 00090007
	v_add_nc_u32_e32 v6, s5, v1                                // 000000082394: 4A0C0205
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000082398: 40020401
	v_add3_u32 v5, s5, s8, v4                                  // 00000008239C: D6550005 04101005
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 0000000823A4: D7006A02 00020600
	v_add_nc_u32_e32 v8, s5, v3                                // 0000000823AC: 4A100605
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v7, vcc_lo             // 0000000823B0: 40060E01
	s_clause 0x2                                               // 0000000823B4: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 0000000823B8: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 0000000823C0: DC620000 007C0600
	global_store_b8 v[2:3], v8, off                            // 0000000823C8: DC620000 007C0802
	s_nop 0                                                    // 0000000823D0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000823D4: BFB60003
	s_endpgm                                                   // 0000000823D8: BFB00000
add_char_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000823DC: BF800000
	.long 0xbf800000                                           // 0000000823E0: BF800000
	.long 0xbf800000                                           // 0000000823E4: BF800000
	.long 0xbf800000                                           // 0000000823E8: BF800000
	.long 0xbf800000                                           // 0000000823EC: BF800000
	.long 0xbf800000                                           // 0000000823F0: BF800000
	.long 0xbf800000                                           // 0000000823F4: BF800000
	.long 0xbf800000                                           // 0000000823F8: BF800000
	.long 0xbf800000                                           // 0000000823FC: BF800000

	.p2align	8
	.type	add_char_get_global_size_get_work_dim,@function
	.size	add_char_get_global_size_get_work_dim, add_char_get_global_size_get_work_dim_symend-add_char_get_global_size_get_work_dim
add_char_get_global_size_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 000000082400: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000082404: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008240C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000082414: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008241C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000082420: DC520022 02000001
	s_clause 0x3                                               // 000000082428: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000008242C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x10                            // 000000082434: F4040180 F8000010
	s_load_b64 s[12:13], s[0:1], null                          // 00000008243C: F4040300 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000082444: F4080200 F8000038
	v_lshl_or_b32 v3, s2, 4, v3                                // 00000008244C: D6560003 040D0802
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000082454: D6560004 04110203
	s_clause 0x1                                               // 00000008245C: BF850001
	s_load_b32 s16, s[0:1], 0x18                               // 000000082460: F4000400 F8000018
	s_load_b64 s[14:15], s[0:1], 0x48                          // 000000082468: F4040380 F8000048
	v_lshl_or_b32 v0, s4, 1, v0                                // 000000082470: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000082478: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 00000008247C: 8B05FF05 0000FFFF
	s_lshl_b32 s6, s6, 4                                       // 000000082484: 84068406
	s_add_u32 s2, s12, s8                                      // 000000082488: 8002080C
	s_addc_u32 s3, s13, s9                                     // 00000008248C: 8203090D
	s_lshl_b32 s7, s7, 1                                       // 000000082490: 84078107
	s_waitcnt vmcnt(0)                                         // 000000082494: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000082498: 320A0490
	v_add_nc_u32_e32 v2, s5, v2                                // 00000008249C: 4A040405
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000824A0: BF870112
	v_add_nc_u32_e32 v5, s5, v5                                // 0000000824A4: 4A0A0A05
	v_add_nc_u32_e32 v2, s6, v2                                // 0000000824A8: 4A040406
	s_add_u32 s6, s12, s10                                     // 0000000824AC: 80060A0C
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000824B0: BF870002
	v_add_nc_u32_e32 v5, s7, v5                                // 0000000824B4: 4A0A0A07
	s_addc_u32 s7, s13, s11                                    // 0000000824B8: 82070B0D
	s_clause 0x1                                               // 0000000824BC: BF850001
	global_store_b8 v3, v2, s[2:3]                             // 0000000824C0: DC620000 00020203
	global_store_b8 v4, v5, s[6:7]                             // 0000000824C8: DC620000 00060504
	global_load_u16 v1, v1, s[0:1] offset:38                   // 0000000824D0: DC4A0026 01000001
	s_lshl_b32 s0, s16, 1                                      // 0000000824D8: 84008110
	s_waitcnt vmcnt(0)                                         // 0000000824DC: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 0000000824E0: 4A020200
	s_add_u32 s0, s12, s14                                     // 0000000824E4: 80000E0C
	s_addc_u32 s1, s13, s15                                    // 0000000824E8: 82010F0D
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000824EC: BF870001
	v_add_nc_u32_e32 v1, s5, v1                                // 0000000824F0: 4A020205
	global_store_b8 v0, v1, s[0:1]                             // 0000000824F4: DC620000 00000100
	s_nop 0                                                    // 0000000824FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082500: BFB60003
	s_endpgm                                                   // 000000082504: BFB00000
add_char_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000082508: BF800000
	.long 0xbf800000                                           // 00000008250C: BF800000
	.long 0xbf800000                                           // 000000082510: BF800000
	.long 0xbf800000                                           // 000000082514: BF800000
	.long 0xbf800000                                           // 000000082518: BF800000
	.long 0xbf800000                                           // 00000008251C: BF800000
	.long 0xbf800000                                           // 000000082520: BF800000
	.long 0xbf800000                                           // 000000082524: BF800000
	.long 0xbf800000                                           // 000000082528: BF800000
	.long 0xbf800000                                           // 00000008252C: BF800000
	.long 0xbf800000                                           // 000000082530: BF800000
	.long 0xbf800000                                           // 000000082534: BF800000
	.long 0xbf800000                                           // 000000082538: BF800000
	.long 0xbf800000                                           // 00000008253C: BF800000
	.long 0xbf800000                                           // 000000082540: BF800000
	.long 0xbf800000                                           // 000000082544: BF800000
	.long 0xbf800000                                           // 000000082548: BF800000
	.long 0xbf800000                                           // 00000008254C: BF800000
	.long 0xbf800000                                           // 000000082550: BF800000
	.long 0xbf800000                                           // 000000082554: BF800000
	.long 0xbf800000                                           // 000000082558: BF800000
	.long 0xbf800000                                           // 00000008255C: BF800000
	.long 0xbf800000                                           // 000000082560: BF800000
	.long 0xbf800000                                           // 000000082564: BF800000
	.long 0xbf800000                                           // 000000082568: BF800000
	.long 0xbf800000                                           // 00000008256C: BF800000
	.long 0xbf800000                                           // 000000082570: BF800000
	.long 0xbf800000                                           // 000000082574: BF800000
	.long 0xbf800000                                           // 000000082578: BF800000
	.long 0xbf800000                                           // 00000008257C: BF800000
	.long 0xbf800000                                           // 000000082580: BF800000
	.long 0xbf800000                                           // 000000082584: BF800000
	.long 0xbf800000                                           // 000000082588: BF800000
	.long 0xbf800000                                           // 00000008258C: BF800000
	.long 0xbf800000                                           // 000000082590: BF800000
	.long 0xbf800000                                           // 000000082594: BF800000
	.long 0xbf800000                                           // 000000082598: BF800000
	.long 0xbf800000                                           // 00000008259C: BF800000
	.long 0xbf800000                                           // 0000000825A0: BF800000
	.long 0xbf800000                                           // 0000000825A4: BF800000
	.long 0xbf800000                                           // 0000000825A8: BF800000
	.long 0xbf800000                                           // 0000000825AC: BF800000
	.long 0xbf800000                                           // 0000000825B0: BF800000
	.long 0xbf800000                                           // 0000000825B4: BF800000
	.long 0xbf800000                                           // 0000000825B8: BF800000
	.long 0xbf800000                                           // 0000000825BC: BF800000
	.long 0xbf800000                                           // 0000000825C0: BF800000
	.long 0xbf800000                                           // 0000000825C4: BF800000
	.long 0xbf800000                                           // 0000000825C8: BF800000
	.long 0xbf800000                                           // 0000000825CC: BF800000
	.long 0xbf800000                                           // 0000000825D0: BF800000
	.long 0xbf800000                                           // 0000000825D4: BF800000
	.long 0xbf800000                                           // 0000000825D8: BF800000
	.long 0xbf800000                                           // 0000000825DC: BF800000
	.long 0xbf800000                                           // 0000000825E0: BF800000
	.long 0xbf800000                                           // 0000000825E4: BF800000
	.long 0xbf800000                                           // 0000000825E8: BF800000
	.long 0xbf800000                                           // 0000000825EC: BF800000
	.long 0xbf800000                                           // 0000000825F0: BF800000
	.long 0xbf800000                                           // 0000000825F4: BF800000
	.long 0xbf800000                                           // 0000000825F8: BF800000
	.long 0xbf800000                                           // 0000000825FC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_get_work_dim,@function
	.size	add_char_get_num_groups_get_work_dim, add_char_get_num_groups_get_work_dim_symend-add_char_get_num_groups_get_work_dim
add_char_get_num_groups_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 000000082600: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000082604: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008260C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000082614: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008261C: BEA10080
	s_clause 0x1                                               // 000000082620: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000082624: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008262C: DC4A0026 01000001
	s_clause 0x4                                               // 000000082634: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 000000082638: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x8                           // 000000082640: F4080200 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000082648: F4080300 F8000038
	s_load_b32 s16, s[0:1], 0x18                               // 000000082650: F4000400 F8000018
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000082658: F4040180 F8000048
	v_lshl_or_b32 v3, s2, 1, v3                                // 000000082660: D6560003 040D0202
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000082668: D6560004 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000082670: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000082678: BF89FC07
	s_and_b32 s1, s5, 0xffff                                   // 00000008267C: 8B01FF05 0000FFFF
	s_waitcnt vmcnt(1)                                         // 000000082684: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000082688: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000008268C: 32040490
	s_waitcnt vmcnt(0)                                         // 000000082690: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000082694: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000008269C: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000826A0: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 0000000826A4: 7C7A0480
	s_addc_u32 s5, s1, s10                                     // 0000000826A8: 82050A01
	s_add_u32 s2, s8, s12                                      // 0000000826AC: 80020C08
	s_addc_u32 s3, s9, s13                                     // 0000000826B0: 82030D09
	v_mov_b32_e32 v1, s5                                       // 0000000826B4: 7E020205
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000826B8: BF07806A
	s_addc_u32 s5, s1, s11                                     // 0000000826BC: 82050B01
	s_add_u32 s10, s8, s14                                     // 0000000826C0: 800A0E08
	v_mov_b32_e32 v2, s5                                       // 0000000826C4: 7E040205
	s_addc_u32 s11, s9, s15                                    // 0000000826C8: 820B0F09
	s_cmp_lg_u32 s0, 0                                         // 0000000826CC: BF078000
	global_store_b8 v3, v1, s[2:3]                             // 0000000826D0: DC620000 00020103
	s_addc_u32 s0, s1, s16                                     // 0000000826D8: 82001001
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000826DC: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000826E0: 7E0A0200
	s_add_u32 s0, s8, s6                                       // 0000000826E4: 80000608
	s_addc_u32 s1, s9, s7                                      // 0000000826E8: 82010709
	s_clause 0x1                                               // 0000000826EC: BF850001
	global_store_b8 v4, v2, s[10:11]                           // 0000000826F0: DC620000 000A0204
	global_store_b8 v0, v5, s[0:1]                             // 0000000826F8: DC620000 00000500
	s_nop 0                                                    // 000000082700: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082704: BFB60003
	s_endpgm                                                   // 000000082708: BFB00000
add_char_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 00000008270C: BF800000
	.long 0xbf800000                                           // 000000082710: BF800000
	.long 0xbf800000                                           // 000000082714: BF800000
	.long 0xbf800000                                           // 000000082718: BF800000
	.long 0xbf800000                                           // 00000008271C: BF800000
	.long 0xbf800000                                           // 000000082720: BF800000
	.long 0xbf800000                                           // 000000082724: BF800000
	.long 0xbf800000                                           // 000000082728: BF800000
	.long 0xbf800000                                           // 00000008272C: BF800000
	.long 0xbf800000                                           // 000000082730: BF800000
	.long 0xbf800000                                           // 000000082734: BF800000
	.long 0xbf800000                                           // 000000082738: BF800000
	.long 0xbf800000                                           // 00000008273C: BF800000
	.long 0xbf800000                                           // 000000082740: BF800000
	.long 0xbf800000                                           // 000000082744: BF800000
	.long 0xbf800000                                           // 000000082748: BF800000
	.long 0xbf800000                                           // 00000008274C: BF800000
	.long 0xbf800000                                           // 000000082750: BF800000
	.long 0xbf800000                                           // 000000082754: BF800000
	.long 0xbf800000                                           // 000000082758: BF800000
	.long 0xbf800000                                           // 00000008275C: BF800000
	.long 0xbf800000                                           // 000000082760: BF800000
	.long 0xbf800000                                           // 000000082764: BF800000
	.long 0xbf800000                                           // 000000082768: BF800000
	.long 0xbf800000                                           // 00000008276C: BF800000
	.long 0xbf800000                                           // 000000082770: BF800000
	.long 0xbf800000                                           // 000000082774: BF800000
	.long 0xbf800000                                           // 000000082778: BF800000
	.long 0xbf800000                                           // 00000008277C: BF800000
	.long 0xbf800000                                           // 000000082780: BF800000
	.long 0xbf800000                                           // 000000082784: BF800000
	.long 0xbf800000                                           // 000000082788: BF800000
	.long 0xbf800000                                           // 00000008278C: BF800000
	.long 0xbf800000                                           // 000000082790: BF800000
	.long 0xbf800000                                           // 000000082794: BF800000
	.long 0xbf800000                                           // 000000082798: BF800000
	.long 0xbf800000                                           // 00000008279C: BF800000
	.long 0xbf800000                                           // 0000000827A0: BF800000
	.long 0xbf800000                                           // 0000000827A4: BF800000
	.long 0xbf800000                                           // 0000000827A8: BF800000
	.long 0xbf800000                                           // 0000000827AC: BF800000
	.long 0xbf800000                                           // 0000000827B0: BF800000
	.long 0xbf800000                                           // 0000000827B4: BF800000
	.long 0xbf800000                                           // 0000000827B8: BF800000
	.long 0xbf800000                                           // 0000000827BC: BF800000
	.long 0xbf800000                                           // 0000000827C0: BF800000
	.long 0xbf800000                                           // 0000000827C4: BF800000
	.long 0xbf800000                                           // 0000000827C8: BF800000
	.long 0xbf800000                                           // 0000000827CC: BF800000
	.long 0xbf800000                                           // 0000000827D0: BF800000
	.long 0xbf800000                                           // 0000000827D4: BF800000
	.long 0xbf800000                                           // 0000000827D8: BF800000
	.long 0xbf800000                                           // 0000000827DC: BF800000
	.long 0xbf800000                                           // 0000000827E0: BF800000
	.long 0xbf800000                                           // 0000000827E4: BF800000
	.long 0xbf800000                                           // 0000000827E8: BF800000
	.long 0xbf800000                                           // 0000000827EC: BF800000
	.long 0xbf800000                                           // 0000000827F0: BF800000
	.long 0xbf800000                                           // 0000000827F4: BF800000
	.long 0xbf800000                                           // 0000000827F8: BF800000
	.long 0xbf800000                                           // 0000000827FC: BF800000

	.p2align	8
	.type	add_char_get_work_dim_get_work_dim,@function
	.size	add_char_get_work_dim_get_work_dim, add_char_get_work_dim_get_work_dim_symend-add_char_get_work_dim_get_work_dim
add_char_get_work_dim_get_work_dim:
	s_clause 0x3                                               // 000000082800: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000082804: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000008280C: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000082814: F4080200 F8000038
	s_load_b64 s[0:1], s[0:1], 0x48                            // 00000008281C: F4040000 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000082824: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008282C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000082834: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008283C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000082840: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000082844: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000008284C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3)                            // 000000082854: BF870003
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000082858: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000082860: BF89FC07
	s_lshl_b32 s4, s5, 1                                       // 000000082864: 84048105
	s_add_u32 s2, s6, s8                                       // 000000082868: 80020806
	v_mov_b32_e32 v3, s4                                       // 00000008286C: 7E060204
	s_addc_u32 s3, s7, s9                                      // 000000082870: 82030907
	s_add_u32 s4, s6, s10                                      // 000000082874: 80040A06
	s_addc_u32 s5, s7, s11                                     // 000000082878: 82050B07
	s_add_u32 s0, s6, s0                                       // 00000008287C: 80000006
	s_addc_u32 s1, s7, s1                                      // 000000082880: 82010107
	s_clause 0x2                                               // 000000082884: BF850002
	global_store_b8 v1, v3, s[2:3]                             // 000000082888: DC620000 00020301
	global_store_b8 v2, v3, s[4:5]                             // 000000082890: DC620000 00040302
	global_store_b8 v0, v3, s[0:1]                             // 000000082898: DC620000 00000300
	s_nop 0                                                    // 0000000828A0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000828A4: BFB60003
	s_endpgm                                                   // 0000000828A8: BFB00000
add_char_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000828AC: BF800000
	.long 0xbf800000                                           // 0000000828B0: BF800000
	.long 0xbf800000                                           // 0000000828B4: BF800000
	.long 0xbf800000                                           // 0000000828B8: BF800000
	.long 0xbf800000                                           // 0000000828BC: BF800000
	.long 0xbf800000                                           // 0000000828C0: BF800000
	.long 0xbf800000                                           // 0000000828C4: BF800000
	.long 0xbf800000                                           // 0000000828C8: BF800000
	.long 0xbf800000                                           // 0000000828CC: BF800000
	.long 0xbf800000                                           // 0000000828D0: BF800000
	.long 0xbf800000                                           // 0000000828D4: BF800000
	.long 0xbf800000                                           // 0000000828D8: BF800000
	.long 0xbf800000                                           // 0000000828DC: BF800000
	.long 0xbf800000                                           // 0000000828E0: BF800000
	.long 0xbf800000                                           // 0000000828E4: BF800000
	.long 0xbf800000                                           // 0000000828E8: BF800000
	.long 0xbf800000                                           // 0000000828EC: BF800000
	.long 0xbf800000                                           // 0000000828F0: BF800000
	.long 0xbf800000                                           // 0000000828F4: BF800000
	.long 0xbf800000                                           // 0000000828F8: BF800000
	.long 0xbf800000                                           // 0000000828FC: BF800000

	.p2align	8
	.type	add_char_x_64,@function
	.size	add_char_x_64, add_char_x_64_symend-add_char_x_64
add_char_x_64:
	s_clause 0x2                                               // 000000082900: BF850002
	s_load_b32 s3, s[0:1], null                                // 000000082904: F40000C0 F8000000
	s_load_b64 s[4:5], s[0:1], 0x8                             // 00000008290C: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 000000082914: F4040000 F8000038
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000008291C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000082924: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082928: BF89FC07
	s_lshl_b32 s3, s3, 1                                       // 00000008292C: 84038103
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000082930: BF870009
	v_mov_b32_e32 v1, s3                                       // 000000082934: 7E020203
	s_add_u32 s0, s4, s0                                       // 000000082938: 80000004
	s_addc_u32 s1, s5, s1                                      // 00000008293C: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000082940: DC620000 00000100
	s_nop 0                                                    // 000000082948: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008294C: BFB60003
	s_endpgm                                                   // 000000082950: BFB00000
add_char_x_64_symend:
	.long 0xbf800000                                           // 000000082954: BF800000
	.long 0xbf800000                                           // 000000082958: BF800000
	.long 0xbf800000                                           // 00000008295C: BF800000
	.long 0xbf800000                                           // 000000082960: BF800000
	.long 0xbf800000                                           // 000000082964: BF800000
	.long 0xbf800000                                           // 000000082968: BF800000
	.long 0xbf800000                                           // 00000008296C: BF800000
	.long 0xbf800000                                           // 000000082970: BF800000
	.long 0xbf800000                                           // 000000082974: BF800000
	.long 0xbf800000                                           // 000000082978: BF800000
	.long 0xbf800000                                           // 00000008297C: BF800000
	.long 0xbf800000                                           // 000000082980: BF800000
	.long 0xbf800000                                           // 000000082984: BF800000
	.long 0xbf800000                                           // 000000082988: BF800000
	.long 0xbf800000                                           // 00000008298C: BF800000
	.long 0xbf800000                                           // 000000082990: BF800000
	.long 0xbf800000                                           // 000000082994: BF800000
	.long 0xbf800000                                           // 000000082998: BF800000
	.long 0xbf800000                                           // 00000008299C: BF800000
	.long 0xbf800000                                           // 0000000829A0: BF800000
	.long 0xbf800000                                           // 0000000829A4: BF800000
	.long 0xbf800000                                           // 0000000829A8: BF800000
	.long 0xbf800000                                           // 0000000829AC: BF800000
	.long 0xbf800000                                           // 0000000829B0: BF800000
	.long 0xbf800000                                           // 0000000829B4: BF800000
	.long 0xbf800000                                           // 0000000829B8: BF800000
	.long 0xbf800000                                           // 0000000829BC: BF800000
	.long 0xbf800000                                           // 0000000829C0: BF800000
	.long 0xbf800000                                           // 0000000829C4: BF800000
	.long 0xbf800000                                           // 0000000829C8: BF800000
	.long 0xbf800000                                           // 0000000829CC: BF800000
	.long 0xbf800000                                           // 0000000829D0: BF800000
	.long 0xbf800000                                           // 0000000829D4: BF800000
	.long 0xbf800000                                           // 0000000829D8: BF800000
	.long 0xbf800000                                           // 0000000829DC: BF800000
	.long 0xbf800000                                           // 0000000829E0: BF800000
	.long 0xbf800000                                           // 0000000829E4: BF800000
	.long 0xbf800000                                           // 0000000829E8: BF800000
	.long 0xbf800000                                           // 0000000829EC: BF800000
	.long 0xbf800000                                           // 0000000829F0: BF800000
	.long 0xbf800000                                           // 0000000829F4: BF800000
	.long 0xbf800000                                           // 0000000829F8: BF800000
	.long 0xbf800000                                           // 0000000829FC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_64,@function
	.size	add_char_get_global_offset_64, add_char_get_global_offset_64_symend-add_char_get_global_offset_64
add_char_get_global_offset_64:
	s_clause 0x1                                               // 000000082A00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000082A04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082A0C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082A14: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000082A1C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082A20: BF89FC07
	s_lshl_b32 s3, s4, 1                                       // 000000082A24: 84038104
	s_add_u32 s0, s0, s4                                       // 000000082A28: 80000400
	v_mov_b32_e32 v1, s3                                       // 000000082A2C: 7E020203
	s_addc_u32 s1, s1, s5                                      // 000000082A30: 82010501
	global_store_b8 v0, v1, s[0:1]                             // 000000082A34: DC620000 00000100
	s_nop 0                                                    // 000000082A3C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082A40: BFB60003
	s_endpgm                                                   // 000000082A44: BFB00000
add_char_get_global_offset_64_symend:
	.long 0xbf800000                                           // 000000082A48: BF800000
	.long 0xbf800000                                           // 000000082A4C: BF800000
	.long 0xbf800000                                           // 000000082A50: BF800000
	.long 0xbf800000                                           // 000000082A54: BF800000
	.long 0xbf800000                                           // 000000082A58: BF800000
	.long 0xbf800000                                           // 000000082A5C: BF800000
	.long 0xbf800000                                           // 000000082A60: BF800000
	.long 0xbf800000                                           // 000000082A64: BF800000
	.long 0xbf800000                                           // 000000082A68: BF800000
	.long 0xbf800000                                           // 000000082A6C: BF800000
	.long 0xbf800000                                           // 000000082A70: BF800000
	.long 0xbf800000                                           // 000000082A74: BF800000
	.long 0xbf800000                                           // 000000082A78: BF800000
	.long 0xbf800000                                           // 000000082A7C: BF800000
	.long 0xbf800000                                           // 000000082A80: BF800000
	.long 0xbf800000                                           // 000000082A84: BF800000
	.long 0xbf800000                                           // 000000082A88: BF800000
	.long 0xbf800000                                           // 000000082A8C: BF800000
	.long 0xbf800000                                           // 000000082A90: BF800000
	.long 0xbf800000                                           // 000000082A94: BF800000
	.long 0xbf800000                                           // 000000082A98: BF800000
	.long 0xbf800000                                           // 000000082A9C: BF800000
	.long 0xbf800000                                           // 000000082AA0: BF800000
	.long 0xbf800000                                           // 000000082AA4: BF800000
	.long 0xbf800000                                           // 000000082AA8: BF800000
	.long 0xbf800000                                           // 000000082AAC: BF800000
	.long 0xbf800000                                           // 000000082AB0: BF800000
	.long 0xbf800000                                           // 000000082AB4: BF800000
	.long 0xbf800000                                           // 000000082AB8: BF800000
	.long 0xbf800000                                           // 000000082ABC: BF800000
	.long 0xbf800000                                           // 000000082AC0: BF800000
	.long 0xbf800000                                           // 000000082AC4: BF800000
	.long 0xbf800000                                           // 000000082AC8: BF800000
	.long 0xbf800000                                           // 000000082ACC: BF800000
	.long 0xbf800000                                           // 000000082AD0: BF800000
	.long 0xbf800000                                           // 000000082AD4: BF800000
	.long 0xbf800000                                           // 000000082AD8: BF800000
	.long 0xbf800000                                           // 000000082ADC: BF800000
	.long 0xbf800000                                           // 000000082AE0: BF800000
	.long 0xbf800000                                           // 000000082AE4: BF800000
	.long 0xbf800000                                           // 000000082AE8: BF800000
	.long 0xbf800000                                           // 000000082AEC: BF800000
	.long 0xbf800000                                           // 000000082AF0: BF800000
	.long 0xbf800000                                           // 000000082AF4: BF800000
	.long 0xbf800000                                           // 000000082AF8: BF800000
	.long 0xbf800000                                           // 000000082AFC: BF800000

	.p2align	8
	.type	add_char_get_local_id_64,@function
	.size	add_char_get_local_id_64, add_char_get_local_id_64_symend-add_char_get_local_id_64
add_char_get_local_id_64:
	s_clause 0x1                                               // 000000082B00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000082B04: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 000000082B0C: F4040000 F8000038
	v_lshlrev_b16 v1.l, 1, v0.l                                // 000000082B14: D7380001 00020081
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082B1C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000082B24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082B28: BF89FC07
	s_add_u32 s0, s4, s0                                       // 000000082B2C: 80000004
	s_addc_u32 s1, s5, s1                                      // 000000082B30: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000082B34: DC620000 00000100
	s_nop 0                                                    // 000000082B3C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082B40: BFB60003
	s_endpgm                                                   // 000000082B44: BFB00000
add_char_get_local_id_64_symend:
	.long 0xbf800000                                           // 000000082B48: BF800000
	.long 0xbf800000                                           // 000000082B4C: BF800000
	.long 0xbf800000                                           // 000000082B50: BF800000
	.long 0xbf800000                                           // 000000082B54: BF800000
	.long 0xbf800000                                           // 000000082B58: BF800000
	.long 0xbf800000                                           // 000000082B5C: BF800000
	.long 0xbf800000                                           // 000000082B60: BF800000
	.long 0xbf800000                                           // 000000082B64: BF800000
	.long 0xbf800000                                           // 000000082B68: BF800000
	.long 0xbf800000                                           // 000000082B6C: BF800000
	.long 0xbf800000                                           // 000000082B70: BF800000
	.long 0xbf800000                                           // 000000082B74: BF800000
	.long 0xbf800000                                           // 000000082B78: BF800000
	.long 0xbf800000                                           // 000000082B7C: BF800000
	.long 0xbf800000                                           // 000000082B80: BF800000
	.long 0xbf800000                                           // 000000082B84: BF800000
	.long 0xbf800000                                           // 000000082B88: BF800000
	.long 0xbf800000                                           // 000000082B8C: BF800000
	.long 0xbf800000                                           // 000000082B90: BF800000
	.long 0xbf800000                                           // 000000082B94: BF800000
	.long 0xbf800000                                           // 000000082B98: BF800000
	.long 0xbf800000                                           // 000000082B9C: BF800000
	.long 0xbf800000                                           // 000000082BA0: BF800000
	.long 0xbf800000                                           // 000000082BA4: BF800000
	.long 0xbf800000                                           // 000000082BA8: BF800000
	.long 0xbf800000                                           // 000000082BAC: BF800000
	.long 0xbf800000                                           // 000000082BB0: BF800000
	.long 0xbf800000                                           // 000000082BB4: BF800000
	.long 0xbf800000                                           // 000000082BB8: BF800000
	.long 0xbf800000                                           // 000000082BBC: BF800000
	.long 0xbf800000                                           // 000000082BC0: BF800000
	.long 0xbf800000                                           // 000000082BC4: BF800000
	.long 0xbf800000                                           // 000000082BC8: BF800000
	.long 0xbf800000                                           // 000000082BCC: BF800000
	.long 0xbf800000                                           // 000000082BD0: BF800000
	.long 0xbf800000                                           // 000000082BD4: BF800000
	.long 0xbf800000                                           // 000000082BD8: BF800000
	.long 0xbf800000                                           // 000000082BDC: BF800000
	.long 0xbf800000                                           // 000000082BE0: BF800000
	.long 0xbf800000                                           // 000000082BE4: BF800000
	.long 0xbf800000                                           // 000000082BE8: BF800000
	.long 0xbf800000                                           // 000000082BEC: BF800000
	.long 0xbf800000                                           // 000000082BF0: BF800000
	.long 0xbf800000                                           // 000000082BF4: BF800000
	.long 0xbf800000                                           // 000000082BF8: BF800000
	.long 0xbf800000                                           // 000000082BFC: BF800000

	.p2align	8
	.type	add_char_get_group_id_64,@function
	.size	add_char_get_group_id_64, add_char_get_group_id_64_symend-add_char_get_group_id_64
add_char_get_group_id_64:
	s_clause 0x1                                               // 000000082C00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000082C04: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 000000082C0C: F4040000 F8000038
	s_lshl_b32 s3, s2, 1                                       // 000000082C14: 84038102
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082C18: D6560000 04010C02
	v_mov_b32_e32 v1, s3                                       // 000000082C20: 7E020203
	s_mov_b32 s33, 0                                           // 000000082C24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082C28: BF89FC07
	s_add_u32 s0, s4, s0                                       // 000000082C2C: 80000004
	s_addc_u32 s1, s5, s1                                      // 000000082C30: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000082C34: DC620000 00000100
	s_nop 0                                                    // 000000082C3C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082C40: BFB60003
	s_endpgm                                                   // 000000082C44: BFB00000
add_char_get_group_id_64_symend:
	.long 0xbf800000                                           // 000000082C48: BF800000
	.long 0xbf800000                                           // 000000082C4C: BF800000
	.long 0xbf800000                                           // 000000082C50: BF800000
	.long 0xbf800000                                           // 000000082C54: BF800000
	.long 0xbf800000                                           // 000000082C58: BF800000
	.long 0xbf800000                                           // 000000082C5C: BF800000
	.long 0xbf800000                                           // 000000082C60: BF800000
	.long 0xbf800000                                           // 000000082C64: BF800000
	.long 0xbf800000                                           // 000000082C68: BF800000
	.long 0xbf800000                                           // 000000082C6C: BF800000
	.long 0xbf800000                                           // 000000082C70: BF800000
	.long 0xbf800000                                           // 000000082C74: BF800000
	.long 0xbf800000                                           // 000000082C78: BF800000
	.long 0xbf800000                                           // 000000082C7C: BF800000
	.long 0xbf800000                                           // 000000082C80: BF800000
	.long 0xbf800000                                           // 000000082C84: BF800000
	.long 0xbf800000                                           // 000000082C88: BF800000
	.long 0xbf800000                                           // 000000082C8C: BF800000
	.long 0xbf800000                                           // 000000082C90: BF800000
	.long 0xbf800000                                           // 000000082C94: BF800000
	.long 0xbf800000                                           // 000000082C98: BF800000
	.long 0xbf800000                                           // 000000082C9C: BF800000
	.long 0xbf800000                                           // 000000082CA0: BF800000
	.long 0xbf800000                                           // 000000082CA4: BF800000
	.long 0xbf800000                                           // 000000082CA8: BF800000
	.long 0xbf800000                                           // 000000082CAC: BF800000
	.long 0xbf800000                                           // 000000082CB0: BF800000
	.long 0xbf800000                                           // 000000082CB4: BF800000
	.long 0xbf800000                                           // 000000082CB8: BF800000
	.long 0xbf800000                                           // 000000082CBC: BF800000
	.long 0xbf800000                                           // 000000082CC0: BF800000
	.long 0xbf800000                                           // 000000082CC4: BF800000
	.long 0xbf800000                                           // 000000082CC8: BF800000
	.long 0xbf800000                                           // 000000082CCC: BF800000
	.long 0xbf800000                                           // 000000082CD0: BF800000
	.long 0xbf800000                                           // 000000082CD4: BF800000
	.long 0xbf800000                                           // 000000082CD8: BF800000
	.long 0xbf800000                                           // 000000082CDC: BF800000
	.long 0xbf800000                                           // 000000082CE0: BF800000
	.long 0xbf800000                                           // 000000082CE4: BF800000
	.long 0xbf800000                                           // 000000082CE8: BF800000
	.long 0xbf800000                                           // 000000082CEC: BF800000
	.long 0xbf800000                                           // 000000082CF0: BF800000
	.long 0xbf800000                                           // 000000082CF4: BF800000
	.long 0xbf800000                                           // 000000082CF8: BF800000
	.long 0xbf800000                                           // 000000082CFC: BF800000

	.p2align	8
	.type	add_char_get_local_size_64,@function
	.size	add_char_get_local_size_64, add_char_get_local_size_64_symend-add_char_get_local_size_64
add_char_get_local_size_64:
	s_clause 0x1                                               // 000000082D00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000082D04: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 000000082D0C: F4040000 F8000038
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082D14: D6560000 04010C02
	v_mov_b32_e32 v1, 0x80                                     // 000000082D1C: 7E0202FF 00000080
	s_mov_b32 s33, 0                                           // 000000082D24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082D28: BF89FC07
	s_add_u32 s0, s4, s0                                       // 000000082D2C: 80000004
	s_addc_u32 s1, s5, s1                                      // 000000082D30: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000082D34: DC620000 00000100
	s_nop 0                                                    // 000000082D3C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082D40: BFB60003
	s_endpgm                                                   // 000000082D44: BFB00000
add_char_get_local_size_64_symend:
	.long 0xbf800000                                           // 000000082D48: BF800000
	.long 0xbf800000                                           // 000000082D4C: BF800000
	.long 0xbf800000                                           // 000000082D50: BF800000
	.long 0xbf800000                                           // 000000082D54: BF800000
	.long 0xbf800000                                           // 000000082D58: BF800000
	.long 0xbf800000                                           // 000000082D5C: BF800000
	.long 0xbf800000                                           // 000000082D60: BF800000
	.long 0xbf800000                                           // 000000082D64: BF800000
	.long 0xbf800000                                           // 000000082D68: BF800000
	.long 0xbf800000                                           // 000000082D6C: BF800000
	.long 0xbf800000                                           // 000000082D70: BF800000
	.long 0xbf800000                                           // 000000082D74: BF800000
	.long 0xbf800000                                           // 000000082D78: BF800000
	.long 0xbf800000                                           // 000000082D7C: BF800000
	.long 0xbf800000                                           // 000000082D80: BF800000
	.long 0xbf800000                                           // 000000082D84: BF800000
	.long 0xbf800000                                           // 000000082D88: BF800000
	.long 0xbf800000                                           // 000000082D8C: BF800000
	.long 0xbf800000                                           // 000000082D90: BF800000
	.long 0xbf800000                                           // 000000082D94: BF800000
	.long 0xbf800000                                           // 000000082D98: BF800000
	.long 0xbf800000                                           // 000000082D9C: BF800000
	.long 0xbf800000                                           // 000000082DA0: BF800000
	.long 0xbf800000                                           // 000000082DA4: BF800000
	.long 0xbf800000                                           // 000000082DA8: BF800000
	.long 0xbf800000                                           // 000000082DAC: BF800000
	.long 0xbf800000                                           // 000000082DB0: BF800000
	.long 0xbf800000                                           // 000000082DB4: BF800000
	.long 0xbf800000                                           // 000000082DB8: BF800000
	.long 0xbf800000                                           // 000000082DBC: BF800000
	.long 0xbf800000                                           // 000000082DC0: BF800000
	.long 0xbf800000                                           // 000000082DC4: BF800000
	.long 0xbf800000                                           // 000000082DC8: BF800000
	.long 0xbf800000                                           // 000000082DCC: BF800000
	.long 0xbf800000                                           // 000000082DD0: BF800000
	.long 0xbf800000                                           // 000000082DD4: BF800000
	.long 0xbf800000                                           // 000000082DD8: BF800000
	.long 0xbf800000                                           // 000000082DDC: BF800000
	.long 0xbf800000                                           // 000000082DE0: BF800000
	.long 0xbf800000                                           // 000000082DE4: BF800000
	.long 0xbf800000                                           // 000000082DE8: BF800000
	.long 0xbf800000                                           // 000000082DEC: BF800000
	.long 0xbf800000                                           // 000000082DF0: BF800000
	.long 0xbf800000                                           // 000000082DF4: BF800000
	.long 0xbf800000                                           // 000000082DF8: BF800000
	.long 0xbf800000                                           // 000000082DFC: BF800000

	.p2align	8
	.type	add_char_get_global_id_64,@function
	.size	add_char_get_global_id_64, add_char_get_global_id_64_symend-add_char_get_global_id_64
add_char_get_global_id_64:
	s_clause 0x1                                               // 000000082E00: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000082E04: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082E0C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082E14: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000082E1C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082E20: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000082E24: BF870091
	v_add_co_u32 v0, s2, s4, v0                                // 000000082E28: D7000200 00020004
	v_add_co_ci_u32_e64 v1, null, s5, 0, s2                    // 000000082E30: D5207C01 00090005
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000082E38: BF8701A2
	v_lshlrev_b16 v2.l, 1, v0.l                                // 000000082E3C: D7380002 00020081
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000082E44: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000082E4C: 40020201
	global_store_b8 v[0:1], v2, off                            // 000000082E50: DC620000 007C0200
	s_nop 0                                                    // 000000082E58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082E5C: BFB60003
	s_endpgm                                                   // 000000082E60: BFB00000
add_char_get_global_id_64_symend:
	.long 0xbf800000                                           // 000000082E64: BF800000
	.long 0xbf800000                                           // 000000082E68: BF800000
	.long 0xbf800000                                           // 000000082E6C: BF800000
	.long 0xbf800000                                           // 000000082E70: BF800000
	.long 0xbf800000                                           // 000000082E74: BF800000
	.long 0xbf800000                                           // 000000082E78: BF800000
	.long 0xbf800000                                           // 000000082E7C: BF800000
	.long 0xbf800000                                           // 000000082E80: BF800000
	.long 0xbf800000                                           // 000000082E84: BF800000
	.long 0xbf800000                                           // 000000082E88: BF800000
	.long 0xbf800000                                           // 000000082E8C: BF800000
	.long 0xbf800000                                           // 000000082E90: BF800000
	.long 0xbf800000                                           // 000000082E94: BF800000
	.long 0xbf800000                                           // 000000082E98: BF800000
	.long 0xbf800000                                           // 000000082E9C: BF800000
	.long 0xbf800000                                           // 000000082EA0: BF800000
	.long 0xbf800000                                           // 000000082EA4: BF800000
	.long 0xbf800000                                           // 000000082EA8: BF800000
	.long 0xbf800000                                           // 000000082EAC: BF800000
	.long 0xbf800000                                           // 000000082EB0: BF800000
	.long 0xbf800000                                           // 000000082EB4: BF800000
	.long 0xbf800000                                           // 000000082EB8: BF800000
	.long 0xbf800000                                           // 000000082EBC: BF800000
	.long 0xbf800000                                           // 000000082EC0: BF800000
	.long 0xbf800000                                           // 000000082EC4: BF800000
	.long 0xbf800000                                           // 000000082EC8: BF800000
	.long 0xbf800000                                           // 000000082ECC: BF800000
	.long 0xbf800000                                           // 000000082ED0: BF800000
	.long 0xbf800000                                           // 000000082ED4: BF800000
	.long 0xbf800000                                           // 000000082ED8: BF800000
	.long 0xbf800000                                           // 000000082EDC: BF800000
	.long 0xbf800000                                           // 000000082EE0: BF800000
	.long 0xbf800000                                           // 000000082EE4: BF800000
	.long 0xbf800000                                           // 000000082EE8: BF800000
	.long 0xbf800000                                           // 000000082EEC: BF800000
	.long 0xbf800000                                           // 000000082EF0: BF800000
	.long 0xbf800000                                           // 000000082EF4: BF800000
	.long 0xbf800000                                           // 000000082EF8: BF800000
	.long 0xbf800000                                           // 000000082EFC: BF800000

	.p2align	8
	.type	add_char_get_global_size_64,@function
	.size	add_char_get_global_size_64, add_char_get_global_size_64_symend-add_char_get_global_size_64
add_char_get_global_size_64:
	s_clause 0x3                                               // 000000082F00: BF850003
	s_load_b32 s3, s[0:1], 0x10                                // 000000082F04: F40000C0 F8000010
	s_load_b32 s6, s[0:1], 0x20                                // 000000082F0C: F4000180 F8000020
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000082F14: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 000000082F1C: F4040000 F8000038
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082F24: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000082F2C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082F30: BF89FC07
	s_lshl_b32 s3, s3, 6                                       // 000000082F34: 84038603
	s_lshr_b32 s6, s6, 16                                      // 000000082F38: 85069006
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000082F3C: BF870499
	s_add_i32 s3, s3, s6                                       // 000000082F40: 81030603
	s_lshl_b32 s3, s3, 1                                       // 000000082F44: 84038103
	s_add_u32 s0, s4, s0                                       // 000000082F48: 80000004
	v_mov_b32_e32 v1, s3                                       // 000000082F4C: 7E020203
	s_addc_u32 s1, s5, s1                                      // 000000082F50: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000082F54: DC620000 00000100
	s_nop 0                                                    // 000000082F5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082F60: BFB60003
	s_endpgm                                                   // 000000082F64: BFB00000
add_char_get_global_size_64_symend:
	.long 0xbf800000                                           // 000000082F68: BF800000
	.long 0xbf800000                                           // 000000082F6C: BF800000
	.long 0xbf800000                                           // 000000082F70: BF800000
	.long 0xbf800000                                           // 000000082F74: BF800000
	.long 0xbf800000                                           // 000000082F78: BF800000
	.long 0xbf800000                                           // 000000082F7C: BF800000
	.long 0xbf800000                                           // 000000082F80: BF800000
	.long 0xbf800000                                           // 000000082F84: BF800000
	.long 0xbf800000                                           // 000000082F88: BF800000
	.long 0xbf800000                                           // 000000082F8C: BF800000
	.long 0xbf800000                                           // 000000082F90: BF800000
	.long 0xbf800000                                           // 000000082F94: BF800000
	.long 0xbf800000                                           // 000000082F98: BF800000
	.long 0xbf800000                                           // 000000082F9C: BF800000
	.long 0xbf800000                                           // 000000082FA0: BF800000
	.long 0xbf800000                                           // 000000082FA4: BF800000
	.long 0xbf800000                                           // 000000082FA8: BF800000
	.long 0xbf800000                                           // 000000082FAC: BF800000
	.long 0xbf800000                                           // 000000082FB0: BF800000
	.long 0xbf800000                                           // 000000082FB4: BF800000
	.long 0xbf800000                                           // 000000082FB8: BF800000
	.long 0xbf800000                                           // 000000082FBC: BF800000
	.long 0xbf800000                                           // 000000082FC0: BF800000
	.long 0xbf800000                                           // 000000082FC4: BF800000
	.long 0xbf800000                                           // 000000082FC8: BF800000
	.long 0xbf800000                                           // 000000082FCC: BF800000
	.long 0xbf800000                                           // 000000082FD0: BF800000
	.long 0xbf800000                                           // 000000082FD4: BF800000
	.long 0xbf800000                                           // 000000082FD8: BF800000
	.long 0xbf800000                                           // 000000082FDC: BF800000
	.long 0xbf800000                                           // 000000082FE0: BF800000
	.long 0xbf800000                                           // 000000082FE4: BF800000
	.long 0xbf800000                                           // 000000082FE8: BF800000
	.long 0xbf800000                                           // 000000082FEC: BF800000
	.long 0xbf800000                                           // 000000082FF0: BF800000
	.long 0xbf800000                                           // 000000082FF4: BF800000
	.long 0xbf800000                                           // 000000082FF8: BF800000
	.long 0xbf800000                                           // 000000082FFC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_64,@function
	.size	add_char_get_num_groups_64, add_char_get_num_groups_64_symend-add_char_get_num_groups_64
add_char_get_num_groups_64:
	s_clause 0x3                                               // 000000083000: BF850003
	s_load_b32 s3, s[0:1], 0x20                                // 000000083004: F40000C0 F8000020
	s_load_b32 s6, s[0:1], 0x10                                // 00000008300C: F4000180 F8000010
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000083014: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 00000008301C: F4040000 F8000038
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000083024: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000008302C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000083030: BF89FC07
	s_lshr_b32 s3, s3, 16                                      // 000000083034: 85039003
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000083038: BF870099
	v_cmp_ne_u16_e64 s3, s3, 0                                 // 00000008303C: D43D0003 00010003
	s_cmp_lg_u32 s3, 0                                         // 000000083044: BF078003
	s_addc_u32 s3, s6, 0                                       // 000000083048: 82038006
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000008304C: BF870009
	s_lshl_b32 s3, s3, 1                                       // 000000083050: 84038103
	s_add_u32 s0, s4, s0                                       // 000000083054: 80000004
	v_mov_b32_e32 v1, s3                                       // 000000083058: 7E020203
	s_addc_u32 s1, s5, s1                                      // 00000008305C: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000083060: DC620000 00000100
	s_nop 0                                                    // 000000083068: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008306C: BFB60003
	s_endpgm                                                   // 000000083070: BFB00000
add_char_get_num_groups_64_symend:
	.long 0xbf800000                                           // 000000083074: BF800000
	.long 0xbf800000                                           // 000000083078: BF800000
	.long 0xbf800000                                           // 00000008307C: BF800000
	.long 0xbf800000                                           // 000000083080: BF800000
	.long 0xbf800000                                           // 000000083084: BF800000
	.long 0xbf800000                                           // 000000083088: BF800000
	.long 0xbf800000                                           // 00000008308C: BF800000
	.long 0xbf800000                                           // 000000083090: BF800000
	.long 0xbf800000                                           // 000000083094: BF800000
	.long 0xbf800000                                           // 000000083098: BF800000
	.long 0xbf800000                                           // 00000008309C: BF800000
	.long 0xbf800000                                           // 0000000830A0: BF800000
	.long 0xbf800000                                           // 0000000830A4: BF800000
	.long 0xbf800000                                           // 0000000830A8: BF800000
	.long 0xbf800000                                           // 0000000830AC: BF800000
	.long 0xbf800000                                           // 0000000830B0: BF800000
	.long 0xbf800000                                           // 0000000830B4: BF800000
	.long 0xbf800000                                           // 0000000830B8: BF800000
	.long 0xbf800000                                           // 0000000830BC: BF800000
	.long 0xbf800000                                           // 0000000830C0: BF800000
	.long 0xbf800000                                           // 0000000830C4: BF800000
	.long 0xbf800000                                           // 0000000830C8: BF800000
	.long 0xbf800000                                           // 0000000830CC: BF800000
	.long 0xbf800000                                           // 0000000830D0: BF800000
	.long 0xbf800000                                           // 0000000830D4: BF800000
	.long 0xbf800000                                           // 0000000830D8: BF800000
	.long 0xbf800000                                           // 0000000830DC: BF800000
	.long 0xbf800000                                           // 0000000830E0: BF800000
	.long 0xbf800000                                           // 0000000830E4: BF800000
	.long 0xbf800000                                           // 0000000830E8: BF800000
	.long 0xbf800000                                           // 0000000830EC: BF800000
	.long 0xbf800000                                           // 0000000830F0: BF800000
	.long 0xbf800000                                           // 0000000830F4: BF800000
	.long 0xbf800000                                           // 0000000830F8: BF800000
	.long 0xbf800000                                           // 0000000830FC: BF800000

	.p2align	8
	.type	add_char_get_work_dim,@function
	.size	add_char_get_work_dim, add_char_get_work_dim_symend-add_char_get_work_dim
add_char_get_work_dim:
	s_clause 0x2                                               // 000000083100: BF850002
	s_load_b32 s3, s[0:1], 0x50                                // 000000083104: F40000C0 F8000050
	s_load_b64 s[4:5], s[0:1], 0x8                             // 00000008310C: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 000000083114: F4040000 F8000038
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000008311C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000083124: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000083128: BF89FC07
	s_lshl_b32 s3, s3, 1                                       // 00000008312C: 84038103
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000083130: BF870009
	v_mov_b32_e32 v1, s3                                       // 000000083134: 7E020203
	s_add_u32 s0, s4, s0                                       // 000000083138: 80000004
	s_addc_u32 s1, s5, s1                                      // 00000008313C: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000083140: DC620000 00000100
	s_nop 0                                                    // 000000083148: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008314C: BFB60003
	s_endpgm                                                   // 000000083150: BFB00000
add_char_get_work_dim_symend:
	.long 0xbf800000                                           // 000000083154: BF800000
	.long 0xbf800000                                           // 000000083158: BF800000
	.long 0xbf800000                                           // 00000008315C: BF800000
	.long 0xbf800000                                           // 000000083160: BF800000
	.long 0xbf800000                                           // 000000083164: BF800000
	.long 0xbf800000                                           // 000000083168: BF800000
	.long 0xbf800000                                           // 00000008316C: BF800000
	.long 0xbf800000                                           // 000000083170: BF800000
	.long 0xbf800000                                           // 000000083174: BF800000
	.long 0xbf800000                                           // 000000083178: BF800000
	.long 0xbf800000                                           // 00000008317C: BF800000
	.long 0xbf800000                                           // 000000083180: BF800000
	.long 0xbf800000                                           // 000000083184: BF800000
	.long 0xbf800000                                           // 000000083188: BF800000
	.long 0xbf800000                                           // 00000008318C: BF800000
	.long 0xbf800000                                           // 000000083190: BF800000
	.long 0xbf800000                                           // 000000083194: BF800000
	.long 0xbf800000                                           // 000000083198: BF800000
	.long 0xbf800000                                           // 00000008319C: BF800000
	.long 0xbf800000                                           // 0000000831A0: BF800000
	.long 0xbf800000                                           // 0000000831A4: BF800000
	.long 0xbf800000                                           // 0000000831A8: BF800000
	.long 0xbf800000                                           // 0000000831AC: BF800000
	.long 0xbf800000                                           // 0000000831B0: BF800000
	.long 0xbf800000                                           // 0000000831B4: BF800000
	.long 0xbf800000                                           // 0000000831B8: BF800000
	.long 0xbf800000                                           // 0000000831BC: BF800000
	.long 0xbf800000                                           // 0000000831C0: BF800000
	.long 0xbf800000                                           // 0000000831C4: BF800000
	.long 0xbf800000                                           // 0000000831C8: BF800000
	.long 0xbf800000                                           // 0000000831CC: BF800000
	.long 0xbf800000                                           // 0000000831D0: BF800000
	.long 0xbf800000                                           // 0000000831D4: BF800000
	.long 0xbf800000                                           // 0000000831D8: BF800000
	.long 0xbf800000                                           // 0000000831DC: BF800000
	.long 0xbf800000                                           // 0000000831E0: BF800000
	.long 0xbf800000                                           // 0000000831E4: BF800000
	.long 0xbf800000                                           // 0000000831E8: BF800000
	.long 0xbf800000                                           // 0000000831EC: BF800000
	.long 0xbf800000                                           // 0000000831F0: BF800000
	.long 0xbf800000                                           // 0000000831F4: BF800000
	.long 0xbf800000                                           // 0000000831F8: BF800000
	.long 0xbf800000                                           // 0000000831FC: BF800000

	.p2align	8
	.type	add_char_x_8_8,@function
	.size	add_char_x_8_8, add_char_x_8_8_symend-add_char_x_8_8
add_char_x_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000083200: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000083208: BF89FC07
	s_clause 0x1                                               // 00000008320C: BF850001
	s_load_b32 s7, s[0:1], null                                // 000000083210: F40001C0 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000083218: F4040000 F8000008
	v_bfe_u32 v1, v0, 10, 8                                    // 000000083220: D6100001 02211500
	v_and_b32_e32 v0, 0x3ff, v0                                // 000000083228: 360000FF 000003FF
	s_mov_b32 s33, 0                                           // 000000083230: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000083234: BF870112
	v_lshl_or_b32 v1, s3, 3, v1                                // 000000083238: D6560001 04050603
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000083240: D6560000 04010602
	s_waitcnt lgkmcnt(0)                                       // 000000083248: BF89FC07
	s_delay_alu instid0(VALU_DEP_2)                            // 00000008324C: BF870002
	v_add3_u32 v1, s6, s7, v1                                  // 000000083250: D6550001 04040E06
	s_add_u32 s0, s0, s4                                       // 000000083258: 80000400
	s_addc_u32 s1, s1, s5                                      // 00000008325C: 82010501
	global_store_b8 v0, v1, s[0:1]                             // 000000083260: DC620000 00000100
	s_nop 0                                                    // 000000083268: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008326C: BFB60003
	s_endpgm                                                   // 000000083270: BFB00000
add_char_x_8_8_symend:
	.long 0xbf800000                                           // 000000083274: BF800000
	.long 0xbf800000                                           // 000000083278: BF800000
	.long 0xbf800000                                           // 00000008327C: BF800000
	.long 0xbf800000                                           // 000000083280: BF800000
	.long 0xbf800000                                           // 000000083284: BF800000
	.long 0xbf800000                                           // 000000083288: BF800000
	.long 0xbf800000                                           // 00000008328C: BF800000
	.long 0xbf800000                                           // 000000083290: BF800000
	.long 0xbf800000                                           // 000000083294: BF800000
	.long 0xbf800000                                           // 000000083298: BF800000
	.long 0xbf800000                                           // 00000008329C: BF800000
	.long 0xbf800000                                           // 0000000832A0: BF800000
	.long 0xbf800000                                           // 0000000832A4: BF800000
	.long 0xbf800000                                           // 0000000832A8: BF800000
	.long 0xbf800000                                           // 0000000832AC: BF800000
	.long 0xbf800000                                           // 0000000832B0: BF800000
	.long 0xbf800000                                           // 0000000832B4: BF800000
	.long 0xbf800000                                           // 0000000832B8: BF800000
	.long 0xbf800000                                           // 0000000832BC: BF800000
	.long 0xbf800000                                           // 0000000832C0: BF800000
	.long 0xbf800000                                           // 0000000832C4: BF800000
	.long 0xbf800000                                           // 0000000832C8: BF800000
	.long 0xbf800000                                           // 0000000832CC: BF800000
	.long 0xbf800000                                           // 0000000832D0: BF800000
	.long 0xbf800000                                           // 0000000832D4: BF800000
	.long 0xbf800000                                           // 0000000832D8: BF800000
	.long 0xbf800000                                           // 0000000832DC: BF800000
	.long 0xbf800000                                           // 0000000832E0: BF800000
	.long 0xbf800000                                           // 0000000832E4: BF800000
	.long 0xbf800000                                           // 0000000832E8: BF800000
	.long 0xbf800000                                           // 0000000832EC: BF800000
	.long 0xbf800000                                           // 0000000832F0: BF800000
	.long 0xbf800000                                           // 0000000832F4: BF800000
	.long 0xbf800000                                           // 0000000832F8: BF800000
	.long 0xbf800000                                           // 0000000832FC: BF800000

	.p2align	8
	.type	add_char_get_global_offset_8_8,@function
	.size	add_char_get_global_offset_8_8, add_char_get_global_offset_8_8_symend-add_char_get_global_offset_8_8
add_char_get_global_offset_8_8:
	s_clause 0x1                                               // 000000083300: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000083304: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008330C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000083314: D6560000 04010602
	s_mov_b32 s33, 0                                           // 00000008331C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000083320: BF89FC07
	s_add_i32 s3, s4, s6                                       // 000000083324: 81030604
	s_add_u32 s0, s0, s4                                       // 000000083328: 80000400
	v_mov_b32_e32 v1, s3                                       // 00000008332C: 7E020203
	s_addc_u32 s1, s1, s5                                      // 000000083330: 82010501
	global_store_b8 v0, v1, s[0:1]                             // 000000083334: DC620000 00000100
	s_nop 0                                                    // 00000008333C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000083340: BFB60003
	s_endpgm                                                   // 000000083344: BFB00000
add_char_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 000000083348: BF800000
	.long 0xbf800000                                           // 00000008334C: BF800000
	.long 0xbf800000                                           // 000000083350: BF800000
	.long 0xbf800000                                           // 000000083354: BF800000
	.long 0xbf800000                                           // 000000083358: BF800000
	.long 0xbf800000                                           // 00000008335C: BF800000
	.long 0xbf800000                                           // 000000083360: BF800000
	.long 0xbf800000                                           // 000000083364: BF800000
	.long 0xbf800000                                           // 000000083368: BF800000
	.long 0xbf800000                                           // 00000008336C: BF800000
	.long 0xbf800000                                           // 000000083370: BF800000
	.long 0xbf800000                                           // 000000083374: BF800000
	.long 0xbf800000                                           // 000000083378: BF800000
	.long 0xbf800000                                           // 00000008337C: BF800000
	.long 0xbf800000                                           // 000000083380: BF800000
	.long 0xbf800000                                           // 000000083384: BF800000
	.long 0xbf800000                                           // 000000083388: BF800000
	.long 0xbf800000                                           // 00000008338C: BF800000
	.long 0xbf800000                                           // 000000083390: BF800000
	.long 0xbf800000                                           // 000000083394: BF800000
	.long 0xbf800000                                           // 000000083398: BF800000
	.long 0xbf800000                                           // 00000008339C: BF800000
	.long 0xbf800000                                           // 0000000833A0: BF800000
	.long 0xbf800000                                           // 0000000833A4: BF800000
	.long 0xbf800000                                           // 0000000833A8: BF800000
	.long 0xbf800000                                           // 0000000833AC: BF800000
	.long 0xbf800000                                           // 0000000833B0: BF800000
	.long 0xbf800000                                           // 0000000833B4: BF800000
	.long 0xbf800000                                           // 0000000833B8: BF800000
	.long 0xbf800000                                           // 0000000833BC: BF800000
	.long 0xbf800000                                           // 0000000833C0: BF800000
	.long 0xbf800000                                           // 0000000833C4: BF800000
	.long 0xbf800000                                           // 0000000833C8: BF800000
	.long 0xbf800000                                           // 0000000833CC: BF800000
	.long 0xbf800000                                           // 0000000833D0: BF800000
	.long 0xbf800000                                           // 0000000833D4: BF800000
	.long 0xbf800000                                           // 0000000833D8: BF800000
	.long 0xbf800000                                           // 0000000833DC: BF800000
	.long 0xbf800000                                           // 0000000833E0: BF800000
	.long 0xbf800000                                           // 0000000833E4: BF800000
	.long 0xbf800000                                           // 0000000833E8: BF800000
	.long 0xbf800000                                           // 0000000833EC: BF800000
	.long 0xbf800000                                           // 0000000833F0: BF800000
	.long 0xbf800000                                           // 0000000833F4: BF800000
	.long 0xbf800000                                           // 0000000833F8: BF800000
	.long 0xbf800000                                           // 0000000833FC: BF800000

	.p2align	8
	.type	add_char_get_local_id_8_8,@function
	.size	add_char_get_local_id_8_8, add_char_get_local_id_8_8_symend-add_char_get_local_id_8_8
add_char_get_local_id_8_8:
	s_clause 0x1                                               // 000000083400: BF850001
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000083404: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 00000008340C: F4040000 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000083414: 360200FF 000003FF
	v_bfe_u32 v0, v0, 10, 8                                    // 00000008341C: D6100000 02211500
	s_mov_b32 s33, 0                                           // 000000083424: BEA10080
	s_delay_alu instid0(VALU_DEP_1)                            // 000000083428: BF870001
	v_add_nc_u32_e32 v0, v0, v1                                // 00000008342C: 4A000300
	v_lshl_or_b32 v1, s2, 3, v1                                // 000000083430: D6560001 04050602
	s_waitcnt lgkmcnt(0)                                       // 000000083438: BF89FC07
	s_add_u32 s0, s4, s0                                       // 00000008343C: 80000004
	s_addc_u32 s1, s5, s1                                      // 000000083440: 82010105
	global_store_b8 v1, v0, s[0:1]                             // 000000083444: DC620000 00000001
	s_nop 0                                                    // 00000008344C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000083450: BFB60003
	s_endpgm                                                   // 000000083454: BFB00000
add_char_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 000000083458: BF800000
	.long 0xbf800000                                           // 00000008345C: BF800000
	.long 0xbf800000                                           // 000000083460: BF800000
	.long 0xbf800000                                           // 000000083464: BF800000
	.long 0xbf800000                                           // 000000083468: BF800000
	.long 0xbf800000                                           // 00000008346C: BF800000
	.long 0xbf800000                                           // 000000083470: BF800000
	.long 0xbf800000                                           // 000000083474: BF800000
	.long 0xbf800000                                           // 000000083478: BF800000
	.long 0xbf800000                                           // 00000008347C: BF800000
	.long 0xbf800000                                           // 000000083480: BF800000
	.long 0xbf800000                                           // 000000083484: BF800000
	.long 0xbf800000                                           // 000000083488: BF800000
	.long 0xbf800000                                           // 00000008348C: BF800000
	.long 0xbf800000                                           // 000000083490: BF800000
	.long 0xbf800000                                           // 000000083494: BF800000
	.long 0xbf800000                                           // 000000083498: BF800000
	.long 0xbf800000                                           // 00000008349C: BF800000
	.long 0xbf800000                                           // 0000000834A0: BF800000
	.long 0xbf800000                                           // 0000000834A4: BF800000
	.long 0xbf800000                                           // 0000000834A8: BF800000
	.long 0xbf800000                                           // 0000000834AC: BF800000
	.long 0xbf800000                                           // 0000000834B0: BF800000
	.long 0xbf800000                                           // 0000000834B4: BF800000
	.long 0xbf800000                                           // 0000000834B8: BF800000
	.long 0xbf800000                                           // 0000000834BC: BF800000
	.long 0xbf800000                                           // 0000000834C0: BF800000
	.long 0xbf800000                                           // 0000000834C4: BF800000
	.long 0xbf800000                                           // 0000000834C8: BF800000
	.long 0xbf800000                                           // 0000000834CC: BF800000
	.long 0xbf800000                                           // 0000000834D0: BF800000
	.long 0xbf800000                                           // 0000000834D4: BF800000
	.long 0xbf800000                                           // 0000000834D8: BF800000
	.long 0xbf800000                                           // 0000000834DC: BF800000
	.long 0xbf800000                                           // 0000000834E0: BF800000
	.long 0xbf800000                                           // 0000000834E4: BF800000
	.long 0xbf800000                                           // 0000000834E8: BF800000
	.long 0xbf800000                                           // 0000000834EC: BF800000
	.long 0xbf800000                                           // 0000000834F0: BF800000
	.long 0xbf800000                                           // 0000000834F4: BF800000
	.long 0xbf800000                                           // 0000000834F8: BF800000
	.long 0xbf800000                                           // 0000000834FC: BF800000

	.p2align	8
	.type	add_char_get_group_id_8_8,@function
	.size	add_char_get_group_id_8_8, add_char_get_group_id_8_8_symend-add_char_get_group_id_8_8
add_char_get_group_id_8_8:
	s_clause 0x1                                               // 000000083500: BF850001
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000083504: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 00000008350C: F4040000 F8000038
	s_add_i32 s3, s3, s2                                       // 000000083514: 81030203
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000083518: D6560000 04010602
	v_mov_b32_e32 v1, s3                                       // 000000083520: 7E020203
	s_mov_b32 s33, 0                                           // 000000083524: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000083528: BF89FC07
	s_add_u32 s0, s4, s0                                       // 00000008352C: 80000004
	s_addc_u32 s1, s5, s1                                      // 000000083530: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000083534: DC620000 00000100
	s_nop 0                                                    // 00000008353C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000083540: BFB60003
	s_endpgm                                                   // 000000083544: BFB00000
add_char_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 000000083548: BF800000
	.long 0xbf800000                                           // 00000008354C: BF800000
	.long 0xbf800000                                           // 000000083550: BF800000
	.long 0xbf800000                                           // 000000083554: BF800000
	.long 0xbf800000                                           // 000000083558: BF800000
	.long 0xbf800000                                           // 00000008355C: BF800000
	.long 0xbf800000                                           // 000000083560: BF800000
	.long 0xbf800000                                           // 000000083564: BF800000
	.long 0xbf800000                                           // 000000083568: BF800000
	.long 0xbf800000                                           // 00000008356C: BF800000
	.long 0xbf800000                                           // 000000083570: BF800000
	.long 0xbf800000                                           // 000000083574: BF800000
	.long 0xbf800000                                           // 000000083578: BF800000
	.long 0xbf800000                                           // 00000008357C: BF800000
	.long 0xbf800000                                           // 000000083580: BF800000
	.long 0xbf800000                                           // 000000083584: BF800000
	.long 0xbf800000                                           // 000000083588: BF800000
	.long 0xbf800000                                           // 00000008358C: BF800000
	.long 0xbf800000                                           // 000000083590: BF800000
	.long 0xbf800000                                           // 000000083594: BF800000
	.long 0xbf800000                                           // 000000083598: BF800000
	.long 0xbf800000                                           // 00000008359C: BF800000
	.long 0xbf800000                                           // 0000000835A0: BF800000
	.long 0xbf800000                                           // 0000000835A4: BF800000
	.long 0xbf800000                                           // 0000000835A8: BF800000
	.long 0xbf800000                                           // 0000000835AC: BF800000
	.long 0xbf800000                                           // 0000000835B0: BF800000
	.long 0xbf800000                                           // 0000000835B4: BF800000
	.long 0xbf800000                                           // 0000000835B8: BF800000
	.long 0xbf800000                                           // 0000000835BC: BF800000
	.long 0xbf800000                                           // 0000000835C0: BF800000
	.long 0xbf800000                                           // 0000000835C4: BF800000
	.long 0xbf800000                                           // 0000000835C8: BF800000
	.long 0xbf800000                                           // 0000000835CC: BF800000
	.long 0xbf800000                                           // 0000000835D0: BF800000
	.long 0xbf800000                                           // 0000000835D4: BF800000
	.long 0xbf800000                                           // 0000000835D8: BF800000
	.long 0xbf800000                                           // 0000000835DC: BF800000
	.long 0xbf800000                                           // 0000000835E0: BF800000
	.long 0xbf800000                                           // 0000000835E4: BF800000
	.long 0xbf800000                                           // 0000000835E8: BF800000
	.long 0xbf800000                                           // 0000000835EC: BF800000
	.long 0xbf800000                                           // 0000000835F0: BF800000
	.long 0xbf800000                                           // 0000000835F4: BF800000
	.long 0xbf800000                                           // 0000000835F8: BF800000
	.long 0xbf800000                                           // 0000000835FC: BF800000

	.p2align	8
	.type	add_char_get_local_size_8_8,@function
	.size	add_char_get_local_size_8_8, add_char_get_local_size_8_8_symend-add_char_get_local_size_8_8
add_char_get_local_size_8_8:
	s_clause 0x1                                               // 000000083600: BF850001
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000083604: F4040100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 00000008360C: F4040000 F8000038
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000083614: D6560000 04010602
	v_mov_b32_e32 v1, 16                                       // 00000008361C: 7E020290
	s_mov_b32 s33, 0                                           // 000000083620: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000083624: BF89FC07
	s_add_u32 s0, s4, s0                                       // 000000083628: 80000004
	s_addc_u32 s1, s5, s1                                      // 00000008362C: 82010105
	global_store_b8 v0, v1, s[0:1]                             // 000000083630: DC620000 00000100
	s_nop 0                                                    // 000000083638: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008363C: BFB60003
	s_endpgm                                                   // 000000083640: BFB00000
add_char_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 000000083644: BF800000
	.long 0xbf800000                                           // 000000083648: BF800000
	.long 0xbf800000                                           // 00000008364C: BF800000
	.long 0xbf800000                                           // 000000083650: BF800000
	.long 0xbf800000                                           // 000000083654: BF800000
	.long 0xbf800000                                           // 000000083658: BF800000
	.long 0xbf800000                                           // 00000008365C: BF800000
	.long 0xbf800000                                           // 000000083660: BF800000
	.long 0xbf800000                                           // 000000083664: BF800000
	.long 0xbf800000                                           // 000000083668: BF800000
	.long 0xbf800000                                           // 00000008366C: BF800000
	.long 0xbf800000                                           // 000000083670: BF800000
	.long 0xbf800000                                           // 000000083674: BF800000
	.long 0xbf800000                                           // 000000083678: BF800000
	.long 0xbf800000                                           // 00000008367C: BF800000
	.long 0xbf800000                                           // 000000083680: BF800000
	.long 0xbf800000                                           // 000000083684: BF800000
	.long 0xbf800000                                           // 000000083688: BF800000
	.long 0xbf800000                                           // 00000008368C: BF800000
	.long 0xbf800000                                           // 000000083690: BF800000
	.long 0xbf800000                                           // 000000083694: BF800000
	.long 0xbf800000                                           // 000000083698: BF800000
	.long 0xbf800000                                           // 00000008369C: BF800000
	.long 0xbf800000                                           // 0000000836A0: BF800000
	.long 0xbf800000                                           // 0000000836A4: BF800000
	.long 0xbf800000                                           // 0000000836A8: BF800000
	.long 0xbf800000                                           // 0000000836AC: BF800000
	.long 0xbf800000                                           // 0000000836B0: BF800000
	.long 0xbf800000                                           // 0000000836B4: BF800000
	.long 0xbf800000                                           // 0000000836B8: BF800000
	.long 0xbf800000                                           // 0000000836BC: BF800000
	.long 0xbf800000                                           // 0000000836C0: BF800000
	.long 0xbf800000                                           // 0000000836C4: BF800000
	.long 0xbf800000                                           // 0000000836C8: BF800000
	.long 0xbf800000                                           // 0000000836CC: BF800000
	.long 0xbf800000                                           // 0000000836D0: BF800000
	.long 0xbf800000                                           // 0000000836D4: BF800000
	.long 0xbf800000                                           // 0000000836D8: BF800000
	.long 0xbf800000                                           // 0000000836DC: BF800000
	.long 0xbf800000                                           // 0000000836E0: BF800000
	.long 0xbf800000                                           // 0000000836E4: BF800000
	.long 0xbf800000                                           // 0000000836E8: BF800000
	.long 0xbf800000                                           // 0000000836EC: BF800000
	.long 0xbf800000                                           // 0000000836F0: BF800000
	.long 0xbf800000                                           // 0000000836F4: BF800000
	.long 0xbf800000                                           // 0000000836F8: BF800000
	.long 0xbf800000                                           // 0000000836FC: BF800000

	.p2align	8
	.type	add_char_get_global_id_8_8,@function
	.size	add_char_get_global_id_8_8, add_char_get_global_id_8_8_symend-add_char_get_global_id_8_8
add_char_get_global_id_8_8:
	s_clause 0x1                                               // 000000083700: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000083704: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008370C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000083714: 360200FF 000003FF
	v_bfe_u32 v0, v0, 10, 8                                    // 00000008371C: D6100000 02211500
	s_mov_b32 s33, 0                                           // 000000083724: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000083728: BF8700B2
	v_lshl_or_b32 v1, s2, 3, v1                                // 00000008372C: D6560001 04050602
	s_lshl_b32 s2, s3, 3                                       // 000000083734: 84028303
	s_waitcnt lgkmcnt(0)                                       // 000000083738: BF89FC07
	v_add_co_u32 v1, s3, s4, v1                                // 00000008373C: D7000301 00020204
	s_delay_alu instid0(VALU_DEP_1)                            // 000000083744: BF870001
	v_add_co_ci_u32_e64 v2, null, s5, 0, s3                    // 000000083748: D5207C02 000D0005
	s_add_i32 s2, s6, s2                                       // 000000083750: 81020206
	s_delay_alu instid0(VALU_DEP_2) | instid1(SALU_CYCLE_1)    // 000000083754: BF870482
	v_add3_u32 v3, s2, v0, v1                                  // 000000083758: D6550003 04060002
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 000000083760: D7006A00 00020200
	s_delay_alu instid0(VALU_DEP_3)                            // 000000083768: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000008376C: 40020401
	global_store_b8 v[0:1], v3, off                            // 000000083770: DC620000 007C0300
	s_nop 0                                                    // 000000083778: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008377C: BFB60003
	s_endpgm                                                   // 000000083780: BFB00000
add_char_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 000000083784: BF800000
	.long 0xbf800000                                           // 000000083788: BF800000
	.long 0xbf800000                                           // 00000008378C: BF800000
	.long 0xbf800000                                           // 000000083790: BF800000
	.long 0xbf800000                                           // 000000083794: BF800000
	.long 0xbf800000                                           // 000000083798: BF800000
	.long 0xbf800000                                           // 00000008379C: BF800000
	.long 0xbf800000                                           // 0000000837A0: BF800000
	.long 0xbf800000                                           // 0000000837A4: BF800000
	.long 0xbf800000                                           // 0000000837A8: BF800000
	.long 0xbf800000                                           // 0000000837AC: BF800000
	.long 0xbf800000                                           // 0000000837B0: BF800000
	.long 0xbf800000                                           // 0000000837B4: BF800000
	.long 0xbf800000                                           // 0000000837B8: BF800000
	.long 0xbf800000                                           // 0000000837BC: BF800000
	.long 0xbf800000                                           // 0000000837C0: BF800000
	.long 0xbf800000                                           // 0000000837C4: BF800000
	.long 0xbf800000                                           // 0000000837C8: BF800000
	.long 0xbf800000                                           // 0000000837CC: BF800000
	.long 0xbf800000                                           // 0000000837D0: BF800000
	.long 0xbf800000                                           // 0000000837D4: BF800000
	.long 0xbf800000                                           // 0000000837D8: BF800000
	.long 0xbf800000                                           // 0000000837DC: BF800000
	.long 0xbf800000                                           // 0000000837E0: BF800000
	.long 0xbf800000                                           // 0000000837E4: BF800000
	.long 0xbf800000                                           // 0000000837E8: BF800000
	.long 0xbf800000                                           // 0000000837EC: BF800000
	.long 0xbf800000                                           // 0000000837F0: BF800000
	.long 0xbf800000                                           // 0000000837F4: BF800000
	.long 0xbf800000                                           // 0000000837F8: BF800000
	.long 0xbf800000                                           // 0000000837FC: BF800000

	.p2align	8
	.type	add_char_get_global_size_8_8,@function
	.size	add_char_get_global_size_8_8, add_char_get_global_size_8_8_symend-add_char_get_global_size_8_8
add_char_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000083800: 7E020280
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000083804: D6560000 04010602
	s_mov_b32 s33, 0                                           // 00000008380C: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 000000083810: DC520022 01000001
	s_clause 0x1                                               // 000000083818: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000008381C: F4080100 F8000008
	s_load_b64 s[0:1], s[0:1], 0x38                            // 000000083824: F4040000 F8000038
	s_waitcnt lgkmcnt(0)                                       // 00000008382C: BF89FC07
	s_lshl_b32 s3, s6, 3                                       // 000000083830: 84038306
	s_lshl_b32 s6, s7, 3                                       // 000000083834: 84068307
	s_add_u32 s0, s4, s0                                       // 000000083838: 80000004
	s_addc_u32 s1, s5, s1                                      // 00000008383C: 82010105
	s_waitcnt vmcnt(0)                                         // 000000083840: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 000000083844: 32040290
	v_add_nc_u32_e32 v1, s3, v1                                // 000000083848: 4A020203
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000008384C: BF870092
	v_add_nc_u32_e32 v2, s6, v2                                // 000000083850: 4A040406
	v_add_nc_u32_e32 v1, v1, v2                                // 000000083854: 4A020501
	global_store_b8 v0, v1, s[0:1]                             // 000000083858: DC620000 00000100
	s_nop 0                                                    // 000000083860: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000083864: BFB60003
	s_endpgm                                                   // 000000083868: BFB00000
add_char_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 00000008386C: BF800000
	.long 0xbf800000                                           // 000000083870: BF800000
	.long 0xbf800000                                           // 000000083874: BF800000
	.long 0xbf800000                                           // 000000083878: BF800000
	.long 0xbf800000                                           // 00000008387C: BF800000
	.long 0xbf800000                                           // 000000083880: BF800000
	.long 0xbf800000                                           // 000000083884: BF800000
	.long 0xbf800000                                           // 000000083888: BF800000
	.long 0xbf800000                                           // 00000008388C: BF800000
	.long 0xbf800000                                           // 000000083890: BF800000
	.long 0xbf800000                                           // 000000083894: BF800000
	.long 0xbf800000                                           // 000000083898: BF800000
	.long 0xbf800000                                           // 00000008389C: BF800000
	.long 0xbf800000                                           // 0000000838A0: BF800000
	.long 0xbf800000                                           // 0000000838A4: BF800000
	.long 0xbf800000                                           // 0000000838A8: BF800000
	.long 0xbf800000                                           // 0000000838AC: BF800000
	.long 0xbf800000                                           // 0000000838B0: BF800000
	.long 0xbf800000                                           // 0000000838B4: BF800000
	.long 0xbf800000                                           // 0000000838B8: BF800000
	.long 0xbf800000                                           // 0000000838BC: BF800000
	.long 0xbf800000                                           // 0000000838C0: BF800000
	.long 0xbf800000                                           // 0000000838C4: BF800000
	.long 0xbf800000                                           // 0000000838C8: BF800000
	.long 0xbf800000                                           // 0000000838CC: BF800000
	.long 0xbf800000                                           // 0000000838D0: BF800000
	.long 0xbf800000                                           // 0000000838D4: BF800000
	.long 0xbf800000                                           // 0000000838D8: BF800000
	.long 0xbf800000                                           // 0000000838DC: BF800000
	.long 0xbf800000                                           // 0000000838E0: BF800000
	.long 0xbf800000                                           // 0000000838E4: BF800000
	.long 0xbf800000                                           // 0000000838E8: BF800000
	.long 0xbf800000                                           // 0000000838EC: BF800000
	.long 0xbf800000                                           // 0000000838F0: BF800000
	.long 0xbf800000                                           // 0000000838F4: BF800000
	.long 0xbf800000                                           // 0000000838F8: BF800000
	.long 0xbf800000                                           // 0000000838FC: BF800000

	.p2align	8
	.type	add_char_get_num_groups_8_8,@function
	.size	add_char_get_num_groups_8_8, add_char_get_num_groups_8_8_symend-add_char_get_num_groups_8_8
add_char_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000083900: 7E020280
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000083904: D6560000 04010602
	s_mov_b32 s33, 0                                           // 00000008390C: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 000000083910: DC520022 01000001
	s_clause 0x1                                               // 000000083918: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000008391C: F4080100 F8000008
	s_load_b64 s[8:9], s[0:1], 0x38                            // 000000083924: F4040200 F8000038
	s_waitcnt vmcnt(0)                                         // 00000008392C: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 000000083930: 32040290
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000083934: D43D0000 00020280
	s_delay_alu instid0(VALU_DEP_2)                            // 00000008393C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000083940: 7C7A0480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000083944: BF07806A
	s_waitcnt lgkmcnt(0)                                       // 000000083948: BF89FC07
	s_addc_u32 s1, s7, 0                                       // 00000008394C: 82018007
	s_cmp_lg_u32 s0, 0                                         // 000000083950: BF078000
	s_addc_u32 s0, s1, s6                                      // 000000083954: 82000601
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000083958: BF870009
	v_mov_b32_e32 v1, s0                                       // 00000008395C: 7E020200
	s_add_u32 s0, s4, s8                                       // 000000083960: 80000804
	s_addc_u32 s1, s5, s9                                      // 000000083964: 82010905
	global_store_b8 v0, v1, s[0:1]                             // 000000083968: DC620000 00000100
	s_nop 0                                                    // 000000083970: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000083974: BFB60003
	s_endpgm                                                   // 000000083978: BFB00000
add_char_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 00000008397C: BF800000
	.long 0xbf800000                                           // 000000083980: BF800000
	.long 0xbf800000                                           // 000000083984: BF800000
	.long 0xbf800000                                           // 000000083988: BF800000
	.long 0xbf800000                                           // 00000008398C: BF800000
	.long 0xbf800000                                           // 000000083990: BF800000
	.long 0xbf800000                                           // 000000083994: BF800000
	.long 0xbf800000                                           // 000000083998: BF800000
	.long 0xbf800000                                           // 00000008399C: BF800000
	.long 0xbf800000                                           // 0000000839A0: BF800000
	.long 0xbf800000                                           // 0000000839A4: BF800000
	.long 0xbf800000                                           // 0000000839A8: BF800000
	.long 0xbf800000                                           // 0000000839AC: BF800000
	.long 0xbf800000                                           // 0000000839B0: BF800000
	.long 0xbf800000                                           // 0000000839B4: BF800000
	.long 0xbf800000                                           // 0000000839B8: BF800000
	.long 0xbf800000                                           // 0000000839BC: BF800000
	.long 0xbf800000                                           // 0000000839C0: BF800000
	.long 0xbf800000                                           // 0000000839C4: BF800000
	.long 0xbf800000                                           // 0000000839C8: BF800000
	.long 0xbf800000                                           // 0000000839CC: BF800000
	.long 0xbf800000                                           // 0000000839D0: BF800000
	.long 0xbf800000                                           // 0000000839D4: BF800000
	.long 0xbf800000                                           // 0000000839D8: BF800000
	.long 0xbf800000                                           // 0000000839DC: BF800000
	.long 0xbf800000                                           // 0000000839E0: BF800000
	.long 0xbf800000                                           // 0000000839E4: BF800000
	.long 0xbf800000                                           // 0000000839E8: BF800000
	.long 0xbf800000                                           // 0000000839EC: BF800000
	.long 0xbf800000                                           // 0000000839F0: BF800000
	.long 0xbf800000                                           // 0000000839F4: BF800000
	.long 0xbf800000                                           // 0000000839F8: BF800000
	.long 0xbf800000                                           // 0000000839FC: BF800000

	.p2align	8
	.type	add_char_get_work_dim_8_8,@function
	.size	add_char_get_work_dim_8_8, add_char_get_work_dim_8_8_symend-add_char_get_work_dim_8_8
add_char_get_work_dim_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000083A00: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000083A08: BF89FC07
	s_clause 0x1                                               // 000000083A0C: BF850001
	s_load_b32 s7, s[0:1], 0x50                                // 000000083A10: F40001C0 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000083A18: F4040000 F8000008
	v_bfe_u32 v1, v0, 10, 8                                    // 000000083A20: D6100001 02211500
	v_and_b32_e32 v0, 0x3ff, v0                                // 000000083A28: 360000FF 000003FF
	s_mov_b32 s33, 0                                           // 000000083A30: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000083A34: BF870112
	v_lshl_or_b32 v1, s3, 3, v1                                // 000000083A38: D6560001 04050603
	v_lshl_or_b32 v0, s2, 3, v0                                // 000000083A40: D6560000 04010602
	s_waitcnt lgkmcnt(0)                                       // 000000083A48: BF89FC07
	s_delay_alu instid0(VALU_DEP_2)                            // 000000083A4C: BF870002
	v_add3_u32 v1, s7, s6, v1                                  // 000000083A50: D6550001 04040C07
	s_add_u32 s0, s0, s4                                       // 000000083A58: 80000400
	s_addc_u32 s1, s1, s5                                      // 000000083A5C: 82010501
	global_store_b8 v0, v1, s[0:1]                             // 000000083A60: DC620000 00000100
	s_nop 0                                                    // 000000083A68: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000083A6C: BFB60003
	s_endpgm                                                   // 000000083A70: BFB00000
add_char_get_work_dim_8_8_symend:
	.long 0xbf9f0000                                           // 000000083A74: BF9F0000
	.long 0xbf9f0000                                           // 000000083A78: BF9F0000
	.long 0xbf9f0000                                           // 000000083A7C: BF9F0000
	.long 0xbf9f0000                                           // 000000083A80: BF9F0000
	.long 0xbf9f0000                                           // 000000083A84: BF9F0000
	.long 0xbf9f0000                                           // 000000083A88: BF9F0000
	.long 0xbf9f0000                                           // 000000083A8C: BF9F0000
	.long 0xbf9f0000                                           // 000000083A90: BF9F0000
	.long 0xbf9f0000                                           // 000000083A94: BF9F0000
	.long 0xbf9f0000                                           // 000000083A98: BF9F0000
	.long 0xbf9f0000                                           // 000000083A9C: BF9F0000
	.long 0xbf9f0000                                           // 000000083AA0: BF9F0000
	.long 0xbf9f0000                                           // 000000083AA4: BF9F0000
	.long 0xbf9f0000                                           // 000000083AA8: BF9F0000
	.long 0xbf9f0000                                           // 000000083AAC: BF9F0000
	.long 0xbf9f0000                                           // 000000083AB0: BF9F0000
	.long 0xbf9f0000                                           // 000000083AB4: BF9F0000
	.long 0xbf9f0000                                           // 000000083AB8: BF9F0000
	.long 0xbf9f0000                                           // 000000083ABC: BF9F0000
	.long 0xbf9f0000                                           // 000000083AC0: BF9F0000
	.long 0xbf9f0000                                           // 000000083AC4: BF9F0000
	.long 0xbf9f0000                                           // 000000083AC8: BF9F0000
	.long 0xbf9f0000                                           // 000000083ACC: BF9F0000
	.long 0xbf9f0000                                           // 000000083AD0: BF9F0000
	.long 0xbf9f0000                                           // 000000083AD4: BF9F0000
	.long 0xbf9f0000                                           // 000000083AD8: BF9F0000
	.long 0xbf9f0000                                           // 000000083ADC: BF9F0000
	.long 0xbf9f0000                                           // 000000083AE0: BF9F0000
	.long 0xbf9f0000                                           // 000000083AE4: BF9F0000
	.long 0xbf9f0000                                           // 000000083AE8: BF9F0000
	.long 0xbf9f0000                                           // 000000083AEC: BF9F0000
	.long 0xbf9f0000                                           // 000000083AF0: BF9F0000
	.long 0xbf9f0000                                           // 000000083AF4: BF9F0000
	.long 0xbf9f0000                                           // 000000083AF8: BF9F0000
	.long 0xbf9f0000                                           // 000000083AFC: BF9F0000
	.long 0xbf9f0000                                           // 000000083B00: BF9F0000
	.long 0xbf9f0000                                           // 000000083B04: BF9F0000
	.long 0xbf9f0000                                           // 000000083B08: BF9F0000
	.long 0xbf9f0000                                           // 000000083B0C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B10: BF9F0000
	.long 0xbf9f0000                                           // 000000083B14: BF9F0000
	.long 0xbf9f0000                                           // 000000083B18: BF9F0000
	.long 0xbf9f0000                                           // 000000083B1C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B20: BF9F0000
	.long 0xbf9f0000                                           // 000000083B24: BF9F0000
	.long 0xbf9f0000                                           // 000000083B28: BF9F0000
	.long 0xbf9f0000                                           // 000000083B2C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B30: BF9F0000
	.long 0xbf9f0000                                           // 000000083B34: BF9F0000
	.long 0xbf9f0000                                           // 000000083B38: BF9F0000
	.long 0xbf9f0000                                           // 000000083B3C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B40: BF9F0000
	.long 0xbf9f0000                                           // 000000083B44: BF9F0000
	.long 0xbf9f0000                                           // 000000083B48: BF9F0000
	.long 0xbf9f0000                                           // 000000083B4C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B50: BF9F0000
	.long 0xbf9f0000                                           // 000000083B54: BF9F0000
	.long 0xbf9f0000                                           // 000000083B58: BF9F0000
	.long 0xbf9f0000                                           // 000000083B5C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B60: BF9F0000
	.long 0xbf9f0000                                           // 000000083B64: BF9F0000
	.long 0xbf9f0000                                           // 000000083B68: BF9F0000
	.long 0xbf9f0000                                           // 000000083B6C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B70: BF9F0000
	.long 0xbf9f0000                                           // 000000083B74: BF9F0000
	.long 0xbf9f0000                                           // 000000083B78: BF9F0000
	.long 0xbf9f0000                                           // 000000083B7C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B80: BF9F0000
	.long 0xbf9f0000                                           // 000000083B84: BF9F0000
	.long 0xbf9f0000                                           // 000000083B88: BF9F0000
	.long 0xbf9f0000                                           // 000000083B8C: BF9F0000
	.long 0xbf9f0000                                           // 000000083B90: BF9F0000
	.long 0xbf9f0000                                           // 000000083B94: BF9F0000
	.long 0xbf9f0000                                           // 000000083B98: BF9F0000
	.long 0xbf9f0000                                           // 000000083B9C: BF9F0000
	.long 0xbf9f0000                                           // 000000083BA0: BF9F0000
	.long 0xbf9f0000                                           // 000000083BA4: BF9F0000
	.long 0xbf9f0000                                           // 000000083BA8: BF9F0000
	.long 0xbf9f0000                                           // 000000083BAC: BF9F0000
	.long 0xbf9f0000                                           // 000000083BB0: BF9F0000
	.long 0xbf9f0000                                           // 000000083BB4: BF9F0000
	.long 0xbf9f0000                                           // 000000083BB8: BF9F0000
	.long 0xbf9f0000                                           // 000000083BBC: BF9F0000
	.long 0xbf9f0000                                           // 000000083BC0: BF9F0000
	.long 0xbf9f0000                                           // 000000083BC4: BF9F0000
	.long 0xbf9f0000                                           // 000000083BC8: BF9F0000
	.long 0xbf9f0000                                           // 000000083BCC: BF9F0000
	.long 0xbf9f0000                                           // 000000083BD0: BF9F0000
	.long 0xbf9f0000                                           // 000000083BD4: BF9F0000
	.long 0xbf9f0000                                           // 000000083BD8: BF9F0000
	.long 0xbf9f0000                                           // 000000083BDC: BF9F0000
	.long 0xbf9f0000                                           // 000000083BE0: BF9F0000
	.long 0xbf9f0000                                           // 000000083BE4: BF9F0000
	.long 0xbf9f0000                                           // 000000083BE8: BF9F0000
	.long 0xbf9f0000                                           // 000000083BEC: BF9F0000
	.long 0xbf9f0000                                           // 000000083BF0: BF9F0000
	.long 0xbf9f0000                                           // 000000083BF4: BF9F0000
	.long 0xbf9f0000                                           // 000000083BF8: BF9F0000
	.long 0xbf9f0000                                           // 000000083BFC: BF9F0000

	.section	.dynamic,#alloc,#write
_DYNAMIC:
	.long 0x6                                                  // 000000084C00: 00000006
	.long 0                                                    // 000000084C04: 00000000
	.ascii "8m"                                                // 000000084C08: 6D38
	.short 0x5                                                 // 000000084C0A: 0005
	.long 0                                                    // 000000084C0C: 00000000
	.long 0xb                                                  // 000000084C10: 0000000B
	.long 0                                                    // 000000084C14: 00000000
	.long 0x18                                                 // 000000084C18: 00000018
	.long 0                                                    // 000000084C1C: 00000000
	.long 0x5                                                  // 000000084C20: 00000005
	.long 0                                                    // 000000084C24: 00000000
	.ascii "H"                                                 // 000000084C28: 48
	.byte 0xc7                                                 // 000000084C29: C7
	.short 0x5                                                 // 000000084C2A: 0005
	.long 0                                                    // 000000084C2C: 00000000
	.ascii "\n"                                                // 000000084C30: 0A
	.byte 0                                                    // 000000084C31: 00
	.short 0                                                   // 000000084C32: 0000
	.long 0                                                    // 000000084C34: 00000000
	.long 0x4db0                                               // 000000084C38: 00004DB0
	.long 0                                                    // 000000084C3C: 00000000
	.long 0x6ffffef5                                           // 000000084C40: 6FFFFEF5
	.long 0                                                    // 000000084C44: 00000000
	.long 0x5a500                                              // 000000084C48: 0005A500
	.long 0                                                    // 000000084C4C: 00000000
	.long 0x4                                                  // 000000084C50: 00000004
	.long 0                                                    // 000000084C54: 00000000
	.long 0x5b4a8                                              // 000000084C58: 0005B4A8
	.long 0                                                    // 000000084C5C: 00000000
	.long 0                                                    // 000000084C60: 00000000
	.long 0                                                    // 000000084C64: 00000000
	.long 0                                                    // 000000084C68: 00000000
	.long 0                                                    // 000000084C6C: 00000000

	.section	.comment,"MS",@progbits
	.long 0x616c6300                                           // 000000000000: 616C6300
	.ascii "ng version 18.0.0 (ssh://gerritgit/lightning/ec/llvm-project 12ba2f50c2cd6ac494748370b29a8838deb2fb39)"// 000000000004: 7620676E 69737265 31206E6F 2E302E38 73282030 2F3A6873 7265672F 67746972 6C2F7469 74686769 676E696E 2F63652F 6D766C6C 6F72702D 7463656A 62323120 35663261 63326330 63613664 37343934 37333834 39326230 33383861 62656438 33626632 2939
	.short 0x4c00                                              // 00000000006A: 4C00
	.ascii "inker: LLD 18.0.0"                                 // 00000000006C: 656B6E69 4C203A72 3120444C 2E302E38 30
	.byte 0                                                    // 00000000007D: 00

	.amdgpu_pal_metadata
---
amdhsa.kernels:
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_long_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_long_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_long_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           add_char_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         add_char_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           add_char_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         add_char_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
amdhsa.target:   amdgcn-amd-amdhsa--gfx1103
amdhsa.version:
  - 0x1
  - 0x2
amdpal.pipelines:
  - .registers:      {}
...
	.end_amdgpu_pal_metadata
